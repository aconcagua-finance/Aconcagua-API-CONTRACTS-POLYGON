{"id":"7cb4b054c17a558f432513809ec67ac2","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerableUpgradeable.sol\";\nimport \"./AccessControlUpgradeable.sol\";\nimport \"../utils/structs/EnumerableSetUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\n\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.15;\n\nimport {ERC20} from 'solmate/src/tokens/ERC20.sol';\n\n/// @title LooksRare Rewards Collector\n/// @notice Implements a permissionless call to fetch LooksRare rewards earned by Universal Router users\n/// and transfers them to an external rewards distributor contract\ninterface IRewardsCollector {\n    /// @notice Fetches users' LooksRare rewards and sends them to the distributor contract\n    /// @param looksRareClaim The data required by LooksRare to claim reward tokens\n    function collectRewards(bytes calldata looksRareClaim) external;\n}\n"},"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.17;\n\nimport {IERC721Receiver} from '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport {IERC1155Receiver} from '@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol';\nimport {IRewardsCollector} from './IRewardsCollector.sol';\n\ninterface IUniversalRouter is IRewardsCollector, IERC721Receiver, IERC1155Receiver {\n    /// @notice Thrown when a required command has failed\n    error ExecutionFailed(uint256 commandIndex, bytes message);\n\n    /// @notice Thrown when attempting to send ETH directly to the contract\n    error ETHNotAccepted();\n\n    /// @notice Thrown when executing commands with an expired deadline\n    error TransactionDeadlinePassed();\n\n    /// @notice Thrown when attempting to execute commands and an incorrect number of inputs are provided\n    error LengthMismatch();\n\n    /// @notice Executes encoded commands along with provided inputs. Reverts if deadline has expired.\n    /// @param commands A set of concatenated commands, each 1 byte in length\n    /// @param inputs An array of byte strings containing abi encoded inputs for each command\n    /// @param deadline The deadline by which the transaction must be executed\n    function execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline) external payable;\n}\n"},"@uniswap/universal-router/contracts/libraries/Commands.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.17;\n\n/// @title Commands\n/// @notice Command Flags used to decode commands\nlibrary Commands {\n    // Masks to extract certain bits of commands\n    bytes1 internal constant FLAG_ALLOW_REVERT = 0x80;\n    bytes1 internal constant COMMAND_TYPE_MASK = 0x3f;\n\n    // Command Types. Maximum supported command at this moment is 0x3f.\n\n    // Command Types where value<0x08, executed in the first nested-if block\n    uint256 constant V3_SWAP_EXACT_IN = 0x00;\n    uint256 constant V3_SWAP_EXACT_OUT = 0x01;\n    uint256 constant PERMIT2_TRANSFER_FROM = 0x02;\n    uint256 constant PERMIT2_PERMIT_BATCH = 0x03;\n    uint256 constant SWEEP = 0x04;\n    uint256 constant TRANSFER = 0x05;\n    uint256 constant PAY_PORTION = 0x06;\n    // COMMAND_PLACEHOLDER = 0x07;\n\n    // The commands are executed in nested if blocks to minimise gas consumption\n    // The following constant defines one of the boundaries where the if blocks split commands\n    uint256 constant FIRST_IF_BOUNDARY = 0x08;\n\n    // Command Types where 0x08<=value<=0x0f, executed in the second nested-if block\n    uint256 constant V2_SWAP_EXACT_IN = 0x08;\n    uint256 constant V2_SWAP_EXACT_OUT = 0x09;\n    uint256 constant PERMIT2_PERMIT = 0x0a;\n    uint256 constant WRAP_ETH = 0x0b;\n    uint256 constant UNWRAP_WETH = 0x0c;\n    uint256 constant PERMIT2_TRANSFER_FROM_BATCH = 0x0d;\n    uint256 constant BALANCE_CHECK_ERC20 = 0x0e;\n    // COMMAND_PLACEHOLDER = 0x0f;\n\n    // The commands are executed in nested if blocks to minimise gas consumption\n    // The following constant defines one of the boundaries where the if blocks split commands\n    uint256 constant SECOND_IF_BOUNDARY = 0x10;\n\n    // Command Types where 0x10<=value<0x18, executed in the third nested-if block\n    uint256 constant SEAPORT_V1_5 = 0x10;\n    uint256 constant LOOKS_RARE_V2 = 0x11;\n    uint256 constant NFTX = 0x12;\n    uint256 constant CRYPTOPUNKS = 0x13;\n    // 0x14;\n    uint256 constant OWNER_CHECK_721 = 0x15;\n    uint256 constant OWNER_CHECK_1155 = 0x16;\n    uint256 constant SWEEP_ERC721 = 0x17;\n\n    // The commands are executed in nested if blocks to minimise gas consumption\n    // The following constant defines one of the boundaries where the if blocks split commands\n    uint256 constant THIRD_IF_BOUNDARY = 0x18;\n\n    // Command Types where 0x18<=value<=0x1f, executed in the final nested-if block\n    uint256 constant X2Y2_721 = 0x18;\n    uint256 constant SUDOSWAP = 0x19;\n    uint256 constant NFT20 = 0x1a;\n    uint256 constant X2Y2_1155 = 0x1b;\n    uint256 constant FOUNDATION = 0x1c;\n    uint256 constant SWEEP_ERC1155 = 0x1d;\n    uint256 constant ELEMENT_MARKET = 0x1e;\n    // COMMAND_PLACEHOLDER = 0x1f;\n\n    // The commands are executed in nested if blocks to minimise gas consumption\n    // The following constant defines one of the boundaries where the if blocks split commands\n    uint256 constant FOURTH_IF_BOUNDARY = 0x20;\n\n    // Command Types where 0x20<=value\n    uint256 constant SEAPORT_V1_4 = 0x20;\n    uint256 constant EXECUTE_SUB_PLAN = 0x21;\n    uint256 constant APPROVE_ERC20 = 0x22;\n    // COMMAND_PLACEHOLDER for 0x23 to 0x3f (all unused)\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Quoter Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(bytes memory path, uint256 amountIn) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountIn The desired input amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external returns (uint256 amountIn);\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountOut The desired output amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    function quoteExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountOut,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountIn);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/ColateralContract2.sol":{"content":"// SPDX-License-Identifier: MIT\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol';\r\nimport {Commands} from '@uniswap/universal-router/contracts/libraries/Commands.sol';\r\nimport '@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol';\r\n\r\nimport './IColateralContract2.sol';\r\nimport './IWETH.sol';\r\n\r\npragma solidity 0.8.18;\r\n\r\ncontract ColateralContract2 is\r\n  IColateralContract2,\r\n  AccessControlEnumerableUpgradeable,\r\n  ReentrancyGuardUpgradeable\r\n{\r\n  using Strings for uint256;\r\n\r\n  // Admin role\r\n  bytes32 public constant ACONCAGUA_ROLE = keccak256('ACONCAGUA');\r\n  // Lender liquidity role\r\n  bytes32 public constant LENDER_LIQ_ROLE = keccak256('LENDER_LIQ');\r\n  // Rescuer role\r\n  bytes32 public constant RESCUER_ROLE = keccak256('RESCUER');\r\n  // Swap role\r\n  bytes32 public constant SWAPPER_ROLE = keccak256('SWAPPER');\r\n\r\n  using EnumerableSetUpgradeable for EnumerableSetUpgradeable.Bytes32Set;\r\n  EnumerableSetUpgradeable.Bytes32Set private _rolesSet;\r\n\r\n  // Network\r\n  uint constant RSK_ID = 30;\r\n\r\n  // Token management\r\n  string[5] public tokenNames;\r\n  mapping(string => address) public tokenTable;\r\n\r\n  address public rescueWalletAddress;\r\n  address public withdrawWalletAddress;\r\n\r\n  string[3] public contractKeys;\r\n  mapping(string => address) public contractAddresses;\r\n\r\n\r\n  ISwapRouter internal swapRouter;\r\n  IQuoter internal quoter; \r\n\r\n  // Custom Errors\r\n  error AdminAddressInvalid();\r\n  error RescueAddressInvalid();\r\n  error WithdrawAddressInvalid();\r\n  error FirstLenderLiqAddressInvalid();\r\n  error SecondLenderLiqAddressInvalid();\r\n  error TokenNameAndAddressLengthMismatch();\r\n  error TokenInError();\r\n  error RecipientError();\r\n  error TokenOutError();\r\n  error AmountInError();\r\n  error AmountOutMinimumTooLow();\r\n\r\n  constructor() {\r\n    _disableInitializers();\r\n  }\r\n\r\n  function initialize(\r\n    string[5] calldata _tokenNames,\r\n    address[5] calldata _tokenAddresses,\r\n    address[3] calldata _aconcagua,\r\n    address _rescueWalletAddress,\r\n    address _withdrawWalletAddress,\r\n    address _firstLenderLiq,\r\n    address _secondLenderLiq,\r\n    string[3] calldata _contractKeys,\r\n    address[3] calldata _contractAddresses\r\n  ) external initializer {\r\n    if (_aconcagua[0] == address(0) && _aconcagua[1] == address(0) && _aconcagua[2] == address(0)) {\r\n      revert AdminAddressInvalid();\r\n    }\r\n    if (_rescueWalletAddress == address(0)) {\r\n      revert RescueAddressInvalid();\r\n    }\r\n    if (_withdrawWalletAddress == address(0)) {\r\n      revert WithdrawAddressInvalid();\r\n    }\r\n    if (_firstLenderLiq == address(0)) {\r\n      revert FirstLenderLiqAddressInvalid();\r\n    }\r\n    if (_secondLenderLiq == address(0)) {\r\n      revert SecondLenderLiqAddressInvalid();\r\n    }\r\n\r\n    __AccessControl_init_unchained();\r\n    __ReentrancyGuard_init_unchained();\r\n\r\n    if (_tokenNames.length != _tokenAddresses.length) {\r\n      revert TokenNameAndAddressLengthMismatch();\r\n    }\r\n\r\n\r\n    for (uint i = 0; i < _tokenNames.length; i++) {\r\n      tokenTable[_tokenNames[i]] = _tokenAddresses[i];\r\n      tokenNames[i] = _tokenNames[i];\r\n    }\r\n\r\n    withdrawWalletAddress = _withdrawWalletAddress;\r\n    rescueWalletAddress = _rescueWalletAddress;\r\n\r\n    // Set the contract keys\r\n    for (uint i = 0; i < _contractKeys.length; i++) {\r\n      contractKeys[i] = _contractKeys[i];\r\n      contractAddresses[contractKeys[i]] = _contractAddresses[i];\r\n    }\r\n\r\n    swapRouter = ISwapRouter(contractAddresses['router']);\r\n    quoter = IQuoter(contractAddresses['quoter']); \r\n\r\n    // Add roles to the set of Roles for later tracking\r\n    _rolesSet.add(ACONCAGUA_ROLE);\r\n    _rolesSet.add(LENDER_LIQ_ROLE);\r\n    _rolesSet.add(RESCUER_ROLE);\r\n    _rolesSet.add(SWAPPER_ROLE);\r\n\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[0]);\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[1]);\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[2]);\r\n    _grantRole(LENDER_LIQ_ROLE, _firstLenderLiq);\r\n    _grantRole(LENDER_LIQ_ROLE, _secondLenderLiq);\r\n    _grantRole(RESCUER_ROLE, _firstLenderLiq);\r\n    _grantRole(RESCUER_ROLE, _secondLenderLiq);\r\n    _grantRole(SWAPPER_ROLE, contractAddresses['swapper']);\r\n\r\n    _setRoleAdmin(ACONCAGUA_ROLE, ACONCAGUA_ROLE);\r\n    _setRoleAdmin(LENDER_LIQ_ROLE, LENDER_LIQ_ROLE);\r\n    _setRoleAdmin(RESCUER_ROLE, RESCUER_ROLE);\r\n    _setRoleAdmin(SWAPPER_ROLE, ACONCAGUA_ROLE);\r\n\r\n    // Emit initialize event\r\n    emit Initialize(\r\n      msg.sender,\r\n      _tokenNames,\r\n      _tokenAddresses,\r\n      _aconcagua,\r\n      _rescueWalletAddress,\r\n      _withdrawWalletAddress,\r\n      _firstLenderLiq,\r\n      _secondLenderLiq,\r\n      contractKeys,\r\n      _contractAddresses\r\n    );\r\n  }\r\n\r\n  function version() external pure override returns (string memory) {\r\n    return '2.0.0';\r\n  }\r\n\r\n  function setWithdrawWalletAddress(\r\n    address _withdrawWalletAddress\r\n  ) external override onlyRole(ACONCAGUA_ROLE) {\r\n    if (_withdrawWalletAddress == address(0x0)) {\r\n      revert WithdrawAddressInvalid();\r\n    }\r\n    withdrawWalletAddress = _withdrawWalletAddress;\r\n  }\r\n\r\n  function setRescueWalletAddress(\r\n    address _rescueWalletAddress\r\n  ) external override onlyRole(ACONCAGUA_ROLE) {\r\n    if (_rescueWalletAddress == address(0x0)) {\r\n      revert RescueAddressInvalid();\r\n    }\r\n    rescueWalletAddress = _rescueWalletAddress;\r\n  }\r\n\r\n  function swapExactInputs(\r\n    SwapParams[] calldata swapsParams\r\n  ) external override onlyRole(SWAPPER_ROLE) {\r\n    // Define the allowed tokens\r\n    address WETH = tokenTable['WETH'];\r\n    address WBTC = tokenTable['WBTC'];\r\n    address USDC = tokenTable['USDC'];\r\n    address USDT = tokenTable['USDT'];\r\n\r\n    for (uint256 i = 0; i < swapsParams.length; i++) {\r\n      SwapParams calldata swapParams = swapsParams[i];\r\n\r\n      // Input validations\r\n      if (swapParams.params.recipient != address(this)) {\r\n        revert RecipientError();\r\n      }\r\n\r\n      if (swapParams.tokenOut != USDC && swapParams.tokenOut != USDT) {\r\n        revert TokenOutError();\r\n      }\r\n\r\n      // Check if tokenIn is either WETH or WBTC\r\n      if (swapParams.tokenIn != WETH && swapParams.tokenIn != WBTC) {\r\n        revert TokenInError();\r\n      }\r\n\r\n      // Get the quote for the swap\r\n      // Declare four separate variables to capture the return values\r\n      uint256 quotedAmountOut;\r\n      \r\n      try quoter.quoteExactInput(swapParams.params.path, swapParams.params.amountIn) returns (uint256 amountOut) {\r\n            quotedAmountOut = amountOut;\r\n            emit Quote(swapParams.tokenIn, swapParams.tokenOut, swapParams.params.amountIn, quotedAmountOut);\r\n        } catch Error(string memory errorMsg) {\r\n            emit QuoteError(swapParams.tokenIn, swapParams.tokenOut, swapParams.params.amountIn, errorMsg);\r\n        }\r\n      \r\n\r\n      // Check if amountOutMinimum is more than zero and at least 98% of quotedAmountOut\r\n      if (swapParams.params.amountOutMinimum <= 0 || swapParams.params.amountOutMinimum < (quotedAmountOut * 98) / 100) {\r\n        revert AmountOutMinimumTooLow();\r\n      }\r\n\r\n      // Get token\r\n      IERC20 token = IERC20(swapParams.tokenIn);\r\n      if (swapParams.params.amountIn <= 0 || swapParams.params.amountIn > token.balanceOf(address(this))) {\r\n        revert AmountInError();\r\n      }\r\n\r\n      uint256 originalAmount = IERC20(swapParams.tokenOut).balanceOf(address(this));\r\n      // Send tokens to universal router\r\n      SafeERC20.safeTransfer(token, contractAddresses['router'], swapParams.params.amountIn);\r\n      // Execute swap with universalRouter\r\n      bytes memory commands = abi.encodePacked(bytes1(uint8(Commands.V3_SWAP_EXACT_IN)));\r\n      bytes[] memory inputs = new bytes[](1);\r\n      // https://docs.uniswap.org/contracts/universal-router/technical-reference#v3_swap_exact_in\r\n      inputs[0] = abi.encode(swapParams.params.recipient, swapParams.params.amountIn, swapParams.params.amountOutMinimum, swapParams.params.path, false);\r\n      try IUniversalRouter(contractAddresses['router']).execute(commands, inputs, swapParams.params.deadline) {\r\n        uint256 resultAmount = IERC20(swapParams.tokenOut).balanceOf(address(this));\r\n        emit Swap(swapParams.tokenIn, swapParams.tokenOut, swapParams.params.amountIn, resultAmount - originalAmount);\r\n      } catch Error(string memory errorMsg) {\r\n        emit SwapError(swapParams.tokenIn, errorMsg);\r\n      }\r\n    }\r\n  }\r\n\r\n  function tokenTableContains(address token) internal view returns (bool) {\r\n    for (uint i = 0; i < tokenNames.length; i++) {\r\n      if (tokenTable[tokenNames[i]] == token) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function withdraw(\r\n    uint256 _amount,\r\n    string calldata _tokenSymbol\r\n  ) external override onlyRole(LENDER_LIQ_ROLE) nonReentrant {\r\n    // transfers Tokens that belong to your contract to the withdraw address\r\n    SafeERC20.safeTransfer(IERC20(tokenTable[_tokenSymbol]), withdrawWalletAddress, _amount);\r\n    emit Withdraw(withdrawWalletAddress, _tokenSymbol, _amount);\r\n  }\r\n\r\n  function balanceOf(string memory _tokenSymbol) public view override returns (uint256) {\r\n    // returns balance of token in contract.\r\n    IERC20 token = IERC20(tokenTable[_tokenSymbol]);\r\n    return token.balanceOf(address(this));\r\n  }\r\n\r\n  function getBalances() external view override returns (uint256[] memory) {\r\n    uint256[] memory balances = new uint256[](tokenNames.length + 1);\r\n    balances[0] = address(this).balance;\r\n    for (uint i = 1; i <= tokenNames.length; i++) {\r\n      balances[i] = balanceOf(tokenNames[i-1]);\r\n    }\r\n    return balances;\r\n  }\r\n\r\n  function rescue(\r\n    uint256 _amount,\r\n    string calldata _tokenSymbol\r\n  ) external override onlyRole(RESCUER_ROLE) nonReentrant {\r\n    // transfers Tokens that belong to your contract to the sender address\r\n    SafeERC20.safeTransfer(IERC20(tokenTable[_tokenSymbol]), rescueWalletAddress, _amount);\r\n    emit Rescue(_msgSender(), _tokenSymbol, _amount, rescueWalletAddress);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the number `roles`. Can be used\r\n   * together with {getRoleByIndex} to enumerate all bearers of a role.\r\n   */\r\n  function getRoleCount() external view virtual override returns (uint256) {\r\n    return _rolesSet.length();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns one of the `roles`. `index` must be a\r\n   * value between 0 and {getRoleCount}, non-inclusive.\r\n   *\r\n   * Role are not sorted in any particular way, and their ordering may\r\n   * change at any point.\r\n   *\r\n   * WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure\r\n   * you perform all queries on the same block. See the following\r\n   * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n   * for more information.\r\n   */\r\n  function getRoleByIndex(uint index) external view virtual override returns (bytes32) {\r\n    return _rolesSet.at(index);\r\n  }\r\n\r\n  function getTokenNames() external view returns (string[5] memory) {\r\n    return tokenNames;\r\n  }\r\n\r\n  receive() external payable {\r\n    // If its RSK network\r\n    if (block.chainid == RSK_ID) {\r\n      IWETH(tokenTable['WETH']).deposit{value: msg.value}();\r\n    } else {\r\n      revert(\"Not payable on this chain\");\r\n    }\r\n  }\r\n}\r\n"},"contracts/IColateralContract2.sol":{"content":"// SPDX-License-Identifier: MIT\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IColateralContract2 {\r\n  // Emitted when the `ColateralContract` is initialized\r\n  event Initialize(\r\n    address sender,\r\n    string[5] _tokenNames,\r\n    address[5] _tokenAddresses,\r\n    address[3] _aconcagua,\r\n    address _rescueWalletAddress,\r\n    address _withdrawWalletAddress,\r\n    address _firstLenderLiq,\r\n    address _secondLenderLiq,\r\n    string[3] _contractKeys,\r\n    address[3] _contractAddresses\r\n  );\r\n\r\n  // Emitted when withdraw\r\n  event Withdraw(address sender, string token, uint256 amount);\r\n  // Emitted when rescue\r\n  event Rescue(address sender, string token, uint256 amount, address to);\r\n  // Emitted when swap is done\r\n  event Swap(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\r\n  // Emitted when swap fails\r\n  event SwapError(address tokenIn, string msg);\r\n    // Emitted when Quote is done\r\n  event Quote(address tokenIn, address tokenOut, uint256 amountIn, uint256 quotedAmountOut);\r\n  // Emitted when Quote fails\r\n  event QuoteError(address tokenIn, address tokenOut, uint256 amountIn, string msg);\r\n\r\n  struct SwapParams {\r\n    ISwapRouter.ExactInputParams params;\r\n    address tokenIn;\r\n    address tokenOut;\r\n  }\r\n\r\n  function version() external view returns (string memory);\r\n\r\n  function setWithdrawWalletAddress(address _withdrawWalletAddress) external;\r\n\r\n  function setRescueWalletAddress(address _rescueWalletAddress) external;\r\n\r\n  function withdraw(uint256 _amount, string calldata _tokenSymbol) external;\r\n\r\n  function balanceOf(string memory _tokenSymbol) external view returns (uint256);\r\n\r\n  function rescue(uint256 _amount, string calldata _tokenSymbol) external;\r\n\r\n  function getBalances() external view returns (uint256[] memory);\r\n\r\n  function getRoleCount() external view returns (uint256);\r\n\r\n  function getRoleByIndex(uint index) external view returns (bytes32);\r\n\r\n  function swapExactInputs(SwapParams[] calldata swapsParams) external;\r\n}"},"contracts/IWETH.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n    function withdraw(uint wad) external;\r\n}"},"solmate/src/tokens/ERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[145],"AccessControlUpgradeable":[482],"ContextUpgradeable":[1215],"ERC165Upgradeable":[1489],"EnumerableSetUpgradeable":[3085],"IAccessControlEnumerableUpgradeable":[507],"IAccessControlUpgradeable":[580],"IERC165Upgradeable":[1501],"Initializable":[749],"MathUpgradeable":[2367],"SignedMathUpgradeable":[2472],"StringsUpgradeable":[1444]},"id":146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","file":"./IAccessControlEnumerableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":146,"sourceUnit":508,"src":"143:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"./AccessControlUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":146,"sourceUnit":483,"src":"195:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"../utils/structs/EnumerableSetUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":146,"sourceUnit":3086,"src":"236:55:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":146,"sourceUnit":750,"src":"292:63:0","symbolAliases":[{"foreign":{"id":5,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"300:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"Initializable","nameLocations":["508:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"508:13:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"508:13:0"},{"baseName":{"id":10,"name":"IAccessControlEnumerableUpgradeable","nameLocations":["523:35:0"],"nodeType":"IdentifierPath","referencedDeclaration":507,"src":"523:35:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"523:35:0"},{"baseName":{"id":12,"name":"AccessControlUpgradeable","nameLocations":["560:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":482,"src":"560:24:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"560:24:0"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"357:94:0","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":145,"linearizedBaseContracts":[145,482,1489,1501,507,580,1215,749],"name":"AccessControlEnumerableUpgradeable","nameLocation":"470:34:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":17,"libraryName":{"id":14,"name":"EnumerableSetUpgradeable","nameLocations":["597:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"597:24:0"},"nodeType":"UsingForDirective","src":"591:71:0","typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["626:24:0","651:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"626:35:0"},"referencedDeclaration":2798,"src":"626:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":22,"mutability":"mutable","name":"_roleMembers","nameLocation":"732:12:0","nodeType":"VariableDeclaration","scope":145,"src":"668:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"typeName":{"id":21,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":18,"name":"bytes32","nodeType":"ElementaryTypeName","src":"676:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"668:55:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["687:24:0","712:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"687:35:0"},"referencedDeclaration":2798,"src":"687:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},"visibility":"private"},{"body":{"id":27,"nodeType":"Block","src":"819:7:0","statements":[]},"id":28,"implemented":true,"kind":"function","modifiers":[{"id":25,"kind":"modifierInvocation","modifierName":{"id":24,"name":"onlyInitializing","nameLocations":["802:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"802:16:0"},"nodeType":"ModifierInvocation","src":"802:16:0"}],"name":"__AccessControlEnumerable_init","nameLocation":"760:30:0","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"790:2:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"819:0:0"},"scope":145,"src":"751:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":33,"nodeType":"Block","src":"910:7:0","statements":[]},"id":34,"implemented":true,"kind":"function","modifiers":[{"id":31,"kind":"modifierInvocation","modifierName":{"id":30,"name":"onlyInitializing","nameLocations":["893:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"893:16:0"},"nodeType":"ModifierInvocation","src":"893:16:0"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"841:40:0","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"881:2:0"},"returnParameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"910:0:0"},"scope":145,"src":"832:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[222],"body":{"id":55,"nodeType":"Block","src":"1074:132:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1091:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":45,"name":"IAccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1111:35:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$507_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$507_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}],"id":44,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1106:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1106:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerableUpgradeable_$507","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1148:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1106:53:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1091:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":51,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1187:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":49,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1163:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$145_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1169:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":222,"src":"1163:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1091:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":42,"id":54,"nodeType":"Return","src":"1084:115:0"}]},"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"922:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"992:17:0","nodeType":"FunctionDefinition","overrides":{"id":39,"nodeType":"OverrideSpecifier","overrides":[],"src":"1050:8:0"},"parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"interfaceId","nameLocation":"1017:11:0","nodeType":"VariableDeclaration","scope":56,"src":"1010:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1010:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1009:20:0"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56,"src":"1068:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40,"name":"bool","nodeType":"ElementaryTypeName","src":"1068:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1067:6:0"},"scope":145,"src":"983:223:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[498],"body":{"id":74,"nodeType":"Block","src":"1890:52:0","statements":[{"expression":{"arguments":[{"id":71,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"1929:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":67,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1907:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":69,"indexExpression":{"id":68,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1920:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1907:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":70,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1926:2:0","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2921,"src":"1907:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2798_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2798_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":66,"id":73,"nodeType":"Return","src":"1900:35:0"}]},"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"1212:574:0","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1800:13:0","nodeType":"FunctionDefinition","overrides":{"id":63,"nodeType":"OverrideSpecifier","overrides":[],"src":"1863:8:0"},"parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"role","nameLocation":"1822:4:0","nodeType":"VariableDeclaration","scope":75,"src":"1814:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1814:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"index","nameLocation":"1836:5:0","nodeType":"VariableDeclaration","scope":75,"src":"1828:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1813:29:0"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"1881:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1880:9:0"},"scope":145,"src":"1791:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[506],"body":{"id":90,"nodeType":"Block","src":"2199:51:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":84,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2216:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":86,"indexExpression":{"id":85,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2229:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2216:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2235:6:0","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"2216:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2798_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2798_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":83,"id":89,"nodeType":"Return","src":"2209:34:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1948:157:0","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2119:18:0","nodeType":"FunctionDefinition","overrides":{"id":80,"nodeType":"OverrideSpecifier","overrides":[],"src":"2172:8:0"},"parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"role","nameLocation":"2146:4:0","nodeType":"VariableDeclaration","scope":91,"src":"2138:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2138:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2137:14:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"2190:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:9:0"},"scope":145,"src":"2110:140:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[445],"body":{"id":114,"nodeType":"Block","src":"2415:89:0","statements":[{"expression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2442:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2448:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":100,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2425:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$145_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2431:10:0","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":445,"src":"2425:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2425:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":106,"nodeType":"ExpressionStatement","src":"2425:31:0"},{"expression":{"arguments":[{"id":111,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2489:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":107,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2466:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":109,"indexExpression":{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2479:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2466:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2485:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2825,"src":"2466:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2798_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2798_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"ExpressionStatement","src":"2466:31:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2256:77:0","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2347:10:0","nodeType":"FunctionDefinition","overrides":{"id":98,"nodeType":"OverrideSpecifier","overrides":[],"src":"2406:8:0"},"parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"2366:4:0","nodeType":"VariableDeclaration","scope":115,"src":"2358:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"2380:7:0","nodeType":"VariableDeclaration","scope":115,"src":"2372:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2357:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"2415:0:0"},"scope":145,"src":"2338:166:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[476],"body":{"id":138,"nodeType":"Block","src":"2671:93:0","statements":[{"expression":{"arguments":[{"id":127,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2699:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":128,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2705:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":124,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2681:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$145_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2687:11:0","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":476,"src":"2681:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":130,"nodeType":"ExpressionStatement","src":"2681:32:0"},{"expression":{"arguments":[{"id":135,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2749:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":131,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2723:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2798_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":133,"indexExpression":{"id":132,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2736:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2742:6:0","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2852,"src":"2723:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2798_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2798_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"2723:34:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"2510:78:0","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":139,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2602:11:0","nodeType":"FunctionDefinition","overrides":{"id":122,"nodeType":"OverrideSpecifier","overrides":[],"src":"2662:8:0"},"parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"2622:4:0","nodeType":"VariableDeclaration","scope":139,"src":"2614:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2614:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"account","nameLocation":"2636:7:0","nodeType":"VariableDeclaration","scope":139,"src":"2628:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2613:31:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"2671:0:0"},"scope":145,"src":"2593:171:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"2770:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":144,"mutability":"mutable","name":"__gap","nameLocation":"3049:5:0","nodeType":"VariableDeclaration","scope":145,"src":"3029:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":143,"length":{"hexValue":"3439","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3029:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":146,"src":"452:2605:0","usedErrors":[]}],"src":"118:2940:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[482],"ContextUpgradeable":[1215],"ERC165Upgradeable":[1489],"IAccessControlUpgradeable":[580],"IERC165Upgradeable":[1501],"Initializable":[749],"MathUpgradeable":[2367],"SignedMathUpgradeable":[2472],"StringsUpgradeable":[1444]},"id":483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":147,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":483,"sourceUnit":581,"src":"133:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":483,"sourceUnit":1216,"src":"175:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":483,"sourceUnit":1445,"src":"217:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":483,"sourceUnit":1490,"src":"259:54:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":483,"sourceUnit":750,"src":"314:63:1","symbolAliases":[{"foreign":{"id":152,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"322:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":155,"name":"Initializable","nameLocations":["2086:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"2086:13:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"2086:13:1"},{"baseName":{"id":157,"name":"ContextUpgradeable","nameLocations":["2101:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":1215,"src":"2101:18:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"2101:18:1"},{"baseName":{"id":159,"name":"IAccessControlUpgradeable","nameLocations":["2121:25:1"],"nodeType":"IdentifierPath","referencedDeclaration":580,"src":"2121:25:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"2121:25:1"},{"baseName":{"id":161,"name":"ERC165Upgradeable","nameLocations":["2148:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1489,"src":"2148:17:1"},"id":162,"nodeType":"InheritanceSpecifier","src":"2148:17:1"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"379:1660:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":482,"linearizedBaseContracts":[482,1489,1501,580,1215,749],"name":"AccessControlUpgradeable","nameLocation":"2058:24:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":169,"members":[{"constant":false,"id":166,"mutability":"mutable","name":"members","nameLocation":"2223:7:1","nodeType":"VariableDeclaration","scope":169,"src":"2198:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":165,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2198:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":164,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"adminRole","nameLocation":"2248:9:1","nodeType":"VariableDeclaration","scope":169,"src":"2240:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2179:8:1","nodeType":"StructDefinition","scope":482,"src":"2172:92:1","visibility":"public"},{"constant":false,"id":174,"mutability":"mutable","name":"_roles","nameLocation":"2307:6:1","nodeType":"VariableDeclaration","scope":482,"src":"2270:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":173,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2278:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2270:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":172,"nodeType":"UserDefinedTypeName","pathNode":{"id":171,"name":"RoleData","nameLocations":["2289:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":169,"src":"2289:8:1"},"referencedDeclaration":169,"src":"2289:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":177,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2344:18:1","nodeType":"VariableDeclaration","scope":482,"src":"2320:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2320:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":187,"nodeType":"Block","src":"2788:44:1","statements":[{"expression":{"arguments":[{"id":183,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"2809:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":182,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[254,293],"referencedDeclaration":254,"src":"2798:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2798:16:1"},{"id":186,"nodeType":"PlaceholderStatement","src":"2824:1:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2376:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":188,"name":"onlyRole","nameLocation":"2765:8:1","nodeType":"ModifierDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"role","nameLocation":"2782:4:1","nodeType":"VariableDeclaration","scope":188,"src":"2774:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2774:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2773:14:1"},"src":"2756:76:1","virtual":false,"visibility":"internal"},{"body":{"id":193,"nodeType":"Block","src":"2896:7:1","statements":[]},"id":194,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"onlyInitializing","nameLocations":["2879:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"2879:16:1"},"nodeType":"ModifierInvocation","src":"2879:16:1"}],"name":"__AccessControl_init","nameLocation":"2847:20:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2867:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2896:0:1"},"scope":482,"src":"2838:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":199,"nodeType":"Block","src":"2977:7:1","statements":[]},"id":200,"implemented":true,"kind":"function","modifiers":[{"id":197,"kind":"modifierInvocation","modifierName":{"id":196,"name":"onlyInitializing","nameLocations":["2960:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"2960:16:1"},"nodeType":"ModifierInvocation","src":"2960:16:1"}],"name":"__AccessControl_init_unchained","nameLocation":"2918:30:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"2948:2:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"2977:0:1"},"scope":482,"src":"2909:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1483],"body":{"id":221,"nodeType":"Block","src":"3141:122:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3158:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":211,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"3178:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$580_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$580_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3173:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3173:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$580","typeString":"type(contract IAccessControlUpgradeable)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3205:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"3173:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3158:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":217,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3244:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":215,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3220:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$482_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3226:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1483,"src":"3220:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3158:98:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":208,"id":220,"nodeType":"Return","src":"3151:105:1"}]},"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2989:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":222,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3059:17:1","nodeType":"FunctionDefinition","overrides":{"id":205,"nodeType":"OverrideSpecifier","overrides":[],"src":"3117:8:1"},"parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"interfaceId","nameLocation":"3084:11:1","nodeType":"VariableDeclaration","scope":222,"src":"3077:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3077:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3076:20:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"3135:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"3135:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3134:6:1"},"scope":482,"src":"3050:213:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[547],"body":{"id":240,"nodeType":"Block","src":"3442:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"3459:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3466:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3459:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3472:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":166,"src":"3459:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3480:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3459:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":232,"id":239,"nodeType":"Return","src":"3452:36:1"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"3269:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":241,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3359:7:1","nodeType":"FunctionDefinition","overrides":{"id":229,"nodeType":"OverrideSpecifier","overrides":[],"src":"3418:8:1"},"parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"role","nameLocation":"3375:4:1","nodeType":"VariableDeclaration","scope":241,"src":"3367:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3367:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3389:7:1","nodeType":"VariableDeclaration","scope":241,"src":"3381:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3366:31:1"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"3436:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"3436:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3435:6:1"},"scope":482,"src":"3350:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":253,"nodeType":"Block","src":"3845:47:1","statements":[{"expression":{"arguments":[{"id":248,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3866:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"3872:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3872:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":247,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[254,293],"referencedDeclaration":293,"src":"3855:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"3855:30:1"}]},"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3501:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3798:10:1","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"role","nameLocation":"3817:4:1","nodeType":"VariableDeclaration","scope":254,"src":"3809:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3809:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3808:14:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"3845:0:1"},"scope":482,"src":"3789:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":292,"nodeType":"Block","src":"4246:428:1","statements":[{"condition":{"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4260:23:1","subExpression":{"arguments":[{"id":263,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4269:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4275:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4261:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4261:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":291,"nodeType":"IfStatement","src":"4256:412:1","trueBody":{"id":290,"nodeType":"Block","src":"4285:383:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4393:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4475:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":273,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4444:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1444_$","typeString":"type(library StringsUpgradeable)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4463:11:1","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1418,"src":"4444:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4444:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4509:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":282,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4593:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4585:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:1","typeDescriptions":{}}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":278,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4554:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1444_$","typeString":"type(library StringsUpgradeable)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4573:11:1","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"4554:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4351:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4355:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"4351:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:274:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4323:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":268,"name":"string","nodeType":"ElementaryTypeName","src":"4323:6:1","typeDescriptions":{}}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:320:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":267,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4299:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:358:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"4299:358:1"}]}}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"3898:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":293,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4182:10:1","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"role","nameLocation":"4201:4:1","nodeType":"VariableDeclaration","scope":293,"src":"4193:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"account","nameLocation":"4215:7:1","nodeType":"VariableDeclaration","scope":293,"src":"4207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4207:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4192:31:1"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"4246:0:1"},"scope":482,"src":"4173:501:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[555],"body":{"id":307,"nodeType":"Block","src":"4938:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":302,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"4955:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":304,"indexExpression":{"id":303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4962:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4955:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4968:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":168,"src":"4955:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":301,"id":306,"nodeType":"Return","src":"4948:29:1"}]},"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"4680:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":308,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4864:12:1","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"4911:8:1"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"role","nameLocation":"4885:4:1","nodeType":"VariableDeclaration","scope":308,"src":"4877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4876:14:1"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"4929:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4929:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:9:1"},"scope":482,"src":"4855:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[563],"body":{"id":327,"nodeType":"Block","src":"5383:42:1","statements":[{"expression":{"arguments":[{"id":323,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5404:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5410:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":322,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"5393:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"ExpressionStatement","src":"5393:25:1"}]},"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"4990:285:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":328,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":318,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":317,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5363:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5363:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":320,"kind":"modifierInvocation","modifierName":{"id":316,"name":"onlyRole","nameLocations":["5354:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5354:8:1"},"nodeType":"ModifierInvocation","src":"5354:28:1"}],"name":"grantRole","nameLocation":"5289:9:1","nodeType":"FunctionDefinition","overrides":{"id":315,"nodeType":"OverrideSpecifier","overrides":[],"src":"5345:8:1"},"parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"role","nameLocation":"5307:4:1","nodeType":"VariableDeclaration","scope":328,"src":"5299:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"account","nameLocation":"5321:7:1","nodeType":"VariableDeclaration","scope":328,"src":"5313:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5298:31:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"5383:0:1"},"scope":482,"src":"5280:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[571],"body":{"id":347,"nodeType":"Block","src":"5809:43:1","statements":[{"expression":{"arguments":[{"id":343,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5831:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":344,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5837:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":342,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"5819:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5819:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":346,"nodeType":"ExpressionStatement","src":"5819:26:1"}]},"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"5431:269:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":348,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":338,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5802:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":337,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5789:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":340,"kind":"modifierInvocation","modifierName":{"id":336,"name":"onlyRole","nameLocations":["5780:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5780:8:1"},"nodeType":"ModifierInvocation","src":"5780:28:1"}],"name":"revokeRole","nameLocation":"5714:10:1","nodeType":"FunctionDefinition","overrides":{"id":335,"nodeType":"OverrideSpecifier","overrides":[],"src":"5771:8:1"},"parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"role","nameLocation":"5733:4:1","nodeType":"VariableDeclaration","scope":348,"src":"5725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"account","nameLocation":"5747:7:1","nodeType":"VariableDeclaration","scope":348,"src":"5739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"5739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5724:31:1"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"5809:0:1"},"scope":482,"src":"5705:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[579],"body":{"id":370,"nodeType":"Block","src":"6466:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"6484:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6495:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6495:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6484:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6509:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"6476:83:1"},{"expression":{"arguments":[{"id":366,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6582:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":367,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"6588:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6570:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6570:26:1"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"5858:526:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":371,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6398:12:1","nodeType":"FunctionDefinition","overrides":{"id":355,"nodeType":"OverrideSpecifier","overrides":[],"src":"6457:8:1"},"parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"role","nameLocation":"6419:4:1","nodeType":"VariableDeclaration","scope":371,"src":"6411:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6411:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"account","nameLocation":"6433:7:1","nodeType":"VariableDeclaration","scope":371,"src":"6425:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"6425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6410:31:1"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"6466:0:1"},"scope":482,"src":"6389:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":384,"nodeType":"Block","src":"7356:42:1","statements":[{"expression":{"arguments":[{"id":380,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7377:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7383:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":379,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7366:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7366:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"7366:25:1"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"6609:674:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":385,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7297:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"7316:4:1","nodeType":"VariableDeclaration","scope":385,"src":"7308:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7308:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"7330:7:1","nodeType":"VariableDeclaration","scope":385,"src":"7322:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"7322:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7307:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"7356:0:1"},"scope":482,"src":"7288:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"7596:174:1","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7614:17:1","nodeType":"VariableDeclaration","scope":412,"src":"7606:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7606:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":398,"initialValue":{"arguments":[{"id":396,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7647:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":395,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7634:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7606:46:1"},{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":399,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"7662:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":401,"indexExpression":{"id":400,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7669:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7662:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7675:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":168,"src":"7662:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"7687:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7662:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":405,"nodeType":"ExpressionStatement","src":"7662:34:1"},{"eventCall":{"arguments":[{"id":407,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7728:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":408,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"7734:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":409,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"7753:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":406,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7711:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7711:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"EmitStatement","src":"7706:57:1"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"7404:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7532:13:1","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"role","nameLocation":"7554:4:1","nodeType":"VariableDeclaration","scope":413,"src":"7546:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7546:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"adminRole","nameLocation":"7568:9:1","nodeType":"VariableDeclaration","scope":413,"src":"7560:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7545:33:1"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"7596:0:1"},"scope":482,"src":"7523:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"8006:165:1","statements":[{"condition":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8020:23:1","subExpression":{"arguments":[{"id":422,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8029:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":423,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8035:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":421,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"8021:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"IfStatement","src":"8016:149:1","trueBody":{"id":442,"nodeType":"Block","src":"8045:120:1","statements":[{"expression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":426,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8059:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":428,"indexExpression":{"id":427,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8066:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8059:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8072:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":166,"src":"8059:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":431,"indexExpression":{"id":430,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8080:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8059:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8091:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8059:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":434,"nodeType":"ExpressionStatement","src":"8059:36:1"},{"eventCall":{"arguments":[{"id":436,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8126:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":437,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"8132:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8141:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8141:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":435,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"8114:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8114:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"EmitStatement","src":"8109:45:1"}]}}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"7776:157:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7947:10:1","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"role","nameLocation":"7966:4:1","nodeType":"VariableDeclaration","scope":445,"src":"7958:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7958:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"account","nameLocation":"7980:7:1","nodeType":"VariableDeclaration","scope":445,"src":"7972:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"7972:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7957:31:1"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"8006:0:1"},"scope":482,"src":"7938:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"8411:165:1","statements":[{"condition":{"arguments":[{"id":454,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8433:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":455,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8439:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":453,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"8425:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8425:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":474,"nodeType":"IfStatement","src":"8421:149:1","trueBody":{"id":473,"nodeType":"Block","src":"8449:121:1","statements":[{"expression":{"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":457,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8463:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$169_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":459,"indexExpression":{"id":458,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8470:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8463:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$169_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8476:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":166,"src":"8463:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":462,"indexExpression":{"id":461,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8484:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8463:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8495:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8463:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"ExpressionStatement","src":"8463:37:1"},{"eventCall":{"arguments":[{"id":467,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8531:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"8537:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":469,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"8546:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8546:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":466,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"8519:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8519:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"EmitStatement","src":"8514:45:1"}]}}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"8177:160:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8351:11:1","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"role","nameLocation":"8371:4:1","nodeType":"VariableDeclaration","scope":476,"src":"8363:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8363:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"account","nameLocation":"8385:7:1","nodeType":"VariableDeclaration","scope":476,"src":"8377:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"8377:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8362:31:1"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"8411:0:1"},"scope":482,"src":"8342:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"8582:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":481,"mutability":"mutable","name":"__gap","nameLocation":"8861:5:1","nodeType":"VariableDeclaration","scope":482,"src":"8841:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"8841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":480,"length":{"hexValue":"3439","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8841:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":483,"src":"2040:6829:1","usedErrors":[]}],"src":"108:8762:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","exportedSymbols":{"IAccessControlEnumerableUpgradeable":[507],"IAccessControlUpgradeable":[580]},"id":508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":484,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":581,"src":"129:41:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":487,"name":"IAccessControlUpgradeable","nameLocations":["321:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":580,"src":"321:25:2"},"id":488,"nodeType":"InheritanceSpecifier","src":"321:25:2"}],"canonicalName":"IAccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"172:99:2","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":507,"linearizedBaseContracts":[507,580],"name":"IAccessControlEnumerableUpgradeable","nameLocation":"282:35:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"353:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"941:13:2","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"role","nameLocation":"963:4:2","nodeType":"VariableDeclaration","scope":498,"src":"955:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"index","nameLocation":"977:5:2","nodeType":"VariableDeclaration","scope":498,"src":"969:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:29:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"1007:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:9:2"},"scope":507,"src":"932:84:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1022:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":506,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1193:18:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"role","nameLocation":"1220:4:2","nodeType":"VariableDeclaration","scope":506,"src":"1212:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1211:14:2"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"1249:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:2"},"scope":507,"src":"1184:74:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":508,"src":"272:988:2","usedErrors":[]}],"src":"104:1157:2"},"id":2},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[580]},"id":581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":509,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":580,"linearizedBaseContracts":[580],"name":"IAccessControlUpgradeable","nameLocation":"219:25:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"251:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":519,"name":"RoleAdminChanged","nameLocation":"554:16:3","nodeType":"EventDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:3","nodeType":"VariableDeclaration","scope":519,"src":"571:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":519,"src":"593:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":517,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:3","nodeType":"VariableDeclaration","scope":519,"src":"628:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:3"},"src":"548:110:3"},{"anonymous":false,"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"664:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":528,"name":"RoleGranted","nameLocation":"887:11:3","nodeType":"EventDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:3","nodeType":"VariableDeclaration","scope":528,"src":"899:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:3","nodeType":"VariableDeclaration","scope":528,"src":"921:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":526,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:3","nodeType":"VariableDeclaration","scope":528,"src":"946:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:3"},"src":"881:89:3"},{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"976:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":537,"name":"RoleRevoked","nameLocation":"1262:11:3","nodeType":"EventDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:3","nodeType":"VariableDeclaration","scope":537,"src":"1274:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:3","nodeType":"VariableDeclaration","scope":537,"src":"1296:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:3","nodeType":"VariableDeclaration","scope":537,"src":"1321:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:3"},"src":"1256:89:3"},{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"1351:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":547,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:3","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"role","nameLocation":"1457:4:3","nodeType":"VariableDeclaration","scope":547,"src":"1449:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"account","nameLocation":"1471:7:3","nodeType":"VariableDeclaration","scope":547,"src":"1463:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:3"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"1503:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:3"},"scope":580,"src":"1432:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"1515:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":555,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:3","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"role","nameLocation":"1734:4:3","nodeType":"VariableDeclaration","scope":555,"src":"1726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"1763:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:3"},"scope":580,"src":"1704:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"1778:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":563,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:3","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"role","nameLocation":"2049:4:3","nodeType":"VariableDeclaration","scope":563,"src":"2041:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"account","nameLocation":"2063:7:3","nodeType":"VariableDeclaration","scope":563,"src":"2055:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:3"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"2080:0:3"},"scope":580,"src":"2022:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"2087:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":571,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:3","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"role","nameLocation":"2343:4:3","nodeType":"VariableDeclaration","scope":571,"src":"2335:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"account","nameLocation":"2357:7:3","nodeType":"VariableDeclaration","scope":571,"src":"2349:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"2374:0:3"},"scope":580,"src":"2315:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"2381:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":579,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:3","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"role","nameLocation":"2896:4:3","nodeType":"VariableDeclaration","scope":579,"src":"2888:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"account","nameLocation":"2910:7:3","nodeType":"VariableDeclaration","scope":579,"src":"2902:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:3"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"2927:0:3"},"scope":580,"src":"2866:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":581,"src":"209:2721:3","usedErrors":[]}],"src":"94:2837:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1164],"Initializable":[749]},"id":750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":582,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":750,"sourceUnit":1165,"src":"138:44:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"184:2209:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":749,"linearizedBaseContracts":[749],"name":"Initializable","nameLocation":"2412:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"2432:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":587,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:4","nodeType":"VariableDeclaration","scope":749,"src":"2546:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":586,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"2579:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":590,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:4","nodeType":"VariableDeclaration","scope":749,"src":"2675:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"2708:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":595,"name":"Initialized","nameLocation":"2809:11:4","nodeType":"EventDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":595,"src":"2821:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":592,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:4"},"src":"2803:33:4"},{"body":{"id":650,"nodeType":"Block","src":"3269:483:4","statements":[{"assignments":[599],"declarations":[{"constant":false,"id":599,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:4","nodeType":"VariableDeclaration","scope":650,"src":"3279:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":602,"initialValue":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:4","subExpression":{"id":600,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3302:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3347:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3365:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:4","subExpression":{"arguments":[{"arguments":[{"id":614,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$749","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$749","typeString":"contract Initializable"}],"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:4","typeDescriptions":{}}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":610,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3388:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1164_$","typeString":"type(library AddressUpgradeable)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":852,"src":"3388:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":618,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3436:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"3325:201:4"},{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3536:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":630,"nodeType":"ExpressionStatement","src":"3536:16:4"},{"condition":{"id":631,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3566:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":637,"nodeType":"IfStatement","src":"3562:65:4","trueBody":{"id":636,"nodeType":"Block","src":"3582:45:4","statements":[{"expression":{"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":632,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3596:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"ExpressionStatement","src":"3596:20:4"}]}},{"id":638,"nodeType":"PlaceholderStatement","src":"3636:1:4"},{"condition":{"id":639,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3651:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":649,"nodeType":"IfStatement","src":"3647:99:4","trueBody":{"id":648,"nodeType":"Block","src":"3667:79:4","statements":[{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"3681:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":643,"nodeType":"ExpressionStatement","src":"3681:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":644,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3721:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"EmitStatement","src":"3716:19:4"}]}}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2842:399:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":651,"name":"initializer","nameLocation":"3255:11:4","nodeType":"ModifierDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"3266:2:4"},"src":"3246:506:4","virtual":false,"visibility":"internal"},{"body":{"id":683,"nodeType":"Block","src":"4863:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:4","subExpression":{"id":657,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4882:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":659,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4899:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":660,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4914:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"4873:99:4"},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":666,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4982:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":667,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4997:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":669,"nodeType":"ExpressionStatement","src":"4982:22:4"},{"expression":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":670,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5014:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"ExpressionStatement","src":"5014:20:4"},{"id":674,"nodeType":"PlaceholderStatement","src":"5044:1:4"},{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5055:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"ExpressionStatement","src":"5055:21:4"},{"eventCall":{"arguments":[{"id":680,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5103:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":679,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"5091:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"EmitStatement","src":"5086:25:4"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"3758:1062:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":684,"name":"reinitializer","nameLocation":"4834:13:4","nodeType":"ModifierDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"version","nameLocation":"4854:7:4","nodeType":"VariableDeclaration","scope":684,"src":"4848:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":653,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:4"},"src":"4825:293:4","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"5356:97:4","statements":[{"expression":{"arguments":[{"id":688,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5374:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"5366:69:4"},{"id":692,"nodeType":"PlaceholderStatement","src":"5445:1:4"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"5124:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":694,"name":"onlyInitializing","nameLocation":"5337:16:4","nodeType":"ModifierDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"5353:2:4"},"src":"5328:125:4","virtual":false,"visibility":"internal"},{"body":{"id":729,"nodeType":"Block","src":"5988:231:4","statements":[{"expression":{"arguments":[{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:4","subExpression":{"id":699,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"6007:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"5998:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6078:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":706,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:4","memberName":"max","nodeType":"MemberAccess","src":"6094:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"6074:139:4","trueBody":{"id":727,"nodeType":"Block","src":"6111:102:4","statements":[{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":711,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6125:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":713,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:4","memberName":"max","nodeType":"MemberAccess","src":"6140:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":718,"nodeType":"ExpressionStatement","src":"6125:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":721,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:4","memberName":"max","nodeType":"MemberAccess","src":"6186:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":719,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6174:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"EmitStatement","src":"6169:33:4"}]}}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"5459:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"5968:2:4"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"5988:0:4"},"scope":749,"src":"5939:280:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"6393:36:4","statements":[{"expression":{"id":736,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6410:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":735,"id":737,"nodeType":"Return","src":"6403:19:4"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"6225:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:4","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"6360:2:4"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"6386:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":733,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:4"},"scope":749,"src":"6329:100:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"6601:37:4","statements":[{"expression":{"id":745,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"6618:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":744,"id":746,"nodeType":"Return","src":"6611:20:4"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"6435:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:4","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"6569:2:4"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"6595:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":742,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:4"},"scope":749,"src":"6545:93:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":750,"src":"2394:4246:4","usedErrors":[]}],"src":"113:6528:4"},"id":4},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[749],"ReentrancyGuardUpgradeable":[834]},"id":835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":751,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":835,"sourceUnit":750,"src":"136:63:5","symbolAliases":[{"foreign":{"id":752,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"144:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":755,"name":"Initializable","nameLocations":["1000:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"1000:13:5"},"id":756,"nodeType":"InheritanceSpecifier","src":"1000:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"201:750:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":834,"linearizedBaseContracts":[834,749],"name":"ReentrancyGuardUpgradeable","nameLocation":"970:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":759,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1793:12:5","nodeType":"VariableDeclaration","scope":834,"src":"1768:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":762,"mutability":"constant","name":"_ENTERED","nameLocation":"1840:8:5","nodeType":"VariableDeclaration","scope":834,"src":"1815:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1851:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":764,"mutability":"mutable","name":"_status","nameLocation":"1875:7:5","nodeType":"VariableDeclaration","scope":834,"src":"1859:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":772,"nodeType":"Block","src":"1949:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1959:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"1959:34:5"}]},"id":773,"implemented":true,"kind":"function","modifiers":[{"id":767,"kind":"modifierInvocation","modifierName":{"id":766,"name":"onlyInitializing","nameLocations":["1932:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"1932:16:5"},"nodeType":"ModifierInvocation","src":"1932:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"1898:22:5","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"1920:2:5"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"1949:0:5"},"scope":834,"src":"1889:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"2076:39:5","statements":[{"expression":{"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":778,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":779,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"2096:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2086:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":781,"nodeType":"ExpressionStatement","src":"2086:22:5"}]},"id":783,"implemented":true,"kind":"function","modifiers":[{"id":776,"kind":"modifierInvocation","modifierName":{"id":775,"name":"onlyInitializing","nameLocations":["2059:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"2059:16:5"},"nodeType":"ModifierInvocation","src":"2059:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2015:32:5","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"2047:2:5"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"2076:0:5"},"scope":834,"src":"2006:109:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":793,"nodeType":"Block","src":"2516:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":786,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"2526:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"2526:21:5"},{"id":789,"nodeType":"PlaceholderStatement","src":"2557:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":790,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"2568:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2568:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"2568:20:5"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"2121:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":794,"name":"nonReentrant","nameLocation":"2501:12:5","nodeType":"ModifierDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"2513:2:5"},"src":"2492:103:5","virtual":false,"visibility":"internal"},{"body":{"id":808,"nodeType":"Block","src":"2640:248:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2733:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":799,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2744:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2733:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2754:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2725:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"2725:63:5"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":804,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":805,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2873:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"2863:18:5"}]},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2610:19:5","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"2629:2:5"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"2640:0:5"},"scope":834,"src":"2601:287:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":816,"nodeType":"Block","src":"2932:171:5","statements":[{"expression":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":812,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3074:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":813,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3084:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":815,"nodeType":"ExpressionStatement","src":"3074:22:5"}]},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2903:18:5","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"2921:2:5"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"2932:0:5"},"scope":834,"src":"2894:209:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":827,"nodeType":"Block","src":"3346:43:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3363:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":824,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"3374:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3363:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":822,"id":826,"nodeType":"Return","src":"3356:26:5"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"3109:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3291:23:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"3314:2:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":828,"src":"3340:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":820,"name":"bool","nodeType":"ElementaryTypeName","src":"3340:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3339:6:5"},"scope":834,"src":"3282:107:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"3395:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":833,"mutability":"mutable","name":"__gap","nameLocation":"3674:5:5","nodeType":"VariableDeclaration","scope":834,"src":"3654:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"length":{"hexValue":"3439","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:2:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3654:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":835,"src":"952:2730:5","usedErrors":[]}],"src":"112:3571:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1164]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":836,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1164,"linearizedBaseContracts":[1164],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":851,"nodeType":"Block","src":"1489:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":845,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1713:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:6","memberName":"code","nodeType":"MemberAccess","src":"1713:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:6","memberName":"length","nodeType":"MemberAccess","src":"1713:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":844,"id":850,"nodeType":"Return","src":"1706:30:6"}]},"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"227:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":852,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:6","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"account","nameLocation":"1451:7:6","nodeType":"VariableDeclaration","scope":852,"src":"1443:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:6"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":852,"src":"1483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":842,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:6"},"scope":1164,"src":"1423:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2729:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":863,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1164","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1164","typeString":"library AddressUpgradeable"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:6","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"ExpressionStatement","src":"2739:73:6"},{"assignments":[872,null],"declarations":[{"constant":false,"id":872,"mutability":"mutable","name":"success","nameLocation":"2829:7:6","nodeType":"VariableDeclaration","scope":885,"src":"2824:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":871,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":879,"initialValue":{"arguments":[{"hexValue":"","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":873,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2842:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:6","memberName":"call","nodeType":"MemberAccess","src":"2842:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:6"},{"expression":{"arguments":[{"id":881,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2893:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"2885:78:6"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"1749:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:6","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:6","nodeType":"VariableDeclaration","scope":886,"src":"2677:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"amount","nameLocation":"2712:6:6","nodeType":"VariableDeclaration","scope":886,"src":"2704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"2729:0:6"},"scope":1164,"src":"2658:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"3801:96:6","statements":[{"expression":{"arguments":[{"id":897,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3840:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3848:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":896,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[944,988],"referencedDeclaration":988,"src":"3818:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":895,"id":902,"nodeType":"Return","src":"3811:79:6"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2976:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"target","nameLocation":"3742:6:6","nodeType":"VariableDeclaration","scope":904,"src":"3734:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"data","nameLocation":"3763:4:6","nodeType":"VariableDeclaration","scope":904,"src":"3750:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:6"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"3787:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:6"},"scope":1164,"src":"3712:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"4266:76:6","statements":[{"expression":{"arguments":[{"id":917,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"4305:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":918,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":920,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4322:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":916,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[944,988],"referencedDeclaration":988,"src":"4283:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":915,"id":922,"nodeType":"Return","src":"4276:59:6"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"3903:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"target","nameLocation":"4158:6:6","nodeType":"VariableDeclaration","scope":924,"src":"4150:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"4187:4:6","nodeType":"VariableDeclaration","scope":924,"src":"4174:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:6","nodeType":"VariableDeclaration","scope":924,"src":"4201:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:6"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"4252:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:6"},"scope":1164,"src":"4119:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"4817:111:6","statements":[{"expression":{"arguments":[{"id":937,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4856:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4864:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"4870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":936,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[944,988],"referencedDeclaration":988,"src":"4834:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":935,"id":942,"nodeType":"Return","src":"4827:94:6"}]},"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"4348:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:6","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"target","nameLocation":"4743:6:6","nodeType":"VariableDeclaration","scope":944,"src":"4735:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"data","nameLocation":"4764:4:6","nodeType":"VariableDeclaration","scope":944,"src":"4751:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":928,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"value","nameLocation":"4778:5:6","nodeType":"VariableDeclaration","scope":944,"src":"4770:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:6"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"4803:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:6"},"scope":1164,"src":"4704:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"5355:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":961,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1164","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1164","typeString":"library AddressUpgradeable"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:6","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"5398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"5365:81:6"},{"assignments":[970,972],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"success","nameLocation":"5462:7:6","nodeType":"VariableDeclaration","scope":987,"src":"5457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":969,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:6","nodeType":"VariableDeclaration","scope":987,"src":"5471:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":979,"initialValue":{"arguments":[{"id":977,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":973,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"5498:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:6","memberName":"call","nodeType":"MemberAccess","src":"5498:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"5517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:6"},{"expression":{"arguments":[{"id":981,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"5573:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"5581:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":983,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"5590:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":984,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5602:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":980,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5546:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":957,"id":986,"nodeType":"Return","src":"5539:76:6"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"4934:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:6","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"target","nameLocation":"5224:6:6","nodeType":"VariableDeclaration","scope":988,"src":"5216:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"data","nameLocation":"5253:4:6","nodeType":"VariableDeclaration","scope":988,"src":"5240:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"value","nameLocation":"5275:5:6","nodeType":"VariableDeclaration","scope":988,"src":"5267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:6","nodeType":"VariableDeclaration","scope":988,"src":"5290:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:6"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"5341:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":955,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:6"},"scope":1164,"src":"5176:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1004,"nodeType":"Block","src":"5899:97:6","statements":[{"expression":{"arguments":[{"id":999,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5935:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5943:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":998,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1005,1034],"referencedDeclaration":1034,"src":"5916:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":997,"id":1003,"nodeType":"Return","src":"5909:80:6"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"5628:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:6","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"target","nameLocation":"5835:6:6","nodeType":"VariableDeclaration","scope":1005,"src":"5827:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"data","nameLocation":"5856:4:6","nodeType":"VariableDeclaration","scope":1005,"src":"5843:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:6"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"5885:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:6"},"scope":1164,"src":"5799:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"6338:168:6","statements":[{"assignments":[1018,1020],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"success","nameLocation":"6354:7:6","nodeType":"VariableDeclaration","scope":1033,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1017,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:6","nodeType":"VariableDeclaration","scope":1033,"src":"6363:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1019,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[{"id":1023,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1021,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6390:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:6"},{"expression":{"arguments":[{"id":1027,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"6465:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1029,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"6474:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1030,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6486:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1026,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"6430:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1016,"id":1032,"nodeType":"Return","src":"6423:76:6"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"6002:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:6","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"target","nameLocation":"6225:6:6","nodeType":"VariableDeclaration","scope":1034,"src":"6217:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"data","nameLocation":"6254:4:6","nodeType":"VariableDeclaration","scope":1034,"src":"6241:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1009,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:6","nodeType":"VariableDeclaration","scope":1034,"src":"6268:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1011,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:6"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"6324:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1014,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:6"},"scope":1164,"src":"6180:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"6782:101:6","statements":[{"expression":{"arguments":[{"id":1045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"6820:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1044,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1051,1080],"referencedDeclaration":1080,"src":"6799:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1043,"id":1049,"nodeType":"Return","src":"6792:84:6"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"6512:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:6","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"target","nameLocation":"6723:6:6","nodeType":"VariableDeclaration","scope":1051,"src":"6715:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"data","nameLocation":"6744:4:6","nodeType":"VariableDeclaration","scope":1051,"src":"6731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:6"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"6768:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:6"},"scope":1164,"src":"6685:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1079,"nodeType":"Block","src":"7224:170:6","statements":[{"assignments":[1064,1066],"declarations":[{"constant":false,"id":1064,"mutability":"mutable","name":"success","nameLocation":"7240:7:6","nodeType":"VariableDeclaration","scope":1079,"src":"7235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1063,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:6","nodeType":"VariableDeclaration","scope":1079,"src":"7249:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1071,"initialValue":{"arguments":[{"id":1069,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"7296:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1067,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7276:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:6"},{"expression":{"arguments":[{"id":1073,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7345:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1075,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7362:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1076,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"7374:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1072,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"7318:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1062,"id":1078,"nodeType":"Return","src":"7311:76:6"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"6889:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:6","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"target","nameLocation":"7116:6:6","nodeType":"VariableDeclaration","scope":1080,"src":"7108:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"data","nameLocation":"7145:4:6","nodeType":"VariableDeclaration","scope":1080,"src":"7132:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:6","nodeType":"VariableDeclaration","scope":1080,"src":"7159:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1057,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:6"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1080,"src":"7210:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:6"},"scope":1164,"src":"7069:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"7876:434:6","statements":[{"condition":{"id":1094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7890:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1116,"nodeType":"Block","src":"8246:58:6","statements":[{"expression":{"arguments":[{"id":1112,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8268:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1113,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"8280:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1111,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8260:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"8260:33:6"}]},"id":1117,"nodeType":"IfStatement","src":"7886:418:6","trueBody":{"id":1110,"nodeType":"Block","src":"7899:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1095,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"7917:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:6","memberName":"length","nodeType":"MemberAccess","src":"7917:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1107,"nodeType":"IfStatement","src":"7913:286:6","trueBody":{"id":1106,"nodeType":"Block","src":"7941:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1101,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"8143:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1100,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8132:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"ExpressionStatement","src":"8124:60:6"}]}},{"expression":{"id":1108,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8219:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1093,"id":1109,"nodeType":"Return","src":"8212:17:6"}]}}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"7400:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:6","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"target","nameLocation":"7735:6:6","nodeType":"VariableDeclaration","scope":1119,"src":"7727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"success","nameLocation":"7756:7:6","nodeType":"VariableDeclaration","scope":1119,"src":"7751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:6","nodeType":"VariableDeclaration","scope":1119,"src":"7773:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:6","nodeType":"VariableDeclaration","scope":1119,"src":"7806:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1088,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:6"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"7862:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:6"},"scope":1164,"src":"7682:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"8691:135:6","statements":[{"condition":{"id":1131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8705:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1140,"nodeType":"Block","src":"8762:58:6","statements":[{"expression":{"arguments":[{"id":1136,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8784:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1137,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1135,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"8776:33:6"}]},"id":1141,"nodeType":"IfStatement","src":"8701:119:6","trueBody":{"id":1134,"nodeType":"Block","src":"8714:42:6","statements":[{"expression":{"id":1132,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"8735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1130,"id":1133,"nodeType":"Return","src":"8728:17:6"}]}}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"8316:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:6","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"success","nameLocation":"8571:7:6","nodeType":"VariableDeclaration","scope":1143,"src":"8566:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1121,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:6","nodeType":"VariableDeclaration","scope":1143,"src":"8588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1123,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:6","nodeType":"VariableDeclaration","scope":1143,"src":"8621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1125,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:6"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"8677:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:6"},"scope":1164,"src":"8531:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"8915:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1150,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8991:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:6","memberName":"length","nodeType":"MemberAccess","src":"8991:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1160,"nodeType":"Block","src":"9321:45:6","statements":[{"expression":{"arguments":[{"id":1157,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"9342:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1156,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"9335:20:6"}]},"id":1161,"nodeType":"IfStatement","src":"8987:379:6","trueBody":{"id":1155,"nodeType":"Block","src":"9014:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:6"},"nodeType":"YulFunctionCall","src":"9213:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:6"},"nodeType":"YulFunctionCall","src":"9254:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:6"},"nodeType":"YulFunctionCall","src":"9247:44:6"},"nodeType":"YulExpressionStatement","src":"9247:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1145,"isOffset":false,"isSlot":false,"src":"9219:10:6","valueSize":1},{"declaration":1145,"isOffset":false,"isSlot":false,"src":"9262:10:6","valueSize":1}],"id":1154,"nodeType":"InlineAssembly","src":"9163:142:6"}]}}]},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:6","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:6","nodeType":"VariableDeclaration","scope":1163,"src":"8849:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1144,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:6","nodeType":"VariableDeclaration","scope":1163,"src":"8874:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1146,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:6"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"8915:0:6"},"scope":1164,"src":"8832:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1165,"src":"194:9180:6","usedErrors":[]}],"src":"101:9274:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1215],"Initializable":[749]},"id":1216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1216,"sourceUnit":750,"src":"125:63:7","symbolAliases":[{"foreign":{"id":1167,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"133:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1170,"name":"Initializable","nameLocations":["727:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"727:13:7"},"id":1171,"nodeType":"InheritanceSpecifier","src":"727:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"190:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1215,"linearizedBaseContracts":[1215,749],"name":"ContextUpgradeable","nameLocation":"705:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1176,"nodeType":"Block","src":"799:7:7","statements":[]},"id":1177,"implemented":true,"kind":"function","modifiers":[{"id":1174,"kind":"modifierInvocation","modifierName":{"id":1173,"name":"onlyInitializing","nameLocations":["782:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"782:16:7"},"nodeType":"ModifierInvocation","src":"782:16:7"}],"name":"__Context_init","nameLocation":"756:14:7","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[],"src":"770:2:7"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"799:0:7"},"scope":1215,"src":"747:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"874:7:7","statements":[]},"id":1183,"implemented":true,"kind":"function","modifiers":[{"id":1180,"kind":"modifierInvocation","modifierName":{"id":1179,"name":"onlyInitializing","nameLocations":["857:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"857:16:7"},"nodeType":"ModifierInvocation","src":"857:16:7"}],"name":"__Context_init_unchained","nameLocation":"821:24:7","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"845:2:7"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"874:0:7"},"scope":1215,"src":"812:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1191,"nodeType":"Block","src":"948:34:7","statements":[{"expression":{"expression":{"id":1188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:7","memberName":"sender","nodeType":"MemberAccess","src":"965:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1187,"id":1190,"nodeType":"Return","src":"958:17:7"}]},"id":1192,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:7","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[],"src":"905:2:7"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1192,"src":"939:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:7"},"scope":1215,"src":"886:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1200,"nodeType":"Block","src":"1055:32:7","statements":[{"expression":{"expression":{"id":1197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:7","memberName":"data","nodeType":"MemberAccess","src":"1072:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1196,"id":1199,"nodeType":"Return","src":"1065:15:7"}]},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:7","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"1005:2:7"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"1039:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:7"},"scope":1215,"src":"988:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1208,"nodeType":"Block","src":"1165:25:7","statements":[{"expression":{"hexValue":"30","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1205,"id":1207,"nodeType":"Return","src":"1175:8:7"}]},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:7","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"1122:2:7"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"1156:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:7"},"scope":1215,"src":"1093:97:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"1196:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1214,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:7","nodeType":"VariableDeclaration","scope":1215,"src":"1455:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1213,"length":{"hexValue":"3530","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1216,"src":"687:796:7","usedErrors":[]}],"src":"101:1383:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[2367],"SignedMathUpgradeable":[2472],"StringsUpgradeable":[1444]},"id":1445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1217,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":1218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1445,"sourceUnit":2368,"src":"126:36:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1445,"sourceUnit":2473,"src":"163:42:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"207:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1444,"linearizedBaseContracts":[1444],"name":"StringsUpgradeable","nameLocation":"250:18:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1223,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:8","nodeType":"VariableDeclaration","scope":1444,"src":"275:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1221,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1226,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:8","nodeType":"VariableDeclaration","scope":1444,"src":"335:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1224,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1273,"nodeType":"Block","src":"551:636:8","statements":[{"id":1272,"nodeType":"UncheckedBlock","src":"561:620:8","statements":[{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"length","nameLocation":"593:6:8","nodeType":"VariableDeclaration","scope":1272,"src":"585:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1242,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"624:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1236,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"602:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2367_$","typeString":"type(library MathUpgradeable)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"602:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:8"},{"assignments":[1244],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"buffer","nameLocation":"662:6:8","nodeType":"VariableDeclaration","scope":1272,"src":"648:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1243,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1249,"initialValue":{"arguments":[{"id":1247,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"682:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1245,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:8"},{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"ptr","nameLocation":"711:3:8","nodeType":"VariableDeclaration","scope":1272,"src":"703:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1252,"nodeType":"VariableDeclarationStatement","src":"703:11:8"},{"AST":{"nodeType":"YulBlock","src":"784:67:8","statements":[{"nodeType":"YulAssignment","src":"802:35:8","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:8","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:8"},"nodeType":"YulFunctionCall","src":"821:15:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:8"},"nodeType":"YulFunctionCall","src":"809:28:8"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1244,"isOffset":false,"isSlot":false,"src":"813:6:8","valueSize":1},{"declaration":1235,"isOffset":false,"isSlot":false,"src":"829:6:8","valueSize":1},{"declaration":1251,"isOffset":false,"isSlot":false,"src":"802:3:8","valueSize":1}],"id":1253,"nodeType":"InlineAssembly","src":"775:76:8"},{"body":{"id":1268,"nodeType":"Block","src":"877:267:8","statements":[{"expression":{"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:8","subExpression":{"id":1255,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"895:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1257,"nodeType":"ExpressionStatement","src":"895:5:8"},{"AST":{"nodeType":"YulBlock","src":"978:84:8","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:8"},"nodeType":"YulFunctionCall","src":"1018:14:8"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:8"},"nodeType":"YulFunctionCall","src":"1013:30:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:8"},"nodeType":"YulFunctionCall","src":"1000:44:8"},"nodeType":"YulExpressionStatement","src":"1000:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1223,"isOffset":false,"isSlot":false,"src":"1034:8:8","valueSize":1},{"declaration":1251,"isOffset":false,"isSlot":false,"src":"1008:3:8","valueSize":1},{"declaration":1229,"isOffset":false,"isSlot":false,"src":"1022:5:8","valueSize":1}],"id":1258,"nodeType":"InlineAssembly","src":"969:93:8"},{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1079:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"1079:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1112:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"1108:21:8","trueBody":{"id":1266,"nodeType":"Break","src":"1124:5:8"}}]},"condition":{"hexValue":"74727565","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1269,"nodeType":"WhileStatement","src":"864:280:8"},{"expression":{"id":1270,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1164:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1233,"id":1271,"nodeType":"Return","src":"1157:13:8"}]}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"385:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:8","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"value","nameLocation":"506:5:8","nodeType":"VariableDeclaration","scope":1274,"src":"498:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:8"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"536:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1231,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:8"},"scope":1444,"src":"480:707:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1301,"nodeType":"Block","src":"1357:114:8","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1398:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:8","trueExpression":{"hexValue":"2d","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1455:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1293,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"1429:21:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$2472_$","typeString":"type(library SignedMathUpgradeable)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2471,"src":"1429:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1274,1302],"referencedDeclaration":1274,"src":"1420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1284,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1282,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:8","typeDescriptions":{}}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1281,"id":1300,"nodeType":"Return","src":"1367:97:8"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1193:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:8","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"value","nameLocation":"1312:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"1305:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1276,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:8"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"1342:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:8"},"scope":1444,"src":"1287:184:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"1650:111:8","statements":[{"id":1320,"nodeType":"UncheckedBlock","src":"1660:95:8","statements":[{"expression":{"arguments":[{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1703:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1312,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1710:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2367_$","typeString":"type(library MathUpgradeable)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"1710:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1310,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1322,1398,1418],"referencedDeclaration":1398,"src":"1691:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1309,"id":1319,"nodeType":"Return","src":"1684:60:8"}]}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"1477:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:8","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"value","nameLocation":"1605:5:8","nodeType":"VariableDeclaration","scope":1322,"src":"1597:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:8"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"1635:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1307,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:8"},"scope":1444,"src":"1576:185:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1397,"nodeType":"Block","src":"1974:347:8","statements":[{"assignments":[1333],"declarations":[{"constant":false,"id":1333,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:8","nodeType":"VariableDeclaration","scope":1397,"src":"1984:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1337,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2020:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1334,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:8"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1343,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2041:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1345,"indexExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1348,"nodeType":"ExpressionStatement","src":"2041:15:8"},{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2066:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1351,"indexExpression":{"hexValue":"31","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1354,"nodeType":"ExpressionStatement","src":"2066:15:8"},{"body":{"id":1383,"nodeType":"Block","src":"2136:83:8","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1369,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2150:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1371,"indexExpression":{"id":1370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2157:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1372,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2162:8:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1376,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2171:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1378,"nodeType":"ExpressionStatement","src":"2150:33:8"},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2197:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ExpressionStatement","src":"2197:11:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2124:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"initializationExpression":{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"i","nameLocation":"2104:1:8","nodeType":"VariableDeclaration","scope":1384,"src":"2096:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1358,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2112:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:8"},"loopExpression":{"expression":{"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:8","subExpression":{"id":1366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2133:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1368,"nodeType":"ExpressionStatement","src":"2131:3:8"},"nodeType":"ForStatement","src":"2091:128:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2236:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"2228:55:8"},{"expression":{"arguments":[{"id":1394,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2307:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1331,"id":1396,"nodeType":"Return","src":"2293:21:8"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"1767:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:8","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"value","nameLocation":"1913:5:8","nodeType":"VariableDeclaration","scope":1398,"src":"1905:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"length","nameLocation":"1928:6:8","nodeType":"VariableDeclaration","scope":1398,"src":"1920:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:8"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1398,"src":"1959:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1329,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:8"},"scope":1444,"src":"1884:437:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1417,"nodeType":"Block","src":"2546:76:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1411,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2591:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1409,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:8","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:8","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2599:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1406,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1322,1398,1418],"referencedDeclaration":1398,"src":"2563:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1405,"id":1416,"nodeType":"Return","src":"2556:59:8"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"2327:141:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1418,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:8","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"addr","nameLocation":"2502:4:8","nodeType":"VariableDeclaration","scope":1418,"src":"2494:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:8"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"2531:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:8"},"scope":1444,"src":"2473:149:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"2777:66:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"2810:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1429,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:8","typeDescriptions":{}}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1428,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2833:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:8","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1434,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1427,"id":1441,"nodeType":"Return","src":"2787:49:8"}]},"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"2628:66:8","text":" @dev Returns true if the two strings are equal."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:8","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"a","nameLocation":"2728:1:8","nodeType":"VariableDeclaration","scope":1443,"src":"2714:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1420,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"b","nameLocation":"2745:1:8","nodeType":"VariableDeclaration","scope":1443,"src":"2731:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1422,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:8"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1443,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1425,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":1444,"src":"2699:144:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1445,"src":"242:2603:8","usedErrors":[]}],"src":"101:2745:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1489],"IERC165Upgradeable":[1501],"Initializable":[749]},"id":1490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1446,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":1447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1490,"sourceUnit":1502,"src":"124:34:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1490,"sourceUnit":750,"src":"159:66:9","symbolAliases":[{"foreign":{"id":1448,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"167:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1451,"name":"Initializable","nameLocations":["843:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":749,"src":"843:13:9"},"id":1452,"nodeType":"InheritanceSpecifier","src":"843:13:9"},{"baseName":{"id":1453,"name":"IERC165Upgradeable","nameLocations":["858:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1501,"src":"858:18:9"},"id":1454,"nodeType":"InheritanceSpecifier","src":"858:18:9"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"227:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1489,"linearizedBaseContracts":[1489,1501,749],"name":"ERC165Upgradeable","nameLocation":"822:17:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1459,"nodeType":"Block","src":"934:7:9","statements":[]},"id":1460,"implemented":true,"kind":"function","modifiers":[{"id":1457,"kind":"modifierInvocation","modifierName":{"id":1456,"name":"onlyInitializing","nameLocations":["917:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"917:16:9"},"nodeType":"ModifierInvocation","src":"917:16:9"}],"name":"__ERC165_init","nameLocation":"892:13:9","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"905:2:9"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"934:0:9"},"scope":1489,"src":"883:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"1008:7:9","statements":[]},"id":1466,"implemented":true,"kind":"function","modifiers":[{"id":1463,"kind":"modifierInvocation","modifierName":{"id":1462,"name":"onlyInitializing","nameLocations":["991:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"991:16:9"},"nodeType":"ModifierInvocation","src":"991:16:9"}],"name":"__ERC165_init_unchained","nameLocation":"956:23:9","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"979:2:9"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"1008:0:9"},"scope":1489,"src":"947:68:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1500],"body":{"id":1482,"nodeType":"Block","src":"1172:75:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1189:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1477,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1209:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1501_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1501_$","typeString":"type(contract IERC165Upgradeable)"}],"id":1476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1204:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$1501","typeString":"type(contract IERC165Upgradeable)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1229:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1204:36:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1189:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1474,"id":1481,"nodeType":"Return","src":"1182:58:9"}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"1020:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1483,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1090:17:9","nodeType":"FunctionDefinition","overrides":{"id":1471,"nodeType":"OverrideSpecifier","overrides":[],"src":"1148:8:9"},"parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"interfaceId","nameLocation":"1115:11:9","nodeType":"VariableDeclaration","scope":1483,"src":"1108:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1468,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1108:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1107:20:9"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"1166:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1472,"name":"bool","nodeType":"ElementaryTypeName","src":"1166:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1165:6:9"},"scope":1489,"src":"1081:166:9","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"1253:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1488,"mutability":"mutable","name":"__gap","nameLocation":"1532:5:9","nodeType":"VariableDeclaration","scope":1489,"src":"1512:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"length":{"hexValue":"3530","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1512:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1490,"src":"804:736:9","usedErrors":[]}],"src":"99:1442:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[1501]},"id":1502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1491,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1501,"linearizedBaseContracts":[1501],"name":"IERC165Upgradeable","nameLocation":"415:18:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"440:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1500,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:10","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:10","nodeType":"VariableDeclaration","scope":1500,"src":"812:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:10"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"855:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1497,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:10"},"scope":1501,"src":"785:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1502,"src":"405:458:10","usedErrors":[]}],"src":"100:764:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[2367]},"id":2368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"128:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2367,"linearizedBaseContracts":[2367],"name":"MathUpgradeable","nameLocation":"210:15:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":1508,"members":[{"id":1505,"name":"Down","nameLocation":"256:4:11","nodeType":"EnumValue","src":"256:4:11"},{"id":1506,"name":"Up","nameLocation":"298:2:11","nodeType":"EnumValue","src":"298:2:11"},{"id":1507,"name":"Zero","nameLocation":"329:4:11","nodeType":"EnumValue","src":"329:4:11"}],"name":"Rounding","nameLocation":"237:8:11","nodeType":"EnumDefinition","src":"232:122:11"},{"body":{"id":1525,"nodeType":"Block","src":"491:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"508:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"512:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"520:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:11","trueExpression":{"id":1521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"516:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1517,"id":1524,"nodeType":"Return","src":"501:20:11"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"360:59:11","text":" @dev Returns the largest of two numbers."},"id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:11","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"a","nameLocation":"445:1:11","nodeType":"VariableDeclaration","scope":1526,"src":"437:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"b","nameLocation":"456:1:11","nodeType":"VariableDeclaration","scope":1526,"src":"448:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:11"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"482:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:11"},"scope":2367,"src":"424:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"666:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"683:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"687:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"695:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:11","trueExpression":{"id":1539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"691:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1535,"id":1542,"nodeType":"Return","src":"676:20:11"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"534:60:11","text":" @dev Returns the smallest of two numbers."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:11","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"a","nameLocation":"620:1:11","nodeType":"VariableDeclaration","scope":1544,"src":"612:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"b","nameLocation":"631:1:11","nodeType":"VariableDeclaration","scope":1544,"src":"623:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:11"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"657:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:11"},"scope":2367,"src":"599:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1566,"nodeType":"Block","src":"887:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"942:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"946:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"956:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1553,"id":1565,"nodeType":"Return","src":"934:28:11"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"709:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:11","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"a","nameLocation":"841:1:11","nodeType":"VariableDeclaration","scope":1567,"src":"833:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"b","nameLocation":"852:1:11","nodeType":"VariableDeclaration","scope":1567,"src":"844:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:11"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"878:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:11"},"scope":2367,"src":"816:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"1239:123:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"1327:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"1341:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1350:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:11","trueExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1576,"id":1590,"nodeType":"Return","src":"1320:35:11"}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"975:188:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:11","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"a","nameLocation":"1193:1:11","nodeType":"VariableDeclaration","scope":1592,"src":"1185:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"b","nameLocation":"1204:1:11","nodeType":"VariableDeclaration","scope":1592,"src":"1196:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:11"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"1230:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:11"},"scope":2367,"src":"1168:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"1776:4115:11","statements":[{"id":1713,"nodeType":"UncheckedBlock","src":"1786:4099:11","statements":[{"assignments":[1605],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:11","nodeType":"VariableDeclaration","scope":1713,"src":"2107:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1606,"nodeType":"VariableDeclarationStatement","src":"2107:13:11"},{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:11","nodeType":"VariableDeclaration","scope":1713,"src":"2179:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1609,"nodeType":"VariableDeclarationStatement","src":"2179:13:11"},{"AST":{"nodeType":"YulBlock","src":"2259:157:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:11"},"nodeType":"YulFunctionCall","src":"2300:6:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:11"},"nodeType":"YulFunctionCall","src":"2287:20:11"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:11","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:11"},"nodeType":"YulFunctionCall","src":"2333:9:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:11"}]},{"nodeType":"YulAssignment","src":"2359:43:11","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:11"},"nodeType":"YulFunctionCall","src":"2372:14:11"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:11"},"nodeType":"YulFunctionCall","src":"2388:13:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:11"},"nodeType":"YulFunctionCall","src":"2368:34:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1605,"isOffset":false,"isSlot":false,"src":"2324:5:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"2380:5:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"2395:5:11","valueSize":1},{"declaration":1608,"isOffset":false,"isSlot":false,"src":"2359:5:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"2294:1:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"2337:1:11","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"2297:1:11","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"2340:1:11","valueSize":1}],"id":1610,"nodeType":"InlineAssembly","src":"2250:166:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"2497:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1619,"nodeType":"IfStatement","src":"2493:368:11","trueBody":{"id":1618,"nodeType":"Block","src":"2509:352:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2827:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2835:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1603,"id":1617,"nodeType":"Return","src":"2820:26:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2971:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1622,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"2985:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"2963:53:11"},{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:11","nodeType":"VariableDeclaration","scope":1713,"src":"3272:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1629,"nodeType":"VariableDeclarationStatement","src":"3272:17:11"},{"AST":{"nodeType":"YulBlock","src":"3312:291:11","statements":[{"nodeType":"YulAssignment","src":"3381:38:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:11"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:11"},"nodeType":"YulFunctionCall","src":"3394:25:11"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:11"}]},{"nodeType":"YulAssignment","src":"3501:41:11","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:11"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:11"},"nodeType":"YulFunctionCall","src":"3521:20:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:11"},"nodeType":"YulFunctionCall","src":"3510:32:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:11"}]},{"nodeType":"YulAssignment","src":"3559:30:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:11"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:11"},"nodeType":"YulFunctionCall","src":"3568:21:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1599,"isOffset":false,"isSlot":false,"src":"3407:11:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"3535:5:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"3559:5:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"3572:5:11","valueSize":1},{"declaration":1608,"isOffset":false,"isSlot":false,"src":"3501:5:11","valueSize":1},{"declaration":1608,"isOffset":false,"isSlot":false,"src":"3514:5:11","valueSize":1},{"declaration":1628,"isOffset":false,"isSlot":false,"src":"3381:9:11","valueSize":1},{"declaration":1628,"isOffset":false,"isSlot":false,"src":"3524:9:11","valueSize":1},{"declaration":1628,"isOffset":false,"isSlot":false,"src":"3579:9:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"3401:1:11","valueSize":1},{"declaration":1597,"isOffset":false,"isSlot":false,"src":"3404:1:11","valueSize":1}],"id":1630,"nodeType":"InlineAssembly","src":"3303:300:11"},{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"twos","nameLocation":"3918:4:11","nodeType":"VariableDeclaration","scope":1713,"src":"3910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1640,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1633,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3925:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:11","subExpression":{"id":1634,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3941:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:11"},{"AST":{"nodeType":"YulBlock","src":"3980:362:11","statements":[{"nodeType":"YulAssignment","src":"4045:37:11","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:11"},"nodeType":"YulFunctionCall","src":"4060:22:11"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:11"}]},{"nodeType":"YulAssignment","src":"4149:25:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:11"},"nodeType":"YulFunctionCall","src":"4158:16:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:11"}]},{"nodeType":"YulAssignment","src":"4289:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:11","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:11"},"nodeType":"YulFunctionCall","src":"4305:12:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:11"},"nodeType":"YulFunctionCall","src":"4301:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:11"},"nodeType":"YulFunctionCall","src":"4297:31:11"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1599,"isOffset":false,"isSlot":false,"src":"4045:11:11","valueSize":1},{"declaration":1599,"isOffset":false,"isSlot":false,"src":"4064:11:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"4149:5:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"4162:5:11","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"4077:4:11","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"4169:4:11","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"4289:4:11","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"4312:4:11","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"4319:4:11","valueSize":1}],"id":1641,"nodeType":"InlineAssembly","src":"3971:371:11"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1642,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"4408:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"4417:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1644,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"4425:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"4408:21:11"},{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:11","nodeType":"VariableDeclaration","scope":1713,"src":"4747:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"4770:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:11"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1657,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5003:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1659,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5018:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5032:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"5003:36:11"},{"expression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5072:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5087:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1668,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"nodeType":"ExpressionStatement","src":"5072:36:11"},{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1673,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5142:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5157:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1676,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"nodeType":"ExpressionStatement","src":"5142:36:11"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1681,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5227:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1684,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5241:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"5212:36:11"},{"expression":{"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1689,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5297:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1692,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ExpressionStatement","src":"5282:36:11"},{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1697,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5353:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5368:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1700,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1704,"nodeType":"ExpressionStatement","src":"5353:36:11"},{"expression":{"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5823:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"5832:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1707,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1710,"nodeType":"ExpressionStatement","src":"5823:24:11"},{"expression":{"id":1711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5868:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1603,"id":1712,"nodeType":"Return","src":"5861:13:11"}]}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"1368:305:11","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:11","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"x","nameLocation":"1702:1:11","nodeType":"VariableDeclaration","scope":1715,"src":"1694:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"y","nameLocation":"1713:1:11","nodeType":"VariableDeclaration","scope":1715,"src":"1705:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:11","nodeType":"VariableDeclaration","scope":1715,"src":"1716:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:11"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"result","nameLocation":"1768:6:11","nodeType":"VariableDeclaration","scope":1715,"src":"1760:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:11"},"scope":2367,"src":"1678:4213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"6133:189:11","statements":[{"assignments":[1731],"declarations":[{"constant":false,"id":1731,"mutability":"mutable","name":"result","nameLocation":"6151:6:11","nodeType":"VariableDeclaration","scope":1758,"src":"6143:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1737,"initialValue":{"arguments":[{"id":1733,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6167:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1734,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"6170:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1735,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6173:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1715,1759],"referencedDeclaration":1715,"src":"6160:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1738,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6199:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1739,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"6211:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1508_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"6211:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6233:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1744,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"6236:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6239:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1755,"nodeType":"IfStatement","src":"6195:98:11","trueBody":{"id":1754,"nodeType":"Block","src":"6257:36:11","statements":[{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"6271:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"6271:11:11"}]}},{"expression":{"id":1756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"6309:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1729,"id":1757,"nodeType":"Return","src":"6302:13:11"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"5897:121:11","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:11","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"x","nameLocation":"6047:1:11","nodeType":"VariableDeclaration","scope":1759,"src":"6039:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"y","nameLocation":"6058:1:11","nodeType":"VariableDeclaration","scope":1759,"src":"6050:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:11","nodeType":"VariableDeclaration","scope":1759,"src":"6061:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:11","nodeType":"VariableDeclaration","scope":1759,"src":"6082:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1724,"nodeType":"UserDefinedTypeName","pathNode":{"id":1723,"name":"Rounding","nameLocations":["6082:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"6082:8:11"},"referencedDeclaration":1508,"src":"6082:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:11"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1759,"src":"6124:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:11"},"scope":2367,"src":"6023:299:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"6598:1585:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"6612:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1773,"nodeType":"IfStatement","src":"6608:45:11","trueBody":{"id":1772,"nodeType":"Block","src":"6620:33:11","statements":[{"expression":{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1766,"id":1771,"nodeType":"Return","src":"6634:8:11"}]}},{"assignments":[1775],"declarations":[{"constant":false,"id":1775,"mutability":"mutable","name":"result","nameLocation":"7340:6:11","nodeType":"VariableDeclaration","scope":1870,"src":"7332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7360:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1777,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2039,2075],"referencedDeclaration":2039,"src":"7355:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:11"},{"id":1869,"nodeType":"UncheckedBlock","src":"7769:408:11","statements":[{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7793:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7803:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7812:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7816:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"7793:35:11"},{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7842:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7852:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7861:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7865:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1806,"nodeType":"ExpressionStatement","src":"7842:35:11"},{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7891:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7901:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7910:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7914:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"nodeType":"ExpressionStatement","src":"7891:35:11"},{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7940:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7950:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7959:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7963:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"7940:35:11"},{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7989:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7999:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8008:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8012:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"7989:35:11"},{"expression":{"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8038:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8048:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8057:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8061:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1850,"nodeType":"ExpressionStatement","src":"8038:35:11"},{"expression":{"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8087:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8097:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8106:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8110:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1861,"nodeType":"ExpressionStatement","src":"8087:35:11"},{"expression":{"arguments":[{"id":1863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8147:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"8159:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"8143:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1766,"id":1868,"nodeType":"Return","src":"8136:30:11"}]}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"6328:208:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:11","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"a","nameLocation":"6563:1:11","nodeType":"VariableDeclaration","scope":1871,"src":"6555:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:11"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"6589:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:11"},"scope":2367,"src":"6541:1642:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1906,"nodeType":"Block","src":"8359:161:11","statements":[{"id":1905,"nodeType":"UncheckedBlock","src":"8369:145:11","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"result","nameLocation":"8401:6:11","nodeType":"VariableDeclaration","scope":1905,"src":"8393:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1887,"initialValue":{"arguments":[{"id":1885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"8415:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1884,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1871,1907],"referencedDeclaration":1871,"src":"8410:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"8438:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8448:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1890,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8460:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1508_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"8460:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"8475:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"8484:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"8493:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:11","trueExpression":{"hexValue":"31","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1881,"id":1904,"nodeType":"Return","src":"8431:72:11"}]}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"8189:89:11","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1907,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:11","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"a","nameLocation":"8305:1:11","nodeType":"VariableDeclaration","scope":1907,"src":"8297:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:11","nodeType":"VariableDeclaration","scope":1907,"src":"8308:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"Rounding","nameLocations":["8308:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"8308:8:11"},"referencedDeclaration":1508,"src":"8308:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:11"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1907,"src":"8350:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:11"},"scope":2367,"src":"8283:237:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2038,"nodeType":"Block","src":"8705:922:11","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"result","nameLocation":"8723:6:11","nodeType":"VariableDeclaration","scope":2038,"src":"8715:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1918,"initialValue":{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:11"},{"id":2035,"nodeType":"UncheckedBlock","src":"8743:855:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8771:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1933,"nodeType":"IfStatement","src":"8767:99:11","trueBody":{"id":1932,"nodeType":"Block","src":"8789:77:11","statements":[{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8807:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1927,"nodeType":"ExpressionStatement","src":"8807:13:11"},{"expression":{"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8838:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1931,"nodeType":"ExpressionStatement","src":"8838:13:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1948,"nodeType":"IfStatement","src":"8879:96:11","trueBody":{"id":1947,"nodeType":"Block","src":"8900:75:11","statements":[{"expression":{"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8918:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1942,"nodeType":"ExpressionStatement","src":"8918:12:11"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8948:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"8948:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8992:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"8988:96:11","trueBody":{"id":1962,"nodeType":"Block","src":"9009:75:11","statements":[{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9027:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1957,"nodeType":"ExpressionStatement","src":"9027:12:11"},{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"9057:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9101:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"nodeType":"IfStatement","src":"9097:96:11","trueBody":{"id":1977,"nodeType":"Block","src":"9118:75:11","statements":[{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9136:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"9136:12:11"},{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9166:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"9166:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9210:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"9206:93:11","trueBody":{"id":1992,"nodeType":"Block","src":"9226:73:11","statements":[{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9244:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"nodeType":"ExpressionStatement","src":"9244:11:11"},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9273:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"9273:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9316:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"9312:93:11","trueBody":{"id":2007,"nodeType":"Block","src":"9332:73:11","statements":[{"expression":{"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9350:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2002,"nodeType":"ExpressionStatement","src":"9350:11:11"},{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9379:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2006,"nodeType":"ExpressionStatement","src":"9379:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9422:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2023,"nodeType":"IfStatement","src":"9418:93:11","trueBody":{"id":2022,"nodeType":"Block","src":"9438:73:11","statements":[{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2017,"nodeType":"ExpressionStatement","src":"9456:11:11"},{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9485:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"9485:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"9528:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2034,"nodeType":"IfStatement","src":"9524:64:11","trueBody":{"id":2033,"nodeType":"Block","src":"9544:44:11","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9562:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ExpressionStatement","src":"9562:11:11"}]}}]},{"expression":{"id":2036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"9614:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1914,"id":2037,"nodeType":"Return","src":"9607:13:11"}]},"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"8526:113:11","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:11","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"value","nameLocation":"8666:5:11","nodeType":"VariableDeclaration","scope":2039,"src":"8658:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:11"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2039,"src":"8696:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:11"},"scope":2367,"src":"8644:983:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"9860:165:11","statements":[{"id":2073,"nodeType":"UncheckedBlock","src":"9870:149:11","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"result","nameLocation":"9902:6:11","nodeType":"VariableDeclaration","scope":2073,"src":"9894:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"9916:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2039,2075],"referencedDeclaration":2039,"src":"9911:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9943:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"9953:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2058,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"9965:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1508_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"9965:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9985:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"9994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:11","trueExpression":{"hexValue":"31","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2049,"id":2072,"nodeType":"Return","src":"9936:72:11"}]}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"9633:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:11","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"value","nameLocation":"9802:5:11","nodeType":"VariableDeclaration","scope":2075,"src":"9794:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:11","nodeType":"VariableDeclaration","scope":2075,"src":"9809:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2044,"nodeType":"UserDefinedTypeName","pathNode":{"id":2043,"name":"Rounding","nameLocations":["9809:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"9809:8:11"},"referencedDeclaration":1508,"src":"9809:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:11"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"9851:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:11"},"scope":2367,"src":"9780:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"10212:854:11","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"result","nameLocation":"10230:6:11","nodeType":"VariableDeclaration","scope":2203,"src":"10222:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2086,"initialValue":{"hexValue":"30","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:11"},{"id":2200,"nodeType":"UncheckedBlock","src":"10250:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10278:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2103,"nodeType":"IfStatement","src":"10274:103:11","trueBody":{"id":2102,"nodeType":"Block","src":"10297:80:11","statements":[{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10315:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"10315:17:11"},{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10350:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"10350:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10394:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"10390:103:11","trueBody":{"id":2119,"nodeType":"Block","src":"10413:80:11","statements":[{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10431:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"10431:17:11"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10466:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"10466:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10510:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"10506:103:11","trueBody":{"id":2136,"nodeType":"Block","src":"10529:80:11","statements":[{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10547:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"10547:17:11"},{"expression":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10582:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2135,"nodeType":"ExpressionStatement","src":"10582:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10626:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2154,"nodeType":"IfStatement","src":"10622:100:11","trueBody":{"id":2153,"nodeType":"Block","src":"10644:78:11","statements":[{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10662:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"10662:16:11"},{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10696:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"10696:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10739:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2171,"nodeType":"IfStatement","src":"10735:100:11","trueBody":{"id":2170,"nodeType":"Block","src":"10757:78:11","statements":[{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10775:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"10775:16:11"},{"expression":{"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10809:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2169,"nodeType":"ExpressionStatement","src":"10809:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2188,"nodeType":"IfStatement","src":"10848:100:11","trueBody":{"id":2187,"nodeType":"Block","src":"10870:78:11","statements":[{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"10888:16:11"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"10922:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"10922:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10965:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"10961:66:11","trueBody":{"id":2198,"nodeType":"Block","src":"10983:44:11","statements":[{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"11001:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"11001:11:11"}]}}]},{"expression":{"id":2201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"11053:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2082,"id":2202,"nodeType":"Return","src":"11046:13:11"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"10031:114:11","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:11","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"value","nameLocation":"10173:5:11","nodeType":"VariableDeclaration","scope":2204,"src":"10165:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:11"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"10203:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:11"},"scope":2367,"src":"10150:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"11301:167:11","statements":[{"id":2238,"nodeType":"UncheckedBlock","src":"11311:151:11","statements":[{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"result","nameLocation":"11343:6:11","nodeType":"VariableDeclaration","scope":2238,"src":"11335:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2220,"initialValue":{"arguments":[{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"11358:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2217,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2204,2240],"referencedDeclaration":2204,"src":"11352:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"11385:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"11395:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2223,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"11407:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1508_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"11407:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"11428:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"11437:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:11","trueExpression":{"hexValue":"31","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2214,"id":2237,"nodeType":"Return","src":"11378:73:11"}]}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"11072:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:11","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"value","nameLocation":"11243:5:11","nodeType":"VariableDeclaration","scope":2240,"src":"11235:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:11","nodeType":"VariableDeclaration","scope":2240,"src":"11250:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2209,"nodeType":"UserDefinedTypeName","pathNode":{"id":2208,"name":"Rounding","nameLocations":["11250:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"11250:8:11"},"referencedDeclaration":1508,"src":"11250:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:11"},"returnParameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"11292:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:11"},"scope":2367,"src":"11220:248:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2326,"nodeType":"Block","src":"11782:600:11","statements":[{"assignments":[2249],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"result","nameLocation":"11800:6:11","nodeType":"VariableDeclaration","scope":2326,"src":"11792:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2251,"initialValue":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:11"},{"id":2323,"nodeType":"UncheckedBlock","src":"11820:533:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11848:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2266,"nodeType":"IfStatement","src":"11844:98:11","trueBody":{"id":2265,"nodeType":"Block","src":"11866:76:11","statements":[{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11884:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"11884:13:11"},{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"11915:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"11915:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11959:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"11955:95:11","trueBody":{"id":2280,"nodeType":"Block","src":"11976:74:11","statements":[{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"11994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"11994:12:11"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12024:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"12024:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12067:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2296,"nodeType":"IfStatement","src":"12063:95:11","trueBody":{"id":2295,"nodeType":"Block","src":"12084:74:11","statements":[{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12102:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"12102:12:11"},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12132:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ExpressionStatement","src":"12132:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12175:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"12171:95:11","trueBody":{"id":2310,"nodeType":"Block","src":"12192:74:11","statements":[{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12210:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"12210:12:11"},{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12240:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ExpressionStatement","src":"12240:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"12283:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"12279:64:11","trueBody":{"id":2321,"nodeType":"Block","src":"12299:44:11","statements":[{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12317:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"12317:11:11"}]}}]},{"expression":{"id":2324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12369:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2247,"id":2325,"nodeType":"Return","src":"12362:13:11"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"11474:240:11","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:11","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"11743:5:11","nodeType":"VariableDeclaration","scope":2327,"src":"11735:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:11"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"11773:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:11"},"scope":2367,"src":"11719:663:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"12619:174:11","statements":[{"id":2364,"nodeType":"UncheckedBlock","src":"12629:158:11","statements":[{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"result","nameLocation":"12661:6:11","nodeType":"VariableDeclaration","scope":2364,"src":"12653:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"12677:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2327,2366],"referencedDeclaration":2327,"src":"12670:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"12704:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"12714:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2346,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"12726:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1508_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1506,"src":"12726:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"12747:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"12762:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:11","trueExpression":{"hexValue":"31","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2337,"id":2363,"nodeType":"Return","src":"12697:79:11"}]}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"12388:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:11","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"value","nameLocation":"12561:5:11","nodeType":"VariableDeclaration","scope":2366,"src":"12553:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:11","nodeType":"VariableDeclaration","scope":2366,"src":"12568:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2332,"nodeType":"UserDefinedTypeName","pathNode":{"id":2331,"name":"Rounding","nameLocations":["12568:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1508,"src":"12568:8:11"},"referencedDeclaration":1508,"src":"12568:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1508","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:11"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2366,"src":"12610:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:11"},"scope":2367,"src":"12537:256:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2368,"src":"202:12593:11","usedErrors":[]}],"src":"103:12693:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[2472]},"id":2473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2369,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"134:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2472,"linearizedBaseContracts":[2472],"name":"SignedMathUpgradeable","nameLocation":"223:21:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2387,"nodeType":"Block","src":"386:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"403:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2381,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"407:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"415:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:12","trueExpression":{"id":2383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"411:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2379,"id":2386,"nodeType":"Return","src":"396:20:12"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"251:66:12","text":" @dev Returns the largest of two signed numbers."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:12","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"a","nameLocation":"342:1:12","nodeType":"VariableDeclaration","scope":2388,"src":"335:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2372,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"b","nameLocation":"352:1:12","nodeType":"VariableDeclaration","scope":2388,"src":"345:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2374,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:12"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"378:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2377,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:12"},"scope":2472,"src":"322:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"565:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"582:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"586:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"594:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:12","trueExpression":{"id":2401,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"590:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2397,"id":2404,"nodeType":"Return","src":"575:20:12"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"429:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:12","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"a","nameLocation":"521:1:12","nodeType":"VariableDeclaration","scope":2406,"src":"514:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2390,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"b","nameLocation":"531:1:12","nodeType":"VariableDeclaration","scope":2406,"src":"524:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2392,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:12"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"557:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2395,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:12"},"scope":2472,"src":"501:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"807:162:12","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"x","nameLocation":"876:1:12","nodeType":"VariableDeclaration","scope":2449,"src":"869:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2416,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2430,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"881:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"885:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"892:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"896:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"921:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2436,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"941:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:12","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2432,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:12","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"955:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"959:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2415,"id":2448,"nodeType":"Return","src":"914:48:12"}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"608:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:12","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"a","nameLocation":"763:1:12","nodeType":"VariableDeclaration","scope":2450,"src":"756:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2408,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"b","nameLocation":"773:1:12","nodeType":"VariableDeclaration","scope":2450,"src":"766:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2410,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:12"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2450,"src":"799:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2413,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:12"},"scope":2472,"src":"739:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"1113:158:12","statements":[{"id":2469,"nodeType":"UncheckedBlock","src":"1123:142:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1238:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:12","subExpression":{"id":2464,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1252:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:12","trueExpression":{"id":2463,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1247:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:12","typeDescriptions":{}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2457,"id":2468,"nodeType":"Return","src":"1223:31:12"}]}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"975:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:12","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"n","nameLocation":"1078:1:12","nodeType":"VariableDeclaration","scope":2471,"src":"1071:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2452,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:12"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"1104:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:12"},"scope":2472,"src":"1058:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2473,"src":"215:1058:12","usedErrors":[]}],"src":"109:1165:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[3085]},"id":3086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2474,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"230:1098:13","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3085,"linearizedBaseContracts":[3085],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":2483,"members":[{"constant":false,"id":2478,"mutability":"mutable","name":"_values","nameLocation":"1872:7:13","nodeType":"VariableDeclaration","scope":2483,"src":"1862:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2477,"nodeType":"ArrayTypeName","src":"1862:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:13","nodeType":"VariableDeclaration","scope":2483,"src":"2012:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2481,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:13","nodeType":"StructDefinition","scope":3085,"src":"1808:247:13","visibility":"public"},{"body":{"id":2524,"nodeType":"Block","src":"2294:335:13","statements":[{"condition":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:13","subExpression":{"arguments":[{"id":2495,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2319:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2324:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2494,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"2309:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2522,"nodeType":"Block","src":"2586:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2493,"id":2521,"nodeType":"Return","src":"2600:12:13"}]},"id":2523,"nodeType":"IfStatement","src":"2304:319:13","trueBody":{"id":2519,"nodeType":"Block","src":"2332:248:13","statements":[{"expression":{"arguments":[{"id":2504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2363:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2499,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2346:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"2346:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:13","memberName":"push","nodeType":"MemberAccess","src":"2346:16:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"ExpressionStatement","src":"2346:23:13"},{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2507,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2504:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"2504:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2511,"indexExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"2517:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2512,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2526:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2530:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"2526:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:13","memberName":"length","nodeType":"MemberAccess","src":"2526:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ExpressionStatement","src":"2504:40:13"},{"expression":{"hexValue":"74727565","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2493,"id":2518,"nodeType":"Return","src":"2558:11:13"}]}}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"2061:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:13","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"set","nameLocation":"2251:3:13","nodeType":"VariableDeclaration","scope":2525,"src":"2239:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2486,"nodeType":"UserDefinedTypeName","pathNode":{"id":2485,"name":"Set","nameLocations":["2239:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"2239:3:13"},"referencedDeclaration":2483,"src":"2239:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"value","nameLocation":"2264:5:13","nodeType":"VariableDeclaration","scope":2525,"src":"2256:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:13"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2525,"src":"2288:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2491,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:13"},"scope":3085,"src":"2225:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2608,"nodeType":"Block","src":"2869:1316:13","statements":[{"assignments":[2537],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:13","nodeType":"VariableDeclaration","scope":2608,"src":"2979:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2542,"initialValue":{"baseExpression":{"expression":{"id":2538,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3000:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"3000:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2541,"indexExpression":{"id":2540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"3013:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"3034:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2606,"nodeType":"Block","src":"4142:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2535,"id":2605,"nodeType":"Return","src":"4156:12:13"}]},"id":2607,"nodeType":"IfStatement","src":"3030:1149:13","trueBody":{"id":2603,"nodeType":"Block","src":"3051:1085:13","statements":[{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:13","nodeType":"VariableDeclaration","scope":2603,"src":"3403:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2551,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"3427:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:13"},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:13","nodeType":"VariableDeclaration","scope":2603,"src":"3455:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2554,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3475:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"3475:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:13","memberName":"length","nodeType":"MemberAccess","src":"3475:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"3516:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2561,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3529:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"3512:398:13","trueBody":{"id":2586,"nodeType":"Block","src":"3544:366:13","statements":[{"assignments":[2564],"declarations":[{"constant":false,"id":2564,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:13","nodeType":"VariableDeclaration","scope":2586,"src":"3562:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2569,"initialValue":{"baseExpression":{"expression":{"id":2565,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3582:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"3582:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2568,"indexExpression":{"id":2567,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"3594:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:13"},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2570,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3704:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"3704:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2574,"indexExpression":{"id":2572,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"3716:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2575,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3733:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2577,"nodeType":"ExpressionStatement","src":"3704:38:13"},{"expression":{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2578,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3816:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"3816:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2582,"indexExpression":{"id":2580,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3829:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2583,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"3842:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2585,"nodeType":"ExpressionStatement","src":"3816:36:13"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"3988:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3992:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"3988:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:3:13","memberName":"pop","nodeType":"MemberAccess","src":"3988:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"ExpressionStatement","src":"3988:17:13"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:13","subExpression":{"baseExpression":{"expression":{"id":2595,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"4080:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4084:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"4080:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2598,"indexExpression":{"id":2597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4093:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2600,"nodeType":"ExpressionStatement","src":"4073:26:13"},{"expression":{"hexValue":"74727565","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2535,"id":2602,"nodeType":"Return","src":"4114:11:13"}]}}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"2635:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:13","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"set","nameLocation":"2826:3:13","nodeType":"VariableDeclaration","scope":2609,"src":"2814:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2528,"nodeType":"UserDefinedTypeName","pathNode":{"id":2527,"name":"Set","nameLocations":["2814:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"2814:3:13"},"referencedDeclaration":2483,"src":"2814:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"value","nameLocation":"2839:5:13","nodeType":"VariableDeclaration","scope":2609,"src":"2831:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:13"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"2863:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2533,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:13"},"scope":3085,"src":"2797:1388:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2627,"nodeType":"Block","src":"4345:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2620,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4362:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4366:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"4362:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2623,"indexExpression":{"id":2622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"4375:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2619,"id":2626,"nodeType":"Return","src":"4355:31:13"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"4191:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:13","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"set","nameLocation":"4297:3:13","nodeType":"VariableDeclaration","scope":2628,"src":"4285:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2612,"nodeType":"UserDefinedTypeName","pathNode":{"id":2611,"name":"Set","nameLocations":["4285:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"4285:3:13"},"referencedDeclaration":2483,"src":"4285:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"value","nameLocation":"4310:5:13","nodeType":"VariableDeclaration","scope":2628,"src":"4302:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:13"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"4339:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2617,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:13"},"scope":3085,"src":"4266:127:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2641,"nodeType":"Block","src":"4539:42:13","statements":[{"expression":{"expression":{"expression":{"id":2637,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"4556:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"4556:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:13","memberName":"length","nodeType":"MemberAccess","src":"4556:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2636,"id":2640,"nodeType":"Return","src":"4549:25:13"}]},"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"4399:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:13","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"set","nameLocation":"4503:3:13","nodeType":"VariableDeclaration","scope":2642,"src":"4491:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2631,"nodeType":"UserDefinedTypeName","pathNode":{"id":2630,"name":"Set","nameLocations":["4491:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"4491:3:13"},"referencedDeclaration":2483,"src":"4491:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:13"},"returnParameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"4530:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:13"},"scope":3085,"src":"4474:107:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2658,"nodeType":"Block","src":"4999:42:13","statements":[{"expression":{"baseExpression":{"expression":{"id":2653,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"5016:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"5016:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2656,"indexExpression":{"id":2655,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5028:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2652,"id":2657,"nodeType":"Return","src":"5009:25:13"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"4587:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:13","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"set","nameLocation":"4948:3:13","nodeType":"VariableDeclaration","scope":2659,"src":"4936:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2645,"nodeType":"UserDefinedTypeName","pathNode":{"id":2644,"name":"Set","nameLocations":["4936:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"4936:3:13"},"referencedDeclaration":2483,"src":"4936:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"index","nameLocation":"4961:5:13","nodeType":"VariableDeclaration","scope":2659,"src":"4953:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:13"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"4990:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:13"},"scope":3085,"src":"4923:118:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2672,"nodeType":"Block","src":"5655:35:13","statements":[{"expression":{"expression":{"id":2669,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"5672:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2478,"src":"5672:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2668,"id":2671,"nodeType":"Return","src":"5665:18:13"}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"5047:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:13","nodeType":"FunctionDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"set","nameLocation":"5610:3:13","nodeType":"VariableDeclaration","scope":2673,"src":"5598:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2662,"nodeType":"UserDefinedTypeName","pathNode":{"id":2661,"name":"Set","nameLocations":["5598:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"5598:3:13"},"referencedDeclaration":2483,"src":"5598:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:13"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"5637:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2666,"nodeType":"ArrayTypeName","src":"5637:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:13"},"scope":3085,"src":"5581:109:13","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":2677,"members":[{"constant":false,"id":2676,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:13","nodeType":"VariableDeclaration","scope":2677,"src":"5743:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"Set","nameLocations":["5743:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"5743:3:13"},"referencedDeclaration":2483,"src":"5743:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:13","nodeType":"StructDefinition","scope":3085,"src":"5715:45:13","visibility":"public"},{"body":{"id":2694,"nodeType":"Block","src":"6006:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":2689,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"6028:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"6028:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6040:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2688,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6023:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2687,"id":2693,"nodeType":"Return","src":"6016:30:13"}]},"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"5766:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:13","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"set","nameLocation":"5962:3:13","nodeType":"VariableDeclaration","scope":2695,"src":"5943:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2680,"nodeType":"UserDefinedTypeName","pathNode":{"id":2679,"name":"Bytes32Set","nameLocations":["5943:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"5943:10:13"},"referencedDeclaration":2677,"src":"5943:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"value","nameLocation":"5975:5:13","nodeType":"VariableDeclaration","scope":2695,"src":"5967:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:13"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2695,"src":"6000:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2685,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:13"},"scope":3085,"src":"5930:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"6300:50:13","statements":[{"expression":{"arguments":[{"expression":{"id":2707,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6325:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"6325:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"6337:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2706,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6317:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2705,"id":2711,"nodeType":"Return","src":"6310:33:13"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"6059:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:13","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"set","nameLocation":"6256:3:13","nodeType":"VariableDeclaration","scope":2713,"src":"6237:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"Bytes32Set","nameLocations":["6237:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"6237:10:13"},"referencedDeclaration":2677,"src":"6237:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"value","nameLocation":"6269:5:13","nodeType":"VariableDeclaration","scope":2713,"src":"6261:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:13"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"6294:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2703,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:13"},"scope":3085,"src":"6221:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"6517:52:13","statements":[{"expression":{"arguments":[{"expression":{"id":2725,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"6544:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"6544:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6556:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2724,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"6534:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2723,"id":2729,"nodeType":"Return","src":"6527:35:13"}]},"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"6356:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:13","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"set","nameLocation":"6468:3:13","nodeType":"VariableDeclaration","scope":2731,"src":"6449:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2716,"nodeType":"UserDefinedTypeName","pathNode":{"id":2715,"name":"Bytes32Set","nameLocations":["6449:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"6449:10:13"},"referencedDeclaration":2677,"src":"6449:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"value","nameLocation":"6481:5:13","nodeType":"VariableDeclaration","scope":2731,"src":"6473:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:13"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"6511:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2721,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:13"},"scope":3085,"src":"6431:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2745,"nodeType":"Block","src":"6722:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2741,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6747:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"6747:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2740,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"6739:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2739,"id":2744,"nodeType":"Return","src":"6732:26:13"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"6575:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:13","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"set","nameLocation":"6685:3:13","nodeType":"VariableDeclaration","scope":2746,"src":"6666:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2734,"nodeType":"UserDefinedTypeName","pathNode":{"id":2733,"name":"Bytes32Set","nameLocations":["6666:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"6666:10:13"},"referencedDeclaration":2677,"src":"6666:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:13"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"6713:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:13"},"scope":3085,"src":"6650:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"7190:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":2758,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"7211:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"7211:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2760,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"7223:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"7207:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2756,"id":2762,"nodeType":"Return","src":"7200:29:13"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"6771:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:13","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"set","nameLocation":"7138:3:13","nodeType":"VariableDeclaration","scope":2764,"src":"7119:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2749,"nodeType":"UserDefinedTypeName","pathNode":{"id":2748,"name":"Bytes32Set","nameLocations":["7119:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"7119:10:13"},"referencedDeclaration":2677,"src":"7119:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"index","nameLocation":"7151:5:13","nodeType":"VariableDeclaration","scope":2764,"src":"7143:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:13"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"7181:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:13"},"scope":3085,"src":"7107:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"7857:219:13","statements":[{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"store","nameLocation":"7884:5:13","nodeType":"VariableDeclaration","scope":2793,"src":"7867:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2777,"nodeType":"ArrayTypeName","src":"7867:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[{"expression":{"id":2780,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"7900:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2676,"src":"7900:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2779,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7892:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:13"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"result","nameLocation":"7938:6:13","nodeType":"VariableDeclaration","scope":2793,"src":"7921:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2787,"nodeType":"ArrayTypeName","src":"7921:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2789,"nodeType":"VariableDeclarationStatement","src":"7921:23:13"},{"AST":{"nodeType":"YulBlock","src":"8007:39:13","statements":[{"nodeType":"YulAssignment","src":"8021:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2788,"isOffset":false,"isSlot":false,"src":"8021:6:13","valueSize":1},{"declaration":2778,"isOffset":false,"isSlot":false,"src":"8031:5:13","valueSize":1}],"id":2790,"nodeType":"InlineAssembly","src":"7998:48:13"},{"expression":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"8063:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2773,"id":2792,"nodeType":"Return","src":"8056:13:13"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"7242:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:13","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"set","nameLocation":"7811:3:13","nodeType":"VariableDeclaration","scope":2794,"src":"7792:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"Bytes32Set","nameLocations":["7792:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"7792:10:13"},"referencedDeclaration":2677,"src":"7792:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:13"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"7839:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2771,"nodeType":"ArrayTypeName","src":"7839:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:13"},"scope":3085,"src":"7776:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":2798,"members":[{"constant":false,"id":2797,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:13","nodeType":"VariableDeclaration","scope":2798,"src":"8129:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"Set","nameLocations":["8129:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"8129:3:13"},"referencedDeclaration":2483,"src":"8129:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:13","nodeType":"StructDefinition","scope":3085,"src":"8101:45:13","visibility":"public"},{"body":{"id":2824,"nodeType":"Block","src":"8392:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":2810,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"8414:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"8414:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"8450:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2816,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:13","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:13","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:13","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2809,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8409:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2808,"id":2823,"nodeType":"Return","src":"8402:57:13"}]},"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"8152:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:13","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"set","nameLocation":"8348:3:13","nodeType":"VariableDeclaration","scope":2825,"src":"8329:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2801,"nodeType":"UserDefinedTypeName","pathNode":{"id":2800,"name":"AddressSet","nameLocations":["8329:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"8329:10:13"},"referencedDeclaration":2798,"src":"8329:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"8361:5:13","nodeType":"VariableDeclaration","scope":2825,"src":"8353:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:13"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"8386:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2806,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:13"},"scope":3085,"src":"8316:150:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"8713:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":2837,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"8738:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"8738:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8774:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2843,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:13","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:13","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:13","typeDescriptions":{}}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2836,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"8730:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2835,"id":2850,"nodeType":"Return","src":"8723:60:13"}]},"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"8472:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:13","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"set","nameLocation":"8669:3:13","nodeType":"VariableDeclaration","scope":2852,"src":"8650:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2828,"nodeType":"UserDefinedTypeName","pathNode":{"id":2827,"name":"AddressSet","nameLocations":["8650:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"8650:10:13"},"referencedDeclaration":2798,"src":"8650:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"value","nameLocation":"8682:5:13","nodeType":"VariableDeclaration","scope":2852,"src":"8674:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:13"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"8707:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2833,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:13"},"scope":3085,"src":"8634:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2878,"nodeType":"Block","src":"8957:79:13","statements":[{"expression":{"arguments":[{"expression":{"id":2864,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8984:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"8984:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"9020:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2870,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:13","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:13","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:13","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2863,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"8974:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2862,"id":2877,"nodeType":"Return","src":"8967:62:13"}]},"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"8796:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2879,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:13","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"set","nameLocation":"8908:3:13","nodeType":"VariableDeclaration","scope":2879,"src":"8889:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"AddressSet","nameLocations":["8889:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"8889:10:13"},"referencedDeclaration":2798,"src":"8889:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"value","nameLocation":"8921:5:13","nodeType":"VariableDeclaration","scope":2879,"src":"8913:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:13"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2879,"src":"8951:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2860,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:13"},"scope":3085,"src":"8871:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"9189:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2889,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"9214:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"9214:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2888,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"9206:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2887,"id":2892,"nodeType":"Return","src":"9199:26:13"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"9042:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:13","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"set","nameLocation":"9152:3:13","nodeType":"VariableDeclaration","scope":2894,"src":"9133:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2882,"nodeType":"UserDefinedTypeName","pathNode":{"id":2881,"name":"AddressSet","nameLocations":["9133:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"9133:10:13"},"referencedDeclaration":2798,"src":"9133:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:13"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"9180:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:13"},"scope":3085,"src":"9117:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"9657:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2912,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"9702:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"9702:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2914,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"9714:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2911,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"9698:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:13","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2907,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:13","typeDescriptions":{}}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:13","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2904,"id":2919,"nodeType":"Return","src":"9667:56:13"}]},"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"9238:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:13","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"set","nameLocation":"9605:3:13","nodeType":"VariableDeclaration","scope":2921,"src":"9586:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2897,"nodeType":"UserDefinedTypeName","pathNode":{"id":2896,"name":"AddressSet","nameLocations":["9586:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"9586:10:13"},"referencedDeclaration":2798,"src":"9586:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"index","nameLocation":"9618:5:13","nodeType":"VariableDeclaration","scope":2921,"src":"9610:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:13"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"9648:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:13"},"scope":3085,"src":"9574:156:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2950,"nodeType":"Block","src":"10351:219:13","statements":[{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"store","nameLocation":"10378:5:13","nodeType":"VariableDeclaration","scope":2950,"src":"10361:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2934,"nodeType":"ArrayTypeName","src":"10361:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2940,"initialValue":{"arguments":[{"expression":{"id":2937,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"10394:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"10394:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2936,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10386:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:13"},{"assignments":[2945],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"result","nameLocation":"10432:6:13","nodeType":"VariableDeclaration","scope":2950,"src":"10415:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2944,"nodeType":"ArrayTypeName","src":"10415:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2946,"nodeType":"VariableDeclarationStatement","src":"10415:23:13"},{"AST":{"nodeType":"YulBlock","src":"10501:39:13","statements":[{"nodeType":"YulAssignment","src":"10515:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2945,"isOffset":false,"isSlot":false,"src":"10515:6:13","valueSize":1},{"declaration":2935,"isOffset":false,"isSlot":false,"src":"10525:5:13","valueSize":1}],"id":2947,"nodeType":"InlineAssembly","src":"10492:48:13"},{"expression":{"id":2948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"10557:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2930,"id":2949,"nodeType":"Return","src":"10550:13:13"}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"9736:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:13","nodeType":"FunctionDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"set","nameLocation":"10305:3:13","nodeType":"VariableDeclaration","scope":2951,"src":"10286:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2924,"nodeType":"UserDefinedTypeName","pathNode":{"id":2923,"name":"AddressSet","nameLocations":["10286:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2798,"src":"10286:10:13"},"referencedDeclaration":2798,"src":"10286:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2798_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:13"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2951,"src":"10333:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2928,"nodeType":"ArrayTypeName","src":"10333:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:13"},"scope":3085,"src":"10270:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":2955,"members":[{"constant":false,"id":2954,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:13","nodeType":"VariableDeclaration","scope":2955,"src":"10617:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2953,"nodeType":"UserDefinedTypeName","pathNode":{"id":2952,"name":"Set","nameLocations":["10617:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"10617:3:13"},"referencedDeclaration":2483,"src":"10617:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:13","nodeType":"StructDefinition","scope":3085,"src":"10592:42:13","visibility":"public"},{"body":{"id":2975,"nodeType":"Block","src":"10877:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2967,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"10899:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"10899:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"10919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:13","typeDescriptions":{}}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2966,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"10894:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2965,"id":2974,"nodeType":"Return","src":"10887:39:13"}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"10640:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:13","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"set","nameLocation":"10833:3:13","nodeType":"VariableDeclaration","scope":2976,"src":"10817:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2958,"nodeType":"UserDefinedTypeName","pathNode":{"id":2957,"name":"UintSet","nameLocations":["10817:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"10817:7:13"},"referencedDeclaration":2955,"src":"10817:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"value","nameLocation":"10846:5:13","nodeType":"VariableDeclaration","scope":2976,"src":"10838:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:13"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"10871:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2963,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:13"},"scope":3085,"src":"10804:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"11177:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":2988,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"11202:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"11202:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"11222:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:13","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2987,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"11194:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2986,"id":2995,"nodeType":"Return","src":"11187:42:13"}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"10939:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:13","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"set","nameLocation":"11133:3:13","nodeType":"VariableDeclaration","scope":2997,"src":"11117:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2979,"nodeType":"UserDefinedTypeName","pathNode":{"id":2978,"name":"UintSet","nameLocations":["11117:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"11117:7:13"},"referencedDeclaration":2955,"src":"11117:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"value","nameLocation":"11146:5:13","nodeType":"VariableDeclaration","scope":2997,"src":"11138:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:13"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"11171:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2984,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:13"},"scope":3085,"src":"11101:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"11400:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":3009,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11427:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"11427:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11447:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:13","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3008,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11417:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3007,"id":3016,"nodeType":"Return","src":"11410:44:13"}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"11242:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:13","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"set","nameLocation":"11351:3:13","nodeType":"VariableDeclaration","scope":3018,"src":"11335:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3000,"nodeType":"UserDefinedTypeName","pathNode":{"id":2999,"name":"UintSet","nameLocations":["11335:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"11335:7:13"},"referencedDeclaration":2955,"src":"11335:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"value","nameLocation":"11364:5:13","nodeType":"VariableDeclaration","scope":3018,"src":"11356:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:13"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"11394:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3005,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:13"},"scope":3085,"src":"11317:144:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"11611:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":3028,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11636:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"11636:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3027,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11628:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3026,"id":3031,"nodeType":"Return","src":"11621:26:13"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"11467:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:13","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"set","nameLocation":"11574:3:13","nodeType":"VariableDeclaration","scope":3033,"src":"11558:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3021,"nodeType":"UserDefinedTypeName","pathNode":{"id":3020,"name":"UintSet","nameLocations":["11558:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"11558:7:13"},"referencedDeclaration":2955,"src":"11558:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:13"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3033,"src":"11602:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:13"},"scope":3085,"src":"11542:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"12076:55:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3047,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12105:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"12105:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3049,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12117:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3046,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"12101:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:13","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3043,"id":3052,"nodeType":"Return","src":"12086:38:13"}]},"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"11660:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:13","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"set","nameLocation":"12024:3:13","nodeType":"VariableDeclaration","scope":3054,"src":"12008:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3036,"nodeType":"UserDefinedTypeName","pathNode":{"id":3035,"name":"UintSet","nameLocations":["12008:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"12008:7:13"},"referencedDeclaration":2955,"src":"12008:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"index","nameLocation":"12037:5:13","nodeType":"VariableDeclaration","scope":3054,"src":"12029:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:13"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"12067:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:13"},"scope":3085,"src":"11996:135:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"12749:219:13","statements":[{"assignments":[3068],"declarations":[{"constant":false,"id":3068,"mutability":"mutable","name":"store","nameLocation":"12776:5:13","nodeType":"VariableDeclaration","scope":3083,"src":"12759:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3067,"nodeType":"ArrayTypeName","src":"12759:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3073,"initialValue":{"arguments":[{"expression":{"id":3070,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"12792:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2954,"src":"12792:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2483_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3069,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"12784:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2483_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:13"},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"result","nameLocation":"12830:6:13","nodeType":"VariableDeclaration","scope":3083,"src":"12813:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ArrayTypeName","src":"12813:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3079,"nodeType":"VariableDeclarationStatement","src":"12813:23:13"},{"AST":{"nodeType":"YulBlock","src":"12899:39:13","statements":[{"nodeType":"YulAssignment","src":"12913:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3078,"isOffset":false,"isSlot":false,"src":"12913:6:13","valueSize":1},{"declaration":3068,"isOffset":false,"isSlot":false,"src":"12923:5:13","valueSize":1}],"id":3080,"nodeType":"InlineAssembly","src":"12890:48:13"},{"expression":{"id":3081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"12955:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3063,"id":3082,"nodeType":"Return","src":"12948:13:13"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"12137:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:13","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"set","nameLocation":"12703:3:13","nodeType":"VariableDeclaration","scope":3084,"src":"12687:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3057,"nodeType":"UserDefinedTypeName","pathNode":{"id":3056,"name":"UintSet","nameLocations":["12687:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"12687:7:13"},"referencedDeclaration":2955,"src":"12687:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2955_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:13"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"12731:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ArrayTypeName","src":"12731:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:13"},"scope":3085,"src":"12671:297:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3086,"src":"1329:11641:13","usedErrors":[]}],"src":"205:12766:13"},"id":13},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[3126],"IERC165":[4205]},"id":3127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3087,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3127,"sourceUnit":4206,"src":"143:47:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3090,"name":"IERC165","nameLocations":["262:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":4205,"src":"262:7:14"},"id":3091,"nodeType":"InheritanceSpecifier","src":"262:7:14"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"192:39:14","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":3126,"linearizedBaseContracts":[3126,4205],"name":"IERC1155Receiver","nameLocation":"242:16:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3092,"nodeType":"StructuredDocumentation","src":"276:826:14","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":3107,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:14","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"operator","nameLocation":"1151:8:14","nodeType":"VariableDeclaration","scope":3107,"src":"1143:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"from","nameLocation":"1177:4:14","nodeType":"VariableDeclaration","scope":3107,"src":"1169:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"id","nameLocation":"1199:2:14","nodeType":"VariableDeclaration","scope":3107,"src":"1191:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"1219:5:14","nodeType":"VariableDeclaration","scope":3107,"src":"1211:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"data","nameLocation":"1249:4:14","nodeType":"VariableDeclaration","scope":3107,"src":"1234:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3101,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:14"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"1278:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3104,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:14"},"scope":3126,"src":"1107:179:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"1292:994:14","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":3125,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:14","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"operator","nameLocation":"2340:8:14","nodeType":"VariableDeclaration","scope":3125,"src":"2332:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"from","nameLocation":"2366:4:14","nodeType":"VariableDeclaration","scope":3125,"src":"2358:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"ids","nameLocation":"2399:3:14","nodeType":"VariableDeclaration","scope":3125,"src":"2380:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ArrayTypeName","src":"2380:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"values","nameLocation":"2431:6:14","nodeType":"VariableDeclaration","scope":3125,"src":"2412:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ArrayTypeName","src":"2412:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"data","nameLocation":"2462:4:14","nodeType":"VariableDeclaration","scope":3125,"src":"2447:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3119,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:14"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"2491:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3122,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:14"},"scope":3126,"src":"2291:208:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3127,"src":"232:2269:14","usedErrors":[]}],"src":"118:2384:14"},"id":14},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3204]},"id":3205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3128,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"131:70:15","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3204,"linearizedBaseContracts":[3204],"name":"IERC20","nameLocation":"212:6:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"225:158:15","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3138,"name":"Transfer","nameLocation":"394:8:15","nodeType":"EventDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:15","nodeType":"VariableDeclaration","scope":3138,"src":"403:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3134,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:15","nodeType":"VariableDeclaration","scope":3138,"src":"425:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:15","nodeType":"VariableDeclaration","scope":3138,"src":"445:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:15"},"src":"388:72:15"},{"anonymous":false,"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"466:148:15","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3147,"name":"Approval","nameLocation":"625:8:15","nodeType":"EventDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:15","nodeType":"VariableDeclaration","scope":3147,"src":"634:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3143,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:15","nodeType":"VariableDeclaration","scope":3147,"src":"657:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3145,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:15","nodeType":"VariableDeclaration","scope":3147,"src":"682:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:15"},"src":"619:78:15"},{"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"703:66:15","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3153,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:15","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"794:2:15"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"820:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:15"},"scope":3204,"src":"774:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"835:72:15","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3161,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:15","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"account","nameLocation":"939:7:15","nodeType":"VariableDeclaration","scope":3161,"src":"931:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:15"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"971:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:15"},"scope":3204,"src":"912:68:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"986:202:15","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3171,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:15","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"to","nameLocation":"1219:2:15","nodeType":"VariableDeclaration","scope":3171,"src":"1211:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"amount","nameLocation":"1231:6:15","nodeType":"VariableDeclaration","scope":3171,"src":"1223:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:15"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"1257:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3168,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:15"},"scope":3204,"src":"1193:70:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"1269:264:15","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3181,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:15","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"owner","nameLocation":"1565:5:15","nodeType":"VariableDeclaration","scope":3181,"src":"1557:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"spender","nameLocation":"1580:7:15","nodeType":"VariableDeclaration","scope":3181,"src":"1572:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:15"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3181,"src":"1612:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:15"},"scope":3204,"src":"1538:83:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"1627:642:15","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3191,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:15","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"spender","nameLocation":"2299:7:15","nodeType":"VariableDeclaration","scope":3191,"src":"2291:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"amount","nameLocation":"2316:6:15","nodeType":"VariableDeclaration","scope":3191,"src":"2308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:15"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"2342:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3188,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:15"},"scope":3204,"src":"2274:74:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"2354:287:15","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3203,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:15","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"from","nameLocation":"2676:4:15","nodeType":"VariableDeclaration","scope":3203,"src":"2668:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"to","nameLocation":"2690:2:15","nodeType":"VariableDeclaration","scope":3203,"src":"2682:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"amount","nameLocation":"2702:6:15","nodeType":"VariableDeclaration","scope":3203,"src":"2694:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:15"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"2728:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3200,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:15"},"scope":3204,"src":"2646:88:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3205,"src":"202:2534:15","usedErrors":[]}],"src":"106:2631:15"},"id":15},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3240]},"id":3241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3206,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"148:1963:16","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":3240,"linearizedBaseContracts":[3240],"name":"IERC20Permit","nameLocation":"2122:12:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"2141:850:16","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":3225,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:16","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"owner","nameLocation":"3029:5:16","nodeType":"VariableDeclaration","scope":3225,"src":"3021:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"spender","nameLocation":"3052:7:16","nodeType":"VariableDeclaration","scope":3225,"src":"3044:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"value","nameLocation":"3077:5:16","nodeType":"VariableDeclaration","scope":3225,"src":"3069:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:16","nodeType":"VariableDeclaration","scope":3225,"src":"3092:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"v","nameLocation":"3124:1:16","nodeType":"VariableDeclaration","scope":3225,"src":"3118:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3217,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"r","nameLocation":"3143:1:16","nodeType":"VariableDeclaration","scope":3225,"src":"3135:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"s","nameLocation":"3162:1:16","nodeType":"VariableDeclaration","scope":3225,"src":"3154:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:16"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[],"src":"3178:0:16"},"scope":3240,"src":"2996:183:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"3185:294:16","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3233,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:16","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"owner","nameLocation":"3508:5:16","nodeType":"VariableDeclaration","scope":3233,"src":"3500:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:16"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3233,"src":"3538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:16"},"scope":3240,"src":"3484:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"3553:128:16","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3239,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:16","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[],"src":"3764:2:16"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3239,"src":"3790:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:16"},"scope":3240,"src":"3739:60:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3241,"src":"2112:1689:16","usedErrors":[]}],"src":"123:3679:16"},"id":16},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[3964],"IERC20":[3204],"IERC20Permit":[3240],"SafeERC20":[3616]},"id":3617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3242,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3617,"sourceUnit":3205,"src":"140:23:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":3244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3617,"sourceUnit":3241,"src":"164:40:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":3245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3617,"sourceUnit":3965,"src":"205:36:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"243:457:17","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":3616,"linearizedBaseContracts":[3616],"name":"SafeERC20","nameLocation":"709:9:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3249,"libraryName":{"id":3247,"name":"Address","nameLocations":["731:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3964,"src":"731:7:17"},"nodeType":"UsingForDirective","src":"725:26:17","typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":3272,"nodeType":"Block","src":"1013:103:17","statements":[{"expression":{"arguments":[{"id":3261,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"1043:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3264,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"1073:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3171,"src":"1073:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:17","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3267,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"1098:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"1102:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3262,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3260,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1023:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"1023:86:17"}]},"documentation":{"id":3250,"nodeType":"StructuredDocumentation","src":"757:179:17","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:17","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"token","nameLocation":"970:5:17","nodeType":"VariableDeclaration","scope":3273,"src":"963:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3252,"nodeType":"UserDefinedTypeName","pathNode":{"id":3251,"name":"IERC20","nameLocations":["963:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"963:6:17"},"referencedDeclaration":3204,"src":"963:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"to","nameLocation":"985:2:17","nodeType":"VariableDeclaration","scope":3273,"src":"977:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"value","nameLocation":"997:5:17","nodeType":"VariableDeclaration","scope":3273,"src":"989:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:17"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[],"src":"1013:0:17"},"scope":3616,"src":"941:175:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"1445:113:17","statements":[{"expression":{"arguments":[{"id":3287,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"1475:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3290,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"1505:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"1505:18:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:17","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"1534:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1540:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1544:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3288,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3286,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1455:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"1455:96:17"}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"1122:228:17","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:17","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"token","nameLocation":"1388:5:17","nodeType":"VariableDeclaration","scope":3300,"src":"1381:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3276,"nodeType":"UserDefinedTypeName","pathNode":{"id":3275,"name":"IERC20","nameLocations":["1381:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"1381:6:17"},"referencedDeclaration":3204,"src":"1381:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"from","nameLocation":"1403:4:17","nodeType":"VariableDeclaration","scope":3300,"src":"1395:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"to","nameLocation":"1417:2:17","nodeType":"VariableDeclaration","scope":3300,"src":"1409:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"value","nameLocation":"1429:5:17","nodeType":"VariableDeclaration","scope":3300,"src":"1421:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:17"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[],"src":"1445:0:17"},"scope":3616,"src":"1355:203:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3343,"nodeType":"Block","src":"1894:497:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2143:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3320,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}],"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:17","typeDescriptions":{}}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3322,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2190:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2159:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"2159:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":3311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"ExpressionStatement","src":"2121:163:17"},{"expression":{"arguments":[{"id":3332,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2314:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3335,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2344:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3191,"src":"2344:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:17","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3338,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2368:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2377:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3333,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3331,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2294:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"ExpressionStatement","src":"2294:90:17"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"1564:249:17","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:17","nodeType":"FunctionDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"token","nameLocation":"1846:5:17","nodeType":"VariableDeclaration","scope":3344,"src":"1839:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3303,"nodeType":"UserDefinedTypeName","pathNode":{"id":3302,"name":"IERC20","nameLocations":["1839:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"1839:6:17"},"referencedDeclaration":3204,"src":"1839:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"spender","nameLocation":"1861:7:17","nodeType":"VariableDeclaration","scope":3344,"src":"1853:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"value","nameLocation":"1878:5:17","nodeType":"VariableDeclaration","scope":3344,"src":"1870:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:17"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[],"src":"1894:0:17"},"scope":3616,"src":"1818:573:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3380,"nodeType":"Block","src":"2668:194:17","statements":[{"assignments":[3356],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:17","nodeType":"VariableDeclaration","scope":3380,"src":"2678:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3365,"initialValue":{"arguments":[{"arguments":[{"id":3361,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}],"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:17","typeDescriptions":{}}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2732:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2701:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"2701:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:17"},{"expression":{"arguments":[{"id":3367,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2770:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3370,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2800:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3191,"src":"2800:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:17","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2824:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"2833:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"2848:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3368,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3366,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"2750:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3379,"nodeType":"ExpressionStatement","src":"2750:105:17"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"2397:180:17","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3381,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:17","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"token","nameLocation":"2620:5:17","nodeType":"VariableDeclaration","scope":3381,"src":"2613:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3347,"nodeType":"UserDefinedTypeName","pathNode":{"id":3346,"name":"IERC20","nameLocations":["2613:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"2613:6:17"},"referencedDeclaration":3204,"src":"2613:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"spender","nameLocation":"2635:7:17","nodeType":"VariableDeclaration","scope":3381,"src":"2627:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"value","nameLocation":"2652:5:17","nodeType":"VariableDeclaration","scope":3381,"src":"2644:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:17"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[],"src":"2668:0:17"},"scope":3616,"src":"2582:280:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"3139:321:17","statements":[{"id":3424,"nodeType":"UncheckedBlock","src":"3149:305:17","statements":[{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:17","nodeType":"VariableDeclaration","scope":3424,"src":"3173:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3402,"initialValue":{"arguments":[{"arguments":[{"id":3398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3616","typeString":"library SafeERC20"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3396,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:17","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3227:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3394,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"3196:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"3196:15:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3257:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"3273:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":3403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3409,"nodeType":"ExpressionStatement","src":"3249:75:17"},{"expression":{"arguments":[{"id":3411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"3358:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3414,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"3388:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3191,"src":"3388:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:17","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3417,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3412:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3421:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"3436:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3412,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3410,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"3338:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3423,"nodeType":"ExpressionStatement","src":"3338:105:17"}]}]},"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"2868:180:17","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:17","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"token","nameLocation":"3091:5:17","nodeType":"VariableDeclaration","scope":3426,"src":"3084:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3384,"nodeType":"UserDefinedTypeName","pathNode":{"id":3383,"name":"IERC20","nameLocations":["3084:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"3084:6:17"},"referencedDeclaration":3204,"src":"3084:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"spender","nameLocation":"3106:7:17","nodeType":"VariableDeclaration","scope":3426,"src":"3098:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"value","nameLocation":"3123:5:17","nodeType":"VariableDeclaration","scope":3426,"src":"3115:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:17"},"returnParameters":{"id":3391,"nodeType":"ParameterList","parameters":[],"src":"3139:0:17"},"scope":3616,"src":"3053:407:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"3856:333:17","statements":[{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:17","nodeType":"VariableDeclaration","scope":3472,"src":"3866:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3437,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3447,"initialValue":{"arguments":[{"expression":{"expression":{"id":3441,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"3917:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3191,"src":"3917:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:17","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3444,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3941:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3950:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3439,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:17"},{"condition":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:17","subExpression":{"arguments":[{"id":3449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"3996:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"id":3450,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4003:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3448,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"3972:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"3967:216:17","trueBody":{"id":3470,"nodeType":"Block","src":"4018:165:17","statements":[{"expression":{"arguments":[{"id":3454,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4052:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3457,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4082:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:17","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3191,"src":"4082:13:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:17","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3460,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"4106:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3455,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3453,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"4032:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"ExpressionStatement","src":"4032:86:17"},{"expression":{"arguments":[{"id":3466,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4152:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"id":3467,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4159:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3465,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"4132:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3469,"nodeType":"ExpressionStatement","src":"4132:40:17"}]}}]},"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"3466:308:17","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:17","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"token","nameLocation":"3808:5:17","nodeType":"VariableDeclaration","scope":3473,"src":"3801:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"IERC20","nameLocations":["3801:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"3801:6:17"},"referencedDeclaration":3204,"src":"3801:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"spender","nameLocation":"3823:7:17","nodeType":"VariableDeclaration","scope":3473,"src":"3815:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"value","nameLocation":"3840:5:17","nodeType":"VariableDeclaration","scope":3473,"src":"3832:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:17"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"3856:0:17"},"scope":3616,"src":"3779:410:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"4556:257:17","statements":[{"assignments":[3495],"declarations":[{"constant":false,"id":3495,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:17","nodeType":"VariableDeclaration","scope":3529,"src":"4566:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"arguments":[{"id":3498,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4601:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"4588:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3240","typeString":"contract IERC20Permit"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:17","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3233,"src":"4588:12:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:17"},{"expression":{"arguments":[{"id":3504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4630:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3505,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4637:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"4646:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3507,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"4653:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3508,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"4663:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"4666:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3510,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4669:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"4617:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3240","typeString":"contract IERC20Permit"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:17","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":3225,"src":"4617:12:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3512,"nodeType":"ExpressionStatement","src":"4617:54:17"},{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:17","nodeType":"VariableDeclaration","scope":3529,"src":"4681:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3519,"initialValue":{"arguments":[{"id":3517,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4715:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3515,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"4702:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3240","typeString":"contract IERC20Permit"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:17","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3233,"src":"4702:12:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4739:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"4753:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":3520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"4731:75:17"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"4195:141:17","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:17","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"token","nameLocation":"4383:5:17","nodeType":"VariableDeclaration","scope":3530,"src":"4370:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3240","typeString":"contract IERC20Permit"},"typeName":{"id":3476,"nodeType":"UserDefinedTypeName","pathNode":{"id":3475,"name":"IERC20Permit","nameLocations":["4370:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"4370:12:17"},"referencedDeclaration":3240,"src":"4370:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3240","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"owner","nameLocation":"4406:5:17","nodeType":"VariableDeclaration","scope":3530,"src":"4398:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"spender","nameLocation":"4429:7:17","nodeType":"VariableDeclaration","scope":3530,"src":"4421:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"value","nameLocation":"4454:5:17","nodeType":"VariableDeclaration","scope":3530,"src":"4446:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:17","nodeType":"VariableDeclaration","scope":3530,"src":"4469:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"v","nameLocation":"4501:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"4495:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3486,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"r","nameLocation":"4520:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"4512:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"s","nameLocation":"4539:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"4531:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:17"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"4556:0:17"},"scope":3616,"src":"4341:472:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3566,"nodeType":"Block","src":"5266:572:17","statements":[{"assignments":[3540],"declarations":[{"constant":false,"id":3540,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:17","nodeType":"VariableDeclaration","scope":3566,"src":"5615:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3539,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3549,"initialValue":{"arguments":[{"id":3546,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"5669:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":3543,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"5649:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3541,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:17","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:17","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"5641:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3551,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"5728:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:17","memberName":"length","nodeType":"MemberAccess","src":"5728:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3557,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"5765:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3558,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:17","typeDescriptions":{}}}],"id":3560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3555,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:17","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":3550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3565,"nodeType":"ExpressionStatement","src":"5720:111:17"}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"4819:372:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:17","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"token","nameLocation":"5232:5:17","nodeType":"VariableDeclaration","scope":3567,"src":"5225:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3533,"nodeType":"UserDefinedTypeName","pathNode":{"id":3532,"name":"IERC20","nameLocations":["5225:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"5225:6:17"},"referencedDeclaration":3204,"src":"5225:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"data","nameLocation":"5252:4:17","nodeType":"VariableDeclaration","scope":3567,"src":"5239:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3535,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:17"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[],"src":"5266:0:17"},"scope":3616,"src":"5196:642:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3614,"nodeType":"Block","src":"6428:505:17","statements":[{"assignments":[3579,3581],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"success","nameLocation":"6729:7:17","nodeType":"VariableDeclaration","scope":3614,"src":"6724:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3578,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:17","nodeType":"VariableDeclaration","scope":3614,"src":"6738:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3589,"initialValue":{"arguments":[{"id":3587,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"6785:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3584,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"6773:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}],"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:17","typeDescriptions":{}}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:17","memberName":"call","nodeType":"MemberAccess","src":"6765:19:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:17"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"6819:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3591,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"6831:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:17","memberName":"length","nodeType":"MemberAccess","src":"6831:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3597,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"6868:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3598,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:17","typeDescriptions":{}}}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3595,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:17","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":3609,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"6919:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3607,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:17","typeDescriptions":{}}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3605,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"6892:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3964_$","typeString":"type(library Address)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:17","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"6892:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3577,"id":3613,"nodeType":"Return","src":"6800:126:17"}]},"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"5844:490:17","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:17","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"token","nameLocation":"6379:5:17","nodeType":"VariableDeclaration","scope":3615,"src":"6372:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":3570,"nodeType":"UserDefinedTypeName","pathNode":{"id":3569,"name":"IERC20","nameLocations":["6372:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"6372:6:17"},"referencedDeclaration":3204,"src":"6372:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"data","nameLocation":"6399:4:17","nodeType":"VariableDeclaration","scope":3615,"src":"6386:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3572,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:17"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"6422:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3575,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:17"},"scope":3616,"src":"6339:594:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3617,"src":"701:6234:17","usedErrors":[]}],"src":"115:6821:17"},"id":17},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3634]},"id":3635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3618,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"141:152:18","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3634,"linearizedBaseContracts":[3634],"name":"IERC721Receiver","nameLocation":"304:15:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"326:493:18","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3633,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:18","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"operator","nameLocation":"867:8:18","nodeType":"VariableDeclaration","scope":3633,"src":"859:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"from","nameLocation":"893:4:18","nodeType":"VariableDeclaration","scope":3633,"src":"885:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:18","nodeType":"VariableDeclaration","scope":3633,"src":"907:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"data","nameLocation":"947:4:18","nodeType":"VariableDeclaration","scope":3633,"src":"932:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:18"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"976:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3630,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:18"},"scope":3634,"src":"824:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3635,"src":"294:692:18","usedErrors":[]}],"src":"116:871:18"},"id":18},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3964]},"id":3965,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3636,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"126:67:19","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3964,"linearizedBaseContracts":[3964],"name":"Address","nameLocation":"202:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3651,"nodeType":"Block","src":"1478:254:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3645,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"1702:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:19","memberName":"code","nodeType":"MemberAccess","src":"1702:12:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:19","memberName":"length","nodeType":"MemberAccess","src":"1702:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3644,"id":3650,"nodeType":"Return","src":"1695:30:19"}]},"documentation":{"id":3638,"nodeType":"StructuredDocumentation","src":"216:1191:19","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:19","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"account","nameLocation":"1440:7:19","nodeType":"VariableDeclaration","scope":3652,"src":"1432:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:19"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3652,"src":"1472:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3642,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:19"},"scope":3964,"src":"1412:320:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"2718:241:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3964","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3964","typeString":"library Address"}],"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:19","typeDescriptions":{}}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:19","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"2761:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3670,"nodeType":"ExpressionStatement","src":"2728:73:19"},{"assignments":[3672,null],"declarations":[{"constant":false,"id":3672,"mutability":"mutable","name":"success","nameLocation":"2818:7:19","nodeType":"VariableDeclaration","scope":3685,"src":"2813:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3671,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3679,"initialValue":{"arguments":[{"hexValue":"","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3673,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"2831:9:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:19","memberName":"call","nodeType":"MemberAccess","src":"2831:14:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"2853:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:19"},{"expression":{"arguments":[{"id":3681,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2882:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"ExpressionStatement","src":"2874:78:19"}]},"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"1738:904:19","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:19","nodeType":"VariableDeclaration","scope":3686,"src":"2666:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"amount","nameLocation":"2701:6:19","nodeType":"VariableDeclaration","scope":3686,"src":"2693:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:19"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[],"src":"2718:0:19"},"scope":3964,"src":"2647:312:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3703,"nodeType":"Block","src":"3790:96:19","statements":[{"expression":{"arguments":[{"id":3697,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"3829:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3698,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"3837:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3696,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3744,3788],"referencedDeclaration":3788,"src":"3807:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3695,"id":3702,"nodeType":"Return","src":"3800:79:19"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"2965:731:19","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3704,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:19","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"target","nameLocation":"3731:6:19","nodeType":"VariableDeclaration","scope":3704,"src":"3723:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3688,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"data","nameLocation":"3752:4:19","nodeType":"VariableDeclaration","scope":3704,"src":"3739:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3690,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:19"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"3776:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3693,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:19"},"scope":3964,"src":"3701:185:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"4255:76:19","statements":[{"expression":{"arguments":[{"id":3717,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"4294:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3718,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4302:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3720,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"4311:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3716,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3744,3788],"referencedDeclaration":3788,"src":"4272:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3715,"id":3722,"nodeType":"Return","src":"4265:59:19"}]},"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"3892:211:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:19","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"target","nameLocation":"4147:6:19","nodeType":"VariableDeclaration","scope":3724,"src":"4139:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3706,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"data","nameLocation":"4176:4:19","nodeType":"VariableDeclaration","scope":3724,"src":"4163:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:19","nodeType":"VariableDeclaration","scope":3724,"src":"4190:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3710,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:19"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"4241:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3713,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:19"},"scope":3964,"src":"4108:223:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3743,"nodeType":"Block","src":"4806:111:19","statements":[{"expression":{"arguments":[{"id":3737,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"4845:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"4853:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4859:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3736,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3744,3788],"referencedDeclaration":3788,"src":"4823:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3735,"id":3742,"nodeType":"Return","src":"4816:94:19"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"4337:351:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3744,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:19","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"target","nameLocation":"4732:6:19","nodeType":"VariableDeclaration","scope":3744,"src":"4724:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"data","nameLocation":"4753:4:19","nodeType":"VariableDeclaration","scope":3744,"src":"4740:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"value","nameLocation":"4767:5:19","nodeType":"VariableDeclaration","scope":3744,"src":"4759:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:19"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3744,"src":"4792:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3733,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:19"},"scope":3964,"src":"4693:224:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3787,"nodeType":"Block","src":"5344:267:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3964","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3964","typeString":"library Address"}],"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3759,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:19","typeDescriptions":{}}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:19","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5387:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3768,"nodeType":"ExpressionStatement","src":"5354:81:19"},{"assignments":[3770,3772],"declarations":[{"constant":false,"id":3770,"mutability":"mutable","name":"success","nameLocation":"5451:7:19","nodeType":"VariableDeclaration","scope":3787,"src":"5446:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3769,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:19","nodeType":"VariableDeclaration","scope":3787,"src":"5460:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3771,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3779,"initialValue":{"arguments":[{"id":3777,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"5513:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3773,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"5487:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:19","memberName":"call","nodeType":"MemberAccess","src":"5487:11:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"5506:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:19"},{"expression":{"arguments":[{"id":3781,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"5562:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"5570:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3783,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"5579:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3784,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"5591:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3780,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"5535:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3757,"id":3786,"nodeType":"Return","src":"5528:76:19"}]},"documentation":{"id":3745,"nodeType":"StructuredDocumentation","src":"4923:237:19","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:19","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"target","nameLocation":"5213:6:19","nodeType":"VariableDeclaration","scope":3788,"src":"5205:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3746,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3749,"mutability":"mutable","name":"data","nameLocation":"5242:4:19","nodeType":"VariableDeclaration","scope":3788,"src":"5229:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3748,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"value","nameLocation":"5264:5:19","nodeType":"VariableDeclaration","scope":3788,"src":"5256:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:19","nodeType":"VariableDeclaration","scope":3788,"src":"5279:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3752,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:19"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3788,"src":"5330:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3755,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:19"},"scope":3964,"src":"5165:446:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"5888:97:19","statements":[{"expression":{"arguments":[{"id":3799,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"5924:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3800,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"5932:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3798,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3805,3834],"referencedDeclaration":3834,"src":"5905:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3797,"id":3803,"nodeType":"Return","src":"5898:80:19"}]},"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"5617:166:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:19","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"target","nameLocation":"5824:6:19","nodeType":"VariableDeclaration","scope":3805,"src":"5816:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3790,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"data","nameLocation":"5845:4:19","nodeType":"VariableDeclaration","scope":3805,"src":"5832:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3792,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:19"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"5874:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3795,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:19"},"scope":3964,"src":"5788:197:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"6327:168:19","statements":[{"assignments":[3818,3820],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"success","nameLocation":"6343:7:19","nodeType":"VariableDeclaration","scope":3833,"src":"6338:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:19","nodeType":"VariableDeclaration","scope":3833,"src":"6352:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3819,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3825,"initialValue":{"arguments":[{"id":3823,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6397:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3821,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"6379:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:19","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:19","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:19"},{"expression":{"arguments":[{"id":3827,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"6446:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3828,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"6454:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3829,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"6463:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3830,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"6475:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3826,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"6419:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3816,"id":3832,"nodeType":"Return","src":"6412:76:19"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"5991:173:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:19","nodeType":"FunctionDefinition","parameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"target","nameLocation":"6214:6:19","nodeType":"VariableDeclaration","scope":3834,"src":"6206:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"data","nameLocation":"6243:4:19","nodeType":"VariableDeclaration","scope":3834,"src":"6230:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:19","nodeType":"VariableDeclaration","scope":3834,"src":"6257:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3811,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:19"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"6313:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3814,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:19"},"scope":3964,"src":"6169:326:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"6771:101:19","statements":[{"expression":{"arguments":[{"id":3845,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"6809:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3846,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"6817:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3844,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3851,3880],"referencedDeclaration":3880,"src":"6788:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3843,"id":3849,"nodeType":"Return","src":"6781:84:19"}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"6501:168:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:19","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"target","nameLocation":"6712:6:19","nodeType":"VariableDeclaration","scope":3851,"src":"6704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"data","nameLocation":"6733:4:19","nodeType":"VariableDeclaration","scope":3851,"src":"6720:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3838,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:19"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"6757:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3841,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:19"},"scope":3964,"src":"6674:198:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"7213:170:19","statements":[{"assignments":[3864,3866],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"success","nameLocation":"7229:7:19","nodeType":"VariableDeclaration","scope":3879,"src":"7224:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3863,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:19","nodeType":"VariableDeclaration","scope":3879,"src":"7238:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3865,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3871,"initialValue":{"arguments":[{"id":3869,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"7285:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3867,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7265:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:19","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:19","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:19"},{"expression":{"arguments":[{"id":3873,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7334:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3874,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"7342:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3875,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7351:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3876,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"7363:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3872,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"7307:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3862,"id":3878,"nodeType":"Return","src":"7300:76:19"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"6878:175:19","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:19","nodeType":"FunctionDefinition","parameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"target","nameLocation":"7105:6:19","nodeType":"VariableDeclaration","scope":3880,"src":"7097:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"data","nameLocation":"7134:4:19","nodeType":"VariableDeclaration","scope":3880,"src":"7121:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:19","nodeType":"VariableDeclaration","scope":3880,"src":"7148:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3857,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:19"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"7199:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3860,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:19"},"scope":3964,"src":"7058:325:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3918,"nodeType":"Block","src":"7865:434:19","statements":[{"condition":{"id":3894,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7879:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3916,"nodeType":"Block","src":"8235:58:19","statements":[{"expression":{"arguments":[{"id":3912,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"8257:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3913,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"8269:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3911,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"8249:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3915,"nodeType":"ExpressionStatement","src":"8249:33:19"}]},"id":3917,"nodeType":"IfStatement","src":"7875:418:19","trueBody":{"id":3910,"nodeType":"Block","src":"7888:341:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3895,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"7906:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:19","memberName":"length","nodeType":"MemberAccess","src":"7906:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3907,"nodeType":"IfStatement","src":"7902:286:19","trueBody":{"id":3906,"nodeType":"Block","src":"7930:258:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3901,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"8132:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3900,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"8121:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3905,"nodeType":"ExpressionStatement","src":"8113:60:19"}]}},{"expression":{"id":3908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"8208:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3893,"id":3909,"nodeType":"Return","src":"8201:17:19"}]}}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"7389:277:19","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:19","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"target","nameLocation":"7724:6:19","nodeType":"VariableDeclaration","scope":3919,"src":"7716:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3882,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"success","nameLocation":"7745:7:19","nodeType":"VariableDeclaration","scope":3919,"src":"7740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3884,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3887,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:19","nodeType":"VariableDeclaration","scope":3919,"src":"7762:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3886,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:19","nodeType":"VariableDeclaration","scope":3919,"src":"7795:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3888,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:19"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"7851:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3891,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:19"},"scope":3964,"src":"7671:628:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"8680:135:19","statements":[{"condition":{"id":3931,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"8694:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3940,"nodeType":"Block","src":"8751:58:19","statements":[{"expression":{"arguments":[{"id":3936,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8773:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3937,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"8785:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3935,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"8765:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3939,"nodeType":"ExpressionStatement","src":"8765:33:19"}]},"id":3941,"nodeType":"IfStatement","src":"8690:119:19","trueBody":{"id":3934,"nodeType":"Block","src":"8703:42:19","statements":[{"expression":{"id":3932,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8724:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3930,"id":3933,"nodeType":"Return","src":"8717:17:19"}]}}]},"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"8305:210:19","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:19","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"success","nameLocation":"8560:7:19","nodeType":"VariableDeclaration","scope":3943,"src":"8555:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3921,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:19","nodeType":"VariableDeclaration","scope":3943,"src":"8577:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3923,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:19","nodeType":"VariableDeclaration","scope":3943,"src":"8610:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3925,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:19"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"8666:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3928,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:19"},"scope":3964,"src":"8520:295:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"8904:457:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3950,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"8980:10:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:19","memberName":"length","nodeType":"MemberAccess","src":"8980:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3960,"nodeType":"Block","src":"9310:45:19","statements":[{"expression":{"arguments":[{"id":3957,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"9331:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3956,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3959,"nodeType":"ExpressionStatement","src":"9324:20:19"}]},"id":3961,"nodeType":"IfStatement","src":"8976:379:19","trueBody":{"id":3955,"nodeType":"Block","src":"9003:301:19","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:19","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:19"},"nodeType":"YulFunctionCall","src":"9202:17:19"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:19","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:19"},"nodeType":"YulFunctionCall","src":"9243:19:19"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:19"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:19"},"nodeType":"YulFunctionCall","src":"9236:44:19"},"nodeType":"YulExpressionStatement","src":"9236:44:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3945,"isOffset":false,"isSlot":false,"src":"9208:10:19","valueSize":1},{"declaration":3945,"isOffset":false,"isSlot":false,"src":"9251:10:19","valueSize":1}],"id":3954,"nodeType":"InlineAssembly","src":"9152:142:19"}]}}]},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:19","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:19","nodeType":"VariableDeclaration","scope":3963,"src":"8838:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3944,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:19","nodeType":"VariableDeclaration","scope":3963,"src":"8863:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3946,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:19"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[],"src":"8904:0:19"},"scope":3964,"src":"8821:540:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3965,"src":"194:9169:19","usedErrors":[]}],"src":"101:9263:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5071],"SignedMath":[5176],"Strings":[4193]},"id":4194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3966,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4194,"sourceUnit":5072,"src":"126:25:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4194,"sourceUnit":5177,"src":"152:31:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"185:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":4193,"linearizedBaseContracts":[4193],"name":"Strings","nameLocation":"228:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3972,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:20","nodeType":"VariableDeclaration","scope":4193,"src":"242:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3970,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3975,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:20","nodeType":"VariableDeclaration","scope":4193,"src":"302:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3973,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":4022,"nodeType":"Block","src":"518:625:20","statements":[{"id":4021,"nodeType":"UncheckedBlock","src":"528:609:20","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"length","nameLocation":"560:6:20","nodeType":"VariableDeclaration","scope":4021,"src":"552:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3991,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"580:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3985,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"569:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5071_$","typeString":"type(library Math)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:20","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4908,"src":"569:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:20"},{"assignments":[3993],"declarations":[{"constant":false,"id":3993,"mutability":"mutable","name":"buffer","nameLocation":"618:6:20","nodeType":"VariableDeclaration","scope":4021,"src":"604:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3992,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3998,"initialValue":{"arguments":[{"id":3996,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"638:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3994,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:20"},{"assignments":[4000],"declarations":[{"constant":false,"id":4000,"mutability":"mutable","name":"ptr","nameLocation":"667:3:20","nodeType":"VariableDeclaration","scope":4021,"src":"659:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"nodeType":"VariableDeclarationStatement","src":"659:11:20"},{"AST":{"nodeType":"YulBlock","src":"740:67:20","statements":[{"nodeType":"YulAssignment","src":"758:35:20","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:20","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:20"},"nodeType":"YulFunctionCall","src":"777:15:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:20"},"nodeType":"YulFunctionCall","src":"765:28:20"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3993,"isOffset":false,"isSlot":false,"src":"769:6:20","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"785:6:20","valueSize":1},{"declaration":4000,"isOffset":false,"isSlot":false,"src":"758:3:20","valueSize":1}],"id":4002,"nodeType":"InlineAssembly","src":"731:76:20"},{"body":{"id":4017,"nodeType":"Block","src":"833:267:20","statements":[{"expression":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:20","subExpression":{"id":4004,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"851:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4006,"nodeType":"ExpressionStatement","src":"851:5:20"},{"AST":{"nodeType":"YulBlock","src":"934:84:20","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:20"},"nodeType":"YulFunctionCall","src":"974:14:20"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:20"},"nodeType":"YulFunctionCall","src":"969:30:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:20"},"nodeType":"YulFunctionCall","src":"956:44:20"},"nodeType":"YulExpressionStatement","src":"956:44:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3972,"isOffset":false,"isSlot":false,"src":"990:8:20","valueSize":1},{"declaration":4000,"isOffset":false,"isSlot":false,"src":"964:3:20","valueSize":1},{"declaration":3978,"isOffset":false,"isSlot":false,"src":"978:5:20","valueSize":1}],"id":4007,"nodeType":"InlineAssembly","src":"925:93:20"},{"expression":{"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"1035:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4011,"nodeType":"ExpressionStatement","src":"1035:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"1068:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"nodeType":"IfStatement","src":"1064:21:20","trueBody":{"id":4015,"nodeType":"Break","src":"1080:5:20"}}]},"condition":{"hexValue":"74727565","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4018,"nodeType":"WhileStatement","src":"820:280:20"},{"expression":{"id":4019,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"1120:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3982,"id":4020,"nodeType":"Return","src":"1113:13:20"}]}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"352:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:20","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"value","nameLocation":"473:5:20","nodeType":"VariableDeclaration","scope":4023,"src":"465:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:20"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"503:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3980,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:20"},"scope":4193,"src":"447:696:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4050,"nodeType":"Block","src":"1313:103:20","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1354:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:20","trueExpression":{"hexValue":"2d","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1400:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4042,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"1385:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5176_$","typeString":"type(library SignedMath)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:20","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5175,"src":"1385:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4041,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[4023,4051],"referencedDeclaration":4023,"src":"1376:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4033,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4031,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:20","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4030,"id":4049,"nodeType":"Return","src":"1323:86:20"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"1149:89:20","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:20","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"value","nameLocation":"1268:5:20","nodeType":"VariableDeclaration","scope":4051,"src":"1261:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4025,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:20"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"1298:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4028,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:20"},"scope":4193,"src":"1243:173:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4070,"nodeType":"Block","src":"1595:100:20","statements":[{"id":4069,"nodeType":"UncheckedBlock","src":"1605:84:20","statements":[{"expression":{"arguments":[{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"1648:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"1667:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4061,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"1655:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5071_$","typeString":"type(library Math)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:20","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5031,"src":"1655:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4071,4147,4167],"referencedDeclaration":4147,"src":"1636:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4058,"id":4068,"nodeType":"Return","src":"1629:49:20"}]}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"1422:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4071,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:20","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"value","nameLocation":"1550:5:20","nodeType":"VariableDeclaration","scope":4071,"src":"1542:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:20"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4071,"src":"1580:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4056,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:20"},"scope":4193,"src":"1521:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4146,"nodeType":"Block","src":"1908:347:20","statements":[{"assignments":[4082],"declarations":[{"constant":false,"id":4082,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:20","nodeType":"VariableDeclaration","scope":4146,"src":"1918:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4081,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4091,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4086,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"1954:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4083,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:20"},{"expression":{"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4092,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"1975:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4094,"indexExpression":{"hexValue":"30","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4097,"nodeType":"ExpressionStatement","src":"1975:15:20"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4098,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2000:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4100,"indexExpression":{"hexValue":"31","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4103,"nodeType":"ExpressionStatement","src":"2000:15:20"},{"body":{"id":4132,"nodeType":"Block","src":"2070:83:20","statements":[{"expression":{"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4118,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2084:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4120,"indexExpression":{"id":4119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2091:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4121,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"2096:8:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4125,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"2105:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4127,"nodeType":"ExpressionStatement","src":"2084:33:20"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"2131:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ExpressionStatement","src":"2131:11:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2058:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4133,"initializationExpression":{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"i","nameLocation":"2038:1:20","nodeType":"VariableDeclaration","scope":4133,"src":"2030:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4111,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4107,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"2046:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:20"},"loopExpression":{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:20","subExpression":{"id":4115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2067:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4117,"nodeType":"ExpressionStatement","src":"2065:3:20"},"nodeType":"ForStatement","src":"2025:128:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"2170:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4140,"nodeType":"ExpressionStatement","src":"2162:55:20"},{"expression":{"arguments":[{"id":4143,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2241:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4141,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:20","typeDescriptions":{}}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4080,"id":4145,"nodeType":"Return","src":"2227:21:20"}]},"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"1701:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4147,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:20","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"value","nameLocation":"1847:5:20","nodeType":"VariableDeclaration","scope":4147,"src":"1839:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"length","nameLocation":"1862:6:20","nodeType":"VariableDeclaration","scope":4147,"src":"1854:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:20"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4147,"src":"1893:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4078,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:20"},"scope":4193,"src":"1818:437:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"2480:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4160,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"2525:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4158,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{}}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:20","typeDescriptions":{}}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4163,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"2533:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4155,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4071,4147,4167],"referencedDeclaration":4147,"src":"2497:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4154,"id":4165,"nodeType":"Return","src":"2490:59:20"}]},"documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"2261:141:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:20","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"addr","nameLocation":"2436:4:20","nodeType":"VariableDeclaration","scope":4167,"src":"2428:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:20"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"2465:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4152,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:20"},"scope":4193,"src":"2407:149:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"2711:66:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"2744:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4178,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:20","typeDescriptions":{}}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4177,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"2767:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4184,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:20","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4183,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4176,"id":4190,"nodeType":"Return","src":"2721:49:20"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"2562:66:20","text":" @dev Returns true if the two strings are equal."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:20","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"a","nameLocation":"2662:1:20","nodeType":"VariableDeclaration","scope":4192,"src":"2648:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4169,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"b","nameLocation":"2679:1:20","nodeType":"VariableDeclaration","scope":4192,"src":"2665:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4171,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:20"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4192,"src":"2705:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4174,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:20"},"scope":4193,"src":"2633:144:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4194,"src":"220:2559:20","usedErrors":[]}],"src":"101:2679:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4205]},"id":4206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4195,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4205,"linearizedBaseContracts":[4205],"name":"IERC165","nameLocation":"415:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"429:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4204,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:21","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:21","nodeType":"VariableDeclaration","scope":4204,"src":"801:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4198,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:21"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4204,"src":"844:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4201,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:21"},"scope":4205,"src":"774:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4206,"src":"405:447:21","usedErrors":[]}],"src":"100:753:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5071]},"id":5072,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4207,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"128:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5071,"linearizedBaseContracts":[5071],"name":"Math","nameLocation":"210:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4212,"members":[{"id":4209,"name":"Down","nameLocation":"245:4:22","nodeType":"EnumValue","src":"245:4:22"},{"id":4210,"name":"Up","nameLocation":"287:2:22","nodeType":"EnumValue","src":"287:2:22"},{"id":4211,"name":"Zero","nameLocation":"318:4:22","nodeType":"EnumValue","src":"318:4:22"}],"name":"Rounding","nameLocation":"226:8:22","nodeType":"EnumDefinition","src":"221:122:22"},{"body":{"id":4229,"nodeType":"Block","src":"480:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"497:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"501:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"509:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:22","trueExpression":{"id":4225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"505:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4221,"id":4228,"nodeType":"Return","src":"490:20:22"}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"349:59:22","text":" @dev Returns the largest of two numbers."},"id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:22","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"a","nameLocation":"434:1:22","nodeType":"VariableDeclaration","scope":4230,"src":"426:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"b","nameLocation":"445:1:22","nodeType":"VariableDeclaration","scope":4230,"src":"437:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:22"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4230,"src":"471:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:22"},"scope":5071,"src":"413:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"655:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"672:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4241,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"676:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"684:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:22","trueExpression":{"id":4243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"680:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4239,"id":4246,"nodeType":"Return","src":"665:20:22"}]},"documentation":{"id":4231,"nodeType":"StructuredDocumentation","src":"523:60:22","text":" @dev Returns the smallest of two numbers."},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:22","nodeType":"FunctionDefinition","parameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"a","nameLocation":"609:1:22","nodeType":"VariableDeclaration","scope":4248,"src":"601:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"b","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":4248,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:22"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"646:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:22"},"scope":5071,"src":"588:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4270,"nodeType":"Block","src":"876:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"931:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"935:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"941:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"945:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4257,"id":4269,"nodeType":"Return","src":"923:28:22"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"698:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:22","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"a","nameLocation":"830:1:22","nodeType":"VariableDeclaration","scope":4271,"src":"822:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"b","nameLocation":"841:1:22","nodeType":"VariableDeclaration","scope":4271,"src":"833:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:22"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"867:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:22"},"scope":5071,"src":"805:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"1228:123:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"1316:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"1330:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"1339:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:22","trueExpression":{"hexValue":"30","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4280,"id":4294,"nodeType":"Return","src":"1309:35:22"}]},"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"964:188:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:22","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"a","nameLocation":"1182:1:22","nodeType":"VariableDeclaration","scope":4296,"src":"1174:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"b","nameLocation":"1193:1:22","nodeType":"VariableDeclaration","scope":4296,"src":"1185:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:22"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4296,"src":"1219:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:22"},"scope":5071,"src":"1157:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"1765:4115:22","statements":[{"id":4417,"nodeType":"UncheckedBlock","src":"1775:4099:22","statements":[{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:22","nodeType":"VariableDeclaration","scope":4417,"src":"2096:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4310,"nodeType":"VariableDeclarationStatement","src":"2096:13:22"},{"assignments":[4312],"declarations":[{"constant":false,"id":4312,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:22","nodeType":"VariableDeclaration","scope":4417,"src":"2168:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4313,"nodeType":"VariableDeclarationStatement","src":"2168:13:22"},{"AST":{"nodeType":"YulBlock","src":"2248:157:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:22"},"nodeType":"YulFunctionCall","src":"2289:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:22"},"nodeType":"YulFunctionCall","src":"2276:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:22","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:22"},"nodeType":"YulFunctionCall","src":"2322:9:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:22"}]},{"nodeType":"YulAssignment","src":"2348:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:22"},"nodeType":"YulFunctionCall","src":"2361:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:22"},"nodeType":"YulFunctionCall","src":"2377:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:22"},"nodeType":"YulFunctionCall","src":"2357:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4309,"isOffset":false,"isSlot":false,"src":"2313:5:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"2369:5:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"2384:5:22","valueSize":1},{"declaration":4312,"isOffset":false,"isSlot":false,"src":"2348:5:22","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"2283:1:22","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"2326:1:22","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"2286:1:22","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"2329:1:22","valueSize":1}],"id":4314,"nodeType":"InlineAssembly","src":"2239:166:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4315,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"2486:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4323,"nodeType":"IfStatement","src":"2482:368:22","trueBody":{"id":4322,"nodeType":"Block","src":"2498:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"2816:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4319,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"2824:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4307,"id":4321,"nodeType":"Return","src":"2809:26:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"2960:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4326,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"2974:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4330,"nodeType":"ExpressionStatement","src":"2952:53:22"},{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:22","nodeType":"VariableDeclaration","scope":4417,"src":"3261:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4333,"nodeType":"VariableDeclarationStatement","src":"3261:17:22"},{"AST":{"nodeType":"YulBlock","src":"3301:291:22","statements":[{"nodeType":"YulAssignment","src":"3370:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:22"},"nodeType":"YulFunctionCall","src":"3383:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:22"}]},{"nodeType":"YulAssignment","src":"3490:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:22"},"nodeType":"YulFunctionCall","src":"3510:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:22"},"nodeType":"YulFunctionCall","src":"3499:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:22"}]},{"nodeType":"YulAssignment","src":"3548:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:22"},"nodeType":"YulFunctionCall","src":"3557:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4303,"isOffset":false,"isSlot":false,"src":"3396:11:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"3524:5:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"3548:5:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"3561:5:22","valueSize":1},{"declaration":4312,"isOffset":false,"isSlot":false,"src":"3490:5:22","valueSize":1},{"declaration":4312,"isOffset":false,"isSlot":false,"src":"3503:5:22","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"3370:9:22","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"3513:9:22","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"3568:9:22","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"3390:1:22","valueSize":1},{"declaration":4301,"isOffset":false,"isSlot":false,"src":"3393:1:22","valueSize":1}],"id":4334,"nodeType":"InlineAssembly","src":"3292:300:22"},{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"twos","nameLocation":"3907:4:22","nodeType":"VariableDeclaration","scope":4417,"src":"3899:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4344,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"3914:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:22","subExpression":{"id":4338,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"3930:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:22"},{"AST":{"nodeType":"YulBlock","src":"3969:362:22","statements":[{"nodeType":"YulAssignment","src":"4034:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:22"},"nodeType":"YulFunctionCall","src":"4049:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:22"}]},{"nodeType":"YulAssignment","src":"4138:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:22"},"nodeType":"YulFunctionCall","src":"4147:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:22"}]},{"nodeType":"YulAssignment","src":"4278:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:22"},"nodeType":"YulFunctionCall","src":"4294:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:22"},"nodeType":"YulFunctionCall","src":"4290:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:22"},"nodeType":"YulFunctionCall","src":"4286:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4303,"isOffset":false,"isSlot":false,"src":"4034:11:22","valueSize":1},{"declaration":4303,"isOffset":false,"isSlot":false,"src":"4053:11:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"4138:5:22","valueSize":1},{"declaration":4309,"isOffset":false,"isSlot":false,"src":"4151:5:22","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"4066:4:22","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"4158:4:22","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"4278:4:22","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"4301:4:22","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"4308:4:22","valueSize":1}],"id":4345,"nodeType":"InlineAssembly","src":"3960:371:22"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"4397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"4406:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4348,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4414:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"4397:21:22"},{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:22","nodeType":"VariableDeclaration","scope":4417,"src":"4736:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"4759:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:22"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"4992:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5007:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4364,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5021:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"4992:36:22"},{"expression":{"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5076:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5090:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4376,"nodeType":"ExpressionStatement","src":"5061:36:22"},{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4377,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5131:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4379,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5146:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4380,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"5131:36:22"},{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4385,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5201:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5216:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4392,"nodeType":"ExpressionStatement","src":"5201:36:22"},{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5286:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5300:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"nodeType":"ExpressionStatement","src":"5271:36:22"},{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4401,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5342:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5357:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5371:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ExpressionStatement","src":"5342:36:22"},{"expression":{"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"5812:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"5821:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5829:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4414,"nodeType":"ExpressionStatement","src":"5812:24:22"},{"expression":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"5857:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4307,"id":4416,"nodeType":"Return","src":"5850:13:22"}]}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"1357:305:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:22","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"x","nameLocation":"1691:1:22","nodeType":"VariableDeclaration","scope":4419,"src":"1683:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"y","nameLocation":"1702:1:22","nodeType":"VariableDeclaration","scope":4419,"src":"1694:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:22","nodeType":"VariableDeclaration","scope":4419,"src":"1705:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:22"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"result","nameLocation":"1757:6:22","nodeType":"VariableDeclaration","scope":4419,"src":"1749:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:22"},"scope":5071,"src":"1667:4213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"6122:189:22","statements":[{"assignments":[4435],"declarations":[{"constant":false,"id":4435,"mutability":"mutable","name":"result","nameLocation":"6140:6:22","nodeType":"VariableDeclaration","scope":4462,"src":"6132:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4441,"initialValue":{"arguments":[{"id":4437,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6156:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4438,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"6159:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4439,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"6162:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4436,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4419,4463],"referencedDeclaration":4419,"src":"6149:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"6188:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4443,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"6200:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4212_$","typeString":"type(enum Math.Rounding)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4210,"src":"6200:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"src":"6188:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6222:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"6225:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"6228:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4446,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"6184:98:22","trueBody":{"id":4458,"nodeType":"Block","src":"6246:36:22","statements":[{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"6260:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"6260:11:22"}]}},{"expression":{"id":4460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"6298:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4433,"id":4461,"nodeType":"Return","src":"6291:13:22"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"5886:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:22","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"x","nameLocation":"6036:1:22","nodeType":"VariableDeclaration","scope":4463,"src":"6028:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"y","nameLocation":"6047:1:22","nodeType":"VariableDeclaration","scope":4463,"src":"6039:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:22","nodeType":"VariableDeclaration","scope":4463,"src":"6050:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4429,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:22","nodeType":"VariableDeclaration","scope":4463,"src":"6071:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"typeName":{"id":4428,"nodeType":"UserDefinedTypeName","pathNode":{"id":4427,"name":"Rounding","nameLocations":["6071:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4212,"src":"6071:8:22"},"referencedDeclaration":4212,"src":"6071:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:22"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"6113:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:22"},"scope":5071,"src":"6012:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"6587:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6601:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4477,"nodeType":"IfStatement","src":"6597:45:22","trueBody":{"id":4476,"nodeType":"Block","src":"6609:33:22","statements":[{"expression":{"hexValue":"30","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4470,"id":4475,"nodeType":"Return","src":"6623:8:22"}]}},{"assignments":[4479],"declarations":[{"constant":false,"id":4479,"mutability":"mutable","name":"result","nameLocation":"7329:6:22","nodeType":"VariableDeclaration","scope":4574,"src":"7321:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4488,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7349:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4743,4779],"referencedDeclaration":4743,"src":"7344:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:22"},{"id":4573,"nodeType":"UncheckedBlock","src":"7758:408:22","statements":[{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7782:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7792:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7801:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7805:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"7782:35:22"},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7831:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7841:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7850:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7854:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"7831:35:22"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7880:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7890:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7899:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7903:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"7880:35:22"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7929:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7939:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7948:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7952:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"7929:35:22"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7978:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"7988:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7997:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8001:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"7978:35:22"},{"expression":{"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8027:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8037:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8046:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8050:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4554,"nodeType":"ExpressionStatement","src":"8027:35:22"},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8076:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8086:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8095:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8099:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4565,"nodeType":"ExpressionStatement","src":"8076:35:22"},{"expression":{"arguments":[{"id":4567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8136:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8144:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"8148:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4566,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8132:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4470,"id":4572,"nodeType":"Return","src":"8125:30:22"}]}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"6317:208:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:22","nodeType":"FunctionDefinition","parameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"a","nameLocation":"6552:1:22","nodeType":"VariableDeclaration","scope":4575,"src":"6544:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:22"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4575,"src":"6578:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:22"},"scope":5071,"src":"6530:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"8348:161:22","statements":[{"id":4609,"nodeType":"UncheckedBlock","src":"8358:145:22","statements":[{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"result","nameLocation":"8390:6:22","nodeType":"VariableDeclaration","scope":4609,"src":"8382:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4591,"initialValue":{"arguments":[{"id":4589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"8404:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4588,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4575,4611],"referencedDeclaration":4575,"src":"8399:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8427:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"8437:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4594,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"8449:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4212_$","typeString":"type(enum Math.Rounding)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4210,"src":"8449:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"src":"8437:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8464:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"8473:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"8482:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:22","trueExpression":{"hexValue":"31","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4585,"id":4608,"nodeType":"Return","src":"8420:72:22"}]}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"8178:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:22","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"a","nameLocation":"8294:1:22","nodeType":"VariableDeclaration","scope":4611,"src":"8286:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:22","nodeType":"VariableDeclaration","scope":4611,"src":"8297:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"typeName":{"id":4580,"nodeType":"UserDefinedTypeName","pathNode":{"id":4579,"name":"Rounding","nameLocations":["8297:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4212,"src":"8297:8:22"},"referencedDeclaration":4212,"src":"8297:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:22"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"8339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:22"},"scope":5071,"src":"8272:237:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"8694:922:22","statements":[{"assignments":[4620],"declarations":[{"constant":false,"id":4620,"mutability":"mutable","name":"result","nameLocation":"8712:6:22","nodeType":"VariableDeclaration","scope":4742,"src":"8704:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4622,"initialValue":{"hexValue":"30","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:22"},{"id":4739,"nodeType":"UncheckedBlock","src":"8732:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8760:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4637,"nodeType":"IfStatement","src":"8756:99:22","trueBody":{"id":4636,"nodeType":"Block","src":"8778:77:22","statements":[{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8796:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"8796:13:22"},{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"8827:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"8827:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8872:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"IfStatement","src":"8868:96:22","trueBody":{"id":4651,"nodeType":"Block","src":"8889:75:22","statements":[{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8907:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"8907:12:22"},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"8937:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"8937:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"8981:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4667,"nodeType":"IfStatement","src":"8977:96:22","trueBody":{"id":4666,"nodeType":"Block","src":"8998:75:22","statements":[{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9016:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"9016:12:22"},{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9046:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4665,"nodeType":"ExpressionStatement","src":"9046:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9090:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"9086:96:22","trueBody":{"id":4681,"nodeType":"Block","src":"9107:75:22","statements":[{"expression":{"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9125:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4676,"nodeType":"ExpressionStatement","src":"9125:12:22"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9155:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"9155:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4697,"nodeType":"IfStatement","src":"9195:93:22","trueBody":{"id":4696,"nodeType":"Block","src":"9215:73:22","statements":[{"expression":{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9233:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4691,"nodeType":"ExpressionStatement","src":"9233:11:22"},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9262:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"9262:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9305:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"nodeType":"IfStatement","src":"9301:93:22","trueBody":{"id":4711,"nodeType":"Block","src":"9321:73:22","statements":[{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9339:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"9339:11:22"},{"expression":{"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9368:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4710,"nodeType":"ExpressionStatement","src":"9368:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9411:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4727,"nodeType":"IfStatement","src":"9407:93:22","trueBody":{"id":4726,"nodeType":"Block","src":"9427:73:22","statements":[{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9445:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"9445:11:22"},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9474:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"9474:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"9517:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4738,"nodeType":"IfStatement","src":"9513:64:22","trueBody":{"id":4737,"nodeType":"Block","src":"9533:44:22","statements":[{"expression":{"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4736,"nodeType":"ExpressionStatement","src":"9551:11:22"}]}}]},{"expression":{"id":4740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"9603:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4618,"id":4741,"nodeType":"Return","src":"9596:13:22"}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"8515:113:22","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:22","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"value","nameLocation":"8655:5:22","nodeType":"VariableDeclaration","scope":4743,"src":"8647:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:22"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"8685:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:22"},"scope":5071,"src":"8633:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4778,"nodeType":"Block","src":"9849:165:22","statements":[{"id":4777,"nodeType":"UncheckedBlock","src":"9859:149:22","statements":[{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"result","nameLocation":"9891:6:22","nodeType":"VariableDeclaration","scope":4777,"src":"9883:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4759,"initialValue":{"arguments":[{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"9905:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4743,4779],"referencedDeclaration":4743,"src":"9900:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"9932:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"9942:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4762,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"9954:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4212_$","typeString":"type(enum Math.Rounding)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4210,"src":"9954:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"src":"9942:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"9974:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"9983:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:22","trueExpression":{"hexValue":"31","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4753,"id":4776,"nodeType":"Return","src":"9925:72:22"}]}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"9622:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4779,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:22","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"value","nameLocation":"9791:5:22","nodeType":"VariableDeclaration","scope":4779,"src":"9783:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:22","nodeType":"VariableDeclaration","scope":4779,"src":"9798:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"typeName":{"id":4748,"nodeType":"UserDefinedTypeName","pathNode":{"id":4747,"name":"Rounding","nameLocations":["9798:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4212,"src":"9798:8:22"},"referencedDeclaration":4212,"src":"9798:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:22"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4779,"src":"9840:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:22"},"scope":5071,"src":"9769:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"10201:854:22","statements":[{"assignments":[4788],"declarations":[{"constant":false,"id":4788,"mutability":"mutable","name":"result","nameLocation":"10219:6:22","nodeType":"VariableDeclaration","scope":4907,"src":"10211:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4790,"initialValue":{"hexValue":"30","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:22"},{"id":4904,"nodeType":"UncheckedBlock","src":"10239:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10267:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4807,"nodeType":"IfStatement","src":"10263:103:22","trueBody":{"id":4806,"nodeType":"Block","src":"10286:80:22","statements":[{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10304:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"10304:17:22"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10339:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"10339:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10383:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4824,"nodeType":"IfStatement","src":"10379:103:22","trueBody":{"id":4823,"nodeType":"Block","src":"10402:80:22","statements":[{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10420:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"10420:17:22"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10455:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4822,"nodeType":"ExpressionStatement","src":"10455:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10499:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"10495:103:22","trueBody":{"id":4840,"nodeType":"Block","src":"10518:80:22","statements":[{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10536:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4835,"nodeType":"ExpressionStatement","src":"10536:17:22"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10571:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"10571:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10615:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"10611:100:22","trueBody":{"id":4857,"nodeType":"Block","src":"10633:78:22","statements":[{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10651:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"10651:16:22"},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10685:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"10685:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10728:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"10724:100:22","trueBody":{"id":4874,"nodeType":"Block","src":"10746:78:22","statements":[{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10764:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"10764:16:22"},{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10798:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4873,"nodeType":"ExpressionStatement","src":"10798:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10841:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4892,"nodeType":"IfStatement","src":"10837:100:22","trueBody":{"id":4891,"nodeType":"Block","src":"10859:78:22","statements":[{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10877:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"nodeType":"ExpressionStatement","src":"10877:16:22"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10911:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4890,"nodeType":"ExpressionStatement","src":"10911:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"10954:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4903,"nodeType":"IfStatement","src":"10950:66:22","trueBody":{"id":4902,"nodeType":"Block","src":"10972:44:22","statements":[{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"10990:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"10990:11:22"}]}}]},{"expression":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11042:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4786,"id":4906,"nodeType":"Return","src":"11035:13:22"}]},"documentation":{"id":4780,"nodeType":"StructuredDocumentation","src":"10020:114:22","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:22","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"value","nameLocation":"10162:5:22","nodeType":"VariableDeclaration","scope":4908,"src":"10154:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:22"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"10192:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:22"},"scope":5071,"src":"10139:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4943,"nodeType":"Block","src":"11290:167:22","statements":[{"id":4942,"nodeType":"UncheckedBlock","src":"11300:151:22","statements":[{"assignments":[4920],"declarations":[{"constant":false,"id":4920,"mutability":"mutable","name":"result","nameLocation":"11332:6:22","nodeType":"VariableDeclaration","scope":4942,"src":"11324:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4924,"initialValue":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"11347:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4908,4944],"referencedDeclaration":4908,"src":"11341:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"11374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"11384:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4927,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"11396:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4212_$","typeString":"type(enum Math.Rounding)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4210,"src":"11396:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"src":"11384:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"11417:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"11426:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:22","trueExpression":{"hexValue":"31","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4918,"id":4941,"nodeType":"Return","src":"11367:73:22"}]}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"11061:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4944,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:22","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"value","nameLocation":"11232:5:22","nodeType":"VariableDeclaration","scope":4944,"src":"11224:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:22","nodeType":"VariableDeclaration","scope":4944,"src":"11239:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"typeName":{"id":4913,"nodeType":"UserDefinedTypeName","pathNode":{"id":4912,"name":"Rounding","nameLocations":["11239:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4212,"src":"11239:8:22"},"referencedDeclaration":4212,"src":"11239:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:22"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4944,"src":"11281:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:22"},"scope":5071,"src":"11209:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5030,"nodeType":"Block","src":"11771:600:22","statements":[{"assignments":[4953],"declarations":[{"constant":false,"id":4953,"mutability":"mutable","name":"result","nameLocation":"11789:6:22","nodeType":"VariableDeclaration","scope":5030,"src":"11781:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4955,"initialValue":{"hexValue":"30","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:22"},{"id":5027,"nodeType":"UncheckedBlock","src":"11809:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11837:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"11833:98:22","trueBody":{"id":4969,"nodeType":"Block","src":"11855:76:22","statements":[{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11873:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"11873:13:22"},{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"11904:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"11904:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"11944:95:22","trueBody":{"id":4984,"nodeType":"Block","src":"11965:74:22","statements":[{"expression":{"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11983:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4979,"nodeType":"ExpressionStatement","src":"11983:12:22"},{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12013:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"12013:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"12056:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5000,"nodeType":"IfStatement","src":"12052:95:22","trueBody":{"id":4999,"nodeType":"Block","src":"12073:74:22","statements":[{"expression":{"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"12091:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ExpressionStatement","src":"12091:12:22"},{"expression":{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12121:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4998,"nodeType":"ExpressionStatement","src":"12121:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"12164:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5015,"nodeType":"IfStatement","src":"12160:95:22","trueBody":{"id":5014,"nodeType":"Block","src":"12181:74:22","statements":[{"expression":{"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"12199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"nodeType":"ExpressionStatement","src":"12199:12:22"},{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12229:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"12229:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"12272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"12268:64:22","trueBody":{"id":5025,"nodeType":"Block","src":"12288:44:22","statements":[{"expression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12306:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5024,"nodeType":"ExpressionStatement","src":"12306:11:22"}]}}]},{"expression":{"id":5028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12358:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4951,"id":5029,"nodeType":"Return","src":"12351:13:22"}]},"documentation":{"id":4945,"nodeType":"StructuredDocumentation","src":"11463:240:22","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5031,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:22","nodeType":"FunctionDefinition","parameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"value","nameLocation":"11732:5:22","nodeType":"VariableDeclaration","scope":5031,"src":"11724:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:22"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5031,"src":"11762:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:22"},"scope":5071,"src":"11708:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5069,"nodeType":"Block","src":"12608:174:22","statements":[{"id":5068,"nodeType":"UncheckedBlock","src":"12618:158:22","statements":[{"assignments":[5043],"declarations":[{"constant":false,"id":5043,"mutability":"mutable","name":"result","nameLocation":"12650:6:22","nodeType":"VariableDeclaration","scope":5068,"src":"12642:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5047,"initialValue":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"12666:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5044,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5031,5070],"referencedDeclaration":5031,"src":"12659:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12693:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"12703:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5050,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"12715:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4212_$","typeString":"type(enum Math.Rounding)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4210,"src":"12715:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"src":"12703:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"12736:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"12751:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:22","trueExpression":{"hexValue":"31","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5041,"id":5067,"nodeType":"Return","src":"12686:79:22"}]}]},"documentation":{"id":5032,"nodeType":"StructuredDocumentation","src":"12377:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:22","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"value","nameLocation":"12550:5:22","nodeType":"VariableDeclaration","scope":5070,"src":"12542:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5037,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:22","nodeType":"VariableDeclaration","scope":5070,"src":"12557:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"},"typeName":{"id":5036,"nodeType":"UserDefinedTypeName","pathNode":{"id":5035,"name":"Rounding","nameLocations":["12557:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4212,"src":"12557:8:22"},"referencedDeclaration":4212,"src":"12557:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4212","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:22"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5070,"src":"12599:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:22"},"scope":5071,"src":"12526:256:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5072,"src":"202:12582:22","usedErrors":[]}],"src":"103:12682:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5176]},"id":5177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5073,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"134:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5176,"linearizedBaseContracts":[5176],"name":"SignedMath","nameLocation":"223:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":5091,"nodeType":"Block","src":"375:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"392:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"396:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5088,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"404:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:23","trueExpression":{"id":5087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"400:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5083,"id":5090,"nodeType":"Return","src":"385:20:23"}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"240:66:23","text":" @dev Returns the largest of two signed numbers."},"id":5092,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:23","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"a","nameLocation":"331:1:23","nodeType":"VariableDeclaration","scope":5092,"src":"324:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5076,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"b","nameLocation":"341:1:23","nodeType":"VariableDeclaration","scope":5092,"src":"334:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5078,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:23"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5092,"src":"367:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5081,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:23"},"scope":5176,"src":"311:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5109,"nodeType":"Block","src":"554:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"571:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"575:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"583:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:23","trueExpression":{"id":5105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"579:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5101,"id":5108,"nodeType":"Return","src":"564:20:23"}]},"documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"418:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:23","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"a","nameLocation":"510:1:23","nodeType":"VariableDeclaration","scope":5110,"src":"503:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5094,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"b","nameLocation":"520:1:23","nodeType":"VariableDeclaration","scope":5110,"src":"513:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5096,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:23"},"returnParameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"546:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:23"},"scope":5176,"src":"490:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5153,"nodeType":"Block","src":"796:162:23","statements":[{"assignments":[5121],"declarations":[{"constant":false,"id":5121,"mutability":"mutable","name":"x","nameLocation":"865:1:23","nodeType":"VariableDeclaration","scope":5153,"src":"858:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5120,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5134,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"870:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"874:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"881:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"885:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"910:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"930:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:23","typeDescriptions":{}}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5136,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:23","typeDescriptions":{}}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"944:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"948:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5119,"id":5152,"nodeType":"Return","src":"903:48:23"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"597:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:23","nodeType":"FunctionDefinition","parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"a","nameLocation":"752:1:23","nodeType":"VariableDeclaration","scope":5154,"src":"745:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5112,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"b","nameLocation":"762:1:23","nodeType":"VariableDeclaration","scope":5154,"src":"755:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5114,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:23"},"returnParameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5154,"src":"788:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5117,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:23"},"scope":5176,"src":"728:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"1102:158:23","statements":[{"id":5173,"nodeType":"UncheckedBlock","src":"1112:142:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"1227:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:23","subExpression":{"id":5168,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"1241:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:23","trueExpression":{"id":5167,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"1236:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:23","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5161,"id":5172,"nodeType":"Return","src":"1212:31:23"}]}]},"documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"964:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:23","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"n","nameLocation":"1067:1:23","nodeType":"VariableDeclaration","scope":5175,"src":"1060:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5156,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:23"},"returnParameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"1093:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:23"},"scope":5176,"src":"1047:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5177,"src":"215:1047:23","usedErrors":[]}],"src":"109:1154:23"},"id":23},"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol":{"ast":{"absolutePath":"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol","exportedSymbols":{"ERC20":[7127],"IRewardsCollector":[5188]},"id":5189,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5178,"literals":["solidity","^","0.8",".15"],"nodeType":"PragmaDirective","src":"45:24:24"},{"absolutePath":"solmate/src/tokens/ERC20.sol","file":"solmate/src/tokens/ERC20.sol","id":5180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5189,"sourceUnit":7128,"src":"71:51:24","symbolAliases":[{"foreign":{"id":5179,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"79:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardsCollector","contractDependencies":[],"contractKind":"interface","documentation":{"id":5181,"nodeType":"StructuredDocumentation","src":"124:211:24","text":"@title LooksRare Rewards Collector\n @notice Implements a permissionless call to fetch LooksRare rewards earned by Universal Router users\n and transfers them to an external rewards distributor contract"},"fullyImplemented":false,"id":5188,"linearizedBaseContracts":[5188],"name":"IRewardsCollector","nameLocation":"345:17:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"369:171:24","text":"@notice Fetches users' LooksRare rewards and sends them to the distributor contract\n @param looksRareClaim The data required by LooksRare to claim reward tokens"},"functionSelector":"709a1cc2","id":5187,"implemented":false,"kind":"function","modifiers":[],"name":"collectRewards","nameLocation":"554:14:24","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"looksRareClaim","nameLocation":"584:14:24","nodeType":"VariableDeclaration","scope":5187,"src":"569:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5183,"name":"bytes","nodeType":"ElementaryTypeName","src":"569:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"568:31:24"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[],"src":"608:0:24"},"scope":5188,"src":"545:64:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5189,"src":"335:276:24","usedErrors":[]}],"src":"45:567:24"},"id":24},"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol":{"ast":{"absolutePath":"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol","exportedSymbols":{"IERC1155Receiver":[3126],"IERC721Receiver":[3634],"IRewardsCollector":[5188],"IUniversalRouter":[5230]},"id":5231,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5190,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"45:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":5192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5231,"sourceUnit":3635,"src":"71:89:25","symbolAliases":[{"foreign":{"id":5191,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"79:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":5194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5231,"sourceUnit":3127,"src":"161:92:25","symbolAliases":[{"foreign":{"id":5193,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"169:16:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol","file":"./IRewardsCollector.sol","id":5196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5231,"sourceUnit":5189,"src":"254:58:25","symbolAliases":[{"foreign":{"id":5195,"name":"IRewardsCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"262:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5197,"name":"IRewardsCollector","nameLocations":["344:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":5188,"src":"344:17:25"},"id":5198,"nodeType":"InheritanceSpecifier","src":"344:17:25"},{"baseName":{"id":5199,"name":"IERC721Receiver","nameLocations":["363:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":3634,"src":"363:15:25"},"id":5200,"nodeType":"InheritanceSpecifier","src":"363:15:25"},{"baseName":{"id":5201,"name":"IERC1155Receiver","nameLocations":["380:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":3126,"src":"380:16:25"},"id":5202,"nodeType":"InheritanceSpecifier","src":"380:16:25"}],"canonicalName":"IUniversalRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5230,"linearizedBaseContracts":[5230,3126,4205,3634,5188],"name":"IUniversalRouter","nameLocation":"324:16:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"403:53:25","text":"@notice Thrown when a required command has failed"},"errorSelector":"2c4029e9","id":5209,"name":"ExecutionFailed","nameLocation":"467:15:25","nodeType":"ErrorDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"commandIndex","nameLocation":"491:12:25","nodeType":"VariableDeclaration","scope":5209,"src":"483:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5207,"mutability":"mutable","name":"message","nameLocation":"511:7:25","nodeType":"VariableDeclaration","scope":5209,"src":"505:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5206,"name":"bytes","nodeType":"ElementaryTypeName","src":"505:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"482:37:25"},"src":"461:59:25"},{"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"526:71:25","text":"@notice Thrown when attempting to send ETH directly to the contract"},"errorSelector":"1231ae40","id":5212,"name":"ETHNotAccepted","nameLocation":"608:14:25","nodeType":"ErrorDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[],"src":"622:2:25"},"src":"602:23:25"},{"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"631:67:25","text":"@notice Thrown when executing commands with an expired deadline"},"errorSelector":"5bf6f916","id":5215,"name":"TransactionDeadlinePassed","nameLocation":"709:25:25","nodeType":"ErrorDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[],"src":"734:2:25"},"src":"703:34:25"},{"documentation":{"id":5216,"nodeType":"StructuredDocumentation","src":"743:101:25","text":"@notice Thrown when attempting to execute commands and an incorrect number of inputs are provided"},"errorSelector":"ff633a38","id":5218,"name":"LengthMismatch","nameLocation":"855:14:25","nodeType":"ErrorDefinition","parameters":{"id":5217,"nodeType":"ParameterList","parameters":[],"src":"869:2:25"},"src":"849:23:25"},{"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"878:349:25","text":"@notice Executes encoded commands along with provided inputs. Reverts if deadline has expired.\n @param commands A set of concatenated commands, each 1 byte in length\n @param inputs An array of byte strings containing abi encoded inputs for each command\n @param deadline The deadline by which the transaction must be executed"},"functionSelector":"3593564c","id":5229,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1241:7:25","nodeType":"FunctionDefinition","parameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"commands","nameLocation":"1264:8:25","nodeType":"VariableDeclaration","scope":5229,"src":"1249:23:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5220,"name":"bytes","nodeType":"ElementaryTypeName","src":"1249:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5224,"mutability":"mutable","name":"inputs","nameLocation":"1291:6:25","nodeType":"VariableDeclaration","scope":5229,"src":"1274:23:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5222,"name":"bytes","nodeType":"ElementaryTypeName","src":"1274:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5223,"nodeType":"ArrayTypeName","src":"1274:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":5226,"mutability":"mutable","name":"deadline","nameLocation":"1307:8:25","nodeType":"VariableDeclaration","scope":5229,"src":"1299:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:68:25"},"returnParameters":{"id":5228,"nodeType":"ParameterList","parameters":[],"src":"1333:0:25"},"scope":5230,"src":"1232:102:25","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5231,"src":"314:1022:25","usedErrors":[5209,5212,5215,5218]}],"src":"45:1292:25"},"id":25},"@uniswap/universal-router/contracts/libraries/Commands.sol":{"ast":{"absolutePath":"@uniswap/universal-router/contracts/libraries/Commands.sol","exportedSymbols":{"Commands":[5345]},"id":5346,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5232,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"45:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Commands","contractDependencies":[],"contractKind":"library","documentation":{"id":5233,"nodeType":"StructuredDocumentation","src":"71:70:26","text":"@title Commands\n @notice Command Flags used to decode commands"},"fullyImplemented":true,"id":5345,"linearizedBaseContracts":[5345],"name":"Commands","nameLocation":"149:8:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5236,"mutability":"constant","name":"FLAG_ALLOW_REVERT","nameLocation":"238:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"213:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5234,"name":"bytes1","nodeType":"ElementaryTypeName","src":"213:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"hexValue":"30783830","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"258:4:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"visibility":"internal"},{"constant":true,"id":5239,"mutability":"constant","name":"COMMAND_TYPE_MASK","nameLocation":"293:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"268:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5237,"name":"bytes1","nodeType":"ElementaryTypeName","src":"268:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"hexValue":"30783366","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"313:4:26","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"0x3f"},"visibility":"internal"},{"constant":true,"id":5242,"mutability":"constant","name":"V3_SWAP_EXACT_IN","nameLocation":"491:16:26","nodeType":"VariableDeclaration","scope":5345,"src":"474:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"510:4:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"id":5245,"mutability":"constant","name":"V3_SWAP_EXACT_OUT","nameLocation":"537:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"520:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5243,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"id":5248,"mutability":"constant","name":"PERMIT2_TRANSFER_FROM","nameLocation":"584:21:26","nodeType":"VariableDeclaration","scope":5345,"src":"567:45:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783032","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"608:4:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x02"},"visibility":"internal"},{"constant":true,"id":5251,"mutability":"constant","name":"PERMIT2_PERMIT_BATCH","nameLocation":"635:20:26","nodeType":"VariableDeclaration","scope":5345,"src":"618:44:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783033","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"658:4:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"0x03"},"visibility":"internal"},{"constant":true,"id":5254,"mutability":"constant","name":"SWEEP","nameLocation":"685:5:26","nodeType":"VariableDeclaration","scope":5345,"src":"668:29:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783034","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"693:4:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x04"},"visibility":"internal"},{"constant":true,"id":5257,"mutability":"constant","name":"TRANSFER","nameLocation":"720:8:26","nodeType":"VariableDeclaration","scope":5345,"src":"703:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783035","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"731:4:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"0x05"},"visibility":"internal"},{"constant":true,"id":5260,"mutability":"constant","name":"PAY_PORTION","nameLocation":"758:11:26","nodeType":"VariableDeclaration","scope":5345,"src":"741:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"741:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783036","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:4:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"0x06"},"visibility":"internal"},{"constant":true,"id":5263,"mutability":"constant","name":"FIRST_IF_BOUNDARY","nameLocation":"1011:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"994:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"994:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783038","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1031:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"visibility":"internal"},{"constant":true,"id":5266,"mutability":"constant","name":"V2_SWAP_EXACT_IN","nameLocation":"1144:16:26","nodeType":"VariableDeclaration","scope":5345,"src":"1127:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783038","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1163:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"visibility":"internal"},{"constant":true,"id":5269,"mutability":"constant","name":"V2_SWAP_EXACT_OUT","nameLocation":"1190:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"1173:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783039","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1210:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"visibility":"internal"},{"constant":true,"id":5272,"mutability":"constant","name":"PERMIT2_PERMIT","nameLocation":"1237:14:26","nodeType":"VariableDeclaration","scope":5345,"src":"1220:38:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783061","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1254:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"visibility":"internal"},{"constant":true,"id":5275,"mutability":"constant","name":"WRAP_ETH","nameLocation":"1281:8:26","nodeType":"VariableDeclaration","scope":5345,"src":"1264:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783062","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:4:26","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"0x0b"},"visibility":"internal"},{"constant":true,"id":5278,"mutability":"constant","name":"UNWRAP_WETH","nameLocation":"1319:11:26","nodeType":"VariableDeclaration","scope":5345,"src":"1302:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1302:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783063","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1333:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"visibility":"internal"},{"constant":true,"id":5281,"mutability":"constant","name":"PERMIT2_TRANSFER_FROM_BATCH","nameLocation":"1360:27:26","nodeType":"VariableDeclaration","scope":5345,"src":"1343:51:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1343:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783064","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"visibility":"internal"},{"constant":true,"id":5284,"mutability":"constant","name":"BALANCE_CHECK_ERC20","nameLocation":"1417:19:26","nodeType":"VariableDeclaration","scope":5345,"src":"1400:43:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783065","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1439:4:26","typeDescriptions":{"typeIdentifier":"t_rational_14_by_1","typeString":"int_const 14"},"value":"0x0e"},"visibility":"internal"},{"constant":true,"id":5287,"mutability":"constant","name":"SECOND_IF_BOUNDARY","nameLocation":"1678:18:26","nodeType":"VariableDeclaration","scope":5345,"src":"1661:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783130","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:4:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"visibility":"internal"},{"constant":true,"id":5290,"mutability":"constant","name":"SEAPORT_V1_5","nameLocation":"1810:12:26","nodeType":"VariableDeclaration","scope":5345,"src":"1793:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783130","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:4:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"visibility":"internal"},{"constant":true,"id":5293,"mutability":"constant","name":"LOOKS_RARE_V2","nameLocation":"1852:13:26","nodeType":"VariableDeclaration","scope":5345,"src":"1835:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1868:4:26","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"id":5296,"mutability":"constant","name":"NFTX","nameLocation":"1895:4:26","nodeType":"VariableDeclaration","scope":5345,"src":"1878:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1902:4:26","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"id":5299,"mutability":"constant","name":"CRYPTOPUNKS","nameLocation":"1929:11:26","nodeType":"VariableDeclaration","scope":5345,"src":"1912:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783133","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1943:4:26","typeDescriptions":{"typeIdentifier":"t_rational_19_by_1","typeString":"int_const 19"},"value":"0x13"},"visibility":"internal"},{"constant":true,"id":5302,"mutability":"constant","name":"OWNER_CHECK_721","nameLocation":"1983:15:26","nodeType":"VariableDeclaration","scope":5345,"src":"1966:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783135","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2001:4:26","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"0x15"},"visibility":"internal"},{"constant":true,"id":5305,"mutability":"constant","name":"OWNER_CHECK_1155","nameLocation":"2028:16:26","nodeType":"VariableDeclaration","scope":5345,"src":"2011:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783136","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2047:4:26","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"0x16"},"visibility":"internal"},{"constant":true,"id":5308,"mutability":"constant","name":"SWEEP_ERC721","nameLocation":"2074:12:26","nodeType":"VariableDeclaration","scope":5345,"src":"2057:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783137","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2089:4:26","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"0x17"},"visibility":"internal"},{"constant":true,"id":5311,"mutability":"constant","name":"THIRD_IF_BOUNDARY","nameLocation":"2293:17:26","nodeType":"VariableDeclaration","scope":5345,"src":"2276:41:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783138","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2313:4:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"0x18"},"visibility":"internal"},{"constant":true,"id":5314,"mutability":"constant","name":"X2Y2_721","nameLocation":"2425:8:26","nodeType":"VariableDeclaration","scope":5345,"src":"2408:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783138","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:4:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"0x18"},"visibility":"internal"},{"constant":true,"id":5317,"mutability":"constant","name":"SUDOSWAP","nameLocation":"2463:8:26","nodeType":"VariableDeclaration","scope":5345,"src":"2446:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2446:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783139","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2474:4:26","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"0x19"},"visibility":"internal"},{"constant":true,"id":5320,"mutability":"constant","name":"NFT20","nameLocation":"2501:5:26","nodeType":"VariableDeclaration","scope":5345,"src":"2484:29:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2484:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783161","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:4:26","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"0x1a"},"visibility":"internal"},{"constant":true,"id":5323,"mutability":"constant","name":"X2Y2_1155","nameLocation":"2536:9:26","nodeType":"VariableDeclaration","scope":5345,"src":"2519:33:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783162","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:4:26","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"0x1b"},"visibility":"internal"},{"constant":true,"id":5326,"mutability":"constant","name":"FOUNDATION","nameLocation":"2575:10:26","nodeType":"VariableDeclaration","scope":5345,"src":"2558:34:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783163","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"0x1c"},"visibility":"internal"},{"constant":true,"id":5329,"mutability":"constant","name":"SWEEP_ERC1155","nameLocation":"2615:13:26","nodeType":"VariableDeclaration","scope":5345,"src":"2598:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783164","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:4:26","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"0x1d"},"visibility":"internal"},{"constant":true,"id":5332,"mutability":"constant","name":"ELEMENT_MARKET","nameLocation":"2658:14:26","nodeType":"VariableDeclaration","scope":5345,"src":"2641:38:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783165","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2675:4:26","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"0x1e"},"visibility":"internal"},{"constant":true,"id":5335,"mutability":"constant","name":"FOURTH_IF_BOUNDARY","nameLocation":"2914:18:26","nodeType":"VariableDeclaration","scope":5345,"src":"2897:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2935:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":5338,"mutability":"constant","name":"SEAPORT_V1_4","nameLocation":"3002:12:26","nodeType":"VariableDeclaration","scope":5345,"src":"2985:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3017:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"internal"},{"constant":true,"id":5341,"mutability":"constant","name":"EXECUTE_SUB_PLAN","nameLocation":"3044:16:26","nodeType":"VariableDeclaration","scope":5345,"src":"3027:40:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3027:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3063:4:26","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"id":5344,"mutability":"constant","name":"APPROVE_ERC20","nameLocation":"3090:13:26","nodeType":"VariableDeclaration","scope":5345,"src":"3073:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3106:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"}],"scope":5346,"src":"141:3029:26","usedErrors":[]}],"src":"45:3126:26"},"id":26},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[5359]},"id":5360,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5347,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":5348,"nodeType":"StructuredDocumentation","src":"71:144:27","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":5359,"linearizedBaseContracts":[5359],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"254:898:27","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":5358,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:27","nodeType":"FunctionDefinition","parameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:27","nodeType":"VariableDeclaration","scope":5358,"src":"1197:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5350,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:27","nodeType":"VariableDeclaration","scope":5358,"src":"1226:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5352,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5355,"mutability":"mutable","name":"data","nameLocation":"1270:4:27","nodeType":"VariableDeclaration","scope":5358,"src":"1255:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:27"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[],"src":"1289:0:27"},"scope":5359,"src":"1157:133:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5360,"src":"215:1077:27","usedErrors":[]}],"src":"45:1248:27"},"id":27},"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol","exportedSymbols":{"IQuoter":[5416]},"id":5417,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5361,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:28"},{"id":5362,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IQuoter","contractDependencies":[],"contractKind":"interface","documentation":{"id":5363,"nodeType":"StructuredDocumentation","src":"91:320:28","text":"@title Quoter Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."},"fullyImplemented":false,"id":5416,"linearizedBaseContracts":[5416],"name":"IQuoter","nameLocation":"421:7:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5364,"nodeType":"StructuredDocumentation","src":"435:319:28","text":"@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"},"functionSelector":"cdca1753","id":5373,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInput","nameLocation":"768:15:28","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"path","nameLocation":"797:4:28","nodeType":"VariableDeclaration","scope":5373,"src":"784:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5365,"name":"bytes","nodeType":"ElementaryTypeName","src":"784:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5368,"mutability":"mutable","name":"amountIn","nameLocation":"811:8:28","nodeType":"VariableDeclaration","scope":5373,"src":"803:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5367,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:37:28"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"amountOut","nameLocation":"847:9:28","nodeType":"VariableDeclaration","scope":5373,"src":"839:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"838:19:28"},"scope":5416,"src":"759:99:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"864:491:28","text":"@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountIn The desired input amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"},"functionSelector":"f7729d43","id":5389,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInputSingle","nameLocation":"1369:21:28","nodeType":"FunctionDefinition","parameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"tokenIn","nameLocation":"1408:7:28","nodeType":"VariableDeclaration","scope":5389,"src":"1400:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5375,"name":"address","nodeType":"ElementaryTypeName","src":"1400:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5378,"mutability":"mutable","name":"tokenOut","nameLocation":"1433:8:28","nodeType":"VariableDeclaration","scope":5389,"src":"1425:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5377,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5380,"mutability":"mutable","name":"fee","nameLocation":"1458:3:28","nodeType":"VariableDeclaration","scope":5389,"src":"1451:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5379,"name":"uint24","nodeType":"ElementaryTypeName","src":"1451:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5382,"mutability":"mutable","name":"amountIn","nameLocation":"1479:8:28","nodeType":"VariableDeclaration","scope":5389,"src":"1471:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5384,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1505:17:28","nodeType":"VariableDeclaration","scope":5389,"src":"1497:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5383,"name":"uint160","nodeType":"ElementaryTypeName","src":"1497:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1390:138:28"},"returnParameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"amountOut","nameLocation":"1555:9:28","nodeType":"VariableDeclaration","scope":5389,"src":"1547:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1546:19:28"},"scope":5416,"src":"1360:206:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5390,"nodeType":"StructuredDocumentation","src":"1572:355:28","text":"@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid"},"functionSelector":"2f80bb1d","id":5399,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutput","nameLocation":"1941:16:28","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"path","nameLocation":"1971:4:28","nodeType":"VariableDeclaration","scope":5399,"src":"1958:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5391,"name":"bytes","nodeType":"ElementaryTypeName","src":"1958:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"amountOut","nameLocation":"1985:9:28","nodeType":"VariableDeclaration","scope":5399,"src":"1977:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1957:38:28"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"amountIn","nameLocation":"2022:8:28","nodeType":"VariableDeclaration","scope":5399,"src":"2014:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2013:18:28"},"scope":5416,"src":"1932:100:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"2038:538:28","text":"@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountOut The desired output amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`"},"functionSelector":"30d07f21","id":5415,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutputSingle","nameLocation":"2590:22:28","nodeType":"FunctionDefinition","parameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"tokenIn","nameLocation":"2630:7:28","nodeType":"VariableDeclaration","scope":5415,"src":"2622:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5401,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5404,"mutability":"mutable","name":"tokenOut","nameLocation":"2655:8:28","nodeType":"VariableDeclaration","scope":5415,"src":"2647:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"2647:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"fee","nameLocation":"2680:3:28","nodeType":"VariableDeclaration","scope":5415,"src":"2673:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5405,"name":"uint24","nodeType":"ElementaryTypeName","src":"2673:6:28","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"amountOut","nameLocation":"2701:9:28","nodeType":"VariableDeclaration","scope":5415,"src":"2693:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"2728:17:28","nodeType":"VariableDeclaration","scope":5415,"src":"2720:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5409,"name":"uint160","nodeType":"ElementaryTypeName","src":"2720:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"2612:139:28"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"amountIn","nameLocation":"2778:8:28","nodeType":"VariableDeclaration","scope":5415,"src":"2770:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:18:28"},"scope":5416,"src":"2581:207:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5417,"src":"411:2379:28","usedErrors":[]}],"src":"45:2746:28"},"id":28},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[5516],"IUniswapV3SwapCallback":[5359]},"id":5517,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5418,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:29"},{"id":5419,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:29"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":5420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5517,"sourceUnit":5360,"src":"91:83:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5422,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:29"],"nodeType":"IdentifierPath","referencedDeclaration":5359,"src":"305:22:29"},"id":5423,"nodeType":"InheritanceSpecifier","src":"305:22:29"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":5421,"nodeType":"StructuredDocumentation","src":"176:104:29","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":5516,"linearizedBaseContracts":[5516,5359],"name":"ISwapRouter","nameLocation":"290:11:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":5440,"members":[{"constant":false,"id":5425,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:29","nodeType":"VariableDeclaration","scope":5440,"src":"374:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5424,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5427,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:29","nodeType":"VariableDeclaration","scope":5440,"src":"399:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5429,"mutability":"mutable","name":"fee","nameLocation":"432:3:29","nodeType":"VariableDeclaration","scope":5440,"src":"425:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5428,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5431,"mutability":"mutable","name":"recipient","nameLocation":"453:9:29","nodeType":"VariableDeclaration","scope":5440,"src":"445:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5430,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5433,"mutability":"mutable","name":"deadline","nameLocation":"480:8:29","nodeType":"VariableDeclaration","scope":5440,"src":"472:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5435,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:29","nodeType":"VariableDeclaration","scope":5440,"src":"498:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5434,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5437,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:29","nodeType":"VariableDeclaration","scope":5440,"src":"524:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:29","nodeType":"VariableDeclaration","scope":5440,"src":"558:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5438,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:29","nodeType":"StructDefinition","scope":5516,"src":"334:256:29","visibility":"public"},{"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"596:250:29","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":5449,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:29","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"params","nameLocation":"909:6:29","nodeType":"VariableDeclaration","scope":5449,"src":"877:38:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$5440_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":5443,"nodeType":"UserDefinedTypeName","pathNode":{"id":5442,"name":"ExactInputSingleParams","nameLocations":["877:22:29"],"nodeType":"IdentifierPath","referencedDeclaration":5440,"src":"877:22:29"},"referencedDeclaration":5440,"src":"877:22:29","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$5440_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:29"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:29","nodeType":"VariableDeclaration","scope":5449,"src":"943:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:29"},"scope":5516,"src":"851:111:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":5460,"members":[{"constant":false,"id":5451,"mutability":"mutable","name":"path","nameLocation":"1008:4:29","nodeType":"VariableDeclaration","scope":5460,"src":"1002:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5450,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:29","nodeType":"VariableDeclaration","scope":5460,"src":"1022:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5452,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:29","nodeType":"VariableDeclaration","scope":5460,"src":"1049:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5457,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:29","nodeType":"VariableDeclaration","scope":5460,"src":"1075:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5459,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:29","nodeType":"VariableDeclaration","scope":5460,"src":"1101:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:29","nodeType":"StructDefinition","scope":5516,"src":"968:164:29","visibility":"public"},{"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"1138:273:29","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":5469,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:29","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"params","nameLocation":"1462:6:29","nodeType":"VariableDeclaration","scope":5469,"src":"1436:32:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":5463,"nodeType":"UserDefinedTypeName","pathNode":{"id":5462,"name":"ExactInputParams","nameLocations":["1436:16:29"],"nodeType":"IdentifierPath","referencedDeclaration":5460,"src":"1436:16:29"},"referencedDeclaration":5460,"src":"1436:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:29"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:29","nodeType":"VariableDeclaration","scope":5469,"src":"1496:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:29"},"scope":5516,"src":"1416:99:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":5486,"members":[{"constant":false,"id":5471,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:29","nodeType":"VariableDeclaration","scope":5486,"src":"1562:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5470,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5473,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:29","nodeType":"VariableDeclaration","scope":5486,"src":"1587:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5472,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5475,"mutability":"mutable","name":"fee","nameLocation":"1620:3:29","nodeType":"VariableDeclaration","scope":5486,"src":"1613:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5474,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:29","nodeType":"VariableDeclaration","scope":5486,"src":"1633:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5476,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5479,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:29","nodeType":"VariableDeclaration","scope":5486,"src":"1660:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5481,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:29","nodeType":"VariableDeclaration","scope":5486,"src":"1686:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5483,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:29","nodeType":"VariableDeclaration","scope":5486,"src":"1713:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:29","nodeType":"VariableDeclaration","scope":5486,"src":"1746:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5484,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:29","nodeType":"StructDefinition","scope":5516,"src":"1521:257:29","visibility":"public"},{"documentation":{"id":5487,"nodeType":"StructuredDocumentation","src":"1784:250:29","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":5495,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:29","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"params","nameLocation":"2099:6:29","nodeType":"VariableDeclaration","scope":5495,"src":"2066:39:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$5486_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":5489,"nodeType":"UserDefinedTypeName","pathNode":{"id":5488,"name":"ExactOutputSingleParams","nameLocations":["2066:23:29"],"nodeType":"IdentifierPath","referencedDeclaration":5486,"src":"2066:23:29"},"referencedDeclaration":5486,"src":"2066:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$5486_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:29"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:29","nodeType":"VariableDeclaration","scope":5495,"src":"2133:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:29"},"scope":5516,"src":"2039:112:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":5506,"members":[{"constant":false,"id":5497,"mutability":"mutable","name":"path","nameLocation":"2198:4:29","nodeType":"VariableDeclaration","scope":5506,"src":"2192:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5496,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:29","nodeType":"VariableDeclaration","scope":5506,"src":"2212:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5498,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:29","nodeType":"VariableDeclaration","scope":5506,"src":"2239:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:29","nodeType":"VariableDeclaration","scope":5506,"src":"2265:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:29","nodeType":"VariableDeclaration","scope":5506,"src":"2292:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:29","nodeType":"StructDefinition","scope":5516,"src":"2157:165:29","visibility":"public"},{"documentation":{"id":5507,"nodeType":"StructuredDocumentation","src":"2328:284:29","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":5515,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:29","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"params","nameLocation":"2665:6:29","nodeType":"VariableDeclaration","scope":5515,"src":"2638:33:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$5506_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":5509,"nodeType":"UserDefinedTypeName","pathNode":{"id":5508,"name":"ExactOutputParams","nameLocations":["2638:17:29"],"nodeType":"IdentifierPath","referencedDeclaration":5506,"src":"2638:17:29"},"referencedDeclaration":5506,"src":"2638:17:29","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$5506_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:29"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:29","nodeType":"VariableDeclaration","scope":5515,"src":"2699:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:29"},"scope":5516,"src":"2617:100:29","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5517,"src":"280:2439:29","usedErrors":[]}],"src":"45:2675:29"},"id":29},"contracts/ColateralContract2.sol":{"ast":{"absolutePath":"contracts/ColateralContract2.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[145],"AccessControlUpgradeable":[482],"Address":[3964],"ColateralContract2":[6569],"Commands":[5345],"ContextUpgradeable":[1215],"ERC165Upgradeable":[1489],"EnumerableSetUpgradeable":[3085],"IAccessControlEnumerableUpgradeable":[507],"IAccessControlUpgradeable":[580],"IColateralContract2":[6728],"IERC1155Receiver":[3126],"IERC165Upgradeable":[1501],"IERC20":[3204],"IERC20Permit":[3240],"IERC721Receiver":[3634],"IQuoter":[5416],"IRewardsCollector":[5188],"ISwapRouter":[5516],"IUniswapV3SwapCallback":[5359],"IUniversalRouter":[5230],"IWETH":[6739],"Initializable":[749],"Math":[5071],"MathUpgradeable":[2367],"ReentrancyGuardUpgradeable":[834],"SafeERC20":[3616],"SignedMath":[5176],"SignedMathUpgradeable":[2472],"Strings":[4193],"StringsUpgradeable":[1444]},"id":6570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":4194,"src":"33:51:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":3205,"src":"86:56:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":3617,"src":"144:65:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":5521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":835,"src":"211:85:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","id":5522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":146,"src":"298:91:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":5523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":5517,"src":"391:68:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol","id":5524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":5417,"src":"461:64:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/universal-router/contracts/libraries/Commands.sol","file":"@uniswap/universal-router/contracts/libraries/Commands.sol","id":5526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":5346,"src":"527:84:30","symbolAliases":[{"foreign":{"id":5525,"name":"Commands","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"535:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol","file":"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol","id":5527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":5231,"src":"613:77:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IColateralContract2.sol","file":"./IColateralContract2.sol","id":5528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":6729,"src":"694:35:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":5529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6570,"sourceUnit":6740,"src":"731:21:30","symbolAliases":[],"unitAlias":""},{"id":5530,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"756:23:30"},{"abstract":false,"baseContracts":[{"baseName":{"id":5531,"name":"IColateralContract2","nameLocations":["817:19:30"],"nodeType":"IdentifierPath","referencedDeclaration":6728,"src":"817:19:30"},"id":5532,"nodeType":"InheritanceSpecifier","src":"817:19:30"},{"baseName":{"id":5533,"name":"AccessControlEnumerableUpgradeable","nameLocations":["841:34:30"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"841:34:30"},"id":5534,"nodeType":"InheritanceSpecifier","src":"841:34:30"},{"baseName":{"id":5535,"name":"ReentrancyGuardUpgradeable","nameLocations":["880:26:30"],"nodeType":"IdentifierPath","referencedDeclaration":834,"src":"880:26:30"},"id":5536,"nodeType":"InheritanceSpecifier","src":"880:26:30"}],"canonicalName":"ColateralContract2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6569,"linearizedBaseContracts":[6569,834,145,482,1489,1501,507,580,1215,749,6728],"name":"ColateralContract2","nameLocation":"792:18:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5539,"libraryName":{"id":5537,"name":"Strings","nameLocations":["919:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":4193,"src":"919:7:30"},"nodeType":"UsingForDirective","src":"913:26:30","typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"e5df800a","id":5544,"mutability":"constant","name":"ACONCAGUA_ROLE","nameLocation":"986:14:30","nodeType":"VariableDeclaration","scope":6569,"src":"962:63:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41434f4e4341475541","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1013:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_faad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2","typeString":"literal_string \"ACONCAGUA\""},"value":"ACONCAGUA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_faad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2","typeString":"literal_string \"ACONCAGUA\""}],"id":5541,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1003:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1003:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cc815d","id":5549,"mutability":"constant","name":"LENDER_LIQ_ROLE","nameLocation":"1082:15:30","nodeType":"VariableDeclaration","scope":6569,"src":"1058:65:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1058:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4c454e4445525f4c4951","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1110:12:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6","typeString":"literal_string \"LENDER_LIQ\""},"value":"LENDER_LIQ"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6","typeString":"literal_string \"LENDER_LIQ\""}],"id":5546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1100:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1100:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"71372544","id":5554,"mutability":"constant","name":"RESCUER_ROLE","nameLocation":"1171:12:30","nodeType":"VariableDeclaration","scope":6569,"src":"1147:59:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1147:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"52455343554552","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707","typeString":"literal_string \"RESCUER\""},"value":"RESCUER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707","typeString":"literal_string \"RESCUER\""}],"id":5551,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1186:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1186:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"df668eca","id":5559,"mutability":"constant","name":"SWAPPER_ROLE","nameLocation":"1251:12:30","nodeType":"VariableDeclaration","scope":6569,"src":"1227:59:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1227:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"53574150504552","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1276:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6","typeString":"literal_string \"SWAPPER\""},"value":"SWAPPER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6","typeString":"literal_string \"SWAPPER\""}],"id":5556,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1266:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1266:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"global":false,"id":5563,"libraryName":{"id":5560,"name":"EnumerableSetUpgradeable","nameLocations":["1299:24:30"],"nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"1299:24:30"},"nodeType":"UsingForDirective","src":"1293:71:30","typeName":{"id":5562,"nodeType":"UserDefinedTypeName","pathNode":{"id":5561,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["1328:24:30","1353:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"1328:35:30"},"referencedDeclaration":2677,"src":"1328:35:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}}},{"constant":false,"id":5566,"mutability":"mutable","name":"_rolesSet","nameLocation":"1412:9:30","nodeType":"VariableDeclaration","scope":6569,"src":"1368:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5565,"nodeType":"UserDefinedTypeName","pathNode":{"id":5564,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["1368:24:30","1393:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":2677,"src":"1368:35:30"},"referencedDeclaration":2677,"src":"1368:35:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"private"},{"constant":true,"id":5569,"mutability":"constant","name":"RSK_ID","nameLocation":"1456:6:30","nodeType":"VariableDeclaration","scope":6569,"src":"1442:25:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint","nodeType":"ElementaryTypeName","src":"1442:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1465:2:30","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"internal"},{"constant":false,"functionSelector":"310495ab","id":5573,"mutability":"mutable","name":"tokenNames","nameLocation":"1514:10:30","nodeType":"VariableDeclaration","scope":6569,"src":"1497:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string[5]"},"typeName":{"baseType":{"id":5570,"name":"string","nodeType":"ElementaryTypeName","src":"1497:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5572,"length":{"hexValue":"35","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1504:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"1497:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"public"},{"constant":false,"functionSelector":"55452d04","id":5577,"mutability":"mutable","name":"tokenTable","nameLocation":"1563:10:30","nodeType":"VariableDeclaration","scope":6569,"src":"1529:44:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":5576,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5574,"name":"string","nodeType":"ElementaryTypeName","src":"1537:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1529:26:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5575,"name":"address","nodeType":"ElementaryTypeName","src":"1547:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"15ac7358","id":5579,"mutability":"mutable","name":"rescueWalletAddress","nameLocation":"1595:19:30","nodeType":"VariableDeclaration","scope":6569,"src":"1580:34:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5578,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b14ec101","id":5581,"mutability":"mutable","name":"withdrawWalletAddress","nameLocation":"1634:21:30","nodeType":"VariableDeclaration","scope":6569,"src":"1619:36:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5580,"name":"address","nodeType":"ElementaryTypeName","src":"1619:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"de6bd687","id":5585,"mutability":"mutable","name":"contractKeys","nameLocation":"1679:12:30","nodeType":"VariableDeclaration","scope":6569,"src":"1662:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage","typeString":"string[3]"},"typeName":{"baseType":{"id":5582,"name":"string","nodeType":"ElementaryTypeName","src":"1662:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5584,"length":{"hexValue":"33","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1669:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1662:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"public"},{"constant":false,"functionSelector":"ee67cc2a","id":5589,"mutability":"mutable","name":"contractAddresses","nameLocation":"1730:17:30","nodeType":"VariableDeclaration","scope":6569,"src":"1696:51:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":5588,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5586,"name":"string","nodeType":"ElementaryTypeName","src":"1704:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1696:26:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5587,"name":"address","nodeType":"ElementaryTypeName","src":"1714:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"id":5592,"mutability":"mutable","name":"swapRouter","nameLocation":"1777:10:30","nodeType":"VariableDeclaration","scope":6569,"src":"1756:31:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5516","typeString":"contract ISwapRouter"},"typeName":{"id":5591,"nodeType":"UserDefinedTypeName","pathNode":{"id":5590,"name":"ISwapRouter","nameLocations":["1756:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":5516,"src":"1756:11:30"},"referencedDeclaration":5516,"src":"1756:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5516","typeString":"contract ISwapRouter"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"quoter","nameLocation":"1809:6:30","nodeType":"VariableDeclaration","scope":6569,"src":"1792:23:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"},"typeName":{"id":5594,"nodeType":"UserDefinedTypeName","pathNode":{"id":5593,"name":"IQuoter","nameLocations":["1792:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":5416,"src":"1792:7:30"},"referencedDeclaration":5416,"src":"1792:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"}},"visibility":"internal"},{"errorSelector":"bfac83b3","id":5597,"name":"AdminAddressInvalid","nameLocation":"1849:19:30","nodeType":"ErrorDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[],"src":"1868:2:30"},"src":"1843:28:30"},{"errorSelector":"df51a0d1","id":5599,"name":"RescueAddressInvalid","nameLocation":"1881:20:30","nodeType":"ErrorDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[],"src":"1901:2:30"},"src":"1875:29:30"},{"errorSelector":"d766085d","id":5601,"name":"WithdrawAddressInvalid","nameLocation":"1914:22:30","nodeType":"ErrorDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[],"src":"1936:2:30"},"src":"1908:31:30"},{"errorSelector":"4e12a74f","id":5603,"name":"FirstLenderLiqAddressInvalid","nameLocation":"1949:28:30","nodeType":"ErrorDefinition","parameters":{"id":5602,"nodeType":"ParameterList","parameters":[],"src":"1977:2:30"},"src":"1943:37:30"},{"errorSelector":"8dd8261b","id":5605,"name":"SecondLenderLiqAddressInvalid","nameLocation":"1990:29:30","nodeType":"ErrorDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[],"src":"2019:2:30"},"src":"1984:38:30"},{"errorSelector":"da3ebf73","id":5607,"name":"TokenNameAndAddressLengthMismatch","nameLocation":"2032:33:30","nodeType":"ErrorDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[],"src":"2065:2:30"},"src":"2026:42:30"},{"errorSelector":"7d8ee31c","id":5609,"name":"TokenInError","nameLocation":"2078:12:30","nodeType":"ErrorDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[],"src":"2090:2:30"},"src":"2072:21:30"},{"errorSelector":"99c71e63","id":5611,"name":"RecipientError","nameLocation":"2103:14:30","nodeType":"ErrorDefinition","parameters":{"id":5610,"nodeType":"ParameterList","parameters":[],"src":"2117:2:30"},"src":"2097:23:30"},{"errorSelector":"419fde01","id":5613,"name":"TokenOutError","nameLocation":"2130:13:30","nodeType":"ErrorDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[],"src":"2143:2:30"},"src":"2124:22:30"},{"errorSelector":"54e80d1b","id":5615,"name":"AmountInError","nameLocation":"2156:13:30","nodeType":"ErrorDefinition","parameters":{"id":5614,"nodeType":"ParameterList","parameters":[],"src":"2169:2:30"},"src":"2150:22:30"},{"errorSelector":"1792539f","id":5617,"name":"AmountOutMinimumTooLow","nameLocation":"2182:22:30","nodeType":"ErrorDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[],"src":"2204:2:30"},"src":"2176:31:30"},{"body":{"id":5623,"nodeType":"Block","src":"2227:35:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5620,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2234:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"ExpressionStatement","src":"2234:22:30"}]},"id":5624,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[],"src":"2224:2:30"},"returnParameters":{"id":5619,"nodeType":"ParameterList","parameters":[],"src":"2227:0:30"},"scope":6569,"src":"2213:49:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5940,"nodeType":"Block","src":"2647:2426:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5657,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"2658:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5659,"indexExpression":{"hexValue":"30","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2658:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2683:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2675:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5660,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:30","typeDescriptions":{}}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2658:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5665,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"2689:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5667,"indexExpression":{"hexValue":"31","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2689:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2706:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5668,"name":"address","nodeType":"ElementaryTypeName","src":"2706:7:30","typeDescriptions":{}}},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2689:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2658:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5674,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"2720:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5676,"indexExpression":{"hexValue":"32","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2720:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2745:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5677,"name":"address","nodeType":"ElementaryTypeName","src":"2737:7:30","typeDescriptions":{}}},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2720:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2658:89:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5687,"nodeType":"IfStatement","src":"2654:140:30","trueBody":{"id":5686,"nodeType":"Block","src":"2749:45:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5683,"name":"AdminAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"2765:19:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5685,"nodeType":"RevertStatement","src":"2758:28:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"2804:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2836:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2828:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5689,"name":"address","nodeType":"ElementaryTypeName","src":"2828:7:30","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2828:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2804:34:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5698,"nodeType":"IfStatement","src":"2800:86:30","trueBody":{"id":5697,"nodeType":"Block","src":"2840:46:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5694,"name":"RescueAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"2856:20:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5696,"nodeType":"RevertStatement","src":"2849:29:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"2896:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2930:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5700,"name":"address","nodeType":"ElementaryTypeName","src":"2922:7:30","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2896:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5709,"nodeType":"IfStatement","src":"2892:90:30","trueBody":{"id":5708,"nodeType":"Block","src":"2934:48:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5705,"name":"WithdrawAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"2950:22:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5707,"nodeType":"RevertStatement","src":"2943:31:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"2992:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3019:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5711,"name":"address","nodeType":"ElementaryTypeName","src":"3011:7:30","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3011:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2992:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5720,"nodeType":"IfStatement","src":"2988:89:30","trueBody":{"id":5719,"nodeType":"Block","src":"3023:54:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5716,"name":"FirstLenderLiqAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"3039:28:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3039:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5718,"nodeType":"RevertStatement","src":"3032:37:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"3087:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3115:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3107:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5722,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:30","typeDescriptions":{}}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3107:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3087:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5731,"nodeType":"IfStatement","src":"3083:91:30","trueBody":{"id":5730,"nodeType":"Block","src":"3119:55:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5727,"name":"SecondLenderLiqAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"3135:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5729,"nodeType":"RevertStatement","src":"3128:38:30"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5732,"name":"__AccessControl_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3182:30:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3182:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5734,"nodeType":"ExpressionStatement","src":"3182:32:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5735,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3221:32:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5737,"nodeType":"ExpressionStatement","src":"3221:34:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5738,"name":"_tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3268:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3280:6:30","memberName":"length","nodeType":"MemberAccess","src":"3268:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5740,"name":"_tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"3290:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_calldata_ptr","typeString":"address[5] calldata"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3306:6:30","memberName":"length","nodeType":"MemberAccess","src":"3290:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3268:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"3264:109:30","trueBody":{"id":5746,"nodeType":"Block","src":"3314:59:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5743,"name":"TokenNameAndAddressLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"3330:33:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5745,"nodeType":"RevertStatement","src":"3323:42:30"}]}},{"body":{"id":5777,"nodeType":"Block","src":"3429:103:30","statements":[{"expression":{"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5759,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"3438:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5763,"indexExpression":{"baseExpression":{"id":5760,"name":"_tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3449:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"}},"id":5762,"indexExpression":{"id":5761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3461:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3449:14:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3438:26:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5764,"name":"_tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"3467:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_calldata_ptr","typeString":"address[5] calldata"}},"id":5766,"indexExpression":{"id":5765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3483:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3467:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3438:47:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5768,"nodeType":"ExpressionStatement","src":"3438:47:30"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5769,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3494:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":5771,"indexExpression":{"id":5770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3505:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3494:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5772,"name":"_tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3510:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"}},"id":5774,"indexExpression":{"id":5773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3522:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3510:14:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3494:30:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5776,"nodeType":"ExpressionStatement","src":"3494:30:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3400:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5753,"name":"_tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"3404:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3416:6:30","memberName":"length","nodeType":"MemberAccess","src":"3404:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3400:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5778,"initializationExpression":{"assignments":[5749],"declarations":[{"constant":false,"id":5749,"mutability":"mutable","name":"i","nameLocation":"3393:1:30","nodeType":"VariableDeclaration","scope":5778,"src":"3388:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint","nodeType":"ElementaryTypeName","src":"3388:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5751,"initialValue":{"hexValue":"30","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3388:10:30"},"loopExpression":{"expression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3424:3:30","subExpression":{"id":5756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"3424:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5758,"nodeType":"ExpressionStatement","src":"3424:3:30"},"nodeType":"ForStatement","src":"3383:149:30"},{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5779,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"3540:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5780,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"3564:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3540:46:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5782,"nodeType":"ExpressionStatement","src":"3540:46:30"},{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5783,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"3593:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5784,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"3615:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3593:42:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5786,"nodeType":"ExpressionStatement","src":"3593:42:30"},{"body":{"id":5816,"nodeType":"Block","src":"3722:118:30","statements":[{"expression":{"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5798,"name":"contractKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"3731:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage","typeString":"string storage ref[3] storage ref"}},"id":5800,"indexExpression":{"id":5799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3744:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3731:15:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5801,"name":"_contractKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"3749:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$3_calldata_ptr","typeString":"string calldata[3] calldata"}},"id":5803,"indexExpression":{"id":5802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3763:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3749:16:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3731:34:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5805,"nodeType":"ExpressionStatement","src":"3731:34:30"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5806,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"3774:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5810,"indexExpression":{"baseExpression":{"id":5807,"name":"contractKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"3792:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage","typeString":"string storage ref[3] storage ref"}},"id":5809,"indexExpression":{"id":5808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3805:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3792:15:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3774:34:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5811,"name":"_contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"3811:18:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5813,"indexExpression":{"id":5812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3830:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3811:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3774:58:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5815,"nodeType":"ExpressionStatement","src":"3774:58:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3691:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5792,"name":"_contractKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"3695:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$3_calldata_ptr","typeString":"string calldata[3] calldata"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3709:6:30","memberName":"length","nodeType":"MemberAccess","src":"3695:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3691:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5817,"initializationExpression":{"assignments":[5788],"declarations":[{"constant":false,"id":5788,"mutability":"mutable","name":"i","nameLocation":"3684:1:30","nodeType":"VariableDeclaration","scope":5817,"src":"3679:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint","nodeType":"ElementaryTypeName","src":"3679:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5790,"initialValue":{"hexValue":"30","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3688:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3679:10:30"},"loopExpression":{"expression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3717:3:30","subExpression":{"id":5795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"3717:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5797,"nodeType":"ExpressionStatement","src":"3717:3:30"},"nodeType":"ForStatement","src":"3674:166:30"},{"expression":{"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5818,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"3848:10:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5516","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5820,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"3873:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5822,"indexExpression":{"hexValue":"726f75746572","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3891:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185","typeString":"literal_string \"router\""},"value":"router"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3873:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5819,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"3861:11:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$5516_$","typeString":"type(contract ISwapRouter)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5516","typeString":"contract ISwapRouter"}},"src":"3848:53:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5516","typeString":"contract ISwapRouter"}},"id":5825,"nodeType":"ExpressionStatement","src":"3848:53:30"},{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5826,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"3908:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5828,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"3925:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5830,"indexExpression":{"hexValue":"71756f746572","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3943:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1","typeString":"literal_string \"quoter\""},"value":"quoter"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3925:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5827,"name":"IQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"3917:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IQuoter_$5416_$","typeString":"type(contract IQuoter)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"}},"src":"3908:45:30","typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"}},"id":5833,"nodeType":"ExpressionStatement","src":"3908:45:30"},{"expression":{"arguments":[{"id":5837,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4034:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5834,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4020:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4030:3:30","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2695,"src":"4020:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2677_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"nodeType":"ExpressionStatement","src":"4020:29:30"},{"expression":{"arguments":[{"id":5843,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"4070:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5840,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4056:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4066:3:30","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2695,"src":"4056:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2677_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4056:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5845,"nodeType":"ExpressionStatement","src":"4056:30:30"},{"expression":{"arguments":[{"id":5849,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"4107:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5846,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4093:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4103:3:30","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2695,"src":"4093:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2677_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5851,"nodeType":"ExpressionStatement","src":"4093:27:30"},{"expression":{"arguments":[{"id":5855,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4141:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5852,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4127:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4137:3:30","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2695,"src":"4127:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2677_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5857,"nodeType":"ExpressionStatement","src":"4127:27:30"},{"expression":{"arguments":[{"id":5859,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4174:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5860,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4190:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5862,"indexExpression":{"hexValue":"30","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4201:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4190:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5858,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4163:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4163:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5864,"nodeType":"ExpressionStatement","src":"4163:41:30"},{"expression":{"arguments":[{"id":5866,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4222:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5867,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4238:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5869,"indexExpression":{"hexValue":"31","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4238:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5865,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4211:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5871,"nodeType":"ExpressionStatement","src":"4211:41:30"},{"expression":{"arguments":[{"id":5873,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4270:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5874,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4286:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5876,"indexExpression":{"hexValue":"32","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4297:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4286:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5872,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4259:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4259:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5878,"nodeType":"ExpressionStatement","src":"4259:41:30"},{"expression":{"arguments":[{"id":5880,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"4318:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5881,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4335:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5879,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4307:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4307:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5883,"nodeType":"ExpressionStatement","src":"4307:44:30"},{"expression":{"arguments":[{"id":5885,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"4369:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5886,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"4386:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5884,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4358:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4358:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5888,"nodeType":"ExpressionStatement","src":"4358:45:30"},{"expression":{"arguments":[{"id":5890,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"4421:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5891,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4435:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5889,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4410:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4410:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"ExpressionStatement","src":"4410:41:30"},{"expression":{"arguments":[{"id":5895,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"4469:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5896,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"4483:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5894,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4458:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4458:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5898,"nodeType":"ExpressionStatement","src":"4458:42:30"},{"expression":{"arguments":[{"id":5900,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4518:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5901,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"4532:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5903,"indexExpression":{"hexValue":"73776170706572","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4550:9:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666","typeString":"literal_string \"swapper\""},"value":"swapper"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4532:28:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5899,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[115],"referencedDeclaration":115,"src":"4507:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5905,"nodeType":"ExpressionStatement","src":"4507:54:30"},{"expression":{"arguments":[{"id":5907,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4584:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5908,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4600:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5906,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4570:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5910,"nodeType":"ExpressionStatement","src":"4570:45:30"},{"expression":{"arguments":[{"id":5912,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"4636:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5913,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"4653:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5911,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4622:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:47:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5915,"nodeType":"ExpressionStatement","src":"4622:47:30"},{"expression":{"arguments":[{"id":5917,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"4690:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5918,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"4704:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5916,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4676:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4676:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5920,"nodeType":"ExpressionStatement","src":"4676:41:30"},{"expression":{"arguments":[{"id":5922,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4738:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5923,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4752:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5921,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4724:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4724:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5925,"nodeType":"ExpressionStatement","src":"4724:43:30"},{"eventCall":{"arguments":[{"expression":{"id":5927,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4830:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4834:6:30","memberName":"sender","nodeType":"MemberAccess","src":"4830:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5929,"name":"_tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"4849:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"}},{"id":5930,"name":"_tokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"4869:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_calldata_ptr","typeString":"address[5] calldata"}},{"id":5931,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"4893:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},{"id":5932,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"4912:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5933,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"4941:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5934,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"4972:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5935,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"4996:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5936,"name":"contractKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"5021:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage","typeString":"string storage ref[3] storage ref"}},{"id":5937,"name":"_contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5042:18:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string calldata[5] calldata"},{"typeIdentifier":"t_array$_t_address_$5_calldata_ptr","typeString":"address[5] calldata"},{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_string_storage_$3_storage","typeString":"string storage ref[3] storage ref"},{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}],"id":5926,"name":"Initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"4811:10:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_string_memory_ptr_$5_memory_ptr_$_t_array$_t_address_$5_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_array$_t_string_memory_ptr_$3_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$returns$__$","typeString":"function (address,string memory[5] memory,address[5] memory,address[3] memory,address,address,address,address,string memory[3] memory,address[3] memory)"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:256:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5939,"nodeType":"EmitStatement","src":"4806:261:30"}]},"functionSelector":"c869787e","id":5941,"implemented":true,"kind":"function","modifiers":[{"id":5655,"kind":"modifierInvocation","modifierName":{"id":5654,"name":"initializer","nameLocations":["2635:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"2635:11:30"},"nodeType":"ModifierInvocation","src":"2635:11:30"}],"name":"initialize","nameLocation":"2277:10:30","nodeType":"FunctionDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"_tokenNames","nameLocation":"2313:11:30","nodeType":"VariableDeclaration","scope":5941,"src":"2294:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$5_calldata_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":5625,"name":"string","nodeType":"ElementaryTypeName","src":"2294:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5627,"length":{"hexValue":"35","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2301:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2294:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":5632,"mutability":"mutable","name":"_tokenAddresses","nameLocation":"2351:15:30","nodeType":"VariableDeclaration","scope":5941,"src":"2331:35:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_calldata_ptr","typeString":"address[5]"},"typeName":{"baseType":{"id":5629,"name":"address","nodeType":"ElementaryTypeName","src":"2331:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5631,"length":{"hexValue":"35","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2339:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"2331:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5]"}},"visibility":"internal"},{"constant":false,"id":5636,"mutability":"mutable","name":"_aconcagua","nameLocation":"2393:10:30","nodeType":"VariableDeclaration","scope":5941,"src":"2373:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":5633,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5635,"length":{"hexValue":"33","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"2373:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"},{"constant":false,"id":5638,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"2418:20:30","nodeType":"VariableDeclaration","scope":5941,"src":"2410:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5637,"name":"address","nodeType":"ElementaryTypeName","src":"2410:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5640,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"2453:22:30","nodeType":"VariableDeclaration","scope":5941,"src":"2445:30:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5639,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5642,"mutability":"mutable","name":"_firstLenderLiq","nameLocation":"2490:15:30","nodeType":"VariableDeclaration","scope":5941,"src":"2482:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5641,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"_secondLenderLiq","nameLocation":"2520:16:30","nodeType":"VariableDeclaration","scope":5941,"src":"2512:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5643,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5648,"mutability":"mutable","name":"_contractKeys","nameLocation":"2562:13:30","nodeType":"VariableDeclaration","scope":5941,"src":"2543:32:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$3_calldata_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":5645,"name":"string","nodeType":"ElementaryTypeName","src":"2543:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5647,"length":{"hexValue":"33","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2550:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"2543:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":5652,"mutability":"mutable","name":"_contractAddresses","nameLocation":"2602:18:30","nodeType":"VariableDeclaration","scope":5941,"src":"2582:38:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":5649,"name":"address","nodeType":"ElementaryTypeName","src":"2582:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5651,"length":{"hexValue":"33","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2590:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"2582:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"}],"src":"2287:338:30"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[],"src":"2647:0:30"},"scope":6569,"src":"2268:2805:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6671],"body":{"id":5949,"nodeType":"Block","src":"5145:27:30","statements":[{"expression":{"hexValue":"322e302e30","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5159:7:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3","typeString":"literal_string \"2.0.0\""},"value":"2.0.0"},"functionReturnParameters":5946,"id":5948,"nodeType":"Return","src":"5152:14:30"}]},"functionSelector":"54fd4d50","id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"5088:7:30","nodeType":"FunctionDefinition","overrides":{"id":5943,"nodeType":"OverrideSpecifier","overrides":[],"src":"5112:8:30"},"parameters":{"id":5942,"nodeType":"ParameterList","parameters":[],"src":"5095:2:30"},"returnParameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"5130:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5944,"name":"string","nodeType":"ElementaryTypeName","src":"5130:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5129:15:30"},"scope":6569,"src":"5079:93:30","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[6676],"body":{"id":5974,"nodeType":"Block","src":"5297:157:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"5308:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5342:3:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5334:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5960,"name":"address","nodeType":"ElementaryTypeName","src":"5334:7:30","typeDescriptions":{}}},"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5308:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5969,"nodeType":"IfStatement","src":"5304:92:30","trueBody":{"id":5968,"nodeType":"Block","src":"5348:48:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5965,"name":"WithdrawAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"5364:22:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5364:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5967,"nodeType":"RevertStatement","src":"5357:31:30"}]}},{"expression":{"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5970,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"5402:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5971,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"5426:22:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5402:46:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5973,"nodeType":"ExpressionStatement","src":"5402:46:30"}]},"functionSelector":"212f6039","id":5975,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5956,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"5281:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5957,"kind":"modifierInvocation","modifierName":{"id":5955,"name":"onlyRole","nameLocations":["5272:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5272:8:30"},"nodeType":"ModifierInvocation","src":"5272:24:30"}],"name":"setWithdrawWalletAddress","nameLocation":"5187:24:30","nodeType":"FunctionDefinition","overrides":{"id":5954,"nodeType":"OverrideSpecifier","overrides":[],"src":"5263:8:30"},"parameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"5226:22:30","nodeType":"VariableDeclaration","scope":5975,"src":"5218:30:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5951,"name":"address","nodeType":"ElementaryTypeName","src":"5218:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5211:42:30"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[],"src":"5297:0:30"},"scope":6569,"src":"5178:276:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6681],"body":{"id":5999,"nodeType":"Block","src":"5575:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5984,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"5586:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5618:3:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5610:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5985,"name":"address","nodeType":"ElementaryTypeName","src":"5610:7:30","typeDescriptions":{}}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5586:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5994,"nodeType":"IfStatement","src":"5582:88:30","trueBody":{"id":5993,"nodeType":"Block","src":"5624:46:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5990,"name":"RescueAddressInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"5640:20:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5992,"nodeType":"RevertStatement","src":"5633:29:30"}]}},{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5995,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"5676:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5996,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"5698:20:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5676:42:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5998,"nodeType":"ExpressionStatement","src":"5676:42:30"}]},"functionSelector":"d00411c9","id":6000,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5981,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"5559:14:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5982,"kind":"modifierInvocation","modifierName":{"id":5980,"name":"onlyRole","nameLocations":["5550:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5550:8:30"},"nodeType":"ModifierInvocation","src":"5550:24:30"}],"name":"setRescueWalletAddress","nameLocation":"5469:22:30","nodeType":"FunctionDefinition","overrides":{"id":5979,"nodeType":"OverrideSpecifier","overrides":[],"src":"5541:8:30"},"parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"5506:20:30","nodeType":"VariableDeclaration","scope":6000,"src":"5498:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5976,"name":"address","nodeType":"ElementaryTypeName","src":"5498:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5491:40:30"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[],"src":"5575:0:30"},"scope":6569,"src":"5460:264:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6727],"body":{"id":6319,"nodeType":"Block","src":"5841:2910:30","statements":[{"assignments":[6012],"declarations":[{"constant":false,"id":6012,"mutability":"mutable","name":"WETH","nameLocation":"5890:4:30","nodeType":"VariableDeclaration","scope":6319,"src":"5882:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6011,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6016,"initialValue":{"baseExpression":{"id":6013,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"5897:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6015,"indexExpression":{"hexValue":"57455448","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5908:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5897:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5882:33:30"},{"assignments":[6018],"declarations":[{"constant":false,"id":6018,"mutability":"mutable","name":"WBTC","nameLocation":"5930:4:30","nodeType":"VariableDeclaration","scope":6319,"src":"5922:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6017,"name":"address","nodeType":"ElementaryTypeName","src":"5922:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6022,"initialValue":{"baseExpression":{"id":6019,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"5937:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6021,"indexExpression":{"hexValue":"57425443","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5948:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73","typeString":"literal_string \"WBTC\""},"value":"WBTC"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5937:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5922:33:30"},{"assignments":[6024],"declarations":[{"constant":false,"id":6024,"mutability":"mutable","name":"USDC","nameLocation":"5970:4:30","nodeType":"VariableDeclaration","scope":6319,"src":"5962:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6023,"name":"address","nodeType":"ElementaryTypeName","src":"5962:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6028,"initialValue":{"baseExpression":{"id":6025,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"5977:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6027,"indexExpression":{"hexValue":"55534443","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5988:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5977:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5962:33:30"},{"assignments":[6030],"declarations":[{"constant":false,"id":6030,"mutability":"mutable","name":"USDT","nameLocation":"6010:4:30","nodeType":"VariableDeclaration","scope":6319,"src":"6002:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6029,"name":"address","nodeType":"ElementaryTypeName","src":"6002:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6034,"initialValue":{"baseExpression":{"id":6031,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"6017:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6033,"indexExpression":{"hexValue":"55534454","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6028:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6017:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6002:33:30"},{"body":{"id":6317,"nodeType":"Block","src":"6093:2653:30","statements":[{"assignments":[6048],"declarations":[{"constant":false,"id":6048,"mutability":"mutable","name":"swapParams","nameLocation":"6122:10:30","nodeType":"VariableDeclaration","scope":6317,"src":"6102:30:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams"},"typeName":{"id":6047,"nodeType":"UserDefinedTypeName","pathNode":{"id":6046,"name":"SwapParams","nameLocations":["6102:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":6666,"src":"6102:10:30"},"referencedDeclaration":6666,"src":"6102:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_storage_ptr","typeString":"struct IColateralContract2.SwapParams"}},"visibility":"internal"}],"id":6052,"initialValue":{"baseExpression":{"id":6049,"name":"swapsParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"6135:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata[] calldata"}},"id":6051,"indexExpression":{"id":6050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"6147:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6135:14:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"nodeType":"VariableDeclarationStatement","src":"6102:47:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6053,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6192:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6203:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"6192:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6210:9:30","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":5453,"src":"6192:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":6058,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6231:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6223:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"6223:7:30","typeDescriptions":{}}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6223:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6192:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6065,"nodeType":"IfStatement","src":"6188:94:30","trueBody":{"id":6064,"nodeType":"Block","src":"6238:44:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6061,"name":"RecipientError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"6256:14:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6256:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6063,"nodeType":"RevertStatement","src":"6249:23:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6066,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6296:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6307:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"6296:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6068,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"6319:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6296:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6070,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6327:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6338:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"6327:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6072,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"6350:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6327:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6296:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6079,"nodeType":"IfStatement","src":"6292:107:30","trueBody":{"id":6078,"nodeType":"Block","src":"6356:43:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6075,"name":"TokenOutError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"6374:13:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6077,"nodeType":"RevertStatement","src":"6367:22:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6080,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6463:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6474:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"6463:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6082,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"6485:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6084,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6493:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6504:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"6493:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6086,"name":"WBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"6515:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6493:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6463:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"6459:104:30","trueBody":{"id":6092,"nodeType":"Block","src":"6521:42:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6089,"name":"TokenInError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"6539:12:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"6532:21:30"}]}},{"assignments":[6095],"declarations":[{"constant":false,"id":6095,"mutability":"mutable","name":"quotedAmountOut","nameLocation":"6689:15:30","nodeType":"VariableDeclaration","scope":6317,"src":"6681:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6096,"nodeType":"VariableDeclarationStatement","src":"6681:23:30"},{"clauses":[{"block":{"id":6124,"nodeType":"Block","src":"6828:165:30","statements":[{"expression":{"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6109,"name":"quotedAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"6843:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6110,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"6861:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6843:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6112,"nodeType":"ExpressionStatement","src":"6843:27:30"},{"eventCall":{"arguments":[{"expression":{"id":6114,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6896:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6907:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"6896:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6116,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6916:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6927:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"6916:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6118,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6937:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6948:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"6937:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"6937:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6121,"name":"quotedAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"6965:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"name":"Quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"6890:5:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6890:91:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6123,"nodeType":"EmitStatement","src":"6885:96:30"}]},"errorName":"","id":6125,"nodeType":"TryCatchClause","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"amountOut","nameLocation":"6817:9:30","nodeType":"VariableDeclaration","scope":6125,"src":"6809:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6106,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6808:19:30"},"src":"6800:193:30"},{"block":{"id":6140,"nodeType":"Block","src":"7030:121:30","statements":[{"eventCall":{"arguments":[{"expression":{"id":6130,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7061:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7072:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"7061:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6132,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7081:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7092:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"7081:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6134,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7102:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7113:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7102:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7120:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"7102:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6137,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"7130:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6129,"name":"QuoteError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"7050:10:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,string memory)"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7050:89:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6139,"nodeType":"EmitStatement","src":"7045:94:30"}]},"errorName":"Error","id":6141,"nodeType":"TryCatchClause","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"errorMsg","nameLocation":"7020:8:30","nodeType":"VariableDeclaration","scope":6141,"src":"7006:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6126,"name":"string","nodeType":"ElementaryTypeName","src":"7006:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7005:24:30"},"src":"6994:157:30"}],"externalCall":{"arguments":[{"expression":{"expression":{"id":6099,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6748:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6759:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"6748:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:4:30","memberName":"path","nodeType":"MemberAccess","referencedDeclaration":5451,"src":"6748:22:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"expression":{"id":6102,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"6772:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6783:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"6772:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6790:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"6772:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6097,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"6725:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IQuoter_$5416","typeString":"contract IQuoter"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6732:15:30","memberName":"quoteExactInput","nodeType":"MemberAccess","referencedDeclaration":5373,"src":"6725:22:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) external returns (uint256)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6725:74:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6142,"nodeType":"TryStatement","src":"6721:430:30"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6143,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7263:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7274:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7263:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7281:16:30","memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":5459,"src":"7263:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7301:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7263:39:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6148,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7306:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7317:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7306:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7324:16:30","memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":5459,"src":"7306:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"quotedAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"7344:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3938","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7362:2:30","typeDescriptions":{"typeIdentifier":"t_rational_98_by_1","typeString":"int_const 98"},"value":"98"},"src":"7344:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7368:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7343:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7306:65:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7263:108:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"7259:166:30","trueBody":{"id":6162,"nodeType":"Block","src":"7373:52:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6159,"name":"AmountOutMinimumTooLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"7391:22:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7391:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6161,"nodeType":"RevertStatement","src":"7384:31:30"}]}},{"assignments":[6166],"declarations":[{"constant":false,"id":6166,"mutability":"mutable","name":"token","nameLocation":"7462:5:30","nodeType":"VariableDeclaration","scope":6317,"src":"7455:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":6165,"nodeType":"UserDefinedTypeName","pathNode":{"id":6164,"name":"IERC20","nameLocations":["7455:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"7455:6:30"},"referencedDeclaration":3204,"src":"7455:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6171,"initialValue":{"arguments":[{"expression":{"id":6168,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7477:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7488:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"7477:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6167,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7470:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7470:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"7455:41:30"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6172,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7509:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7520:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7509:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7527:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"7509:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7539:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7509:31:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6177,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7544:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7555:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7544:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7562:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"7544:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"arguments":[{"id":6184,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7597:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7589:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6182,"name":"address","nodeType":"ElementaryTypeName","src":"7589:7:30","typeDescriptions":{}}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"7573:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7579:9:30","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"7573:15:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7544:59:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7509:94:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6193,"nodeType":"IfStatement","src":"7505:143:30","trueBody":{"id":6192,"nodeType":"Block","src":"7605:43:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6189,"name":"AmountInError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"7623:13:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7623:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6191,"nodeType":"RevertStatement","src":"7616:22:30"}]}},{"assignments":[6195],"declarations":[{"constant":false,"id":6195,"mutability":"mutable","name":"originalAmount","nameLocation":"7666:14:30","nodeType":"VariableDeclaration","scope":6317,"src":"7658:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7658:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6206,"initialValue":{"arguments":[{"arguments":[{"id":6203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7729:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7721:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6201,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:30","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7721:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":6197,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7690:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7701:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"7690:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6196,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7683:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7711:9:30","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"7683:37:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7658:77:30"},{"expression":{"arguments":[{"id":6210,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"7809:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"baseExpression":{"id":6211,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"7816:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6213,"indexExpression":{"hexValue":"726f75746572","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7834:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185","typeString":"literal_string \"router\""},"value":"router"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7816:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6214,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"7845:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7856:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"7845:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7863:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"7845:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6207,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"7786:9:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$3616_$","typeString":"type(library SafeERC20)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:12:30","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3273,"src":"7786:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:86:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"ExpressionStatement","src":"7786:86:30"},{"assignments":[6220],"declarations":[{"constant":false,"id":6220,"mutability":"mutable","name":"commands","nameLocation":"7938:8:30","nodeType":"VariableDeclaration","scope":6317,"src":"7925:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6219,"name":"bytes","nodeType":"ElementaryTypeName","src":"7925:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6232,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":6227,"name":"Commands","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7979:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Commands_$5345_$","typeString":"type(library Commands)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7988:16:30","memberName":"V3_SWAP_EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"7979:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7973:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6225,"name":"uint8","nodeType":"ElementaryTypeName","src":"7973:5:30","typeDescriptions":{}}},"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7966:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6223,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7966:6:30","typeDescriptions":{}}},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7966:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":6221,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7949:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7953:12:30","memberName":"encodePacked","nodeType":"MemberAccess","src":"7949:16:30","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:58:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7925:82:30"},{"assignments":[6237],"declarations":[{"constant":false,"id":6237,"mutability":"mutable","name":"inputs","nameLocation":"8031:6:30","nodeType":"VariableDeclaration","scope":6317,"src":"8016:21:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6235,"name":"bytes","nodeType":"ElementaryTypeName","src":"8016:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6236,"nodeType":"ArrayTypeName","src":"8016:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":6243,"initialValue":{"arguments":[{"hexValue":"31","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8052:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8040:11:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":6238,"name":"bytes","nodeType":"ElementaryTypeName","src":"8044:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6239,"nodeType":"ArrayTypeName","src":"8044:7:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8040:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8016:38:30"},{"expression":{"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6244,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"8162:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":6246,"indexExpression":{"hexValue":"30","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8169:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8162:9:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":6249,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8185:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8196:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8185:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8203:9:30","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":5453,"src":"8185:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6252,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8214:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8225:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8214:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8232:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"8214:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6255,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8242:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8253:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8242:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8260:16:30","memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":5459,"src":"8242:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":6258,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8278:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8289:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8278:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:4:30","memberName":"path","nodeType":"MemberAccess","referencedDeclaration":5451,"src":"8278:22:30","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"hexValue":"66616c7365","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8302:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6247,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8174:3:30","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8178:6:30","memberName":"encode","nodeType":"MemberAccess","src":"8174:10:30","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8174:134:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"8162:146:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6264,"nodeType":"ExpressionStatement","src":"8162:146:30"},{"clauses":[{"block":{"id":6303,"nodeType":"Block","src":"8421:216:30","statements":[{"assignments":[6278],"declarations":[{"constant":false,"id":6278,"mutability":"mutable","name":"resultAmount","nameLocation":"8440:12:30","nodeType":"VariableDeclaration","scope":6303,"src":"8432:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8432:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6289,"initialValue":{"arguments":[{"arguments":[{"id":6286,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8501:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8493:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6284,"name":"address","nodeType":"ElementaryTypeName","src":"8493:7:30","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8493:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":6280,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8462:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8473:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"8462:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6279,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"8455:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8455:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8483:9:30","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"8455:37:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8455:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8432:75:30"},{"eventCall":{"arguments":[{"expression":{"id":6291,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8528:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8539:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"8528:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6293,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8548:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8559:8:30","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6665,"src":"8548:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":6295,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8569:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8580:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8569:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8587:8:30","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5457,"src":"8569:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6298,"name":"resultAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"8597:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6299,"name":"originalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"8612:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8597:29:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6290,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"8523:4:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8523:104:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"EmitStatement","src":"8518:109:30"}]},"errorName":"","id":6304,"nodeType":"TryCatchClause","src":"8421:216:30"},{"block":{"id":6314,"nodeType":"Block","src":"8674:65:30","statements":[{"eventCall":{"arguments":[{"expression":{"id":6309,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8700:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8711:7:30","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6663,"src":"8700:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6311,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"8720:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6308,"name":"SwapError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"8690:9:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8690:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6313,"nodeType":"EmitStatement","src":"8685:44:30"}]},"errorName":"Error","id":6315,"nodeType":"TryCatchClause","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"errorMsg","nameLocation":"8664:8:30","nodeType":"VariableDeclaration","scope":6315,"src":"8650:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6305,"name":"string","nodeType":"ElementaryTypeName","src":"8650:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8649:24:30"},"src":"8638:101:30"}],"externalCall":{"arguments":[{"id":6271,"name":"commands","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"8375:8:30","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6272,"name":"inputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"8385:6:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"expression":{"expression":{"id":6273,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"8393:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8404:6:30","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6661,"src":"8393:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8411:8:30","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5455,"src":"8393:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":6266,"name":"contractAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8338:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6268,"indexExpression":{"hexValue":"726f75746572","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8356:8:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185","typeString":"literal_string \"router\""},"value":"router"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8338:27:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6265,"name":"IUniversalRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"8321:16:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniversalRouter_$5230_$","typeString":"type(contract IUniversalRouter)"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8321:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniversalRouter_$5230","typeString":"contract IUniversalRouter"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8367:7:30","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":5229,"src":"8321:53:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes memory,bytes memory[] memory,uint256) payable external"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8321:99:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6316,"nodeType":"TryStatement","src":"8317:422:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"6064:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6040,"name":"swapsParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"6068:11:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract2.SwapParams calldata[] calldata"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6080:6:30","memberName":"length","nodeType":"MemberAccess","src":"6068:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6064:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6318,"initializationExpression":{"assignments":[6036],"declarations":[{"constant":false,"id":6036,"mutability":"mutable","name":"i","nameLocation":"6057:1:30","nodeType":"VariableDeclaration","scope":6318,"src":"6049:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6038,"initialValue":{"hexValue":"30","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6061:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6049:13:30"},"loopExpression":{"expression":{"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6088:3:30","subExpression":{"id":6043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"6088:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6045,"nodeType":"ExpressionStatement","src":"6088:3:30"},"nodeType":"ForStatement","src":"6044:2702:30"}]},"functionSelector":"2ffe9942","id":6320,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6008,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"5827:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6009,"kind":"modifierInvocation","modifierName":{"id":6007,"name":"onlyRole","nameLocations":["5818:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"5818:8:30"},"nodeType":"ModifierInvocation","src":"5818:22:30"}],"name":"swapExactInputs","nameLocation":"5739:15:30","nodeType":"FunctionDefinition","overrides":{"id":6006,"nodeType":"OverrideSpecifier","overrides":[],"src":"5809:8:30"},"parameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"swapsParams","nameLocation":"5783:11:30","nodeType":"VariableDeclaration","scope":6320,"src":"5761:33:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract2.SwapParams[]"},"typeName":{"baseType":{"id":6002,"nodeType":"UserDefinedTypeName","pathNode":{"id":6001,"name":"SwapParams","nameLocations":["5761:10:30"],"nodeType":"IdentifierPath","referencedDeclaration":6666,"src":"5761:10:30"},"referencedDeclaration":6666,"src":"5761:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_storage_ptr","typeString":"struct IColateralContract2.SwapParams"}},"id":6003,"nodeType":"ArrayTypeName","src":"5761:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_storage_$dyn_storage_ptr","typeString":"struct IColateralContract2.SwapParams[]"}},"visibility":"internal"}],"src":"5754:45:30"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[],"src":"5841:0:30"},"scope":6569,"src":"5730:3021:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6353,"nodeType":"Block","src":"8829:164:30","statements":[{"body":{"id":6349,"nodeType":"Block","src":"8881:88:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6338,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"8894:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6342,"indexExpression":{"baseExpression":{"id":6339,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"8905:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":6341,"indexExpression":{"id":6340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"8916:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8905:13:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8894:25:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6343,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"8923:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8894:34:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6348,"nodeType":"IfStatement","src":"8890:72:30","trueBody":{"id":6347,"nodeType":"Block","src":"8930:32:30","statements":[{"expression":{"hexValue":"74727565","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8948:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6326,"id":6346,"nodeType":"Return","src":"8941:11:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"8853:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6332,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"8857:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8868:6:30","memberName":"length","nodeType":"MemberAccess","src":"8857:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8853:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6350,"initializationExpression":{"assignments":[6328],"declarations":[{"constant":false,"id":6328,"mutability":"mutable","name":"i","nameLocation":"8846:1:30","nodeType":"VariableDeclaration","scope":6350,"src":"8841:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6327,"name":"uint","nodeType":"ElementaryTypeName","src":"8841:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6330,"initialValue":{"hexValue":"30","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8841:10:30"},"loopExpression":{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8876:3:30","subExpression":{"id":6335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"8876:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6337,"nodeType":"ExpressionStatement","src":"8876:3:30"},"nodeType":"ForStatement","src":"8836:133:30"},{"expression":{"hexValue":"66616c7365","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8982:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6326,"id":6352,"nodeType":"Return","src":"8975:12:30"}]},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"tokenTableContains","nameLocation":"8766:18:30","nodeType":"FunctionDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"token","nameLocation":"8793:5:30","nodeType":"VariableDeclaration","scope":6354,"src":"8785:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6321,"name":"address","nodeType":"ElementaryTypeName","src":"8785:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8784:15:30"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6354,"src":"8823:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6324,"name":"bool","nodeType":"ElementaryTypeName","src":"8823:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8822:6:30"},"scope":6569,"src":"8757:236:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[6688],"body":{"id":6385,"nodeType":"Block","src":"9136:245:30","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":6371,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"9251:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6373,"indexExpression":{"id":6372,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"9262:12:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9251:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6370,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"9244:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9244:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"id":6375,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"9278:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6376,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"9301:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6367,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"9221:9:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$3616_$","typeString":"type(library SafeERC20)"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9231:12:30","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3273,"src":"9221:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:88:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6378,"nodeType":"ExpressionStatement","src":"9221:88:30"},{"eventCall":{"arguments":[{"id":6380,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"9330:21:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6381,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"9353:12:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6382,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"9367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6379,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"9321:8:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6384,"nodeType":"EmitStatement","src":"9316:59:30"}]},"functionSelector":"dc048cf2","id":6386,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6362,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"9106:15:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6363,"kind":"modifierInvocation","modifierName":{"id":6361,"name":"onlyRole","nameLocations":["9097:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"9097:8:30"},"nodeType":"ModifierInvocation","src":"9097:25:30"},{"id":6365,"kind":"modifierInvocation","modifierName":{"id":6364,"name":"nonReentrant","nameLocations":["9123:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":794,"src":"9123:12:30"},"nodeType":"ModifierInvocation","src":"9123:12:30"}],"name":"withdraw","nameLocation":"9008:8:30","nodeType":"FunctionDefinition","overrides":{"id":6360,"nodeType":"OverrideSpecifier","overrides":[],"src":"9088:8:30"},"parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"_amount","nameLocation":"9031:7:30","nodeType":"VariableDeclaration","scope":6386,"src":"9023:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"9023:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6358,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"9061:12:30","nodeType":"VariableDeclaration","scope":6386,"src":"9045:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6357,"name":"string","nodeType":"ElementaryTypeName","src":"9045:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9016:62:30"},"returnParameters":{"id":6366,"nodeType":"ParameterList","parameters":[],"src":"9136:0:30"},"scope":6569,"src":"8999:382:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6695],"body":{"id":6411,"nodeType":"Block","src":"9473:150:30","statements":[{"assignments":[6396],"declarations":[{"constant":false,"id":6396,"mutability":"mutable","name":"token","nameLocation":"9533:5:30","nodeType":"VariableDeclaration","scope":6411,"src":"9526:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},"typeName":{"id":6395,"nodeType":"UserDefinedTypeName","pathNode":{"id":6394,"name":"IERC20","nameLocations":["9526:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3204,"src":"9526:6:30"},"referencedDeclaration":3204,"src":"9526:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6402,"initialValue":{"arguments":[{"baseExpression":{"id":6398,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"9548:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6400,"indexExpression":{"id":6399,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"9559:12:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9548:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6397,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"9541:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9541:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"9526:47:30"},{"expression":{"arguments":[{"arguments":[{"id":6407,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9611:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6405,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:30","typeDescriptions":{}}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6403,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"9587:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9593:9:30","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3161,"src":"9587:15:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9587:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6393,"id":6410,"nodeType":"Return","src":"9580:37:30"}]},"functionSelector":"35ee5f87","id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9396:9:30","nodeType":"FunctionDefinition","overrides":{"id":6390,"nodeType":"OverrideSpecifier","overrides":[],"src":"9446:8:30"},"parameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"9420:12:30","nodeType":"VariableDeclaration","scope":6412,"src":"9406:26:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6387,"name":"string","nodeType":"ElementaryTypeName","src":"9406:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9405:28:30"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6412,"src":"9464:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"9464:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9463:9:30"},"scope":6569,"src":"9387:236:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[6708],"body":{"id":6470,"nodeType":"Block","src":"9702:250:30","statements":[{"assignments":[6423],"declarations":[{"constant":false,"id":6423,"mutability":"mutable","name":"balances","nameLocation":"9726:8:30","nodeType":"VariableDeclaration","scope":6470,"src":"9709:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"9709:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6422,"nodeType":"ArrayTypeName","src":"9709:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6432,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6427,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"9751:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9762:6:30","memberName":"length","nodeType":"MemberAccess","src":"9751:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9771:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9751:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9737:13:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6424,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6425,"nodeType":"ArrayTypeName","src":"9741:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9737:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9709:64:30"},{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6433,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"9780:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6435,"indexExpression":{"hexValue":"30","id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9789:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9780:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":6438,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9802:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract2_$6569","typeString":"contract ColateralContract2"}],"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9794:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6436,"name":"address","nodeType":"ElementaryTypeName","src":"9794:7:30","typeDescriptions":{}}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9794:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9808:7:30","memberName":"balance","nodeType":"MemberAccess","src":"9794:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6442,"nodeType":"ExpressionStatement","src":"9780:35:30"},{"body":{"id":6466,"nodeType":"Block","src":"9868:57:30","statements":[{"expression":{"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6454,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"9877:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6456,"indexExpression":{"id":6455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"9886:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9877:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":6458,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"9901:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":6462,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"9912:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9914:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9912:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9901:15:30","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"9891:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) view returns (uint256)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9891:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9877:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6465,"nodeType":"ExpressionStatement","src":"9877:40:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"9839:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6448,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"9844:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9855:6:30","memberName":"length","nodeType":"MemberAccess","src":"9844:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6467,"initializationExpression":{"assignments":[6444],"declarations":[{"constant":false,"id":6444,"mutability":"mutable","name":"i","nameLocation":"9832:1:30","nodeType":"VariableDeclaration","scope":6467,"src":"9827:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6443,"name":"uint","nodeType":"ElementaryTypeName","src":"9827:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6446,"initialValue":{"hexValue":"31","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9827:10:30"},"loopExpression":{"expression":{"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9863:3:30","subExpression":{"id":6451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"9863:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6453,"nodeType":"ExpressionStatement","src":"9863:3:30"},"nodeType":"ForStatement","src":"9822:103:30"},{"expression":{"id":6468,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"9938:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6418,"id":6469,"nodeType":"Return","src":"9931:15:30"}]},"functionSelector":"00113e08","id":6471,"implemented":true,"kind":"function","modifiers":[],"name":"getBalances","nameLocation":"9638:11:30","nodeType":"FunctionDefinition","overrides":{"id":6414,"nodeType":"OverrideSpecifier","overrides":[],"src":"9666:8:30"},"parameters":{"id":6413,"nodeType":"ParameterList","parameters":[],"src":"9649:2:30"},"returnParameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6471,"src":"9684:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9684:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6416,"nodeType":"ArrayTypeName","src":"9684:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9683:18:30"},"scope":6569,"src":"9629:323:30","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6702],"body":{"id":6504,"nodeType":"Block","src":"10090:251:30","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":6488,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"10203:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6490,"indexExpression":{"id":6489,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"10214:12:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10203:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6487,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"10196:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3204_$","typeString":"type(contract IERC20)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10196:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"}},{"id":6492,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"10230:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6493,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"10251:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3204","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6484,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"10173:9:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$3616_$","typeString":"type(library SafeERC20)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10183:12:30","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3273,"src":"10173:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3204_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10173:86:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6495,"nodeType":"ExpressionStatement","src":"10173:86:30"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6497,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"10278:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10278:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6499,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"10292:12:30","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6500,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"10306:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6501,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"10315:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6496,"name":"Rescue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"10271:6:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,string memory,uint256,address)"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10271:64:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6503,"nodeType":"EmitStatement","src":"10266:69:30"}]},"functionSelector":"0828c404","id":6505,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6479,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"10063:12:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6480,"kind":"modifierInvocation","modifierName":{"id":6478,"name":"onlyRole","nameLocations":["10054:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"10054:8:30"},"nodeType":"ModifierInvocation","src":"10054:22:30"},{"id":6482,"kind":"modifierInvocation","modifierName":{"id":6481,"name":"nonReentrant","nameLocations":["10077:12:30"],"nodeType":"IdentifierPath","referencedDeclaration":794,"src":"10077:12:30"},"nodeType":"ModifierInvocation","src":"10077:12:30"}],"name":"rescue","nameLocation":"9967:6:30","nodeType":"FunctionDefinition","overrides":{"id":6477,"nodeType":"OverrideSpecifier","overrides":[],"src":"10045:8:30"},"parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"_amount","nameLocation":"9988:7:30","nodeType":"VariableDeclaration","scope":6505,"src":"9980:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6472,"name":"uint256","nodeType":"ElementaryTypeName","src":"9980:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"10018:12:30","nodeType":"VariableDeclaration","scope":6505,"src":"10002:28:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6474,"name":"string","nodeType":"ElementaryTypeName","src":"10002:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9973:62:30"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[],"src":"10090:0:30"},"scope":6569,"src":"9958:383:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6713],"body":{"id":6516,"nodeType":"Block","src":"10558:38:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6512,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"10572:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":6513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10582:6:30","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"10572:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2677_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer) view returns (uint256)"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10572:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6511,"id":6515,"nodeType":"Return","src":"10565:25:30"}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"10347:134:30","text":" @dev Returns the number `roles`. Can be used\n together with {getRoleByIndex} to enumerate all bearers of a role."},"functionSelector":"83d33319","id":6517,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleCount","nameLocation":"10494:12:30","nodeType":"FunctionDefinition","overrides":{"id":6508,"nodeType":"OverrideSpecifier","overrides":[],"src":"10531:8:30"},"parameters":{"id":6507,"nodeType":"ParameterList","parameters":[],"src":"10506:2:30"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6517,"src":"10549:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10549:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10548:9:30"},"scope":6569,"src":"10485:111:30","stateMutability":"view","virtual":true,"visibility":"external"},{"baseFunctions":[6720],"body":{"id":6531,"nodeType":"Block","src":"11217:39:30","statements":[{"expression":{"arguments":[{"id":6528,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"11244:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6526,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"11231:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2677_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":6527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11241:2:30","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"11231:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2677_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$2677_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6525,"id":6530,"nodeType":"Return","src":"11224:26:30"}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"10602:526:30","text":" @dev Returns one of the `roles`. `index` must be a\n value between 0 and {getRoleCount}, non-inclusive.\n Role are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"25acc985","id":6532,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleByIndex","nameLocation":"11141:14:30","nodeType":"FunctionDefinition","overrides":{"id":6522,"nodeType":"OverrideSpecifier","overrides":[],"src":"11190:8:30"},"parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"index","nameLocation":"11161:5:30","nodeType":"VariableDeclaration","scope":6532,"src":"11156:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint","nodeType":"ElementaryTypeName","src":"11156:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11155:12:30"},"returnParameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6532,"src":"11208:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11208:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11207:9:30"},"scope":6569,"src":"11132:124:30","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":6541,"nodeType":"Block","src":"11328:30:30","statements":[{"expression":{"id":6539,"name":"tokenNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"11342:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage","typeString":"string storage ref[5] storage ref"}},"functionReturnParameters":6538,"id":6540,"nodeType":"Return","src":"11335:17:30"}]},"functionSelector":"2ad753e4","id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenNames","nameLocation":"11271:13:30","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[],"src":"11284:2:30"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6542,"src":"11310:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":6534,"name":"string","nodeType":"ElementaryTypeName","src":"11310:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6536,"length":{"hexValue":"35","id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11317:1:30","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"11310:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"}],"src":"11309:18:30"},"scope":6569,"src":"11262:96:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6567,"nodeType":"Block","src":"11391:196:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6545,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11429:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11435:7:30","memberName":"chainid","nodeType":"MemberAccess","src":"11429:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6547,"name":"RSK_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"11446:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11429:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6565,"nodeType":"Block","src":"11530:52:30","statements":[{"expression":{"arguments":[{"hexValue":"4e6f742070617961626c65206f6e207468697320636861696e","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11546:27:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb","typeString":"literal_string \"Not payable on this chain\""},"value":"Not payable on this chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb","typeString":"literal_string \"Not payable on this chain\""}],"id":6561,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11539:6:30","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11539:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"ExpressionStatement","src":"11539:35:30"}]},"id":6566,"nodeType":"IfStatement","src":"11425:157:30","trueBody":{"id":6560,"nodeType":"Block","src":"11454:70:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"baseExpression":{"id":6550,"name":"tokenTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"11469:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6552,"indexExpression":{"hexValue":"57455448","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11480:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11469:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6549,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"11463:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$6739_$","typeString":"type(contract IWETH)"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$6739","typeString":"contract IWETH"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11489:7:30","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":6733,"src":"11463:33:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11504:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11508:5:30","memberName":"value","nodeType":"MemberAccess","src":"11504:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11463:51:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6559,"nodeType":"ExpressionStatement","src":"11463:53:30"}]}}]},"id":6568,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[],"src":"11371:2:30"},"returnParameters":{"id":6544,"nodeType":"ParameterList","parameters":[],"src":"11391:0:30"},"scope":6569,"src":"11364:223:30","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6570,"src":"783:10807:30","usedErrors":[5597,5599,5601,5603,5605,5607,5609,5611,5613,5615,5617]}],"src":"33:11559:30"},"id":30},"contracts/IColateralContract2.sol":{"ast":{"absolutePath":"contracts/IColateralContract2.sol","exportedSymbols":{"IColateralContract2":[6728],"ISwapRouter":[5516],"IUniswapV3SwapCallback":[5359]},"id":6729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":6571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6729,"sourceUnit":5517,"src":"33:68:31","symbolAliases":[],"unitAlias":""},{"id":6572,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"105:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IColateralContract2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6728,"linearizedBaseContracts":[6728],"name":"IColateralContract2","nameLocation":"142:19:31","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"7f1f0de4dc14e9ab39c52c069e883f78ab6f9c7854b254718a298e76f2ebdc6d","id":6604,"name":"Initialize","nameLocation":"231:10:31","nodeType":"EventDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"256:6:31","nodeType":"VariableDeclaration","scope":6604,"src":"248:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6573,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6578,"indexed":false,"mutability":"mutable","name":"_tokenNames","nameLocation":"279:11:31","nodeType":"VariableDeclaration","scope":6604,"src":"269:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$5_memory_ptr","typeString":"string[5]"},"typeName":{"baseType":{"id":6575,"name":"string","nodeType":"ElementaryTypeName","src":"269:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6577,"length":{"hexValue":"35","id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"269:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$5_storage_ptr","typeString":"string[5]"}},"visibility":"internal"},{"constant":false,"id":6582,"indexed":false,"mutability":"mutable","name":"_tokenAddresses","nameLocation":"308:15:31","nodeType":"VariableDeclaration","scope":6604,"src":"297:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_memory_ptr","typeString":"address[5]"},"typeName":{"baseType":{"id":6579,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6581,"length":{"hexValue":"35","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"305:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"297:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$5_storage_ptr","typeString":"address[5]"}},"visibility":"internal"},{"constant":false,"id":6586,"indexed":false,"mutability":"mutable","name":"_aconcagua","nameLocation":"341:10:31","nodeType":"VariableDeclaration","scope":6604,"src":"330:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_memory_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":6583,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6585,"length":{"hexValue":"33","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"338:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"330:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"},{"constant":false,"id":6588,"indexed":false,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"366:20:31","nodeType":"VariableDeclaration","scope":6604,"src":"358:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6590,"indexed":false,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"401:22:31","nodeType":"VariableDeclaration","scope":6604,"src":"393:30:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6589,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6592,"indexed":false,"mutability":"mutable","name":"_firstLenderLiq","nameLocation":"438:15:31","nodeType":"VariableDeclaration","scope":6604,"src":"430:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6591,"name":"address","nodeType":"ElementaryTypeName","src":"430:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6594,"indexed":false,"mutability":"mutable","name":"_secondLenderLiq","nameLocation":"468:16:31","nodeType":"VariableDeclaration","scope":6604,"src":"460:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6593,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6598,"indexed":false,"mutability":"mutable","name":"_contractKeys","nameLocation":"501:13:31","nodeType":"VariableDeclaration","scope":6604,"src":"491:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":6595,"name":"string","nodeType":"ElementaryTypeName","src":"491:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6597,"length":{"hexValue":"33","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"498:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"491:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":6602,"indexed":false,"mutability":"mutable","name":"_contractAddresses","nameLocation":"532:18:31","nodeType":"VariableDeclaration","scope":6604,"src":"521:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_memory_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":6599,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6601,"length":{"hexValue":"33","id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"529:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"521:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"}],"src":"241:314:31"},"src":"225:331:31"},{"anonymous":false,"eventSelector":"901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef","id":6612,"name":"Withdraw","nameLocation":"596:8:31","nodeType":"EventDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"613:6:31","nodeType":"VariableDeclaration","scope":6612,"src":"605:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6605,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6608,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"628:5:31","nodeType":"VariableDeclaration","scope":6612,"src":"621:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6607,"name":"string","nodeType":"ElementaryTypeName","src":"621:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6610,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"643:6:31","nodeType":"VariableDeclaration","scope":6612,"src":"635:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6609,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"604:46:31"},"src":"590:61:31"},{"anonymous":false,"eventSelector":"22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa","id":6622,"name":"Rescue","nameLocation":"687:6:31","nodeType":"EventDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"702:6:31","nodeType":"VariableDeclaration","scope":6622,"src":"694:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6613,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6616,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"717:5:31","nodeType":"VariableDeclaration","scope":6622,"src":"710:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6615,"name":"string","nodeType":"ElementaryTypeName","src":"710:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6618,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"732:6:31","nodeType":"VariableDeclaration","scope":6622,"src":"724:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"724:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6620,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"748:2:31","nodeType":"VariableDeclaration","scope":6622,"src":"740:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"693:58:31"},"src":"681:71:31"},{"anonymous":false,"eventSelector":"fa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe235","id":6632,"name":"Swap","nameLocation":"794:4:31","nodeType":"EventDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"807:7:31","nodeType":"VariableDeclaration","scope":6632,"src":"799:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6623,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6626,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"824:8:31","nodeType":"VariableDeclaration","scope":6632,"src":"816:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6625,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6628,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"842:8:31","nodeType":"VariableDeclaration","scope":6632,"src":"834:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6627,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6630,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"860:9:31","nodeType":"VariableDeclaration","scope":6632,"src":"852:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"798:72:31"},"src":"788:83:31"},{"anonymous":false,"eventSelector":"48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb91","id":6638,"name":"SwapError","nameLocation":"911:9:31","nodeType":"EventDefinition","parameters":{"id":6637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"929:7:31","nodeType":"VariableDeclaration","scope":6638,"src":"921:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6633,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6636,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"945:3:31","nodeType":"VariableDeclaration","scope":6638,"src":"938:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6635,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"920:29:31"},"src":"905:45:31"},{"anonymous":false,"eventSelector":"2486dbd80d4ae64aa9afaacc3370501ed791559e2fdfcd6101f3835150f31080","id":6648,"name":"Quote","nameLocation":"995:5:31","nodeType":"EventDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"1009:7:31","nodeType":"VariableDeclaration","scope":6648,"src":"1001:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6639,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6642,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"1026:8:31","nodeType":"VariableDeclaration","scope":6648,"src":"1018:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6641,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6644,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1044:8:31","nodeType":"VariableDeclaration","scope":6648,"src":"1036:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6646,"indexed":false,"mutability":"mutable","name":"quotedAmountOut","nameLocation":"1062:15:31","nodeType":"VariableDeclaration","scope":6648,"src":"1054:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:78:31"},"src":"989:90:31"},{"anonymous":false,"eventSelector":"a5d58d69861729f1703d1b6e4dfb43369bb7f6049cc96e68f35a94129fc14dce","id":6658,"name":"QuoteError","nameLocation":"1120:10:31","nodeType":"EventDefinition","parameters":{"id":6657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"1139:7:31","nodeType":"VariableDeclaration","scope":6658,"src":"1131:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6649,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6652,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"1156:8:31","nodeType":"VariableDeclaration","scope":6658,"src":"1148:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6651,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6654,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1174:8:31","nodeType":"VariableDeclaration","scope":6658,"src":"1166:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6656,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1191:3:31","nodeType":"VariableDeclaration","scope":6658,"src":"1184:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6655,"name":"string","nodeType":"ElementaryTypeName","src":"1184:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1130:65:31"},"src":"1114:82:31"},{"canonicalName":"IColateralContract2.SwapParams","id":6666,"members":[{"constant":false,"id":6661,"mutability":"mutable","name":"params","nameLocation":"1256:6:31","nodeType":"VariableDeclaration","scope":6666,"src":"1227:35:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":6660,"nodeType":"UserDefinedTypeName","pathNode":{"id":6659,"name":"ISwapRouter.ExactInputParams","nameLocations":["1227:11:31","1239:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":5460,"src":"1227:28:31"},"referencedDeclaration":5460,"src":"1227:28:31","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5460_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"},{"constant":false,"id":6663,"mutability":"mutable","name":"tokenIn","nameLocation":"1277:7:31","nodeType":"VariableDeclaration","scope":6666,"src":"1269:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6662,"name":"address","nodeType":"ElementaryTypeName","src":"1269:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6665,"mutability":"mutable","name":"tokenOut","nameLocation":"1299:8:31","nodeType":"VariableDeclaration","scope":6666,"src":"1291:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6664,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SwapParams","nameLocation":"1209:10:31","nodeType":"StructDefinition","scope":6728,"src":"1202:111:31","visibility":"public"},{"functionSelector":"54fd4d50","id":6671,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"1328:7:31","nodeType":"FunctionDefinition","parameters":{"id":6667,"nodeType":"ParameterList","parameters":[],"src":"1335:2:31"},"returnParameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"1361:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6668,"name":"string","nodeType":"ElementaryTypeName","src":"1361:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1360:15:31"},"scope":6728,"src":"1319:57:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"212f6039","id":6676,"implemented":false,"kind":"function","modifiers":[],"name":"setWithdrawWalletAddress","nameLocation":"1391:24:31","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"1424:22:31","nodeType":"VariableDeclaration","scope":6676,"src":"1416:30:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6672,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1415:32:31"},"returnParameters":{"id":6675,"nodeType":"ParameterList","parameters":[],"src":"1456:0:31"},"scope":6728,"src":"1382:75:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d00411c9","id":6681,"implemented":false,"kind":"function","modifiers":[],"name":"setRescueWalletAddress","nameLocation":"1472:22:31","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"1503:20:31","nodeType":"VariableDeclaration","scope":6681,"src":"1495:28:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6677,"name":"address","nodeType":"ElementaryTypeName","src":"1495:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1494:30:31"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"1533:0:31"},"scope":6728,"src":"1463:71:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc048cf2","id":6688,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1549:8:31","nodeType":"FunctionDefinition","parameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"_amount","nameLocation":"1566:7:31","nodeType":"VariableDeclaration","scope":6688,"src":"1558:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1558:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6685,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1591:12:31","nodeType":"VariableDeclaration","scope":6688,"src":"1575:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6684,"name":"string","nodeType":"ElementaryTypeName","src":"1575:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1557:47:31"},"returnParameters":{"id":6687,"nodeType":"ParameterList","parameters":[],"src":"1613:0:31"},"scope":6728,"src":"1540:74:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35ee5f87","id":6695,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1629:9:31","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1653:12:31","nodeType":"VariableDeclaration","scope":6695,"src":"1639:26:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6689,"name":"string","nodeType":"ElementaryTypeName","src":"1639:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1638:28:31"},"returnParameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6695,"src":"1690:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1689:9:31"},"scope":6728,"src":"1620:79:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0828c404","id":6702,"implemented":false,"kind":"function","modifiers":[],"name":"rescue","nameLocation":"1714:6:31","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"_amount","nameLocation":"1729:7:31","nodeType":"VariableDeclaration","scope":6702,"src":"1721:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1754:12:31","nodeType":"VariableDeclaration","scope":6702,"src":"1738:28:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6698,"name":"string","nodeType":"ElementaryTypeName","src":"1738:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1720:47:31"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[],"src":"1776:0:31"},"scope":6728,"src":"1705:72:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00113e08","id":6708,"implemented":false,"kind":"function","modifiers":[],"name":"getBalances","nameLocation":"1792:11:31","nodeType":"FunctionDefinition","parameters":{"id":6703,"nodeType":"ParameterList","parameters":[],"src":"1803:2:31"},"returnParameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6708,"src":"1829:16:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6705,"nodeType":"ArrayTypeName","src":"1829:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:18:31"},"scope":6728,"src":"1783:64:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"83d33319","id":6713,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleCount","nameLocation":"1862:12:31","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[],"src":"1874:2:31"},"returnParameters":{"id":6712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6713,"src":"1900:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1899:9:31"},"scope":6728,"src":"1853:56:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"25acc985","id":6720,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleByIndex","nameLocation":"1924:14:31","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"index","nameLocation":"1944:5:31","nodeType":"VariableDeclaration","scope":6720,"src":"1939:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6714,"name":"uint","nodeType":"ElementaryTypeName","src":"1939:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1938:12:31"},"returnParameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6720,"src":"1974:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1973:9:31"},"scope":6728,"src":"1915:68:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2ffe9942","id":6727,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactInputs","nameLocation":"1998:15:31","nodeType":"FunctionDefinition","parameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"swapsParams","nameLocation":"2036:11:31","nodeType":"VariableDeclaration","scope":6727,"src":"2014:33:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract2.SwapParams[]"},"typeName":{"baseType":{"id":6722,"nodeType":"UserDefinedTypeName","pathNode":{"id":6721,"name":"SwapParams","nameLocations":["2014:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":6666,"src":"2014:10:31"},"referencedDeclaration":6666,"src":"2014:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6666_storage_ptr","typeString":"struct IColateralContract2.SwapParams"}},"id":6723,"nodeType":"ArrayTypeName","src":"2014:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6666_storage_$dyn_storage_ptr","typeString":"struct IColateralContract2.SwapParams[]"}},"visibility":"internal"}],"src":"2013:35:31"},"returnParameters":{"id":6726,"nodeType":"ParameterList","parameters":[],"src":"2057:0:31"},"scope":6728,"src":"1989:69:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6729,"src":"132:1929:31","usedErrors":[]}],"src":"33:2028:31"},"id":31},"contracts/IWETH.sol":{"ast":{"absolutePath":"contracts/IWETH.sol","exportedSymbols":{"IWETH":[6739]},"id":6740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6730,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"35:23:32"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6739,"linearizedBaseContracts":[6739],"name":"IWETH","nameLocation":"72:5:32","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":6733,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"94:7:32","nodeType":"FunctionDefinition","parameters":{"id":6731,"nodeType":"ParameterList","parameters":[],"src":"101:2:32"},"returnParameters":{"id":6732,"nodeType":"ParameterList","parameters":[],"src":"120:0:32"},"scope":6739,"src":"85:36:32","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":6738,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"136:8:32","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"wad","nameLocation":"150:3:32","nodeType":"VariableDeclaration","scope":6738,"src":"145:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6734,"name":"uint","nodeType":"ElementaryTypeName","src":"145:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"144:10:32"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[],"src":"163:0:32"},"scope":6739,"src":"127:37:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6740,"src":"62:105:32","usedErrors":[]}],"src":"35:132:32"},"id":32},"solmate/src/tokens/ERC20.sol":{"ast":{"absolutePath":"solmate/src/tokens/ERC20.sol","exportedSymbols":{"ERC20":[7127]},"id":7128,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":6741,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:33"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"68:406:33","text":"@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."},"fullyImplemented":true,"id":7127,"linearizedBaseContracts":[7127],"name":"ERC20","nameLocation":"492:5:33","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":6750,"name":"Transfer","nameLocation":"689:8:33","nodeType":"EventDefinition","parameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"714:4:33","nodeType":"VariableDeclaration","scope":6750,"src":"698:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6743,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6746,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"736:2:33","nodeType":"VariableDeclaration","scope":6750,"src":"720:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6745,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6748,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:33","nodeType":"VariableDeclaration","scope":6750,"src":"740:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6747,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:58:33"},"src":"683:73:33"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":6758,"name":"Approval","nameLocation":"768:8:33","nodeType":"EventDefinition","parameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"793:5:33","nodeType":"VariableDeclaration","scope":6758,"src":"777:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6751,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6754,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"816:7:33","nodeType":"VariableDeclaration","scope":6758,"src":"800:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6753,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6756,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"833:6:33","nodeType":"VariableDeclaration","scope":6758,"src":"825:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6755,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:64:33"},"src":"762:79:33"},{"constant":false,"functionSelector":"06fdde03","id":6760,"mutability":"mutable","name":"name","nameLocation":"1045:4:33","nodeType":"VariableDeclaration","scope":7127,"src":"1031:18:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6759,"name":"string","nodeType":"ElementaryTypeName","src":"1031:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":6762,"mutability":"mutable","name":"symbol","nameLocation":"1070:6:33","nodeType":"VariableDeclaration","scope":7127,"src":"1056:20:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6761,"name":"string","nodeType":"ElementaryTypeName","src":"1056:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":6764,"mutability":"immutable","name":"decimals","nameLocation":"1106:8:33","nodeType":"VariableDeclaration","scope":7127,"src":"1083:31:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6763,"name":"uint8","nodeType":"ElementaryTypeName","src":"1083:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":6766,"mutability":"mutable","name":"totalSupply","nameLocation":"1319:11:33","nodeType":"VariableDeclaration","scope":7127,"src":"1304:26:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":6770,"mutability":"mutable","name":"balanceOf","nameLocation":"1372:9:33","nodeType":"VariableDeclaration","scope":7127,"src":"1337:44:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6769,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6767,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1337:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":6776,"mutability":"mutable","name":"allowance","nameLocation":"1443:9:33","nodeType":"VariableDeclaration","scope":7127,"src":"1388:64:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":6775,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6771,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1388:47:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6774,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6772,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1407:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":6778,"mutability":"immutable","name":"INITIAL_CHAIN_ID","nameLocation":"1670:16:33","nodeType":"VariableDeclaration","scope":7127,"src":"1643:43:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6780,"mutability":"immutable","name":"INITIAL_DOMAIN_SEPARATOR","nameLocation":"1720:24:33","nodeType":"VariableDeclaration","scope":7127,"src":"1693:51:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"functionSelector":"7ecebe00","id":6784,"mutability":"mutable","name":"nonces","nameLocation":"1786:6:33","nodeType":"VariableDeclaration","scope":7127,"src":"1751:41:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6783,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6781,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1751:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":6815,"nodeType":"Block","src":"2084:189:33","statements":[{"expression":{"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6793,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"2094:4:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6794,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"2101:5:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:12:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6796,"nodeType":"ExpressionStatement","src":"2094:12:33"},{"expression":{"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6797,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"2116:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6798,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6788,"src":"2125:7:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2116:16:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6800,"nodeType":"ExpressionStatement","src":"2116:16:33"},{"expression":{"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6801,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"2142:8:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6802,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"2153:9:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2142:20:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6804,"nodeType":"ExpressionStatement","src":"2142:20:33"},{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6805,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"2173:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6806,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2192:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2198:7:33","memberName":"chainid","nodeType":"MemberAccess","src":"2192:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6809,"nodeType":"ExpressionStatement","src":"2173:32:33"},{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"2215:24:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":6811,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"2242:22:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:51:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6814,"nodeType":"ExpressionStatement","src":"2215:51:33"}]},"id":6816,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"_name","nameLocation":"2016:5:33","nodeType":"VariableDeclaration","scope":6816,"src":"2002:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6785,"name":"string","nodeType":"ElementaryTypeName","src":"2002:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6788,"mutability":"mutable","name":"_symbol","nameLocation":"2045:7:33","nodeType":"VariableDeclaration","scope":6816,"src":"2031:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6787,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6790,"mutability":"mutable","name":"_decimals","nameLocation":"2068:9:33","nodeType":"VariableDeclaration","scope":6816,"src":"2062:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6789,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1992:91:33"},"returnParameters":{"id":6792,"nodeType":"ParameterList","parameters":[],"src":"2084:0:33"},"scope":7127,"src":"1981:292:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6843,"nodeType":"Block","src":"2541:131:33","statements":[{"expression":{"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6825,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"2551:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6829,"indexExpression":{"expression":{"id":6826,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:33","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:21:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6830,"indexExpression":{"id":6828,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"2573:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"2584:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6833,"nodeType":"ExpressionStatement","src":"2551:39:33"},{"eventCall":{"arguments":[{"expression":{"id":6835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:33","memberName":"sender","nodeType":"MemberAccess","src":"2615:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6837,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"2627:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"2636:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6834,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"2606:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6840,"nodeType":"EmitStatement","src":"2601:42:33"},{"expression":{"hexValue":"74727565","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2661:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6824,"id":6842,"nodeType":"Return","src":"2654:11:33"}]},"functionSelector":"095ea7b3","id":6844,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2470:7:33","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6818,"mutability":"mutable","name":"spender","nameLocation":"2486:7:33","nodeType":"VariableDeclaration","scope":6844,"src":"2478:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6817,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6820,"mutability":"mutable","name":"amount","nameLocation":"2503:6:33","nodeType":"VariableDeclaration","scope":6844,"src":"2495:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:33:33"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6844,"src":"2535:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6822,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2534:6:33"},"scope":7127,"src":"2461:211:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6876,"nodeType":"Block","src":"2754:297:33","statements":[{"expression":{"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6853,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"2764:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6856,"indexExpression":{"expression":{"id":6854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2774:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:6:33","memberName":"sender","nodeType":"MemberAccess","src":"2774:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6857,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"2789:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:31:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6859,"nodeType":"ExpressionStatement","src":"2764:31:33"},{"id":6866,"nodeType":"UncheckedBlock","src":"2917:58:33","statements":[{"expression":{"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6860,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"2941:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6862,"indexExpression":{"id":6861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"2951:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2941:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"2958:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2941:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6865,"nodeType":"ExpressionStatement","src":"2941:23:33"}]},{"eventCall":{"arguments":[{"expression":{"id":6868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:33","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6870,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"3011:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6871,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6848,"src":"3015:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6867,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"2990:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6873,"nodeType":"EmitStatement","src":"2985:37:33"},{"expression":{"hexValue":"74727565","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3040:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6852,"id":6875,"nodeType":"Return","src":"3033:11:33"}]},"functionSelector":"a9059cbb","id":6877,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2687:8:33","nodeType":"FunctionDefinition","parameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"to","nameLocation":"2704:2:33","nodeType":"VariableDeclaration","scope":6877,"src":"2696:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6845,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"amount","nameLocation":"2716:6:33","nodeType":"VariableDeclaration","scope":6877,"src":"2708:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2695:28:33"},"returnParameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6877,"src":"2748:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6850,"name":"bool","nodeType":"ElementaryTypeName","src":"2748:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2747:6:33"},"scope":7127,"src":"2678:373:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6937,"nodeType":"Block","src":"3181:468:33","statements":[{"assignments":[6889],"declarations":[{"constant":false,"id":6889,"mutability":"mutable","name":"allowed","nameLocation":"3199:7:33","nodeType":"VariableDeclaration","scope":6937,"src":"3191:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6896,"initialValue":{"baseExpression":{"baseExpression":{"id":6890,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"3209:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6892,"indexExpression":{"id":6891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3219:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:15:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6895,"indexExpression":{"expression":{"id":6893,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3225:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:33","memberName":"sender","nodeType":"MemberAccess","src":"3225:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:27:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:45:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6897,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"3287:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3303:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6898,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3298:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3312:3:33","memberName":"max","nodeType":"MemberAccess","src":"3298:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6915,"nodeType":"IfStatement","src":"3283:80:33","trueBody":{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6904,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"3317:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6908,"indexExpression":{"id":6905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3327:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:15:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6909,"indexExpression":{"expression":{"id":6906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3333:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:33","memberName":"sender","nodeType":"MemberAccess","src":"3333:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3317:27:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"3347:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"3357:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:46:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6914,"nodeType":"ExpressionStatement","src":"3317:46:33"}},{"expression":{"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6916,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3374:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6918,"indexExpression":{"id":6917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3384:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3374:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6919,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"3393:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6921,"nodeType":"ExpressionStatement","src":"3374:25:33"},{"id":6928,"nodeType":"UncheckedBlock","src":"3521:58:33","statements":[{"expression":{"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6922,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3545:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6924,"indexExpression":{"id":6923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3555:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6925,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"3562:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6927,"nodeType":"ExpressionStatement","src":"3545:23:33"}]},{"eventCall":{"arguments":[{"id":6930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3603:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3609:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"3613:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6929,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3594:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6934,"nodeType":"EmitStatement","src":"3589:31:33"},{"expression":{"hexValue":"74727565","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3638:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6887,"id":6936,"nodeType":"Return","src":"3631:11:33"}]},"functionSelector":"23b872dd","id":6938,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3066:12:33","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"from","nameLocation":"3096:4:33","nodeType":"VariableDeclaration","scope":6938,"src":"3088:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6878,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"to","nameLocation":"3118:2:33","nodeType":"VariableDeclaration","scope":6938,"src":"3110:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6880,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6883,"mutability":"mutable","name":"amount","nameLocation":"3138:6:33","nodeType":"VariableDeclaration","scope":6938,"src":"3130:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:72:33"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6938,"src":"3175:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6885,"name":"bool","nodeType":"ElementaryTypeName","src":"3175:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:6:33"},"scope":7127,"src":"3057:592:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7024,"nodeType":"Block","src":"4027:1294:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"4045:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":6957,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4063:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"4057:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:27:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:25:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""},"value":"PERMIT_DEADLINE_EXPIRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""}],"id":6955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4037:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:63:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6962,"nodeType":"ExpressionStatement","src":"4037:63:33"},{"id":7017,"nodeType":"UncheckedBlock","src":"4241:1027:33","statements":[{"assignments":[6964],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"recoveredAddress","nameLocation":"4273:16:33","nodeType":"VariableDeclaration","scope":7017,"src":"4265:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6963,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6994,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"1901","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4392:10:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":6970,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"4428:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:84:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":6975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4555:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:165:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6978,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"4754:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6979,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4793:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"4834:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4873:15:33","subExpression":{"baseExpression":{"id":6981,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"4873:6:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6983,"indexExpression":{"id":6982,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"4880:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4873:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6985,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"4922:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4511:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4515:6:33","memberName":"encode","nodeType":"MemberAccess","src":"4511:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:449:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4472:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:514:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6967,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4350:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4354:12:33","memberName":"encodePacked","nodeType":"MemberAccess","src":"4350:16:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:658:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:707:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6990,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5044:1:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6991,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"5063:1:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6992,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"5082:1:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6965,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"4292:9:33","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:805:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4265:832:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6996,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5120:16:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5148:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6997,"name":"address","nodeType":"ElementaryTypeName","src":"5140:7:33","typeDescriptions":{}}},"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:30:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7002,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5154:16:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7003,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"5174:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5154:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5120:59:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4552","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:16:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""},"value":"INVALID_SIGNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""}],"id":6995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5112:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:86:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7008,"nodeType":"ExpressionStatement","src":"5112:86:33"},{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7009,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5213:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7012,"indexExpression":{"id":7010,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5223:16:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7013,"indexExpression":{"id":7011,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"5241:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5213:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"5252:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5213:44:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7016,"nodeType":"ExpressionStatement","src":"5213:44:33"}]},{"eventCall":{"arguments":[{"id":7019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"5292:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"5299:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"5308:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7018,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"5283:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7023,"nodeType":"EmitStatement","src":"5278:36:33"}]},"functionSelector":"d505accf","id":7025,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3847:6:33","nodeType":"FunctionDefinition","parameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"owner","nameLocation":"3871:5:33","nodeType":"VariableDeclaration","scope":7025,"src":"3863:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6939,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"spender","nameLocation":"3894:7:33","nodeType":"VariableDeclaration","scope":7025,"src":"3886:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6941,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6944,"mutability":"mutable","name":"value","nameLocation":"3919:5:33","nodeType":"VariableDeclaration","scope":7025,"src":"3911:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6946,"mutability":"mutable","name":"deadline","nameLocation":"3942:8:33","nodeType":"VariableDeclaration","scope":7025,"src":"3934:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6948,"mutability":"mutable","name":"v","nameLocation":"3966:1:33","nodeType":"VariableDeclaration","scope":7025,"src":"3960:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6947,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6950,"mutability":"mutable","name":"r","nameLocation":"3985:1:33","nodeType":"VariableDeclaration","scope":7025,"src":"3977:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6952,"mutability":"mutable","name":"s","nameLocation":"4004:1:33","nodeType":"VariableDeclaration","scope":7025,"src":"3996:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3996:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3853:158:33"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[],"src":"4027:0:33"},"scope":7127,"src":"3838:1483:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7039,"nodeType":"Block","src":"5393:111:33","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7030,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5410:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:7:33","memberName":"chainid","nodeType":"MemberAccess","src":"5410:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7032,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"5427:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5410:33:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7035,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"5473:22:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5410:87:33","trueExpression":{"id":7034,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"5446:24:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7029,"id":7038,"nodeType":"Return","src":"5403:94:33"}]},"functionSelector":"3644e515","id":7040,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"5336:16:33","nodeType":"FunctionDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[],"src":"5352:2:33"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7040,"src":"5384:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5384:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5383:9:33"},"scope":7127,"src":"5327:177:33","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7069,"nodeType":"Block","src":"5584:372:33","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5682:84:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":7048,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5672:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:95:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":7054,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"5805:4:33","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7052,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:33","typeDescriptions":{}}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":7051,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5789:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:22:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"31","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:3:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":7057,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5833:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5869:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:7:33","memberName":"chainid","nodeType":"MemberAccess","src":"5869:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7064,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5912:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$7127","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$7127","typeString":"contract ERC20"}],"id":7063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7062,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:33","typeDescriptions":{}}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7046,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5640:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5644:6:33","memberName":"encode","nodeType":"MemberAccess","src":"5640:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:295:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7045,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5613:9:33","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:336:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7044,"id":7068,"nodeType":"Return","src":"5594:355:33"}]},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"computeDomainSeparator","nameLocation":"5519:22:33","nodeType":"FunctionDefinition","parameters":{"id":7041,"nodeType":"ParameterList","parameters":[],"src":"5541:2:33"},"returnParameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7070,"src":"5575:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5575:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5574:9:33"},"scope":7127,"src":"5510:446:33","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7097,"nodeType":"Block","src":"6210:265:33","statements":[{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7077,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"6220:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"6235:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6220:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7080,"nodeType":"ExpressionStatement","src":"6220:21:33"},{"id":7087,"nodeType":"UncheckedBlock","src":"6363:58:33","statements":[{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7081,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"6387:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7083,"indexExpression":{"id":7082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6397:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6387:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"6404:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7086,"nodeType":"ExpressionStatement","src":"6387:23:33"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6453:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6445:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7089,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:33","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7093,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"6457:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"6461:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7088,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"6436:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"EmitStatement","src":"6431:37:33"}]},"id":7098,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6159:5:33","nodeType":"FunctionDefinition","parameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"to","nameLocation":"6173:2:33","nodeType":"VariableDeclaration","scope":7098,"src":"6165:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7071,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"amount","nameLocation":"6185:6:33","nodeType":"VariableDeclaration","scope":7098,"src":"6177:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:28:33"},"returnParameters":{"id":7076,"nodeType":"ParameterList","parameters":[],"src":"6210:0:33"},"scope":7127,"src":"6150:325:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7125,"nodeType":"Block","src":"6543:266:33","statements":[{"expression":{"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7105,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"6553:9:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7107,"indexExpression":{"id":7106,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"6563:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6553:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"6572:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:25:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7110,"nodeType":"ExpressionStatement","src":"6553:25:33"},{"id":7115,"nodeType":"UncheckedBlock","src":"6697:56:33","statements":[{"expression":{"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7111,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"6721:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7112,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"6736:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7114,"nodeType":"ExpressionStatement","src":"6721:21:33"}]},{"eventCall":{"arguments":[{"id":7117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"6777:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7118,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:33","typeDescriptions":{}}},"id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"6795:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7116,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"6768:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"EmitStatement","src":"6763:39:33"}]},"id":7126,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6490:5:33","nodeType":"FunctionDefinition","parameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7100,"mutability":"mutable","name":"from","nameLocation":"6504:4:33","nodeType":"VariableDeclaration","scope":7126,"src":"6496:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7099,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7102,"mutability":"mutable","name":"amount","nameLocation":"6518:6:33","nodeType":"VariableDeclaration","scope":7126,"src":"6510:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7101,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6495:30:33"},"returnParameters":{"id":7104,"nodeType":"ParameterList","parameters":[],"src":"6543:0:33"},"scope":7127,"src":"6481:328:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":7128,"src":"474:6337:33","usedErrors":[]}],"src":"42:6770:33"},"id":33}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7d24c901e098a04fa7f388c9ff1890bb522307272a2fee8030ee15a8d907096f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://581f4c4b9af18b5a8e811a0a45d38a125cad4627d67f7a605626ff3a2b26eb70\",\"dweb:/ipfs/QmWZwM8HEbPPjf5MaaRnELgW8JtDdWNu7oBXWCtLCERQyz\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"IAccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":\"IAccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016688518c2e1cd278a1ffbfa2b8d9880d79d793cd012b92477f9361afdd10b4164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH9 0x8518C2E1CD278A1FFB STATICCALL 0x2B DUP14 SWAP9 DUP1 0xD7 SWAP14 PUSH26 0x3CD012B92477F9361AFDD10B4164736F6C634300081200330000 ","sourceMap":"1329:11641:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016688518c2e1cd278a1ffbfa2b8d9880d79d793cd012b92477f9361afdd10b4164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH9 0x8518C2E1CD278A1FFB STATICCALL 0x2B DUP14 SWAP9 DUP1 0xD7 SWAP14 PUSH26 0x3CD012B92477F9361AFDD10B4164736F6C634300081200330000 ","sourceMap":"1329:11641:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209914d5e28b57a0d7d4795b9ab87c90ff7e6e3b98d8db4cbd0b5e040bd0f739d064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 EQ 0xD5 0xE2 DUP12 JUMPI LOG0 0xD7 0xD4 PUSH26 0x5B9AB87C90FF7E6E3B98D8DB4CBD0B5E040BD0F739D064736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"701:6234:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209914d5e28b57a0d7d4795b9ab87c90ff7e6e3b98d8db4cbd0b5e040bd0f739d064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 EQ 0xD5 0xE2 DUP12 JUMPI LOG0 0xD7 0xD4 PUSH26 0x5B9AB87C90FF7E6E3B98D8DB4CBD0B5E040BD0F739D064736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"701:6234:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol":{"IRewardsCollector":{"abi":[{"inputs":[{"internalType":"bytes","name":"looksRareClaim","type":"bytes"}],"name":"collectRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectRewards(bytes)":"709a1cc2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"looksRareClaim\",\"type\":\"bytes\"}],\"name\":\"collectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectRewards(bytes)\":{\"params\":{\"looksRareClaim\":\"The data required by LooksRare to claim reward tokens\"}}},\"title\":\"LooksRare Rewards Collector\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectRewards(bytes)\":{\"notice\":\"Fetches users' LooksRare rewards and sends them to the distributor contract\"}},\"notice\":\"Implements a permissionless call to fetch LooksRare rewards earned by Universal Router users and transfers them to an external rewards distributor contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol\":\"IRewardsCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol\":{\"keccak256\":\"0x394a3c99a6ef18c0de171e85f8c6352eb3f6f1c5165fe9a2fdc4db181dd407b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9937d3b2df12264789f3bbf053a0b044b3d21c86c39dac4757a9a40bae6185c0\",\"dweb:/ipfs/QmayA3uwk1wXCA8K1R5HrnszaPL9ymUSDwyWxmbtv2ujXP\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}"}},"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol":{"IUniversalRouter":{"abi":[{"inputs":[],"name":"ETHNotAccepted","type":"error"},{"inputs":[{"internalType":"uint256","name":"commandIndex","type":"uint256"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"ExecutionFailed","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[],"name":"TransactionDeadlinePassed","type":"error"},{"inputs":[{"internalType":"bytes","name":"looksRareClaim","type":"bytes"}],"name":"collectRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"commands","type":"bytes"},{"internalType":"bytes[]","name":"inputs","type":"bytes[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectRewards(bytes)":"709a1cc2","execute(bytes,bytes[],uint256)":"3593564c","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETHNotAccepted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"commandIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionDeadlinePassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"looksRareClaim\",\"type\":\"bytes\"}],\"name\":\"collectRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"commands\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"inputs\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectRewards(bytes)\":{\"params\":{\"looksRareClaim\":\"The data required by LooksRare to claim reward tokens\"}},\"execute(bytes,bytes[],uint256)\":{\"params\":{\"commands\":\"A set of concatenated commands, each 1 byte in length\",\"deadline\":\"The deadline by which the transaction must be executed\",\"inputs\":\"An array of byte strings containing abi encoded inputs for each command\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ETHNotAccepted()\":[{\"notice\":\"Thrown when attempting to send ETH directly to the contract\"}],\"ExecutionFailed(uint256,bytes)\":[{\"notice\":\"Thrown when a required command has failed\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when attempting to execute commands and an incorrect number of inputs are provided\"}],\"TransactionDeadlinePassed()\":[{\"notice\":\"Thrown when executing commands with an expired deadline\"}]},\"kind\":\"user\",\"methods\":{\"collectRewards(bytes)\":{\"notice\":\"Fetches users' LooksRare rewards and sends them to the distributor contract\"},\"execute(bytes,bytes[],uint256)\":{\"notice\":\"Executes encoded commands along with provided inputs. Reverts if deadline has expired.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol\":\"IUniversalRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol\":{\"keccak256\":\"0x394a3c99a6ef18c0de171e85f8c6352eb3f6f1c5165fe9a2fdc4db181dd407b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9937d3b2df12264789f3bbf053a0b044b3d21c86c39dac4757a9a40bae6185c0\",\"dweb:/ipfs/QmayA3uwk1wXCA8K1R5HrnszaPL9ymUSDwyWxmbtv2ujXP\"]},\"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol\":{\"keccak256\":\"0x417bd7e38a2373a7560004b38aab6987b4e0c655574d18c879a562dcff275e00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2153e7c4ae3cdae8f593e52daf4e5eed902f11c255913adcae39af3c55a4c192\",\"dweb:/ipfs/QmPBJjgjqwShM9ugYy7TvsLQwvAuepEdw1bLhSJs1gLzzi\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}"}},"@uniswap/universal-router/contracts/libraries/Commands.sol":{"Commands":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb439dbe55d5642610f9b8832253768bae9f46b203252bdec906e3dc19126d2964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB NUMBER SWAP14 0xBE SSTORE 0xD5 PUSH5 0x2610F9B883 0x22 MSTORE8 PUSH23 0x8BAE9F46B203252BDEC906E3DC19126D2964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"141:3029:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb439dbe55d5642610f9b8832253768bae9f46b203252bdec906e3dc19126d2964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB NUMBER SWAP14 0xBE SSTORE 0xD5 PUSH5 0x2610F9B883 0x22 MSTORE8 PUSH23 0x8BAE9F46B203252BDEC906E3DC19126D2964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"141:3029:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Commands\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Command Flags used to decode commands\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/universal-router/contracts/libraries/Commands.sol\":\"Commands\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/universal-router/contracts/libraries/Commands.sol\":{\"keccak256\":\"0x7495192865b4cdd91d2469183c4550ac621669f77a0c8952a53d3c287410f64f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://aff58d4b4bbe0f72382ff645fd4da7c12db98c15807026fba000fcf8ebedc031\",\"dweb:/ipfs/QmWdibdwQKWEMbGZPWQ5cXLKQRZtcWQNP4FjY8G3k587TX\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol":{"IQuoter":{"abi":[{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"quoteExactInput(bytes,uint256)":"cdca1753","quoteExactInputSingle(address,address,uint24,uint256,uint160)":"f7729d43","quoteExactOutput(bytes,uint256)":"2f80bb1d","quoteExactOutputSingle(address,address,uint24,uint256,uint160)":"30d07f21"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountIn\":\"The desired input amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\"}},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountOut\":\"The desired output amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\"}}},\"title\":\"Quoter Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":\"IQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/ColateralContract2.sol":{"ColateralContract2":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AdminAddressInvalid","type":"error"},{"inputs":[],"name":"AmountInError","type":"error"},{"inputs":[],"name":"AmountOutMinimumTooLow","type":"error"},{"inputs":[],"name":"FirstLenderLiqAddressInvalid","type":"error"},{"inputs":[],"name":"RecipientError","type":"error"},{"inputs":[],"name":"RescueAddressInvalid","type":"error"},{"inputs":[],"name":"SecondLenderLiqAddressInvalid","type":"error"},{"inputs":[],"name":"TokenInError","type":"error"},{"inputs":[],"name":"TokenNameAndAddressLengthMismatch","type":"error"},{"inputs":[],"name":"TokenOutError","type":"error"},{"inputs":[],"name":"WithdrawAddressInvalid","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string[5]","name":"_tokenNames","type":"string[5]"},{"indexed":false,"internalType":"address[5]","name":"_tokenAddresses","type":"address[5]"},{"indexed":false,"internalType":"address[3]","name":"_aconcagua","type":"address[3]"},{"indexed":false,"internalType":"address","name":"_rescueWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_withdrawWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_firstLenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"_secondLenderLiq","type":"address"},{"indexed":false,"internalType":"string[3]","name":"_contractKeys","type":"string[3]"},{"indexed":false,"internalType":"address[3]","name":"_contractAddresses","type":"address[3]"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quotedAmountOut","type":"uint256"}],"name":"Quote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"QuoteError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Rescue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"SwapError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ACONCAGUA_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LENDER_LIQ_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAPPER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"contractAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"contractKeys","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleByIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRoleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenNames","outputs":[{"internalType":"string[5]","name":"","type":"string[5]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[5]","name":"_tokenNames","type":"string[5]"},{"internalType":"address[5]","name":"_tokenAddresses","type":"address[5]"},{"internalType":"address[3]","name":"_aconcagua","type":"address[3]"},{"internalType":"address","name":"_rescueWalletAddress","type":"address"},{"internalType":"address","name":"_withdrawWalletAddress","type":"address"},{"internalType":"address","name":"_firstLenderLiq","type":"address"},{"internalType":"address","name":"_secondLenderLiq","type":"address"},{"internalType":"string[3]","name":"_contractKeys","type":"string[3]"},{"internalType":"address[3]","name":"_contractAddresses","type":"address[3]"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rescueWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rescueWalletAddress","type":"address"}],"name":"setRescueWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawWalletAddress","type":"address"}],"name":"setWithdrawWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"}],"internalType":"struct IColateralContract2.SwapParams[]","name":"swapsParams","type":"tuple[]"}],"name":"swapExactInputs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenNames","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"tokenTable","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_5624":{"entryPoint":null,"id":5624,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_730":{"entryPoint":40,"id":730,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:34","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:34"},"nodeType":"YulFunctionCall","src":"113:19:34"},"nodeType":"YulExpressionStatement","src":"113:19:34"},{"nodeType":"YulAssignment","src":"141:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:34"},"nodeType":"YulFunctionCall","src":"156:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:34","type":""}],"src":"7:169:34"},{"body":{"nodeType":"YulBlock","src":"288:120:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:34"},"nodeType":"YulFunctionCall","src":"306:14:34"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:34","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:34"},"nodeType":"YulFunctionCall","src":"299:58:34"},"nodeType":"YulExpressionStatement","src":"299:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:34"},"nodeType":"YulFunctionCall","src":"374:15:34"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:34","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:34"},"nodeType":"YulFunctionCall","src":"367:34:34"},"nodeType":"YulExpressionStatement","src":"367:34:34"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:34","type":""}],"src":"182:226:34"},{"body":{"nodeType":"YulBlock","src":"560:220:34","statements":[{"nodeType":"YulAssignment","src":"570:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:34","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:34"},"nodeType":"YulFunctionCall","src":"577:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:34"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:34"},"nodeType":"YulFunctionCall","src":"653:93:34"},"nodeType":"YulExpressionStatement","src":"653:93:34"},{"nodeType":"YulAssignment","src":"755:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:34"},"nodeType":"YulFunctionCall","src":"762:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:34"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:34","type":""}],"src":"414:366:34"},{"body":{"nodeType":"YulBlock","src":"957:248:34","statements":[{"nodeType":"YulAssignment","src":"967:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:34"},"nodeType":"YulFunctionCall","src":"975:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:34"},"nodeType":"YulFunctionCall","src":"1010:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:34"},"nodeType":"YulFunctionCall","src":"1029:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:34"},"nodeType":"YulFunctionCall","src":"1003:47:34"},"nodeType":"YulExpressionStatement","src":"1003:47:34"},{"nodeType":"YulAssignment","src":"1059:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:34"},"nodeType":"YulFunctionCall","src":"1067:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:34","type":""}],"src":"786:419:34"},{"body":{"nodeType":"YulBlock","src":"1254:43:34","statements":[{"nodeType":"YulAssignment","src":"1264:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:34"},"nodeType":"YulFunctionCall","src":"1275:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:34","type":""}],"src":"1211:86:34"},{"body":{"nodeType":"YulBlock","src":"1364:51:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:34"},"nodeType":"YulFunctionCall","src":"1386:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:34"},"nodeType":"YulFunctionCall","src":"1374:35:34"},"nodeType":"YulExpressionStatement","src":"1374:35:34"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:34","type":""}],"src":"1303:112:34"},{"body":{"nodeType":"YulBlock","src":"1515:120:34","statements":[{"nodeType":"YulAssignment","src":"1525:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:34"},"nodeType":"YulFunctionCall","src":"1533:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:34"},"nodeType":"YulFunctionCall","src":"1610:17:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:34"},"nodeType":"YulFunctionCall","src":"1561:67:34"},"nodeType":"YulExpressionStatement","src":"1561:67:34"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:34","type":""}],"src":"1421:214:34"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b615e9480620001e26000396000f3fe6080604052600436106101db5760003560e01c806355452d0411610102578063ca15c87311610095578063de6bd68711610064578063de6bd687146107e6578063df668eca14610823578063e5df800a1461084e578063ee67cc2a14610879576102c8565b8063ca15c8731461072e578063d00411c91461076b578063d547741f14610794578063dc048cf2146107bd576102c8565b806391d14854116100d157806391d1485414610672578063a217fddf146106af578063b14ec101146106da578063c869787e14610705576102c8565b806355452d04146105a257806371372544146105df57806383d333191461060a5780639010d07c14610635576102c8565b80632ad753e41161017a57806332cc815d1161014957806332cc815d146104e657806335ee5f871461051157806336568abe1461054e57806354fd4d5014610577576102c8565b80632ad753e41461042c5780632f2ff15d146104575780632ffe994214610480578063310495ab146104a9576102c8565b806315ac7358116101b657806315ac73581461035e578063212f603914610389578063248a9ca3146103b257806325acc985146103ef576102c8565b8062113e08146102cd57806301ffc9a7146102f85780630828c40414610335576102c8565b366102c857601e460361028b576101026040516101f790613a20565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b50505050506102c6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90613a92565b60405180910390fd5b005b600080fd5b3480156102d957600080fd5b506102e26108b6565b6040516102ef9190613b7a565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a9190613c08565b610a2e565b60405161032c9190613c50565b60405180910390f35b34801561034157600080fd5b5061035c60048036038101906103579190613cfc565b610aa8565b005b34801561036a57600080fd5b50610373610bc0565b6040516103809190613d9d565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab9190613de4565b610be7565b005b3480156103be57600080fd5b506103d960048036038101906103d49190613e47565b610cbd565b6040516103e69190613e83565b60405180910390f35b3480156103fb57600080fd5b5061041660048036038101906104119190613e9e565b610cdd565b6040516104239190613e83565b60405180910390f35b34801561043857600080fd5b50610441610cfa565b60405161044e9190614011565b60405180910390f35b34801561046357600080fd5b5061047e60048036038101906104799190614033565b610dc7565b005b34801561048c57600080fd5b506104a760048036038101906104a291906140c9565b610de8565b005b3480156104b557600080fd5b506104d060048036038101906104cb9190613e9e565b611965565b6040516104dd919061414f565b60405180910390f35b3480156104f257600080fd5b506104fb611a08565b6040516105089190613e83565b60405180910390f35b34801561051d57600080fd5b50610538600480360381019061053391906142a1565b611a2c565b60405161054591906142f9565b60405180910390f35b34801561055a57600080fd5b5061057560048036038101906105709190614033565b611af3565b005b34801561058357600080fd5b5061058c611b76565b604051610599919061414f565b60405180910390f35b3480156105ae57600080fd5b506105c960048036038101906105c491906142a1565b611bb3565b6040516105d69190613d9d565b60405180910390f35b3480156105eb57600080fd5b506105f4611bfd565b6040516106019190613e83565b60405180910390f35b34801561061657600080fd5b5061061f611c21565b60405161062c91906142f9565b60405180910390f35b34801561064157600080fd5b5061065c60048036038101906106579190614314565b611c32565b6040516106699190613d9d565b60405180910390f35b34801561067e57600080fd5b5061069960048036038101906106949190614033565b611c61565b6040516106a69190613c50565b60405180910390f35b3480156106bb57600080fd5b506106c4611ccc565b6040516106d19190613e83565b60405180910390f35b3480156106e657600080fd5b506106ef611cd3565b6040516106fc9190613d9d565b60405180910390f35b34801561071157600080fd5b5061072c600480360381019061072791906143dc565b611cfa565b005b34801561073a57600080fd5b5061075560048036038101906107509190613e47565b6128d7565b60405161076291906142f9565b60405180910390f35b34801561077757600080fd5b50610792600480360381019061078d9190613de4565b6128fb565b005b3480156107a057600080fd5b506107bb60048036038101906107b69190614033565b6129d1565b005b3480156107c957600080fd5b506107e460048036038101906107df9190613cfc565b6129f2565b005b3480156107f257600080fd5b5061080d60048036038101906108089190613e9e565b612b01565b60405161081a919061414f565b60405180910390f35b34801561082f57600080fd5b50610838612ba5565b6040516108459190613e83565b60405180910390f35b34801561085a57600080fd5b50610863612bc9565b6040516108709190613e83565b60405180910390f35b34801561088557600080fd5b506108a0600480360381019061089b91906142a1565b612bed565b6040516108ad9190613d9d565b60405180910390f35b60606000600160056108c89190614512565b67ffffffffffffffff8111156108e1576108e0614176565b5b60405190808252806020026020018201604052801561090f5781602001602082028036833780820191505090505b509050478160008151811061092757610926614546565b5b6020026020010181815250506000600190505b60058111610a26576109f460fd6001836109549190614575565b6005811061096557610964614546565b5b018054610971906145d8565b80601f016020809104026020016040519081016040528092919081815260200182805461099d906145d8565b80156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b5050505050611a2c565b828281518110610a0757610a06614546565b5b6020026020010181815250508080610a1e90614609565b91505061093a565b508091505090565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610aa15750610aa082612c37565b5b9050919050565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707610ad281612cb1565b610ada612cc5565b610b496101028484604051610af0929190614676565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686612d14565b7f22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa610b72612d9a565b84848761010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610baa9594939291906146bc565b60405180910390a1610bba612da2565b50505050565b61010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2610c1181612cb1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c77576040517fd766085d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600060656000838152602001908152602001600020600101549050919050565b6000610cf38260fb612dac90919063ffffffff16565b9050919050565b610d026139a2565b60fd600580602002604051908101604052809291906000905b82821015610dbe578382018054610d31906145d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d906145d8565b8015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b505050505081526020019060010190610d1b565b50505050905090565b610dd082610cbd565b610dd981612cb1565b610de38383612dc3565b505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6610e1281612cb1565b6000610102604051610e2390613a20565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610e6590614756565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610ea7906147b7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610ee990614818565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b8787905081101561195b5736888883818110610f3c57610f3b614546565b5b9050602002810190610f4e919061483c565b90503073ffffffffffffffffffffffffffffffffffffffff16818060000190610f779190614864565b6020016020810190610f899190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614610fd6576040517f99c71e6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168160400160208101906110009190613de4565b73ffffffffffffffffffffffffffffffffffffffff161415801561106257508273ffffffffffffffffffffffffffffffffffffffff168160400160208101906110499190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611099576040517f419fde0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168160200160208101906110c39190613de4565b73ffffffffffffffffffffffffffffffffffffffff161415801561112557508473ffffffffffffffffffffffffffffffffffffffff1681602001602081019061110c9190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561115c576040517f7d8ee31c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061010a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cdca17538380600001906111ad9190614864565b80600001906111bc919061488c565b8580600001906111cc9190614864565b606001356040518463ffffffff1660e01b81526004016111ee9392919061492d565b6020604051808303816000875af192505050801561122a57506040513d601f19601f820116820180604052508101906112279190614974565b60015b6112e0576112366149ae565b806308c379a0036112cf575061124a6149d0565b8061125557506112d1565b7fa5d58d69861729f1703d1b6e4dfb43369bb7f6049cc96e68f35a94129fc14dce8360200160208101906112899190613de4565b84604001602081019061129c9190613de4565b8580600001906112ac9190614864565b60600135846040516112c19493929190614a60565b60405180910390a1506112db565b505b3d6000803e3d6000fd5b611359565b8091507f2486dbd80d4ae64aa9afaacc3370501ed791559e2fdfcd6101f3835150f310808360200160208101906113179190613de4565b84604001602081019061132a9190613de4565b85806000019061133a9190614864565b606001358560405161134f9493929190614aac565b60405180910390a1505b600082806000019061136b9190614864565b608001351115806113a6575060646062826113869190614af1565b6113909190614b62565b8280600001906113a09190614864565b60800135105b156113dd576040517f1792539f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260200160208101906113f29190613de4565b905060008380600001906114069190614864565b606001351115806114a257508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161144b9190613d9d565b602060405180830381865afa158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c9190614974565b83806000019061149c9190614864565b60600135115b156114d9576040517f54e80d1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360400160208101906114ee9190613de4565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115269190613d9d565b602060405180830381865afa158015611543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115679190614974565b90506115c48261010860405161157c90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168680600001906115bb9190614864565b60600135612d14565b60008060f81b6040516020016115da9190614c41565b60405160208183030381529060405290506000600167ffffffffffffffff81111561160857611607614176565b5b60405190808252806020026020018201604052801561163b57816020015b60608152602001906001900390816116265790505b50905085806000019061164e9190614864565b60200160208101906116609190613de4565b8680600001906116709190614864565b606001358780600001906116849190614864565b608001358880600001906116989190614864565b80600001906116a7919061488c565b60006040516020016116be96959493929190614c5c565b604051602081830303815290604052816000815181106116e1576116e0614546565b5b60200260200101819052506101086040516116fb90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633593564c83838980600001906117579190614864565b604001356040518463ffffffff1660e01b815260040161177993929190614e08565b600060405180830381600087803b15801561179357600080fd5b505af19250505080156117a4575060015b611831576117b06149ae565b806308c379a00361182057506117c46149d0565b806117cf5750611822565b7f48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb918760200160208101906118039190613de4565b82604051611812929190614e4d565b60405180910390a15061182c565b505b3d6000803e3d6000fd5b611942565b60008660400160208101906118469190613de4565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161187e9190613d9d565b602060405180830381865afa15801561189b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bf9190614974565b90507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe2358760200160208101906118f59190613de4565b8860400160208101906119089190613de4565b8980600001906119189190614864565b6060013587856119289190614575565b6040516119389493929190614aac565b60405180910390a1505b505050505050808061195390614609565b915050610f1d565b5050505050505050565b60fd816005811061197557600080fd5b016000915090508054611987906145d8565b80601f01602080910402602001604051908101604052809291908181526020018280546119b3906145d8565b8015611a005780601f106119d557610100808354040283529160200191611a00565b820191906000526020600020905b8154815290600101906020018083116119e357829003601f168201915b505050505081565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a681565b60008061010283604051611a409190614eae565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611aaa9190613d9d565b602060405180830381865afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190614974565b915050919050565b611afb612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5f90614f37565b60405180910390fd5b611b728282612df7565b5050565b60606040518060400160405280600581526020017f322e302e30000000000000000000000000000000000000000000000000000000815250905090565b610102818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270781565b6000611c2d60fb612e2b565b905090565b6000611c598260976000868152602001908152602001600020612e4090919063ffffffff16565b905092915050565b60006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff16159050808015611d2b5750600160008054906101000a900460ff1660ff16105b80611d585750611d3a30612e5a565b158015611d575750600160008054906101000a900460ff1660ff16145b5b611d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8e90614fc9565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611dd4576001600060016101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff1688600060038110611e0057611dff614546565b5b602002016020810190611e139190613de4565b73ffffffffffffffffffffffffffffffffffffffff16148015611e885750600073ffffffffffffffffffffffffffffffffffffffff1688600160038110611e5d57611e5c614546565b5b602002016020810190611e709190613de4565b73ffffffffffffffffffffffffffffffffffffffff16145b8015611ee65750600073ffffffffffffffffffffffffffffffffffffffff1688600260038110611ebb57611eba614546565b5b602002016020810190611ece9190613de4565b73ffffffffffffffffffffffffffffffffffffffff16145b15611f1d576040517fbfac83b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603611f83576040517fdf51a0d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611fe9576040517fd766085d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361204f576040517f4e12a74f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120b5576040517f8dd8261b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120bd612e7d565b6120c5612ece565b600580146120ff576040517fda3ebf7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600581101561220a5789816005811061211e5761211d614546565b5b6020020160208101906121319190613de4565b6101028c836005811061214757612146614546565b5b6020028101906121579190614fe9565b604051612165929190614676565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a81600581106121c4576121c3614546565b5b6020028101906121d49190614fe9565b60fd83600581106121e8576121e7614546565b5b0191826121f6929190615203565b50808061220290614609565b915050612102565b508561010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508661010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b600381101561238d578381600381106122ae576122ad614546565b5b6020028101906122be9190614fe9565b61010583600381106122d3576122d2614546565b5b0191826122e1929190615203565b508281600381106122f5576122f4614546565b5b6020020160208101906123089190613de4565b61010861010583600381106123205761231f614546565b5b0160405161232e9190615356565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061238590614609565b915050612292565b5061010860405161239d90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010860405161241c906153b9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124c07ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e260fb612f2790919063ffffffff16565b506124f57ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a660fb612f2790919063ffffffff16565b5061252a7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270760fb612f2790919063ffffffff16565b5061255f7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc660fb612f2790919063ffffffff16565b506125b07ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e28960006003811061259857612597614546565b5b6020020160208101906125ab9190613de4565b612dc3565b6126007ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2896001600381106125e8576125e7614546565b5b6020020160208101906125fb9190613de4565b612dc3565b6126507ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e28960026003811061263857612637614546565b5b60200201602081019061264b9190613de4565b612dc3565b61267a7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a686612dc3565b6126a47ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a685612dc3565b6126ce7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270786612dc3565b6126f87fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270785612dc3565b61275f7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc661010860405161272b9061541a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dc3565b6127897ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e280612f3e565b6127b37ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a680612f3e565b6127dd7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270780612f3e565b6128277fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc67ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2612f3e565b7f7f1f0de4dc14e9ab39c52c069e883f78ab6f9c7854b254718a298e76f2ebdc6d338b8b8b8b8b8b8b6101058b60405161286a9a99989796959493929190615814565b60405180910390a180156128cb5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516128c2919061590a565b60405180910390a15b50505050505050505050565b60006128f460976000848152602001908152602001600020612f9a565b9050919050565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e261292581612cb1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361298b576040517fdf51a0d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6129da82610cbd565b6129e381612cb1565b6129ed8383612df7565b505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6612a1c81612cb1565b612a24612cc5565b612a936101028484604051612a3a929190614676565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686612d14565b7f901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848487604051612aeb9493929190615925565b60405180910390a1612afb612da2565b50505050565b6101058160038110612b1257600080fd5b016000915090508054612b24906145d8565b80601f0160208091040260200160405190810160405280929190818152602001828054612b50906145d8565b8015612b9d5780601f10612b7257610100808354040283529160200191612b9d565b820191906000526020600020905b815481529060010190602001808311612b8057829003601f168201915b505050505081565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e281565b610108818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612caa5750612ca982612faf565b5b9050919050565b612cc281612cbd612d9a565b613019565b50565b600260c95403612d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d01906159b1565b60405180910390fd5b600260c981905550565b612d958363a9059cbb60e01b8484604051602401612d339291906159d1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061309e565b505050565b600033905090565b600160c981905550565b6000612dbb8360000183613166565b905092915050565b612dcd8282613191565b612df2816097600085815260200190815260200160002061327290919063ffffffff16565b505050565b612e0182826132a2565b612e26816097600085815260200190815260200160002061338490919063ffffffff16565b505050565b6000612e39826000016133b4565b9050919050565b6000612e4f8360000183613166565b60001c905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16612ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec390615a6c565b60405180910390fd5b565b600060019054906101000a900460ff16612f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1490615a6c565b60405180910390fd5b600160c981905550565b6000612f3683600001836133c5565b905092915050565b6000612f4983610cbd565b90508160656000858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b6000612fa8826000016133b4565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6130238282611c61565b61309a5761303081613435565b61303e8360001c6020613462565b60405160200161304f929190615b24565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613091919061414f565b60405180910390fd5b5050565b6000613100826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661369e9092919063ffffffff16565b90506000815114806131225750808060200190518101906131219190615b8a565b5b613161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161315890615c29565b60405180910390fd5b505050565b600082600001828154811061317e5761317d614546565b5b9060005260206000200154905092915050565b61319b8282611c61565b61326e5760016065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613213612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061329a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6133c5565b905092915050565b6132ac8282611c61565b156133805760006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613325612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006133ac836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6136b6565b905092915050565b600081600001805490509050919050565b60006133d183836137ca565b61342a57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061342f565b600090505b92915050565b606061345b8273ffffffffffffffffffffffffffffffffffffffff16601460ff16613462565b9050919050565b6060600060028360026134759190614af1565b61347f9190614512565b67ffffffffffffffff81111561349857613497614176565b5b6040519080825280601f01601f1916602001820160405280156134ca5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061350257613501614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061356657613565614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026135a69190614af1565b6135b09190614512565b90505b6001811115613650577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106135f2576135f1614546565b5b1a60f81b82828151811061360957613608614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061364990615c49565b90506135b3565b5060008414613694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161368b90615cbe565b60405180910390fd5b8091505092915050565b60606136ad84846000856137ed565b90509392505050565b600080836001016000848152602001908152602001600020549050600081146137be5760006001826136e89190614575565b90506000600186600001805490506137009190614575565b905081811461376f57600086600001828154811061372157613720614546565b5b906000526020600020015490508087600001848154811061374557613744614546565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061378357613782615cde565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506137c4565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015613832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161382990615d7f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161385b9190615ddb565b60006040518083038185875af1925050503d8060008114613898576040519150601f19603f3d011682016040523d82523d6000602084013e61389d565b606091505b50915091506138ae878383876138ba565b92505050949350505050565b6060831561391c576000835103613914576138d48561392f565b613913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161390a90615e3e565b60405180910390fd5b5b829050613927565b6139268383613952565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156139655781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613999919061414f565b60405180910390fd5b6040518060a001604052806005905b60608152602001906001900390816139b15790505090565b600081905092915050565b7f5745544800000000000000000000000000000000000000000000000000000000600082015250565b6000613a0a6004836139c9565b9150613a15826139d4565b600482019050919050565b6000613a2b826139fd565b9150819050919050565b600082825260208201905092915050565b7f4e6f742070617961626c65206f6e207468697320636861696e00000000000000600082015250565b6000613a7c601983613a35565b9150613a8782613a46565b602082019050919050565b60006020820190508181036000830152613aab81613a6f565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b613af181613ade565b82525050565b6000613b038383613ae8565b60208301905092915050565b6000602082019050919050565b6000613b2782613ab2565b613b318185613abd565b9350613b3c83613ace565b8060005b83811015613b6d578151613b548882613af7565b9750613b5f83613b0f565b925050600181019050613b40565b5085935050505092915050565b60006020820190508181036000830152613b948184613b1c565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613be581613bb0565b8114613bf057600080fd5b50565b600081359050613c0281613bdc565b92915050565b600060208284031215613c1e57613c1d613ba6565b5b6000613c2c84828501613bf3565b91505092915050565b60008115159050919050565b613c4a81613c35565b82525050565b6000602082019050613c656000830184613c41565b92915050565b613c7481613ade565b8114613c7f57600080fd5b50565b600081359050613c9181613c6b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613cbc57613cbb613c97565b5b8235905067ffffffffffffffff811115613cd957613cd8613c9c565b5b602083019150836001820283011115613cf557613cf4613ca1565b5b9250929050565b600080600060408486031215613d1557613d14613ba6565b5b6000613d2386828701613c82565b935050602084013567ffffffffffffffff811115613d4457613d43613bab565b5b613d5086828701613ca6565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613d8782613d5c565b9050919050565b613d9781613d7c565b82525050565b6000602082019050613db26000830184613d8e565b92915050565b613dc181613d7c565b8114613dcc57600080fd5b50565b600081359050613dde81613db8565b92915050565b600060208284031215613dfa57613df9613ba6565b5b6000613e0884828501613dcf565b91505092915050565b6000819050919050565b613e2481613e11565b8114613e2f57600080fd5b50565b600081359050613e4181613e1b565b92915050565b600060208284031215613e5d57613e5c613ba6565b5b6000613e6b84828501613e32565b91505092915050565b613e7d81613e11565b82525050565b6000602082019050613e986000830184613e74565b92915050565b600060208284031215613eb457613eb3613ba6565b5b6000613ec284828501613c82565b91505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613f25578082015181840152602081019050613f0a565b60008484015250505050565b6000601f19601f8301169050919050565b6000613f4d82613eeb565b613f578185613ef6565b9350613f67818560208601613f07565b613f7081613f31565b840191505092915050565b6000613f878383613f42565b905092915050565b6000602082019050919050565b6000613fa782613ecb565b613fb18185613ed6565b935083602082028501613fc385613ee1565b8060005b85811015613fff5784840389528151613fe08582613f7b565b9450613feb83613f8f565b925060208a01995050600181019050613fc7565b50829750879550505050505092915050565b6000602082019050818103600083015261402b8184613f9c565b905092915050565b6000806040838503121561404a57614049613ba6565b5b600061405885828601613e32565b925050602061406985828601613dcf565b9150509250929050565b60008083601f84011261408957614088613c97565b5b8235905067ffffffffffffffff8111156140a6576140a5613c9c565b5b6020830191508360208202830111156140c2576140c1613ca1565b5b9250929050565b600080602083850312156140e0576140df613ba6565b5b600083013567ffffffffffffffff8111156140fe576140fd613bab565b5b61410a85828601614073565b92509250509250929050565b600061412182613eeb565b61412b8185613a35565b935061413b818560208601613f07565b61414481613f31565b840191505092915050565b600060208201905081810360008301526141698184614116565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6141ae82613f31565b810181811067ffffffffffffffff821117156141cd576141cc614176565b5b80604052505050565b60006141e0613b9c565b90506141ec82826141a5565b919050565b600067ffffffffffffffff82111561420c5761420b614176565b5b61421582613f31565b9050602081019050919050565b82818337600083830152505050565b600061424461423f846141f1565b6141d6565b9050828152602081018484840111156142605761425f614171565b5b61426b848285614222565b509392505050565b600082601f83011261428857614287613c97565b5b8135614298848260208601614231565b91505092915050565b6000602082840312156142b7576142b6613ba6565b5b600082013567ffffffffffffffff8111156142d5576142d4613bab565b5b6142e184828501614273565b91505092915050565b6142f381613ade565b82525050565b600060208201905061430e60008301846142ea565b92915050565b6000806040838503121561432b5761432a613ba6565b5b600061433985828601613e32565b925050602061434a85828601613c82565b9150509250929050565b6000819050826020600502820111156143705761436f613ca1565b5b92915050565b60008190508260206005028201111561439257614391613ca1565b5b92915050565b6000819050826020600302820111156143b4576143b3613ca1565b5b92915050565b6000819050826020600302820111156143d6576143d5613ca1565b5b92915050565b60008060008060008060008060006102208a8c0312156143ff576143fe613ba6565b5b60008a013567ffffffffffffffff81111561441d5761441c613bab565b5b6144298c828d01614354565b995050602061443a8c828d01614376565b98505060c061444b8c828d01614398565b97505061012061445d8c828d01613dcf565b96505061014061446f8c828d01613dcf565b9550506101606144818c828d01613dcf565b9450506101806144938c828d01613dcf565b9350506101a08a013567ffffffffffffffff8111156144b5576144b4613bab565b5b6144c18c828d016143ba565b9250506101c06144d38c828d01614398565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061451d82613ade565b915061452883613ade565b92508282019050808211156145405761453f6144e3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061458082613ade565b915061458b83613ade565b92508282039050818111156145a3576145a26144e3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806145f057607f821691505b602082108103614603576146026145a9565b5b50919050565b600061461482613ade565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614646576146456144e3565b5b600182019050919050565b600061465d83856139c9565b935061466a838584614222565b82840190509392505050565b6000614683828486614651565b91508190509392505050565b600061469b8385613a35565b93506146a8838584614222565b6146b183613f31565b840190509392505050565b60006080820190506146d16000830188613d8e565b81810360208301526146e481868861468f565b90506146f360408301856142ea565b6147006060830184613d8e565b9695505050505050565b7f5742544300000000000000000000000000000000000000000000000000000000600082015250565b60006147406004836139c9565b915061474b8261470a565b600482019050919050565b600061476182614733565b9150819050919050565b7f5553444300000000000000000000000000000000000000000000000000000000600082015250565b60006147a16004836139c9565b91506147ac8261476b565b600482019050919050565b60006147c282614794565b9150819050919050565b7f5553445400000000000000000000000000000000000000000000000000000000600082015250565b60006148026004836139c9565b915061480d826147cc565b600482019050919050565b6000614823826147f5565b9150819050919050565b600080fd5b600080fd5b600080fd5b6000823560016060038336030381126148585761485761482d565b5b80830191505092915050565b60008235600160a0038336030381126148805761487f61482d565b5b80830191505092915050565b600080833560016020038436030381126148a9576148a861482d565b5b80840192508235915067ffffffffffffffff8211156148cb576148ca614832565b5b6020830192506001820236038313156148e7576148e6614837565b5b509250929050565b600082825260208201905092915050565b600061490c83856148ef565b9350614919838584614222565b61492283613f31565b840190509392505050565b60006040820190508181036000830152614948818587614900565b905061495760208301846142ea565b949350505050565b60008151905061496e81613c6b565b92915050565b60006020828403121561498a57614989613ba6565b5b60006149988482850161495f565b91505092915050565b60008160e01c9050919050565b600060033d11156149cd5760046000803e6149ca6000516149a1565b90505b90565b600060443d10614a5d576149e2613b9c565b60043d036004823e80513d602482011167ffffffffffffffff82111715614a0a575050614a5d565b808201805167ffffffffffffffff811115614a285750505050614a5d565b80602083010160043d038501811115614a45575050505050614a5d565b614a54826020018501866141a5565b82955050505050505b90565b6000608082019050614a756000830187613d8e565b614a826020830186613d8e565b614a8f60408301856142ea565b8181036060830152614aa18184614116565b905095945050505050565b6000608082019050614ac16000830187613d8e565b614ace6020830186613d8e565b614adb60408301856142ea565b614ae860608301846142ea565b95945050505050565b6000614afc82613ade565b9150614b0783613ade565b9250828202614b1581613ade565b91508282048414831517614b2c57614b2b6144e3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614b6d82613ade565b9150614b7883613ade565b925082614b8857614b87614b33565b5b828204905092915050565b7f726f757465720000000000000000000000000000000000000000000000000000600082015250565b6000614bc96006836139c9565b9150614bd482614b93565b600682019050919050565b6000614bea82614bbc565b9150819050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614c3b614c3682614bf4565b614c20565b82525050565b6000614c4d8284614c2a565b60018201915081905092915050565b600060a082019050614c716000830189613d8e565b614c7e60208301886142ea565b614c8b60408301876142ea565b8181036060830152614c9e818587614900565b9050614cad6080830184613c41565b979650505050505050565b600081519050919050565b6000614cce82614cb8565b614cd881856148ef565b9350614ce8818560208601613f07565b614cf181613f31565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000614d4482614cb8565b614d4e8185614d28565b9350614d5e818560208601613f07565b614d6781613f31565b840191505092915050565b6000614d7e8383614d39565b905092915050565b6000602082019050919050565b6000614d9e82614cfc565b614da88185614d07565b935083602082028501614dba85614d18565b8060005b85811015614df65784840389528151614dd78582614d72565b9450614de283614d86565b925060208a01995050600181019050614dbe565b50829750879550505050505092915050565b60006060820190508181036000830152614e228186614cc3565b90508181036020830152614e368185614d93565b9050614e4560408301846142ea565b949350505050565b6000604082019050614e626000830185613d8e565b8181036020830152614e748184614116565b90509392505050565b6000614e8882613eeb565b614e9281856139c9565b9350614ea2818560208601613f07565b80840191505092915050565b6000614eba8284614e7d565b915081905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000614f21602f83613a35565b9150614f2c82614ec5565b604082019050919050565b60006020820190508181036000830152614f5081614f14565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614fb3602e83613a35565b9150614fbe82614f57565b604082019050919050565b60006020820190508181036000830152614fe281614fa6565b9050919050565b600080833560016020038436030381126150065761500561482d565b5b80840192508235915067ffffffffffffffff82111561502857615027614832565b5b60208301925060018202360383131561504457615043614837565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026150b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261507c565b6150c3868361507c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006151006150fb6150f684613ade565b6150db565b613ade565b9050919050565b6000819050919050565b61511a836150e5565b61512e61512682615107565b848454615089565b825550505050565b600090565b615143615136565b61514e818484615111565b505050565b5b818110156151725761516760008261513b565b600181019050615154565b5050565b601f8211156151b75761518881615057565b6151918461506c565b810160208510156151a0578190505b6151b46151ac8561506c565b830182615153565b50505b505050565b600082821c905092915050565b60006151da600019846008026151bc565b1980831691505092915050565b60006151f383836151c9565b9150826002028217905092915050565b61520d838361504c565b67ffffffffffffffff81111561522657615225614176565b5b61523082546145d8565b61523b828285615176565b6000601f83116001811461526a5760008415615258578287013590505b61526285826151e7565b8655506152ca565b601f19841661527886615057565b60005b828110156152a05784890135825560018201915060208501945060208101905061527b565b868310156152bd57848901356152b9601f8916826151c9565b8355505b6001600288020188555050505b50505050505050565b600081546152e0816145d8565b6152ea81866139c9565b94506001821660008114615305576001811461531a5761534d565b60ff198316865281151582028601935061534d565b61532385615057565b60005b8381101561534557815481890152600182019150602081019050615326565b838801955050505b50505092915050565b600061536282846152d3565b915081905092915050565b7f71756f7465720000000000000000000000000000000000000000000000000000600082015250565b60006153a36006836139c9565b91506153ae8261536d565b600682019050919050565b60006153c482615396565b9150819050919050565b7f7377617070657200000000000000000000000000000000000000000000000000600082015250565b60006154046007836139c9565b915061540f826153ce565b600782019050919050565b6000615425826153f7565b9150819050919050565b600060059050919050565b6000819050919050565b60006154508385613ef6565b935061545d838584614222565b61546683613f31565b840190509392505050565b600061547e848484615444565b90509392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126154b3576154b2615491565b5b83810192508235915060208301925067ffffffffffffffff8211156154db576154da615487565b5b6001820236038313156154f1576154f061548c565b5b509250929050565b6000602082019050919050565b60006155118261542f565b61551b8185613ed6565b93508360208202850161552d8561543a565b8060005b858110156155735784840389526155488284615496565b615553868284615471565b955061555e846154f9565b935060208b019a505050600181019050615531565b50829750879550505050505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b6155ae81613d7c565b82525050565b60006155c083836155a5565b60208301905092915050565b60006155db6020840184613dcf565b905092915050565b6000602082019050919050565b6155f981615585565b6156038184615590565b925061560e8261559b565b8060005b838110156156475761562482846155cc565b61562e87826155b4565b9650615639836155e3565b925050600181019050615612565b505050505050565b600060039050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6156858161564f565b61568f818461565a565b925061569a82615665565b8060005b838110156156d3576156b082846155cc565b6156ba87826155b4565b96506156c58361566f565b92505060018101905061569e565b505050505050565b600060039050919050565b600081905092915050565b6000819050919050565b60008154615708816145d8565b6157128186613ef6565b9450600182166000811461572d576001811461574357615776565b60ff198316865281151560200286019350615776565b61574c85615057565b60005b8381101561576e5781548189015260018201915060208101905061574f565b808801955050505b50505092915050565b600061578b83836156fb565b905092915050565b6000600182019050919050565b60006157ab826156db565b6157b581856156e6565b9350836020820285016157c7856156f1565b8060005b85811015615802578484038952816157e3858261577f565b94506157ee83615793565b925060208a019950506001810190506157cb565b50829750879550505050505092915050565b60006102408201905061582a600083018d613d8e565b818103602083015261583c818c615506565b905061584b604083018b6155f0565b61585860e083018a61567c565b615866610140830189613d8e565b615874610160830188613d8e565b615882610180830187613d8e565b6158906101a0830186613d8e565b8181036101c08301526158a381856157a0565b90506158b36101e083018461567c565b9b9a5050505050505050505050565b6000819050919050565b600060ff82169050919050565b60006158f46158ef6158ea846158c2565b6150db565b6158cc565b9050919050565b615904816158d9565b82525050565b600060208201905061591f60008301846158fb565b92915050565b600060608201905061593a6000830187613d8e565b818103602083015261594d81858761468f565b905061595c60408301846142ea565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061599b601f83613a35565b91506159a682615965565b602082019050919050565b600060208201905081810360008301526159ca8161598e565b9050919050565b60006040820190506159e66000830185613d8e565b6159f360208301846142ea565b9392505050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000615a56602b83613a35565b9150615a61826159fa565b604082019050919050565b60006020820190508181036000830152615a8581615a49565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000615ac26017836139c9565b9150615acd82615a8c565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000615b0e6011836139c9565b9150615b1982615ad8565b601182019050919050565b6000615b2f82615ab5565b9150615b3b8285614e7d565b9150615b4682615b01565b9150615b528284614e7d565b91508190509392505050565b615b6781613c35565b8114615b7257600080fd5b50565b600081519050615b8481615b5e565b92915050565b600060208284031215615ba057615b9f613ba6565b5b6000615bae84828501615b75565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000615c13602a83613a35565b9150615c1e82615bb7565b604082019050919050565b60006020820190508181036000830152615c4281615c06565b9050919050565b6000615c5482613ade565b915060008203615c6757615c666144e3565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000615ca8602083613a35565b9150615cb382615c72565b602082019050919050565b60006020820190508181036000830152615cd781615c9b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000615d69602683613a35565b9150615d7482615d0d565b604082019050919050565b60006020820190508181036000830152615d9881615d5c565b9050919050565b600081905092915050565b6000615db582614cb8565b615dbf8185615d9f565b9350615dcf818560208601613f07565b80840191505092915050565b6000615de78284615daa565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000615e28601d83613a35565b9150615e3382615df2565b602082019050919050565b60006020820190508181036000830152615e5781615e1b565b905091905056fea26469706673582212202d25f13f28a36bf6b2d3184f9ac2ffac8c311a16d458e191a402f3927284b2ea64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E94 DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55452D04 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDE6BD687 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE6BD687 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0xDF668ECA EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0xE5DF800A EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0xEE67CC2A EQ PUSH2 0x879 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xD00411C9 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0xDC048CF2 EQ PUSH2 0x7BD JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xB14EC101 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xC869787E EQ PUSH2 0x705 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x55452D04 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x71372544 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x83D33319 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x635 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2AD753E4 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x32CC815D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x32CC815D EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x35EE5F87 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x577 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2AD753E4 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x2FFE9942 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x310495AB EQ PUSH2 0x4A9 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x15AC7358 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x15AC7358 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x212F6039 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x25ACC985 EQ PUSH2 0x3EF JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x828C404 EQ PUSH2 0x335 JUMPI PUSH2 0x2C8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C8 JUMPI PUSH1 0x1E CHAINID SUB PUSH2 0x28B JUMPI PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD SWAP1 PUSH2 0x3A92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3C08 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x4011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x40C9 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F4 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61F PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x4314 JUMP JUMPDEST PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C4 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x43DC JUMP JUMPDEST PUSH2 0x1CFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x755 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x792 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x28FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x29D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0x29F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x2B01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x838 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x863 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E1 JUMPI PUSH2 0x8E0 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x90F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP SELFBALANCE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0xA26 JUMPI PUSH2 0x9F4 PUSH1 0xFD PUSH1 0x1 DUP4 PUSH2 0x954 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99D SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1A2C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xA1E SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xAA1 JUMPI POP PUSH2 0xAA0 DUP3 PUSH2 0x2C37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH2 0xAD2 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0xADA PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0xB49 PUSH2 0x102 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x2D14 JUMP JUMPDEST PUSH32 0x22CB89E6358014BB27F5658E2B820189F8F4C9E3F7165ECF266EDC53BE12D9FA PUSH2 0xB72 PUSH2 0x2D9A JUMP JUMPDEST DUP5 DUP5 DUP8 PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBBA PUSH2 0x2DA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0xC11 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD766085D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x104 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 DUP3 PUSH1 0xFB PUSH2 0x2DAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD02 PUSH2 0x39A2 JUMP JUMPDEST PUSH1 0xFD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xDBE JUMPI DUP4 DUP3 ADD DUP1 SLOAD PUSH2 0xD31 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD1B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDD9 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0xDE3 DUP4 DUP4 PUSH2 0x2DC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0xE12 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xE65 SWAP1 PUSH2 0x4756 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xEA7 SWAP1 PUSH2 0x47B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xEE9 SWAP1 PUSH2 0x4818 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP8 SWAP1 POP DUP2 LT ISZERO PUSH2 0x195B JUMPI CALLDATASIZE DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xF3C JUMPI PUSH2 0xF3B PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xF4E SWAP2 SWAP1 PUSH2 0x483C JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x99C71E6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1000 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0x419FDE0100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D8EE31C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCDCA1753 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x488C JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11CC SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E0 JUMPI PUSH2 0x1236 PUSH2 0x49AE JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x12CF JUMPI POP PUSH2 0x124A PUSH2 0x49D0 JUMP JUMPDEST DUP1 PUSH2 0x1255 JUMPI POP PUSH2 0x12D1 JUMP JUMPDEST PUSH32 0xA5D58D69861729F1703D1B6E4DFB43369BB7F6049CC96E68F35A94129FC14DCE DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x12C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x12DB JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1359 JUMP JUMPDEST DUP1 SWAP2 POP PUSH32 0x2486DBD80D4AE64AA9AFAACC3370501ED791559E2FDFCD6101F3835150F31080 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x134F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD GT ISZERO DUP1 PUSH2 0x13A6 JUMPI POP PUSH1 0x64 PUSH1 0x62 DUP3 PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x4B62 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD LT JUMPDEST ISZERO PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1792539F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT ISZERO DUP1 PUSH2 0x14A2 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144B SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT JUMPDEST ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x54E80D1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x157C SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x2D14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF8 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x4C41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1607 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x163B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1626 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD DUP9 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x16A7 SWAP2 SWAP1 PUSH2 0x488C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16BE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x16FB SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3593564C DUP4 DUP4 DUP10 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1757 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1779 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17A4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1831 JUMPI PUSH2 0x17B0 PUSH2 0x49AE JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1820 JUMPI POP PUSH2 0x17C4 PUSH2 0x49D0 JUMP JUMPDEST DUP1 PUSH2 0x17CF JUMPI POP PUSH2 0x1822 JUMP JUMPDEST PUSH32 0x48DBF1F65DC9FB918DCF47A87D0D7DBFE9CD78BCFAEA409049EE36785201CB91 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1803 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x182C JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1846 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187E SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 POP PUSH32 0xFA2DDA1CC1B86E41239702756B13EFFBC1A092B5C57E3AD320FBE4F3B13FE235 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1908 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP10 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP8 DUP6 PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1938 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x1953 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF1D JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFD DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1987 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19B3 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x102 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A40 SWAP2 SWAP1 PUSH2 0x4EAE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AEB SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFB PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5F SWAP1 PUSH2 0x4F37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B72 DUP3 DUP3 PUSH2 0x2DF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2D PUSH1 0xFB PUSH2 0x2E2B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP3 PUSH1 0x97 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2E40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1D2B JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1D58 JUMPI POP PUSH2 0x1D3A ADDRESS PUSH2 0x2E5A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1D57 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1D97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8E SWAP1 PUSH2 0x4FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1DD4 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1E88 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E70 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1EE6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBFAC83B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F83 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF51A0D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD766085D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E12A74F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DD8261B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20BD PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x20C5 PUSH2 0x2ECE JUMP JUMPDEST PUSH1 0x5 DUP1 EQ PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xDA3EBF7300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x220A JUMPI DUP10 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2131 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x102 DUP13 DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2157 SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2165 SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x21C4 JUMPI PUSH2 0x21C3 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x21D4 SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH1 0xFD DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x21E8 JUMPI PUSH2 0x21E7 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD SWAP2 DUP3 PUSH2 0x21F6 SWAP3 SWAP2 SWAP1 PUSH2 0x5203 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x2202 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2102 JUMP JUMPDEST POP DUP6 PUSH2 0x104 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH2 0x103 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x238D JUMPI DUP4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x22BE SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH2 0x105 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x22D3 JUMPI PUSH2 0x22D2 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD SWAP2 DUP3 PUSH2 0x22E1 SWAP3 SWAP2 SWAP1 PUSH2 0x5203 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x22F5 JUMPI PUSH2 0x22F4 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2308 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x105 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x2320 JUMPI PUSH2 0x231F PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x232E SWAP2 SWAP1 PUSH2 0x5356 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x2385 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2292 JUMP JUMPDEST POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x239D SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x109 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x241C SWAP1 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x24C0 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x24F5 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x252A PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x255F PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x25B0 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2598 JUMPI PUSH2 0x2597 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x25AB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2600 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E7 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x25FB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2650 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x2638 JUMPI PUSH2 0x2637 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x264B SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x267A PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP7 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26A4 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP6 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26CE PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP7 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26F8 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP6 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x275F PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x272B SWAP1 PUSH2 0x541A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2789 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x27B3 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x27DD PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x2827 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x2F3E JUMP JUMPDEST PUSH32 0x7F1F0DE4DC14E9AB39C52C069E883F78AB6F9C7854B254718A298E76F2EBDC6D CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x105 DUP12 PUSH1 0x40 MLOAD PUSH2 0x286A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 ISZERO PUSH2 0x28CB JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x28C2 SWAP2 SWAP1 PUSH2 0x590A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F4 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x2925 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x298B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF51A0D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x103 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x29DA DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0x29E3 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x29ED DUP4 DUP4 PUSH2 0x2DF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH2 0x2A1C DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x2A24 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2A93 PUSH2 0x102 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A3A SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x2D14 JUMP JUMPDEST PUSH32 0x901C03DA5D88EB3D62AB4617E7B7D17D86DB16356823A7971127D5181A842FEF PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2AEB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2AFB PUSH2 0x2DA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x2B24 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B50 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP2 JUMP JUMPDEST PUSH2 0x108 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2CAA JUMPI POP PUSH2 0x2CA9 DUP3 PUSH2 0x2FAF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC2 DUP2 PUSH2 0x2CBD PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x3019 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x2D0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D01 SWAP1 PUSH2 0x59B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2D95 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D33 SWAP3 SWAP2 SWAP1 PUSH2 0x59D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x309E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3166 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DCD DUP3 DUP3 PUSH2 0x3191 JUMP JUMPDEST PUSH2 0x2DF2 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2E01 DUP3 DUP3 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0x2E26 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3384 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E39 DUP3 PUSH1 0x0 ADD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4F DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3166 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2ECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC3 SWAP1 PUSH2 0x5A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2F1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F14 SWAP1 PUSH2 0x5A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F36 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x33C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F49 DUP4 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA8 DUP3 PUSH1 0x0 ADD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3023 DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x309A JUMPI PUSH2 0x3030 DUP2 PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x303E DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x304F SWAP3 SWAP2 SWAP1 PUSH2 0x5B24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3091 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3100 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x369E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x3122 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3121 SWAP2 SWAP1 PUSH2 0x5B8A JUMP JUMPDEST JUMPDEST PUSH2 0x3161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3158 SWAP1 PUSH2 0x5C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x319B DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x326E JUMPI PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3213 PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329A DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x33C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32AC DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST ISZERO PUSH2 0x3380 JUMPI PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3325 PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x36B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D1 DUP4 DUP4 PUSH2 0x37CA JUMP JUMPDEST PUSH2 0x342A JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x342F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x345B DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x3462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x3475 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x347F SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3498 JUMPI PUSH2 0x3497 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3502 JUMPI PUSH2 0x3501 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3566 JUMPI PUSH2 0x3565 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x35A6 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x35B0 SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3650 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x35F2 JUMPI PUSH2 0x35F1 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3609 JUMPI PUSH2 0x3608 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x3649 SWAP1 PUSH2 0x5C49 JUMP JUMPDEST SWAP1 POP PUSH2 0x35B3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x3694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368B SWAP1 PUSH2 0x5CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x36AD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x37ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x37BE JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x36E8 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3700 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x376F JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3721 JUMPI PUSH2 0x3720 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3745 JUMPI PUSH2 0x3744 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x3783 JUMPI PUSH2 0x3782 PUSH2 0x5CDE JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x37C4 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3829 SWAP1 PUSH2 0x5D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x385B SWAP2 SWAP1 PUSH2 0x5DDB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3898 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x389D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x38AE DUP8 DUP4 DUP4 DUP8 PUSH2 0x38BA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x391C JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3914 JUMPI PUSH2 0x38D4 DUP6 PUSH2 0x392F JUMP JUMPDEST PUSH2 0x3913 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390A SWAP1 PUSH2 0x5E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3927 JUMP JUMPDEST PUSH2 0x3926 DUP4 DUP4 PUSH2 0x3952 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3965 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3999 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x39B1 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5745544800000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0A PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A15 DUP3 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2B DUP3 PUSH2 0x39FD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742070617961626C65206F6E207468697320636861696E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7C PUSH1 0x19 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A87 DUP3 PUSH2 0x3A46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AAB DUP2 PUSH2 0x3A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AF1 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B03 DUP4 DUP4 PUSH2 0x3AE8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B27 DUP3 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x3B31 DUP2 DUP6 PUSH2 0x3ABD JUMP JUMPDEST SWAP4 POP PUSH2 0x3B3C DUP4 PUSH2 0x3ACE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B6D JUMPI DUP2 MLOAD PUSH2 0x3B54 DUP9 DUP3 PUSH2 0x3AF7 JUMP JUMPDEST SWAP8 POP PUSH2 0x3B5F DUP4 PUSH2 0x3B0F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B40 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B94 DUP2 DUP5 PUSH2 0x3B1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BE5 DUP2 PUSH2 0x3BB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C02 DUP2 PUSH2 0x3BDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C1E JUMPI PUSH2 0x3C1D PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C2C DUP5 DUP3 DUP6 ADD PUSH2 0x3BF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C4A DUP2 PUSH2 0x3C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C74 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP2 EQ PUSH2 0x3C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C91 DUP2 PUSH2 0x3C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3CBC JUMPI PUSH2 0x3CBB PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CD9 JUMPI PUSH2 0x3CD8 PUSH2 0x3C9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3CF5 JUMPI PUSH2 0x3CF4 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D23 DUP7 DUP3 DUP8 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D44 JUMPI PUSH2 0x3D43 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x3D50 DUP7 DUP3 DUP8 ADD PUSH2 0x3CA6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D87 DUP3 PUSH2 0x3D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D97 DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DC1 DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP2 EQ PUSH2 0x3DCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DDE DUP2 PUSH2 0x3DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DFA JUMPI PUSH2 0x3DF9 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E08 DUP5 DUP3 DUP6 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E24 DUP2 PUSH2 0x3E11 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E41 DUP2 PUSH2 0x3E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5D JUMPI PUSH2 0x3E5C PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6B DUP5 DUP3 DUP6 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E7D DUP2 PUSH2 0x3E11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EB4 JUMPI PUSH2 0x3EB3 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EC2 DUP5 DUP3 DUP6 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F25 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F0A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4D DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x3F57 DUP2 DUP6 PUSH2 0x3EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x3F70 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F87 DUP4 DUP4 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 DUP3 PUSH2 0x3ECB JUMP JUMPDEST PUSH2 0x3FB1 DUP2 DUP6 PUSH2 0x3ED6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3FC3 DUP6 PUSH2 0x3EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FFF JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3FE0 DUP6 DUP3 PUSH2 0x3F7B JUMP JUMPDEST SWAP5 POP PUSH2 0x3FEB DUP4 PUSH2 0x3F8F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FC7 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x402B DUP2 DUP5 PUSH2 0x3F9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x404A JUMPI PUSH2 0x4049 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4058 DUP6 DUP3 DUP7 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4069 DUP6 DUP3 DUP7 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A6 JUMPI PUSH2 0x40A5 PUSH2 0x3C9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x40C2 JUMPI PUSH2 0x40C1 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40E0 JUMPI PUSH2 0x40DF PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40FE JUMPI PUSH2 0x40FD PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x410A DUP6 DUP3 DUP7 ADD PUSH2 0x4073 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4121 DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x412B DUP2 DUP6 PUSH2 0x3A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x413B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4144 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4169 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41AE DUP3 PUSH2 0x3F31 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x41CD JUMPI PUSH2 0x41CC PUSH2 0x4176 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E0 PUSH2 0x3B9C JUMP JUMPDEST SWAP1 POP PUSH2 0x41EC DUP3 DUP3 PUSH2 0x41A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH2 0x4215 DUP3 PUSH2 0x3F31 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4244 PUSH2 0x423F DUP5 PUSH2 0x41F1 JUMP JUMPDEST PUSH2 0x41D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4260 JUMPI PUSH2 0x425F PUSH2 0x4171 JUMP JUMPDEST JUMPDEST PUSH2 0x426B DUP5 DUP3 DUP6 PUSH2 0x4222 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4288 JUMPI PUSH2 0x4287 PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4298 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4231 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B7 JUMPI PUSH2 0x42B6 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42D5 JUMPI PUSH2 0x42D4 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x42E1 DUP5 DUP3 DUP6 ADD PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42F3 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x430E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x432B JUMPI PUSH2 0x432A PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4339 DUP6 DUP3 DUP7 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x434A DUP6 DUP3 DUP7 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x5 MUL DUP3 ADD GT ISZERO PUSH2 0x4370 JUMPI PUSH2 0x436F PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x5 MUL DUP3 ADD GT ISZERO PUSH2 0x4392 JUMPI PUSH2 0x4391 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x43B4 JUMPI PUSH2 0x43B3 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x43D6 JUMPI PUSH2 0x43D5 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x220 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x43FF JUMPI PUSH2 0x43FE PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x441D JUMPI PUSH2 0x441C PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x4429 DUP13 DUP3 DUP14 ADD PUSH2 0x4354 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x443A DUP13 DUP3 DUP14 ADD PUSH2 0x4376 JUMP JUMPDEST SWAP9 POP POP PUSH1 0xC0 PUSH2 0x444B DUP13 DUP3 DUP14 ADD PUSH2 0x4398 JUMP JUMPDEST SWAP8 POP POP PUSH2 0x120 PUSH2 0x445D DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP7 POP POP PUSH2 0x140 PUSH2 0x446F DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP6 POP POP PUSH2 0x160 PUSH2 0x4481 DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP5 POP POP PUSH2 0x180 PUSH2 0x4493 DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1A0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44B5 JUMPI PUSH2 0x44B4 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x44C1 DUP13 DUP3 DUP14 ADD PUSH2 0x43BA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C0 PUSH2 0x44D3 DUP13 DUP3 DUP14 ADD PUSH2 0x4398 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x451D DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4528 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4540 JUMPI PUSH2 0x453F PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4580 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x458B DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x45A3 JUMPI PUSH2 0x45A2 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x45F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4603 JUMPI PUSH2 0x4602 PUSH2 0x45A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4614 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4646 JUMPI PUSH2 0x4645 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465D DUP4 DUP6 PUSH2 0x39C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x466A DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4683 DUP3 DUP5 DUP7 PUSH2 0x4651 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x469B DUP4 DUP6 PUSH2 0x3A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x46A8 DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x46B1 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x46D1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x46E4 DUP2 DUP7 DUP9 PUSH2 0x468F JUMP JUMPDEST SWAP1 POP PUSH2 0x46F3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4700 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3D8E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4740 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x474B DUP3 PUSH2 0x470A JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4761 DUP3 PUSH2 0x4733 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A1 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x47AC DUP3 PUSH2 0x476B JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C2 DUP3 PUSH2 0x4794 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x480D DUP3 PUSH2 0x47CC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4823 DUP3 PUSH2 0x47F5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4858 JUMPI PUSH2 0x4857 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4880 JUMPI PUSH2 0x487F PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x48A9 JUMPI PUSH2 0x48A8 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x48CB JUMPI PUSH2 0x48CA PUSH2 0x4832 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x48E7 JUMPI PUSH2 0x48E6 PUSH2 0x4837 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490C DUP4 DUP6 PUSH2 0x48EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4919 DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x4922 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4948 DUP2 DUP6 DUP8 PUSH2 0x4900 JUMP JUMPDEST SWAP1 POP PUSH2 0x4957 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x496E DUP2 PUSH2 0x3C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x498A JUMPI PUSH2 0x4989 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4998 DUP5 DUP3 DUP6 ADD PUSH2 0x495F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x49CD JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x49CA PUSH1 0x0 MLOAD PUSH2 0x49A1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x4A5D JUMPI PUSH2 0x49E2 PUSH2 0x3B9C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4A0A JUMPI POP POP PUSH2 0x4A5D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A28 JUMPI POP POP POP POP PUSH2 0x4A5D JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x4A45 JUMPI POP POP POP POP POP PUSH2 0x4A5D JUMP JUMPDEST PUSH2 0x4A54 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x41A5 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4A75 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4A82 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4A8F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4AA1 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4AC1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4ACE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4ADB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4AE8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFC DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B07 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B15 DUP2 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4B2C JUMPI PUSH2 0x4B2B PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B6D DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B78 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B88 JUMPI PUSH2 0x4B87 PUSH2 0x4B33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x726F757465720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC9 PUSH1 0x6 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD4 DUP3 PUSH2 0x4B93 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BEA DUP3 PUSH2 0x4BBC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3B PUSH2 0x4C36 DUP3 PUSH2 0x4BF4 JUMP JUMPDEST PUSH2 0x4C20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4D DUP3 DUP5 PUSH2 0x4C2A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4C71 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4C7E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4C8B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x42EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4C9E DUP2 DUP6 DUP8 PUSH2 0x4900 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CAD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C41 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCE DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x4CD8 DUP2 DUP6 PUSH2 0x48EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4CE8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4CF1 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D44 DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x4D4E DUP2 DUP6 PUSH2 0x4D28 JUMP JUMPDEST SWAP4 POP PUSH2 0x4D5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4D67 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7E DUP4 DUP4 PUSH2 0x4D39 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9E DUP3 PUSH2 0x4CFC JUMP JUMPDEST PUSH2 0x4DA8 DUP2 DUP6 PUSH2 0x4D07 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4DBA DUP6 PUSH2 0x4D18 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4DF6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x4DD7 DUP6 DUP3 PUSH2 0x4D72 JUMP JUMPDEST SWAP5 POP PUSH2 0x4DE2 DUP4 PUSH2 0x4D86 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4DBE JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E22 DUP2 DUP7 PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E36 DUP2 DUP6 PUSH2 0x4D93 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E62 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E74 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E88 DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x4E92 DUP2 DUP6 PUSH2 0x39C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4EA2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBA DUP3 DUP5 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F21 PUSH1 0x2F DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F2C DUP3 PUSH2 0x4EC5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F50 DUP2 PUSH2 0x4F14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB3 PUSH1 0x2E DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBE DUP3 PUSH2 0x4F57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FE2 DUP2 PUSH2 0x4FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x5006 JUMPI PUSH2 0x5005 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5028 JUMPI PUSH2 0x5027 PUSH2 0x4832 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5044 JUMPI PUSH2 0x5043 PUSH2 0x4837 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x50B9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x507C JUMP JUMPDEST PUSH2 0x50C3 DUP7 DUP4 PUSH2 0x507C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5100 PUSH2 0x50FB PUSH2 0x50F6 DUP5 PUSH2 0x3ADE JUMP JUMPDEST PUSH2 0x50DB JUMP JUMPDEST PUSH2 0x3ADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x511A DUP4 PUSH2 0x50E5 JUMP JUMPDEST PUSH2 0x512E PUSH2 0x5126 DUP3 PUSH2 0x5107 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5089 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5143 PUSH2 0x5136 JUMP JUMPDEST PUSH2 0x514E DUP2 DUP5 DUP5 PUSH2 0x5111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5172 JUMPI PUSH2 0x5167 PUSH1 0x0 DUP3 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5154 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x51B7 JUMPI PUSH2 0x5188 DUP2 PUSH2 0x5057 JUMP JUMPDEST PUSH2 0x5191 DUP5 PUSH2 0x506C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x51A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x51B4 PUSH2 0x51AC DUP6 PUSH2 0x506C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5153 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51DA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x51BC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F3 DUP4 DUP4 PUSH2 0x51C9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x520D DUP4 DUP4 PUSH2 0x504C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5226 JUMPI PUSH2 0x5225 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH2 0x5230 DUP3 SLOAD PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x523B DUP3 DUP3 DUP6 PUSH2 0x5176 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x526A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5258 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x5262 DUP6 DUP3 PUSH2 0x51E7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x52CA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5278 DUP7 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x52A0 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x527B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52BD JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x52B9 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x51C9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x52E0 DUP2 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x52EA DUP2 DUP7 PUSH2 0x39C9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5305 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x531A JUMPI PUSH2 0x534D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x534D JUMP JUMPDEST PUSH2 0x5323 DUP6 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5345 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5326 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5362 DUP3 DUP5 PUSH2 0x52D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x71756F7465720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A3 PUSH1 0x6 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x53AE DUP3 PUSH2 0x536D JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C4 DUP3 PUSH2 0x5396 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7377617070657200000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5404 PUSH1 0x7 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x540F DUP3 PUSH2 0x53CE JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5425 DUP3 PUSH2 0x53F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5450 DUP4 DUP6 PUSH2 0x3EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x545D DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x5466 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E DUP5 DUP5 DUP5 PUSH2 0x5444 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x54B3 JUMPI PUSH2 0x54B2 PUSH2 0x5491 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x54DB JUMPI PUSH2 0x54DA PUSH2 0x5487 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x54F1 JUMPI PUSH2 0x54F0 PUSH2 0x548C JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5511 DUP3 PUSH2 0x542F JUMP JUMPDEST PUSH2 0x551B DUP2 DUP6 PUSH2 0x3ED6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x552D DUP6 PUSH2 0x543A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5573 JUMPI DUP5 DUP5 SUB DUP10 MSTORE PUSH2 0x5548 DUP3 DUP5 PUSH2 0x5496 JUMP JUMPDEST PUSH2 0x5553 DUP7 DUP3 DUP5 PUSH2 0x5471 JUMP JUMPDEST SWAP6 POP PUSH2 0x555E DUP5 PUSH2 0x54F9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP12 ADD SWAP11 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5531 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55AE DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55C0 DUP4 DUP4 PUSH2 0x55A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55DB PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3DCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F9 DUP2 PUSH2 0x5585 JUMP JUMPDEST PUSH2 0x5603 DUP2 DUP5 PUSH2 0x5590 JUMP JUMPDEST SWAP3 POP PUSH2 0x560E DUP3 PUSH2 0x559B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5647 JUMPI PUSH2 0x5624 DUP3 DUP5 PUSH2 0x55CC JUMP JUMPDEST PUSH2 0x562E DUP8 DUP3 PUSH2 0x55B4 JUMP JUMPDEST SWAP7 POP PUSH2 0x5639 DUP4 PUSH2 0x55E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5612 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5685 DUP2 PUSH2 0x564F JUMP JUMPDEST PUSH2 0x568F DUP2 DUP5 PUSH2 0x565A JUMP JUMPDEST SWAP3 POP PUSH2 0x569A DUP3 PUSH2 0x5665 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56D3 JUMPI PUSH2 0x56B0 DUP3 DUP5 PUSH2 0x55CC JUMP JUMPDEST PUSH2 0x56BA DUP8 DUP3 PUSH2 0x55B4 JUMP JUMPDEST SWAP7 POP PUSH2 0x56C5 DUP4 PUSH2 0x566F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x569E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x5708 DUP2 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x5712 DUP2 DUP7 PUSH2 0x3EF6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x572D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5743 JUMPI PUSH2 0x5776 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x5776 JUMP JUMPDEST PUSH2 0x574C DUP6 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x576E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x574F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578B DUP4 DUP4 PUSH2 0x56FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57AB DUP3 PUSH2 0x56DB JUMP JUMPDEST PUSH2 0x57B5 DUP2 DUP6 PUSH2 0x56E6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x57C7 DUP6 PUSH2 0x56F1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5802 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x57E3 DUP6 DUP3 PUSH2 0x577F JUMP JUMPDEST SWAP5 POP PUSH2 0x57EE DUP4 PUSH2 0x5793 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x57CB JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 ADD SWAP1 POP PUSH2 0x582A PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x583C DUP2 DUP13 PUSH2 0x5506 JUMP JUMPDEST SWAP1 POP PUSH2 0x584B PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x55F0 JUMP JUMPDEST PUSH2 0x5858 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x567C JUMP JUMPDEST PUSH2 0x5866 PUSH2 0x140 DUP4 ADD DUP10 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5874 PUSH2 0x160 DUP4 ADD DUP9 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5882 PUSH2 0x180 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5890 PUSH2 0x1A0 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1C0 DUP4 ADD MSTORE PUSH2 0x58A3 DUP2 DUP6 PUSH2 0x57A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x58B3 PUSH2 0x1E0 DUP4 ADD DUP5 PUSH2 0x567C JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58F4 PUSH2 0x58EF PUSH2 0x58EA DUP5 PUSH2 0x58C2 JUMP JUMPDEST PUSH2 0x50DB JUMP JUMPDEST PUSH2 0x58CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5904 DUP2 PUSH2 0x58D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x591F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x593A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x594D DUP2 DUP6 DUP8 PUSH2 0x468F JUMP JUMPDEST SWAP1 POP PUSH2 0x595C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x599B PUSH1 0x1F DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x59A6 DUP3 PUSH2 0x5965 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59CA DUP2 PUSH2 0x598E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x59E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x59F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A56 PUSH1 0x2B DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A61 DUP3 PUSH2 0x59FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A85 DUP2 PUSH2 0x5A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC2 PUSH1 0x17 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5ACD DUP3 PUSH2 0x5A8C JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B0E PUSH1 0x11 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B19 DUP3 PUSH2 0x5AD8 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2F DUP3 PUSH2 0x5AB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3B DUP3 DUP6 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP PUSH2 0x5B46 DUP3 PUSH2 0x5B01 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B52 DUP3 DUP5 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5B67 DUP2 PUSH2 0x3C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x5B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B84 DUP2 PUSH2 0x5B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BA0 JUMPI PUSH2 0x5B9F PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BAE DUP5 DUP3 DUP6 ADD PUSH2 0x5B75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C13 PUSH1 0x2A DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C1E DUP3 PUSH2 0x5BB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C42 DUP2 PUSH2 0x5C06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C54 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x5C67 JUMPI PUSH2 0x5C66 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CA8 PUSH1 0x20 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CB3 DUP3 PUSH2 0x5C72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CD7 DUP2 PUSH2 0x5C9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D69 PUSH1 0x26 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D74 DUP3 PUSH2 0x5D0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D98 DUP2 PUSH2 0x5D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB5 DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x5DBF DUP2 DUP6 PUSH2 0x5D9F JUMP JUMPDEST SWAP4 POP PUSH2 0x5DCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE7 DUP3 DUP5 PUSH2 0x5DAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E28 PUSH1 0x1D DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E33 DUP3 PUSH2 0x5DF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E57 DUP2 PUSH2 0x5E1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x25 CALL EXTCODEHASH 0x28 LOG3 PUSH12 0xF6B2D3184F9AC2FFAC8C311A AND 0xD4 PC 0xE1 SWAP2 LOG4 MUL RETURN SWAP3 PUSH19 0x84B2EA64736F6C634300081200330000000000 ","sourceMap":"783:10807:30:-:0;;;2213:49;;;;;;;;;;2234:22;:20;;;:22;;:::i;:::-;783:10807;;5939:280:4;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:34:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;783:10807:30:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACONCAGUA_ROLE_5544":{"entryPoint":11209,"id":5544,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_177":{"entryPoint":7372,"id":177,"parameterSlots":0,"returnSlots":0},"@LENDER_LIQ_ROLE_5549":{"entryPoint":6664,"id":5549,"parameterSlots":0,"returnSlots":0},"@RESCUER_ROLE_5554":{"entryPoint":7165,"id":5554,"parameterSlots":0,"returnSlots":0},"@SWAPPER_ROLE_5559":{"entryPoint":11173,"id":5559,"parameterSlots":0,"returnSlots":0},"@_6568":{"entryPoint":null,"id":6568,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_unchained_200":{"entryPoint":11901,"id":200,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_783":{"entryPoint":11982,"id":783,"parameterSlots":0,"returnSlots":0},"@_add_2525":{"entryPoint":13253,"id":2525,"parameterSlots":2,"returnSlots":1},"@_at_2659":{"entryPoint":12646,"id":2659,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_3567":{"entryPoint":12446,"id":3567,"parameterSlots":2,"returnSlots":0},"@_checkRole_254":{"entryPoint":11441,"id":254,"parameterSlots":1,"returnSlots":0},"@_checkRole_293":{"entryPoint":12313,"id":293,"parameterSlots":2,"returnSlots":0},"@_contains_2628":{"entryPoint":14282,"id":2628,"parameterSlots":2,"returnSlots":1},"@_grantRole_115":{"entryPoint":11715,"id":115,"parameterSlots":2,"returnSlots":0},"@_grantRole_445":{"entryPoint":12689,"id":445,"parameterSlots":2,"returnSlots":0},"@_length_2642":{"entryPoint":13236,"id":2642,"parameterSlots":1,"returnSlots":1},"@_msgSender_1192":{"entryPoint":11674,"id":1192,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_817":{"entryPoint":11682,"id":817,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_809":{"entryPoint":11461,"id":809,"parameterSlots":0,"returnSlots":0},"@_remove_2609":{"entryPoint":14006,"id":2609,"parameterSlots":2,"returnSlots":1},"@_revert_3963":{"entryPoint":14674,"id":3963,"parameterSlots":2,"returnSlots":0},"@_revokeRole_139":{"entryPoint":11767,"id":139,"parameterSlots":2,"returnSlots":0},"@_revokeRole_476":{"entryPoint":12962,"id":476,"parameterSlots":2,"returnSlots":0},"@_setRoleAdmin_413":{"entryPoint":12094,"id":413,"parameterSlots":2,"returnSlots":0},"@add_2695":{"entryPoint":12071,"id":2695,"parameterSlots":2,"returnSlots":1},"@add_2825":{"entryPoint":12914,"id":2825,"parameterSlots":2,"returnSlots":1},"@at_2764":{"entryPoint":11692,"id":2764,"parameterSlots":2,"returnSlots":1},"@at_2921":{"entryPoint":11840,"id":2921,"parameterSlots":2,"returnSlots":1},"@balanceOf_6412":{"entryPoint":6700,"id":6412,"parameterSlots":1,"returnSlots":1},"@contractAddresses_5589":{"entryPoint":11245,"id":5589,"parameterSlots":0,"returnSlots":0},"@contractKeys_5585":{"entryPoint":11009,"id":5585,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_3788":{"entryPoint":14317,"id":3788,"parameterSlots":4,"returnSlots":1},"@functionCall_3724":{"entryPoint":13982,"id":3724,"parameterSlots":3,"returnSlots":1},"@getBalances_6471":{"entryPoint":2230,"id":6471,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_308":{"entryPoint":3261,"id":308,"parameterSlots":1,"returnSlots":1},"@getRoleByIndex_6532":{"entryPoint":3293,"id":6532,"parameterSlots":1,"returnSlots":1},"@getRoleCount_6517":{"entryPoint":7201,"id":6517,"parameterSlots":0,"returnSlots":1},"@getRoleMemberCount_91":{"entryPoint":10455,"id":91,"parameterSlots":1,"returnSlots":1},"@getRoleMember_75":{"entryPoint":7218,"id":75,"parameterSlots":2,"returnSlots":1},"@getTokenNames_6542":{"entryPoint":3322,"id":6542,"parameterSlots":0,"returnSlots":1},"@grantRole_328":{"entryPoint":3527,"id":328,"parameterSlots":2,"returnSlots":0},"@hasRole_241":{"entryPoint":7265,"id":241,"parameterSlots":2,"returnSlots":1},"@initialize_5941":{"entryPoint":7418,"id":5941,"parameterSlots":9,"returnSlots":0},"@isContract_3652":{"entryPoint":14639,"id":3652,"parameterSlots":1,"returnSlots":1},"@isContract_852":{"entryPoint":11866,"id":852,"parameterSlots":1,"returnSlots":1},"@length_2746":{"entryPoint":11819,"id":2746,"parameterSlots":1,"returnSlots":1},"@length_2894":{"entryPoint":12186,"id":2894,"parameterSlots":1,"returnSlots":1},"@remove_2852":{"entryPoint":13188,"id":2852,"parameterSlots":2,"returnSlots":1},"@renounceRole_371":{"entryPoint":6899,"id":371,"parameterSlots":2,"returnSlots":0},"@rescueWalletAddress_5579":{"entryPoint":3008,"id":5579,"parameterSlots":0,"returnSlots":0},"@rescue_6505":{"entryPoint":2728,"id":6505,"parameterSlots":3,"returnSlots":0},"@revokeRole_348":{"entryPoint":10705,"id":348,"parameterSlots":2,"returnSlots":0},"@safeTransfer_3273":{"entryPoint":11540,"id":3273,"parameterSlots":3,"returnSlots":0},"@setRescueWalletAddress_6000":{"entryPoint":10491,"id":6000,"parameterSlots":1,"returnSlots":0},"@setWithdrawWalletAddress_5975":{"entryPoint":3047,"id":5975,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1483":{"entryPoint":12207,"id":1483,"parameterSlots":1,"returnSlots":1},"@supportsInterface_222":{"entryPoint":11319,"id":222,"parameterSlots":1,"returnSlots":1},"@supportsInterface_56":{"entryPoint":2606,"id":56,"parameterSlots":1,"returnSlots":1},"@swapExactInputs_6320":{"entryPoint":3560,"id":6320,"parameterSlots":2,"returnSlots":0},"@toHexString_1398":{"entryPoint":13410,"id":1398,"parameterSlots":2,"returnSlots":1},"@toHexString_1418":{"entryPoint":13365,"id":1418,"parameterSlots":1,"returnSlots":1},"@tokenNames_5573":{"entryPoint":6501,"id":5573,"parameterSlots":0,"returnSlots":0},"@tokenTable_5577":{"entryPoint":7091,"id":5577,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_3919":{"entryPoint":14522,"id":3919,"parameterSlots":4,"returnSlots":1},"@version_5950":{"entryPoint":7030,"id":5950,"parameterSlots":0,"returnSlots":1},"@withdrawWalletAddress_5581":{"entryPoint":7379,"id":5581,"parameterSlots":0,"returnSlots":0},"@withdraw_6386":{"entryPoint":10738,"id":6386,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":16945,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$3_calldata_ptr":{"entryPoint":17304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$5_calldata_ptr":{"entryPoint":17270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_calldata_ptr_$3_calldata_ptr":{"entryPoint":17338,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_calldata_ptr_$5_calldata_ptr":{"entryPoint":17236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16499,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":23413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":15922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":15347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":15526,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":17011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":18783,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_string_calldata_ptr_$5_calldata_ptrt_array$_t_address_$5_calldata_ptrt_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_array$_t_string_calldata_ptr_$3_calldata_ptrt_array$_t_address_$3_calldata_ptr":{"entryPoint":17372,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":16585,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":23434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":15943,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":16435,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":17172,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":15368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":17057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":16030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":18804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_calldata_ptr":{"entryPoint":15612,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":21940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":19826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_calldata_ptr_to_t_string_memory_ptr":{"entryPoint":21617,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":16251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr":{"entryPoint":22399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":15095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":21925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":15758,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack":{"entryPoint":22140,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$5_calldata_ptr_to_t_array$_t_address_$5_memory_ptr_fromStack":{"entryPoint":22000,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":19859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_calldata_ptr_$5_calldata_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack":{"entryPoint":21766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$5_memory_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack":{"entryPoint":16284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_storage_$3_storage_to_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack":{"entryPoint":22432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15425,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack":{"entryPoint":19498,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15988,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":18688,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":19769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":19651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":22779,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr":{"entryPoint":21572,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":18063,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18001,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":16194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":16662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr":{"entryPoint":22267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":23707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb_to_t_string_memory_ptr_fromStack":{"entryPoint":14959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":23900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":20390,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18227,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":21398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":24091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":23113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":23558,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":22926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":20244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17130,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes1__to_t_bytes1__nonPadded_inplace_fromStack_reversed":{"entryPoint":19521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":24027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18038,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":21433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18359,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23332,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19040,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":19116,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_string_calldata_ptr_$5_calldata_ptr_t_array$_t_address_$5_calldata_ptr_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_storage_$3_storage_t_array$_t_address_$3_calldata_ptr__to_t_address_t_array$_t_string_memory_ptr_$5_memory_ptr_t_array$_t_address_$5_memory_ptr_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_memory_ptr_$3_memory_ptr_t_array$_t_address_$3_memory_ptr__fromStack_reversed":{"entryPoint":22548,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":22821,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed":{"entryPoint":18108,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20045,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":22993,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":19548,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$5_memory_ptr__to_t_array$_t_string_memory_ptr_$5_memory_ptr__fromStack_reversed":{"entryPoint":16401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":18733,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":19976,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":22794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23742,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20279,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":17145,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":18572,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_string_calldata_ptr":{"entryPoint":20457,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_ExactInputParams_$5460_calldata_ptr":{"entryPoint":18532,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_struct$_SwapParams_$6666_calldata_ptr":{"entryPoint":18492,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":16854,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":15260,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":16881,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$3_calldata_ptr":{"entryPoint":22117,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$5_calldata_ptr":{"entryPoint":21915,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":19736,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_calldata_ptr_$5_calldata_ptr":{"entryPoint":21562,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$5_memory_ptr":{"entryPoint":16097,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_storage_$3_storage":{"entryPoint":22257,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15054,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":20567,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$3_calldata_ptr":{"entryPoint":22095,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$5_calldata_ptr":{"entryPoint":21893,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":19708,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_calldata_ptr_$5_calldata_ptr":{"entryPoint":21551,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$5_memory_ptr":{"entryPoint":16075,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_storage_$3_storage":{"entryPoint":22235,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15026,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":19640,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_calldata_ptr":{"entryPoint":20556,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":16107,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$3_calldata_ptr":{"entryPoint":22127,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$5_calldata_ptr":{"entryPoint":21987,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":19846,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_calldata_ptr_$5_calldata_ptr":{"entryPoint":21753,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$5_memory_ptr":{"entryPoint":16271,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_storage_$3_storage":{"entryPoint":22419,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15119,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack":{"entryPoint":22106,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$5_memory_ptr_fromStack":{"entryPoint":21904,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":19719,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack":{"entryPoint":22246,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack":{"entryPoint":16086,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15037,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":19752,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":18671,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23967,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":16118,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14901,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14793,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_address":{"entryPoint":21964,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_string_calldata_ptr":{"entryPoint":21654,"id":null,"parameterSlots":2,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":17682,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":19298,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19185,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":17781,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":20854,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":15740,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":15413,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":19444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":15889,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":15280,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":22722,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15070,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":22732,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":20819,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":22745,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":20709,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":20995,"id":null,"parameterSlots":3,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":16930,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":16135,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":23625,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":20588,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":17880,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":20967,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":16805,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":20699,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":17929,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes1":{"entryPoint":19488,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":20937,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":17635,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":19251,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":17833,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":23774,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17734,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16758,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":20743,"id":null,"parameterSlots":1,"returnSlots":1},"return_data_selector":{"entryPoint":18862,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2":{"entryPoint":21639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":15516,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":15511,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":18482,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":18477,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20":{"entryPoint":21644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":15521,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":18487,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":16753,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":15275,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4":{"entryPoint":21649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":15270,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":16177,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":20604,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":18849,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":20924,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":20795,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":23666,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8":{"entryPoint":14804,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb":{"entryPoint":14918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666":{"entryPoint":21454,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":23821,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185":{"entryPoint":19347,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":20311,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0":{"entryPoint":18380,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73":{"entryPoint":18186,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1":{"entryPoint":21357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":24050,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":23034,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa":{"entryPoint":18283,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":23180,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":23479,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":22885,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":23256,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":20165,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":18896,"id":null,"parameterSlots":0,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":20617,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":20753,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15800,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":23390,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15899,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":15324,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15467,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":20790,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:74392:34","statements":[{"body":{"nodeType":"YulBlock","src":"121:34:34","statements":[{"nodeType":"YulAssignment","src":"131:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"146:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"131:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"93:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"98:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"109:11:34","type":""}],"src":"7:148:34"},{"body":{"nodeType":"YulBlock","src":"267:48:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"289:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"297:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"285:3:34"},"nodeType":"YulFunctionCall","src":"285:14:34"},{"hexValue":"57455448","kind":"string","nodeType":"YulLiteral","src":"301:6:34","type":"","value":"WETH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:34"},"nodeType":"YulFunctionCall","src":"278:30:34"},"nodeType":"YulExpressionStatement","src":"278:30:34"}]},"name":"store_literal_in_memory_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"259:6:34","type":""}],"src":"161:154:34"},{"body":{"nodeType":"YulBlock","src":"485:236:34","statements":[{"nodeType":"YulAssignment","src":"495:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"579:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"584:1:34","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"502:76:34"},"nodeType":"YulFunctionCall","src":"502:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"495:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"684:3:34"}],"functionName":{"name":"store_literal_in_memory_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","nodeType":"YulIdentifier","src":"595:88:34"},"nodeType":"YulFunctionCall","src":"595:93:34"},"nodeType":"YulExpressionStatement","src":"595:93:34"},{"nodeType":"YulAssignment","src":"697:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"708:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"713:1:34","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:34"},"nodeType":"YulFunctionCall","src":"704:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"697:3:34"}]}]},"name":"abi_encode_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"473:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"481:3:34","type":""}],"src":"321:400:34"},{"body":{"nodeType":"YulBlock","src":"916:192:34","statements":[{"nodeType":"YulAssignment","src":"927:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1078:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"934:142:34"},"nodeType":"YulFunctionCall","src":"934:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"927:3:34"}]},{"nodeType":"YulAssignment","src":"1092:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"1099:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1092:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"903:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"912:3:34","type":""}],"src":"727:381:34"},{"body":{"nodeType":"YulBlock","src":"1210:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1227:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"1232:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1220:6:34"},"nodeType":"YulFunctionCall","src":"1220:19:34"},"nodeType":"YulExpressionStatement","src":"1220:19:34"},{"nodeType":"YulAssignment","src":"1248:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1267:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"1272:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1263:3:34"},"nodeType":"YulFunctionCall","src":"1263:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1248:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1182:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"1187:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1198:11:34","type":""}],"src":"1114:169:34"},{"body":{"nodeType":"YulBlock","src":"1395:69:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1417:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1425:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1413:3:34"},"nodeType":"YulFunctionCall","src":"1413:14:34"},{"hexValue":"4e6f742070617961626c65206f6e207468697320636861696e","kind":"string","nodeType":"YulLiteral","src":"1429:27:34","type":"","value":"Not payable on this chain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1406:6:34"},"nodeType":"YulFunctionCall","src":"1406:51:34"},"nodeType":"YulExpressionStatement","src":"1406:51:34"}]},"name":"store_literal_in_memory_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1387:6:34","type":""}],"src":"1289:175:34"},{"body":{"nodeType":"YulBlock","src":"1616:220:34","statements":[{"nodeType":"YulAssignment","src":"1626:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1692:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"1697:2:34","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1633:58:34"},"nodeType":"YulFunctionCall","src":"1633:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1626:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1798:3:34"}],"functionName":{"name":"store_literal_in_memory_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb","nodeType":"YulIdentifier","src":"1709:88:34"},"nodeType":"YulFunctionCall","src":"1709:93:34"},"nodeType":"YulExpressionStatement","src":"1709:93:34"},{"nodeType":"YulAssignment","src":"1811:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1822:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:34"},"nodeType":"YulFunctionCall","src":"1818:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1811:3:34"}]}]},"name":"abi_encode_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1604:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1612:3:34","type":""}],"src":"1470:366:34"},{"body":{"nodeType":"YulBlock","src":"2013:248:34","statements":[{"nodeType":"YulAssignment","src":"2023:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2035:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2046:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:34"},"nodeType":"YulFunctionCall","src":"2031:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2023:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2081:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2066:3:34"},"nodeType":"YulFunctionCall","src":"2066:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2089:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"2095:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2085:3:34"},"nodeType":"YulFunctionCall","src":"2085:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2059:6:34"},"nodeType":"YulFunctionCall","src":"2059:47:34"},"nodeType":"YulExpressionStatement","src":"2059:47:34"},{"nodeType":"YulAssignment","src":"2115:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2249:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2123:124:34"},"nodeType":"YulFunctionCall","src":"2123:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2115:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1993:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2008:4:34","type":""}],"src":"1842:419:34"},{"body":{"nodeType":"YulBlock","src":"2341:40:34","statements":[{"nodeType":"YulAssignment","src":"2352:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2362:5:34"},"nodeType":"YulFunctionCall","src":"2362:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2352:6:34"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2324:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2334:6:34","type":""}],"src":"2267:114:34"},{"body":{"nodeType":"YulBlock","src":"2498:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2515:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"2520:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2508:6:34"},"nodeType":"YulFunctionCall","src":"2508:19:34"},"nodeType":"YulExpressionStatement","src":"2508:19:34"},{"nodeType":"YulAssignment","src":"2536:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2555:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"2560:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2551:3:34"},"nodeType":"YulFunctionCall","src":"2551:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2536:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2470:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"2475:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2486:11:34","type":""}],"src":"2387:184:34"},{"body":{"nodeType":"YulBlock","src":"2649:60:34","statements":[{"nodeType":"YulAssignment","src":"2659:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2667:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2659:4:34"}]},{"nodeType":"YulAssignment","src":"2680:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2692:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2688:3:34"},"nodeType":"YulFunctionCall","src":"2688:14:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2680:4:34"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2636:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2644:4:34","type":""}],"src":"2577:132:34"},{"body":{"nodeType":"YulBlock","src":"2760:32:34","statements":[{"nodeType":"YulAssignment","src":"2770:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"2781:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2770:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2742:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2752:7:34","type":""}],"src":"2715:77:34"},{"body":{"nodeType":"YulBlock","src":"2853:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2870:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2893:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2875:17:34"},"nodeType":"YulFunctionCall","src":"2875:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2863:6:34"},"nodeType":"YulFunctionCall","src":"2863:37:34"},"nodeType":"YulExpressionStatement","src":"2863:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2841:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2848:3:34","type":""}],"src":"2798:108:34"},{"body":{"nodeType":"YulBlock","src":"2992:99:34","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3036:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"3044:3:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3002:33:34"},"nodeType":"YulFunctionCall","src":"3002:46:34"},"nodeType":"YulExpressionStatement","src":"3002:46:34"},{"nodeType":"YulAssignment","src":"3057:28:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3075:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"3080:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3071:3:34"},"nodeType":"YulFunctionCall","src":"3071:14:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3057:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2965:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2973:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2981:10:34","type":""}],"src":"2912:179:34"},{"body":{"nodeType":"YulBlock","src":"3172:38:34","statements":[{"nodeType":"YulAssignment","src":"3182:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3194:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"3199:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3190:3:34"},"nodeType":"YulFunctionCall","src":"3190:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3182:4:34"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3159:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3167:4:34","type":""}],"src":"3097:113:34"},{"body":{"nodeType":"YulBlock","src":"3370:608:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3380:68:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3442:5:34"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3394:47:34"},"nodeType":"YulFunctionCall","src":"3394:54:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3384:6:34","type":""}]},{"nodeType":"YulAssignment","src":"3457:93:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3538:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"3543:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3464:73:34"},"nodeType":"YulFunctionCall","src":"3464:86:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3457:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"3559:71:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3624:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3574:49:34"},"nodeType":"YulFunctionCall","src":"3574:56:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3563:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3639:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3653:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3643:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"3729:224:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3743:34:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3770:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3764:5:34"},"nodeType":"YulFunctionCall","src":"3764:13:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3747:13:34","type":""}]},{"nodeType":"YulAssignment","src":"3790:70:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3841:13:34"},{"name":"pos","nodeType":"YulIdentifier","src":"3856:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3797:43:34"},"nodeType":"YulFunctionCall","src":"3797:63:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3790:3:34"}]},{"nodeType":"YulAssignment","src":"3873:70:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3936:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3883:52:34"},"nodeType":"YulFunctionCall","src":"3883:60:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3873:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3691:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"3694:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3688:2:34"},"nodeType":"YulFunctionCall","src":"3688:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3702:18:34","statements":[{"nodeType":"YulAssignment","src":"3704:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3713:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"3716:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3709:3:34"},"nodeType":"YulFunctionCall","src":"3709:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3704:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"3673:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3675:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"3684:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3679:1:34","type":""}]}]},"src":"3669:284:34"},{"nodeType":"YulAssignment","src":"3962:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"3969:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3962:3:34"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3349:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3356:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3365:3:34","type":""}],"src":"3246:732:34"},{"body":{"nodeType":"YulBlock","src":"4132:225:34","statements":[{"nodeType":"YulAssignment","src":"4142:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4165:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:34"},"nodeType":"YulFunctionCall","src":"4150:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4142:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4189:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4200:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4185:3:34"},"nodeType":"YulFunctionCall","src":"4185:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4208:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"4214:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4204:3:34"},"nodeType":"YulFunctionCall","src":"4204:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4178:6:34"},"nodeType":"YulFunctionCall","src":"4178:47:34"},"nodeType":"YulExpressionStatement","src":"4178:47:34"},{"nodeType":"YulAssignment","src":"4234:116:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4336:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"4345:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4242:93:34"},"nodeType":"YulFunctionCall","src":"4242:108:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4234:4:34"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4104:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4116:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4127:4:34","type":""}],"src":"3984:373:34"},{"body":{"nodeType":"YulBlock","src":"4403:35:34","statements":[{"nodeType":"YulAssignment","src":"4413:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4429:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4423:5:34"},"nodeType":"YulFunctionCall","src":"4423:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4413:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4396:6:34","type":""}],"src":"4363:75:34"},{"body":{"nodeType":"YulBlock","src":"4533:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4550:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4553:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4543:6:34"},"nodeType":"YulFunctionCall","src":"4543:12:34"},"nodeType":"YulExpressionStatement","src":"4543:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"4444:117:34"},{"body":{"nodeType":"YulBlock","src":"4656:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4673:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4676:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4666:6:34"},"nodeType":"YulFunctionCall","src":"4666:12:34"},"nodeType":"YulExpressionStatement","src":"4666:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"4567:117:34"},{"body":{"nodeType":"YulBlock","src":"4734:105:34","statements":[{"nodeType":"YulAssignment","src":"4744:89:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4759:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"4766:66:34","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4755:3:34"},"nodeType":"YulFunctionCall","src":"4755:78:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4744:7:34"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4716:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4726:7:34","type":""}],"src":"4690:149:34"},{"body":{"nodeType":"YulBlock","src":"4887:78:34","statements":[{"body":{"nodeType":"YulBlock","src":"4943:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4952:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4955:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4945:6:34"},"nodeType":"YulFunctionCall","src":"4945:12:34"},"nodeType":"YulExpressionStatement","src":"4945:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4910:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4934:5:34"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4917:16:34"},"nodeType":"YulFunctionCall","src":"4917:23:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4907:2:34"},"nodeType":"YulFunctionCall","src":"4907:34:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4900:6:34"},"nodeType":"YulFunctionCall","src":"4900:42:34"},"nodeType":"YulIf","src":"4897:62:34"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:34","type":""}],"src":"4845:120:34"},{"body":{"nodeType":"YulBlock","src":"5022:86:34","statements":[{"nodeType":"YulAssignment","src":"5032:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5054:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5041:12:34"},"nodeType":"YulFunctionCall","src":"5041:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5032:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5096:5:34"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"5070:25:34"},"nodeType":"YulFunctionCall","src":"5070:32:34"},"nodeType":"YulExpressionStatement","src":"5070:32:34"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5000:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"5008:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5016:5:34","type":""}],"src":"4971:137:34"},{"body":{"nodeType":"YulBlock","src":"5179:262:34","statements":[{"body":{"nodeType":"YulBlock","src":"5225:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5227:77:34"},"nodeType":"YulFunctionCall","src":"5227:79:34"},"nodeType":"YulExpressionStatement","src":"5227:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5200:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"5209:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5196:3:34"},"nodeType":"YulFunctionCall","src":"5196:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5192:3:34"},"nodeType":"YulFunctionCall","src":"5192:32:34"},"nodeType":"YulIf","src":"5189:119:34"},{"nodeType":"YulBlock","src":"5318:116:34","statements":[{"nodeType":"YulVariableDeclaration","src":"5333:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"5347:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5337:6:34","type":""}]},{"nodeType":"YulAssignment","src":"5362:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5396:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"5407:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5392:3:34"},"nodeType":"YulFunctionCall","src":"5392:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5416:7:34"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5372:19:34"},"nodeType":"YulFunctionCall","src":"5372:52:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5362:6:34"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5149:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5160:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5172:6:34","type":""}],"src":"5114:327:34"},{"body":{"nodeType":"YulBlock","src":"5489:48:34","statements":[{"nodeType":"YulAssignment","src":"5499:32:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5524:5:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5517:6:34"},"nodeType":"YulFunctionCall","src":"5517:13:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5510:6:34"},"nodeType":"YulFunctionCall","src":"5510:21:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5499:7:34"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5471:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5481:7:34","type":""}],"src":"5447:90:34"},{"body":{"nodeType":"YulBlock","src":"5602:50:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5619:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5639:5:34"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5624:14:34"},"nodeType":"YulFunctionCall","src":"5624:21:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5612:6:34"},"nodeType":"YulFunctionCall","src":"5612:34:34"},"nodeType":"YulExpressionStatement","src":"5612:34:34"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5590:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5597:3:34","type":""}],"src":"5543:109:34"},{"body":{"nodeType":"YulBlock","src":"5750:118:34","statements":[{"nodeType":"YulAssignment","src":"5760:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5772:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5783:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5768:3:34"},"nodeType":"YulFunctionCall","src":"5768:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5760:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5834:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5858:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:34"},"nodeType":"YulFunctionCall","src":"5843:17:34"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5796:37:34"},"nodeType":"YulFunctionCall","src":"5796:65:34"},"nodeType":"YulExpressionStatement","src":"5796:65:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5722:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5734:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5745:4:34","type":""}],"src":"5658:210:34"},{"body":{"nodeType":"YulBlock","src":"5917:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"5974:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5983:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5986:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5976:6:34"},"nodeType":"YulFunctionCall","src":"5976:12:34"},"nodeType":"YulExpressionStatement","src":"5976:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5940:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5965:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5947:17:34"},"nodeType":"YulFunctionCall","src":"5947:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5937:2:34"},"nodeType":"YulFunctionCall","src":"5937:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5930:6:34"},"nodeType":"YulFunctionCall","src":"5930:43:34"},"nodeType":"YulIf","src":"5927:63:34"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5910:5:34","type":""}],"src":"5874:122:34"},{"body":{"nodeType":"YulBlock","src":"6054:87:34","statements":[{"nodeType":"YulAssignment","src":"6064:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6086:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6073:12:34"},"nodeType":"YulFunctionCall","src":"6073:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6064:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6129:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6102:26:34"},"nodeType":"YulFunctionCall","src":"6102:33:34"},"nodeType":"YulExpressionStatement","src":"6102:33:34"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6032:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"6040:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6048:5:34","type":""}],"src":"6002:139:34"},{"body":{"nodeType":"YulBlock","src":"6236:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6253:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6256:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6246:6:34"},"nodeType":"YulFunctionCall","src":"6246:12:34"},"nodeType":"YulExpressionStatement","src":"6246:12:34"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6147:117:34"},{"body":{"nodeType":"YulBlock","src":"6359:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6376:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6379:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6369:6:34"},"nodeType":"YulFunctionCall","src":"6369:12:34"},"nodeType":"YulExpressionStatement","src":"6369:12:34"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6270:117:34"},{"body":{"nodeType":"YulBlock","src":"6482:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6499:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6502:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6492:6:34"},"nodeType":"YulFunctionCall","src":"6492:12:34"},"nodeType":"YulExpressionStatement","src":"6492:12:34"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6393:117:34"},{"body":{"nodeType":"YulBlock","src":"6605:478:34","statements":[{"body":{"nodeType":"YulBlock","src":"6654:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6656:77:34"},"nodeType":"YulFunctionCall","src":"6656:79:34"},"nodeType":"YulExpressionStatement","src":"6656:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6633:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6641:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6629:3:34"},"nodeType":"YulFunctionCall","src":"6629:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"6648:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6625:3:34"},"nodeType":"YulFunctionCall","src":"6625:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6618:6:34"},"nodeType":"YulFunctionCall","src":"6618:35:34"},"nodeType":"YulIf","src":"6615:122:34"},{"nodeType":"YulAssignment","src":"6746:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6769:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6756:12:34"},"nodeType":"YulFunctionCall","src":"6756:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6746:6:34"}]},{"body":{"nodeType":"YulBlock","src":"6819:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6821:77:34"},"nodeType":"YulFunctionCall","src":"6821:79:34"},"nodeType":"YulExpressionStatement","src":"6821:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6791:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6799:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6788:2:34"},"nodeType":"YulFunctionCall","src":"6788:30:34"},"nodeType":"YulIf","src":"6785:117:34"},{"nodeType":"YulAssignment","src":"6911:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6927:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6935:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6923:3:34"},"nodeType":"YulFunctionCall","src":"6923:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6911:8:34"}]},{"body":{"nodeType":"YulBlock","src":"6994:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6996:77:34"},"nodeType":"YulFunctionCall","src":"6996:79:34"},"nodeType":"YulExpressionStatement","src":"6996:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6959:8:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6973:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6981:4:34","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6969:3:34"},"nodeType":"YulFunctionCall","src":"6969:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6955:3:34"},"nodeType":"YulFunctionCall","src":"6955:32:34"},{"name":"end","nodeType":"YulIdentifier","src":"6989:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6952:2:34"},"nodeType":"YulFunctionCall","src":"6952:41:34"},"nodeType":"YulIf","src":"6949:128:34"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6572:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"6580:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6588:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"6598:6:34","type":""}],"src":"6530:553:34"},{"body":{"nodeType":"YulBlock","src":"7192:571:34","statements":[{"body":{"nodeType":"YulBlock","src":"7238:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7240:77:34"},"nodeType":"YulFunctionCall","src":"7240:79:34"},"nodeType":"YulExpressionStatement","src":"7240:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7213:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"7222:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7209:3:34"},"nodeType":"YulFunctionCall","src":"7209:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"7234:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7205:3:34"},"nodeType":"YulFunctionCall","src":"7205:32:34"},"nodeType":"YulIf","src":"7202:119:34"},{"nodeType":"YulBlock","src":"7331:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7346:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"7360:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7350:6:34","type":""}]},{"nodeType":"YulAssignment","src":"7375:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7410:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"7421:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7406:3:34"},"nodeType":"YulFunctionCall","src":"7406:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7430:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7385:20:34"},"nodeType":"YulFunctionCall","src":"7385:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7375:6:34"}]}]},{"nodeType":"YulBlock","src":"7458:298:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7473:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7504:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7515:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7500:3:34"},"nodeType":"YulFunctionCall","src":"7500:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7487:12:34"},"nodeType":"YulFunctionCall","src":"7487:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7477:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"7566:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7568:77:34"},"nodeType":"YulFunctionCall","src":"7568:79:34"},"nodeType":"YulExpressionStatement","src":"7568:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7538:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7535:2:34"},"nodeType":"YulFunctionCall","src":"7535:30:34"},"nodeType":"YulIf","src":"7532:117:34"},{"nodeType":"YulAssignment","src":"7663:83:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7718:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"7729:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:34"},"nodeType":"YulFunctionCall","src":"7714:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7738:7:34"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"7681:32:34"},"nodeType":"YulFunctionCall","src":"7681:65:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7663:6:34"},{"name":"value2","nodeType":"YulIdentifier","src":"7671:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7146:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7157:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7169:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7177:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7185:6:34","type":""}],"src":"7089:674:34"},{"body":{"nodeType":"YulBlock","src":"7814:81:34","statements":[{"nodeType":"YulAssignment","src":"7824:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7839:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"7846:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7835:3:34"},"nodeType":"YulFunctionCall","src":"7835:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7824:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7796:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7806:7:34","type":""}],"src":"7769:126:34"},{"body":{"nodeType":"YulBlock","src":"7946:51:34","statements":[{"nodeType":"YulAssignment","src":"7956:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7985:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7967:17:34"},"nodeType":"YulFunctionCall","src":"7967:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7956:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7928:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7938:7:34","type":""}],"src":"7901:96:34"},{"body":{"nodeType":"YulBlock","src":"8068:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8085:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8108:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8090:17:34"},"nodeType":"YulFunctionCall","src":"8090:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8078:6:34"},"nodeType":"YulFunctionCall","src":"8078:37:34"},"nodeType":"YulExpressionStatement","src":"8078:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8056:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8063:3:34","type":""}],"src":"8003:118:34"},{"body":{"nodeType":"YulBlock","src":"8225:124:34","statements":[{"nodeType":"YulAssignment","src":"8235:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8247:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8258:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8243:3:34"},"nodeType":"YulFunctionCall","src":"8243:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8235:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8315:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8328:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8339:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8324:3:34"},"nodeType":"YulFunctionCall","src":"8324:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8271:43:34"},"nodeType":"YulFunctionCall","src":"8271:71:34"},"nodeType":"YulExpressionStatement","src":"8271:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8197:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8209:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8220:4:34","type":""}],"src":"8127:222:34"},{"body":{"nodeType":"YulBlock","src":"8398:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"8455:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8464:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8467:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8457:6:34"},"nodeType":"YulFunctionCall","src":"8457:12:34"},"nodeType":"YulExpressionStatement","src":"8457:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8421:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8446:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8428:17:34"},"nodeType":"YulFunctionCall","src":"8428:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8418:2:34"},"nodeType":"YulFunctionCall","src":"8418:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8411:6:34"},"nodeType":"YulFunctionCall","src":"8411:43:34"},"nodeType":"YulIf","src":"8408:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8391:5:34","type":""}],"src":"8355:122:34"},{"body":{"nodeType":"YulBlock","src":"8535:87:34","statements":[{"nodeType":"YulAssignment","src":"8545:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8567:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8554:12:34"},"nodeType":"YulFunctionCall","src":"8554:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8545:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8610:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8583:26:34"},"nodeType":"YulFunctionCall","src":"8583:33:34"},"nodeType":"YulExpressionStatement","src":"8583:33:34"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8513:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"8521:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8529:5:34","type":""}],"src":"8483:139:34"},{"body":{"nodeType":"YulBlock","src":"8694:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"8740:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8742:77:34"},"nodeType":"YulFunctionCall","src":"8742:79:34"},"nodeType":"YulExpressionStatement","src":"8742:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8715:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"8724:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8711:3:34"},"nodeType":"YulFunctionCall","src":"8711:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"8736:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8707:3:34"},"nodeType":"YulFunctionCall","src":"8707:32:34"},"nodeType":"YulIf","src":"8704:119:34"},{"nodeType":"YulBlock","src":"8833:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"8848:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8862:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8852:6:34","type":""}]},{"nodeType":"YulAssignment","src":"8877:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"8923:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8908:3:34"},"nodeType":"YulFunctionCall","src":"8908:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8932:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8887:20:34"},"nodeType":"YulFunctionCall","src":"8887:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8877:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8664:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8675:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8687:6:34","type":""}],"src":"8628:329:34"},{"body":{"nodeType":"YulBlock","src":"9008:32:34","statements":[{"nodeType":"YulAssignment","src":"9018:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"9029:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9018:7:34"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8990:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9000:7:34","type":""}],"src":"8963:77:34"},{"body":{"nodeType":"YulBlock","src":"9089:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"9146:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9155:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9158:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9148:6:34"},"nodeType":"YulFunctionCall","src":"9148:12:34"},"nodeType":"YulExpressionStatement","src":"9148:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9112:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9137:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9119:17:34"},"nodeType":"YulFunctionCall","src":"9119:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9109:2:34"},"nodeType":"YulFunctionCall","src":"9109:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9102:6:34"},"nodeType":"YulFunctionCall","src":"9102:43:34"},"nodeType":"YulIf","src":"9099:63:34"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9082:5:34","type":""}],"src":"9046:122:34"},{"body":{"nodeType":"YulBlock","src":"9226:87:34","statements":[{"nodeType":"YulAssignment","src":"9236:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9258:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9245:12:34"},"nodeType":"YulFunctionCall","src":"9245:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9236:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9301:5:34"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9274:26:34"},"nodeType":"YulFunctionCall","src":"9274:33:34"},"nodeType":"YulExpressionStatement","src":"9274:33:34"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9204:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"9212:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9220:5:34","type":""}],"src":"9174:139:34"},{"body":{"nodeType":"YulBlock","src":"9385:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"9431:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9433:77:34"},"nodeType":"YulFunctionCall","src":"9433:79:34"},"nodeType":"YulExpressionStatement","src":"9433:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9406:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"9415:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9402:3:34"},"nodeType":"YulFunctionCall","src":"9402:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"9427:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9398:3:34"},"nodeType":"YulFunctionCall","src":"9398:32:34"},"nodeType":"YulIf","src":"9395:119:34"},{"nodeType":"YulBlock","src":"9524:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9539:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"9553:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9543:6:34","type":""}]},{"nodeType":"YulAssignment","src":"9568:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9603:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"9614:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9599:3:34"},"nodeType":"YulFunctionCall","src":"9599:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9623:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9578:20:34"},"nodeType":"YulFunctionCall","src":"9578:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9568:6:34"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9355:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9366:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9378:6:34","type":""}],"src":"9319:329:34"},{"body":{"nodeType":"YulBlock","src":"9719:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9736:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9759:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9741:17:34"},"nodeType":"YulFunctionCall","src":"9741:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9729:6:34"},"nodeType":"YulFunctionCall","src":"9729:37:34"},"nodeType":"YulExpressionStatement","src":"9729:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9707:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9714:3:34","type":""}],"src":"9654:118:34"},{"body":{"nodeType":"YulBlock","src":"9876:124:34","statements":[{"nodeType":"YulAssignment","src":"9886:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9898:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"9909:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9894:3:34"},"nodeType":"YulFunctionCall","src":"9894:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9886:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9966:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9979:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"9990:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9975:3:34"},"nodeType":"YulFunctionCall","src":"9975:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9922:43:34"},"nodeType":"YulFunctionCall","src":"9922:71:34"},"nodeType":"YulExpressionStatement","src":"9922:71:34"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9848:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9860:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9871:4:34","type":""}],"src":"9778:222:34"},{"body":{"nodeType":"YulBlock","src":"10072:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"10118:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10120:77:34"},"nodeType":"YulFunctionCall","src":"10120:79:34"},"nodeType":"YulExpressionStatement","src":"10120:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10093:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"10102:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10089:3:34"},"nodeType":"YulFunctionCall","src":"10089:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"10114:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10085:3:34"},"nodeType":"YulFunctionCall","src":"10085:32:34"},"nodeType":"YulIf","src":"10082:119:34"},{"nodeType":"YulBlock","src":"10211:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"10226:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10240:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10230:6:34","type":""}]},{"nodeType":"YulAssignment","src":"10255:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10290:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"10301:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10286:3:34"},"nodeType":"YulFunctionCall","src":"10286:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10310:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10265:20:34"},"nodeType":"YulFunctionCall","src":"10265:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10255:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10042:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10053:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10065:6:34","type":""}],"src":"10006:329:34"},{"body":{"nodeType":"YulBlock","src":"10423:32:34","statements":[{"nodeType":"YulAssignment","src":"10434:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10444:4:34","type":"","value":"0x05"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10434:6:34"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10406:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10416:6:34","type":""}],"src":"10341:114:34"},{"body":{"nodeType":"YulBlock","src":"10580:34:34","statements":[{"nodeType":"YulAssignment","src":"10590:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"10605:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10590:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10552:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"10557:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10568:11:34","type":""}],"src":"10461:153:34"},{"body":{"nodeType":"YulBlock","src":"10700:28:34","statements":[{"nodeType":"YulAssignment","src":"10710:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10718:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10710:4:34"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10687:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10695:4:34","type":""}],"src":"10620:108:34"},{"body":{"nodeType":"YulBlock","src":"10793:40:34","statements":[{"nodeType":"YulAssignment","src":"10804:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10820:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10814:5:34"},"nodeType":"YulFunctionCall","src":"10814:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10804:6:34"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10776:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10786:6:34","type":""}],"src":"10734:99:34"},{"body":{"nodeType":"YulBlock","src":"10925:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10942:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"10947:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10935:6:34"},"nodeType":"YulFunctionCall","src":"10935:19:34"},"nodeType":"YulExpressionStatement","src":"10935:19:34"},{"nodeType":"YulAssignment","src":"10963:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10982:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"10987:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10978:3:34"},"nodeType":"YulFunctionCall","src":"10978:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10963:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10897:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"10902:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10913:11:34","type":""}],"src":"10839:159:34"},{"body":{"nodeType":"YulBlock","src":"11066:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"11076:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"11085:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11080:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"11145:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11170:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"11175:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11166:3:34"},"nodeType":"YulFunctionCall","src":"11166:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11189:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"11194:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11185:3:34"},"nodeType":"YulFunctionCall","src":"11185:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11179:5:34"},"nodeType":"YulFunctionCall","src":"11179:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11159:6:34"},"nodeType":"YulFunctionCall","src":"11159:39:34"},"nodeType":"YulExpressionStatement","src":"11159:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11106:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"11109:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11103:2:34"},"nodeType":"YulFunctionCall","src":"11103:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11117:19:34","statements":[{"nodeType":"YulAssignment","src":"11119:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11128:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"11131:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11124:3:34"},"nodeType":"YulFunctionCall","src":"11124:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11119:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"11099:3:34","statements":[]},"src":"11095:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11228:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11233:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11224:3:34"},"nodeType":"YulFunctionCall","src":"11224:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"11242:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11217:6:34"},"nodeType":"YulFunctionCall","src":"11217:27:34"},"nodeType":"YulExpressionStatement","src":"11217:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11048:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11053:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"11058:6:34","type":""}],"src":"11004:246:34"},{"body":{"nodeType":"YulBlock","src":"11304:54:34","statements":[{"nodeType":"YulAssignment","src":"11314:38:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11332:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"11339:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11328:3:34"},"nodeType":"YulFunctionCall","src":"11328:14:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11348:2:34","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11344:3:34"},"nodeType":"YulFunctionCall","src":"11344:7:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11324:3:34"},"nodeType":"YulFunctionCall","src":"11324:28:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11314:6:34"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11287:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11297:6:34","type":""}],"src":"11256:102:34"},{"body":{"nodeType":"YulBlock","src":"11446:275:34","statements":[{"nodeType":"YulVariableDeclaration","src":"11456:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11503:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11470:32:34"},"nodeType":"YulFunctionCall","src":"11470:39:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11460:6:34","type":""}]},{"nodeType":"YulAssignment","src":"11518:68:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11574:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11579:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11525:48:34"},"nodeType":"YulFunctionCall","src":"11525:61:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11518:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11634:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"11641:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11630:3:34"},"nodeType":"YulFunctionCall","src":"11630:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"11648:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11653:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11595:34:34"},"nodeType":"YulFunctionCall","src":"11595:65:34"},"nodeType":"YulExpressionStatement","src":"11595:65:34"},{"nodeType":"YulAssignment","src":"11669:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11680:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11707:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11685:21:34"},"nodeType":"YulFunctionCall","src":"11685:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11676:3:34"},"nodeType":"YulFunctionCall","src":"11676:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11669:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11427:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11434:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11442:3:34","type":""}],"src":"11364:357:34"},{"body":{"nodeType":"YulBlock","src":"11827:96:34","statements":[{"nodeType":"YulAssignment","src":"11837:80:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11905:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"11913:3:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11851:53:34"},"nodeType":"YulFunctionCall","src":"11851:66:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11837:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11800:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11808:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11816:10:34","type":""}],"src":"11727:196:34"},{"body":{"nodeType":"YulBlock","src":"12012:38:34","statements":[{"nodeType":"YulAssignment","src":"12022:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12034:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"12039:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12030:3:34"},"nodeType":"YulFunctionCall","src":"12030:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12022:4:34"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11999:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12007:4:34","type":""}],"src":"11929:121:34"},{"body":{"nodeType":"YulBlock","src":"12226:839:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12236:76:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12306:5:34"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulIdentifier","src":"12250:55:34"},"nodeType":"YulFunctionCall","src":"12250:62:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12240:6:34","type":""}]},{"nodeType":"YulAssignment","src":"12321:101:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12410:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"12415:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12328:81:34"},"nodeType":"YulFunctionCall","src":"12328:94:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12321:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"12431:20:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"12448:3:34"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"12435:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12460:39:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12476:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12485:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"12493:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12481:3:34"},"nodeType":"YulFunctionCall","src":"12481:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12472:3:34"},"nodeType":"YulFunctionCall","src":"12472:27:34"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12464:4:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12508:79:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12581:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulIdentifier","src":"12523:57:34"},"nodeType":"YulFunctionCall","src":"12523:64:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"12512:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12596:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12610:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12600:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"12686:334:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12707:3:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12716:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"12722:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12712:3:34"},"nodeType":"YulFunctionCall","src":"12712:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12700:6:34"},"nodeType":"YulFunctionCall","src":"12700:33:34"},"nodeType":"YulExpressionStatement","src":"12700:33:34"},{"nodeType":"YulVariableDeclaration","src":"12746:34:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12773:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12767:5:34"},"nodeType":"YulFunctionCall","src":"12767:13:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12750:13:34","type":""}]},{"nodeType":"YulAssignment","src":"12793:92:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12865:13:34"},{"name":"tail","nodeType":"YulIdentifier","src":"12880:4:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12801:63:34"},"nodeType":"YulFunctionCall","src":"12801:84:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12793:4:34"}]},{"nodeType":"YulAssignment","src":"12898:78:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12969:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$5_memory_ptr","nodeType":"YulIdentifier","src":"12908:60:34"},"nodeType":"YulFunctionCall","src":"12908:68:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12898:6:34"}]},{"nodeType":"YulAssignment","src":"12989:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13000:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"13005:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12996:3:34"},"nodeType":"YulFunctionCall","src":"12996:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12989:3:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12648:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"12651:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12645:2:34"},"nodeType":"YulFunctionCall","src":"12645:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12659:18:34","statements":[{"nodeType":"YulAssignment","src":"12661:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12670:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"12673:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12666:3:34"},"nodeType":"YulFunctionCall","src":"12666:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12661:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"12630:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12632:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"12641:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12636:1:34","type":""}]}]},"src":"12626:394:34"},{"nodeType":"YulAssignment","src":"13029:11:34","value":{"name":"tail","nodeType":"YulIdentifier","src":"13036:4:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13029:3:34"}]},{"nodeType":"YulAssignment","src":"13049:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"13056:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13049:3:34"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$5_memory_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12205:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12212:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12221:3:34","type":""}],"src":"12086:979:34"},{"body":{"nodeType":"YulBlock","src":"13235:241:34","statements":[{"nodeType":"YulAssignment","src":"13245:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13257:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13268:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:34"},"nodeType":"YulFunctionCall","src":"13253:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13245:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13292:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"13303:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13288:3:34"},"nodeType":"YulFunctionCall","src":"13288:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13311:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"13317:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13307:3:34"},"nodeType":"YulFunctionCall","src":"13307:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13281:6:34"},"nodeType":"YulFunctionCall","src":"13281:47:34"},"nodeType":"YulExpressionStatement","src":"13281:47:34"},{"nodeType":"YulAssignment","src":"13337:132:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13455:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"13464:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$5_memory_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13345:109:34"},"nodeType":"YulFunctionCall","src":"13345:124:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13337:4:34"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$5_memory_ptr__to_t_array$_t_string_memory_ptr_$5_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13207:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13219:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13230:4:34","type":""}],"src":"13071:405:34"},{"body":{"nodeType":"YulBlock","src":"13565:391:34","statements":[{"body":{"nodeType":"YulBlock","src":"13611:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13613:77:34"},"nodeType":"YulFunctionCall","src":"13613:79:34"},"nodeType":"YulExpressionStatement","src":"13613:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13586:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"13595:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13582:3:34"},"nodeType":"YulFunctionCall","src":"13582:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"13607:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13578:3:34"},"nodeType":"YulFunctionCall","src":"13578:32:34"},"nodeType":"YulIf","src":"13575:119:34"},{"nodeType":"YulBlock","src":"13704:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13719:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13733:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13723:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13748:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13783:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13794:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13779:3:34"},"nodeType":"YulFunctionCall","src":"13779:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13803:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13758:20:34"},"nodeType":"YulFunctionCall","src":"13758:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13748:6:34"}]}]},{"nodeType":"YulBlock","src":"13831:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13846:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13860:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13850:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13876:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13911:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13922:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13907:3:34"},"nodeType":"YulFunctionCall","src":"13907:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13931:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13886:20:34"},"nodeType":"YulFunctionCall","src":"13886:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13876:6:34"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13527:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13538:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13550:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13558:6:34","type":""}],"src":"13482:474:34"},{"body":{"nodeType":"YulBlock","src":"14129:478:34","statements":[{"body":{"nodeType":"YulBlock","src":"14178:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14180:77:34"},"nodeType":"YulFunctionCall","src":"14180:79:34"},"nodeType":"YulExpressionStatement","src":"14180:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14157:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14165:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14153:3:34"},"nodeType":"YulFunctionCall","src":"14153:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"14172:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14149:3:34"},"nodeType":"YulFunctionCall","src":"14149:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14142:6:34"},"nodeType":"YulFunctionCall","src":"14142:35:34"},"nodeType":"YulIf","src":"14139:122:34"},{"nodeType":"YulAssignment","src":"14270:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14293:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14280:12:34"},"nodeType":"YulFunctionCall","src":"14280:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14270:6:34"}]},{"body":{"nodeType":"YulBlock","src":"14343:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"14345:77:34"},"nodeType":"YulFunctionCall","src":"14345:79:34"},"nodeType":"YulExpressionStatement","src":"14345:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14315:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14323:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14312:2:34"},"nodeType":"YulFunctionCall","src":"14312:30:34"},"nodeType":"YulIf","src":"14309:117:34"},{"nodeType":"YulAssignment","src":"14435:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14451:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14459:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14447:3:34"},"nodeType":"YulFunctionCall","src":"14447:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14435:8:34"}]},{"body":{"nodeType":"YulBlock","src":"14518:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"14520:77:34"},"nodeType":"YulFunctionCall","src":"14520:79:34"},"nodeType":"YulExpressionStatement","src":"14520:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14483:8:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14497:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14505:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14493:3:34"},"nodeType":"YulFunctionCall","src":"14493:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14479:3:34"},"nodeType":"YulFunctionCall","src":"14479:32:34"},{"name":"end","nodeType":"YulIdentifier","src":"14513:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14476:2:34"},"nodeType":"YulFunctionCall","src":"14476:41:34"},"nodeType":"YulIf","src":"14473:128:34"}]},"name":"abi_decode_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14096:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"14104:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"14112:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"14122:6:34","type":""}],"src":"14009:598:34"},{"body":{"nodeType":"YulBlock","src":"14744:488:34","statements":[{"body":{"nodeType":"YulBlock","src":"14790:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14792:77:34"},"nodeType":"YulFunctionCall","src":"14792:79:34"},"nodeType":"YulExpressionStatement","src":"14792:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14765:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"14774:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14761:3:34"},"nodeType":"YulFunctionCall","src":"14761:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"14786:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14757:3:34"},"nodeType":"YulFunctionCall","src":"14757:32:34"},"nodeType":"YulIf","src":"14754:119:34"},{"nodeType":"YulBlock","src":"14883:342:34","statements":[{"nodeType":"YulVariableDeclaration","src":"14898:45:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14929:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"14940:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14925:3:34"},"nodeType":"YulFunctionCall","src":"14925:17:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14912:12:34"},"nodeType":"YulFunctionCall","src":"14912:31:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14902:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"14990:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14992:77:34"},"nodeType":"YulFunctionCall","src":"14992:79:34"},"nodeType":"YulExpressionStatement","src":"14992:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14962:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14970:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14959:2:34"},"nodeType":"YulFunctionCall","src":"14959:30:34"},"nodeType":"YulIf","src":"14956:117:34"},{"nodeType":"YulAssignment","src":"15087:128:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15187:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"15198:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15183:3:34"},"nodeType":"YulFunctionCall","src":"15183:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15207:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"15105:77:34"},"nodeType":"YulFunctionCall","src":"15105:110:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15087:6:34"},{"name":"value1","nodeType":"YulIdentifier","src":"15095:6:34"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14706:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14717:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14729:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14737:6:34","type":""}],"src":"14613:619:34"},{"body":{"nodeType":"YulBlock","src":"15330:285:34","statements":[{"nodeType":"YulVariableDeclaration","src":"15340:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15387:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15354:32:34"},"nodeType":"YulFunctionCall","src":"15354:39:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15344:6:34","type":""}]},{"nodeType":"YulAssignment","src":"15402:78:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15468:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"15473:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15409:58:34"},"nodeType":"YulFunctionCall","src":"15409:71:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15402:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15528:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"15535:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:34"},"nodeType":"YulFunctionCall","src":"15524:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15542:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"15547:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15489:34:34"},"nodeType":"YulFunctionCall","src":"15489:65:34"},"nodeType":"YulExpressionStatement","src":"15489:65:34"},{"nodeType":"YulAssignment","src":"15563:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15574:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15601:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15579:21:34"},"nodeType":"YulFunctionCall","src":"15579:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15570:3:34"},"nodeType":"YulFunctionCall","src":"15570:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15563:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15311:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15318:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15326:3:34","type":""}],"src":"15238:377:34"},{"body":{"nodeType":"YulBlock","src":"15739:195:34","statements":[{"nodeType":"YulAssignment","src":"15749:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15761:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"15772:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15757:3:34"},"nodeType":"YulFunctionCall","src":"15757:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15749:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15796:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"15807:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15792:3:34"},"nodeType":"YulFunctionCall","src":"15792:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15815:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"15821:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15811:3:34"},"nodeType":"YulFunctionCall","src":"15811:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15785:6:34"},"nodeType":"YulFunctionCall","src":"15785:47:34"},"nodeType":"YulExpressionStatement","src":"15785:47:34"},{"nodeType":"YulAssignment","src":"15841:86:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15913:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"15922:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15849:63:34"},"nodeType":"YulFunctionCall","src":"15849:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15841:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15711:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15723:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15734:4:34","type":""}],"src":"15621:313:34"},{"body":{"nodeType":"YulBlock","src":"16029:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16046:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16049:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16039:6:34"},"nodeType":"YulFunctionCall","src":"16039:12:34"},"nodeType":"YulExpressionStatement","src":"16039:12:34"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"15940:117:34"},{"body":{"nodeType":"YulBlock","src":"16091:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16108:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16111:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16101:6:34"},"nodeType":"YulFunctionCall","src":"16101:88:34"},"nodeType":"YulExpressionStatement","src":"16101:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16205:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16208:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16198:6:34"},"nodeType":"YulFunctionCall","src":"16198:15:34"},"nodeType":"YulExpressionStatement","src":"16198:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16229:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16232:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16222:6:34"},"nodeType":"YulFunctionCall","src":"16222:15:34"},"nodeType":"YulExpressionStatement","src":"16222:15:34"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16063:180:34"},{"body":{"nodeType":"YulBlock","src":"16292:238:34","statements":[{"nodeType":"YulVariableDeclaration","src":"16302:58:34","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16324:6:34"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16354:4:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16332:21:34"},"nodeType":"YulFunctionCall","src":"16332:27:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16320:3:34"},"nodeType":"YulFunctionCall","src":"16320:40:34"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"16306:10:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"16471:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16473:16:34"},"nodeType":"YulFunctionCall","src":"16473:18:34"},"nodeType":"YulExpressionStatement","src":"16473:18:34"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16414:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"16426:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16411:2:34"},"nodeType":"YulFunctionCall","src":"16411:34:34"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16450:10:34"},{"name":"memPtr","nodeType":"YulIdentifier","src":"16462:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16447:2:34"},"nodeType":"YulFunctionCall","src":"16447:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16408:2:34"},"nodeType":"YulFunctionCall","src":"16408:62:34"},"nodeType":"YulIf","src":"16405:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16509:2:34","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16513:10:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16502:6:34"},"nodeType":"YulFunctionCall","src":"16502:22:34"},"nodeType":"YulExpressionStatement","src":"16502:22:34"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16278:6:34","type":""},{"name":"size","nodeType":"YulTypedName","src":"16286:4:34","type":""}],"src":"16249:281:34"},{"body":{"nodeType":"YulBlock","src":"16577:88:34","statements":[{"nodeType":"YulAssignment","src":"16587:30:34","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16597:18:34"},"nodeType":"YulFunctionCall","src":"16597:20:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16587:6:34"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16646:6:34"},{"name":"size","nodeType":"YulIdentifier","src":"16654:4:34"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16626:19:34"},"nodeType":"YulFunctionCall","src":"16626:33:34"},"nodeType":"YulExpressionStatement","src":"16626:33:34"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16561:4:34","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16570:6:34","type":""}],"src":"16536:129:34"},{"body":{"nodeType":"YulBlock","src":"16738:241:34","statements":[{"body":{"nodeType":"YulBlock","src":"16843:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16845:16:34"},"nodeType":"YulFunctionCall","src":"16845:18:34"},"nodeType":"YulExpressionStatement","src":"16845:18:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16815:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"16823:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16812:2:34"},"nodeType":"YulFunctionCall","src":"16812:30:34"},"nodeType":"YulIf","src":"16809:56:34"},{"nodeType":"YulAssignment","src":"16875:37:34","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16905:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16883:21:34"},"nodeType":"YulFunctionCall","src":"16883:29:34"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16875:4:34"}]},{"nodeType":"YulAssignment","src":"16949:23:34","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16961:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"16967:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16957:3:34"},"nodeType":"YulFunctionCall","src":"16957:15:34"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16949:4:34"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16722:6:34","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16733:4:34","type":""}],"src":"16671:308:34"},{"body":{"nodeType":"YulBlock","src":"17049:82:34","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17072:3:34"},{"name":"src","nodeType":"YulIdentifier","src":"17077:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"17082:6:34"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17059:12:34"},"nodeType":"YulFunctionCall","src":"17059:30:34"},"nodeType":"YulExpressionStatement","src":"17059:30:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17109:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"17114:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17105:3:34"},"nodeType":"YulFunctionCall","src":"17105:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"17123:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17098:6:34"},"nodeType":"YulFunctionCall","src":"17098:27:34"},"nodeType":"YulExpressionStatement","src":"17098:27:34"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17031:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17036:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"17041:6:34","type":""}],"src":"16985:146:34"},{"body":{"nodeType":"YulBlock","src":"17221:341:34","statements":[{"nodeType":"YulAssignment","src":"17231:75:34","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17298:6:34"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17256:41:34"},"nodeType":"YulFunctionCall","src":"17256:49:34"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17240:15:34"},"nodeType":"YulFunctionCall","src":"17240:66:34"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17231:5:34"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17322:5:34"},{"name":"length","nodeType":"YulIdentifier","src":"17329:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17315:6:34"},"nodeType":"YulFunctionCall","src":"17315:21:34"},"nodeType":"YulExpressionStatement","src":"17315:21:34"},{"nodeType":"YulVariableDeclaration","src":"17345:27:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17360:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"17367:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17356:3:34"},"nodeType":"YulFunctionCall","src":"17356:16:34"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"17349:3:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"17410:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"17412:77:34"},"nodeType":"YulFunctionCall","src":"17412:79:34"},"nodeType":"YulExpressionStatement","src":"17412:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17391:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"17396:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17387:3:34"},"nodeType":"YulFunctionCall","src":"17387:16:34"},{"name":"end","nodeType":"YulIdentifier","src":"17405:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17384:2:34"},"nodeType":"YulFunctionCall","src":"17384:25:34"},"nodeType":"YulIf","src":"17381:112:34"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17539:3:34"},{"name":"dst","nodeType":"YulIdentifier","src":"17544:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"17549:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17502:36:34"},"nodeType":"YulFunctionCall","src":"17502:54:34"},"nodeType":"YulExpressionStatement","src":"17502:54:34"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17194:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"17199:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"17207:3:34","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17215:5:34","type":""}],"src":"17137:425:34"},{"body":{"nodeType":"YulBlock","src":"17644:278:34","statements":[{"body":{"nodeType":"YulBlock","src":"17693:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"17695:77:34"},"nodeType":"YulFunctionCall","src":"17695:79:34"},"nodeType":"YulExpressionStatement","src":"17695:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17672:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"17680:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17668:3:34"},"nodeType":"YulFunctionCall","src":"17668:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"17687:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17664:3:34"},"nodeType":"YulFunctionCall","src":"17664:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17657:6:34"},"nodeType":"YulFunctionCall","src":"17657:35:34"},"nodeType":"YulIf","src":"17654:122:34"},{"nodeType":"YulVariableDeclaration","src":"17785:34:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17812:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17799:12:34"},"nodeType":"YulFunctionCall","src":"17799:20:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17789:6:34","type":""}]},{"nodeType":"YulAssignment","src":"17828:88:34","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17889:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"17897:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17885:3:34"},"nodeType":"YulFunctionCall","src":"17885:17:34"},{"name":"length","nodeType":"YulIdentifier","src":"17904:6:34"},{"name":"end","nodeType":"YulIdentifier","src":"17912:3:34"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17837:47:34"},"nodeType":"YulFunctionCall","src":"17837:79:34"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17828:5:34"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17622:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"17630:3:34","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17638:5:34","type":""}],"src":"17582:340:34"},{"body":{"nodeType":"YulBlock","src":"18004:433:34","statements":[{"body":{"nodeType":"YulBlock","src":"18050:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18052:77:34"},"nodeType":"YulFunctionCall","src":"18052:79:34"},"nodeType":"YulExpressionStatement","src":"18052:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18025:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"18034:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18021:3:34"},"nodeType":"YulFunctionCall","src":"18021:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"18046:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18017:3:34"},"nodeType":"YulFunctionCall","src":"18017:32:34"},"nodeType":"YulIf","src":"18014:119:34"},{"nodeType":"YulBlock","src":"18143:287:34","statements":[{"nodeType":"YulVariableDeclaration","src":"18158:45:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18189:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18200:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18185:3:34"},"nodeType":"YulFunctionCall","src":"18185:17:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18172:12:34"},"nodeType":"YulFunctionCall","src":"18172:31:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18162:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"18250:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18252:77:34"},"nodeType":"YulFunctionCall","src":"18252:79:34"},"nodeType":"YulExpressionStatement","src":"18252:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18222:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"18230:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18219:2:34"},"nodeType":"YulFunctionCall","src":"18219:30:34"},"nodeType":"YulIf","src":"18216:117:34"},{"nodeType":"YulAssignment","src":"18347:73:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18392:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"18403:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18388:3:34"},"nodeType":"YulFunctionCall","src":"18388:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18412:7:34"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18357:30:34"},"nodeType":"YulFunctionCall","src":"18357:63:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18347:6:34"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17974:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17985:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17997:6:34","type":""}],"src":"17928:509:34"},{"body":{"nodeType":"YulBlock","src":"18508:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18525:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18548:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18530:17:34"},"nodeType":"YulFunctionCall","src":"18530:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18518:6:34"},"nodeType":"YulFunctionCall","src":"18518:37:34"},"nodeType":"YulExpressionStatement","src":"18518:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18496:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18503:3:34","type":""}],"src":"18443:118:34"},{"body":{"nodeType":"YulBlock","src":"18665:124:34","statements":[{"nodeType":"YulAssignment","src":"18675:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18687:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18698:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18683:3:34"},"nodeType":"YulFunctionCall","src":"18683:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18675:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18755:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18768:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18779:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18764:3:34"},"nodeType":"YulFunctionCall","src":"18764:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18711:43:34"},"nodeType":"YulFunctionCall","src":"18711:71:34"},"nodeType":"YulExpressionStatement","src":"18711:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18637:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18649:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18660:4:34","type":""}],"src":"18567:222:34"},{"body":{"nodeType":"YulBlock","src":"18878:391:34","statements":[{"body":{"nodeType":"YulBlock","src":"18924:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18926:77:34"},"nodeType":"YulFunctionCall","src":"18926:79:34"},"nodeType":"YulExpressionStatement","src":"18926:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18899:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"18908:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18895:3:34"},"nodeType":"YulFunctionCall","src":"18895:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"18920:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18891:3:34"},"nodeType":"YulFunctionCall","src":"18891:32:34"},"nodeType":"YulIf","src":"18888:119:34"},{"nodeType":"YulBlock","src":"19017:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"19032:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"19046:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19036:6:34","type":""}]},{"nodeType":"YulAssignment","src":"19061:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19096:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"19107:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19092:3:34"},"nodeType":"YulFunctionCall","src":"19092:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19116:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"19071:20:34"},"nodeType":"YulFunctionCall","src":"19071:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19061:6:34"}]}]},{"nodeType":"YulBlock","src":"19144:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"19159:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"19173:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19163:6:34","type":""}]},{"nodeType":"YulAssignment","src":"19189:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19224:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"19235:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19220:3:34"},"nodeType":"YulFunctionCall","src":"19220:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19244:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19199:20:34"},"nodeType":"YulFunctionCall","src":"19199:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19189:6:34"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18840:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18851:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18863:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18871:6:34","type":""}],"src":"18795:474:34"},{"body":{"nodeType":"YulBlock","src":"19384:169:34","statements":[{"nodeType":"YulAssignment","src":"19394:18:34","value":{"name":"offset","nodeType":"YulIdentifier","src":"19406:6:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19394:8:34"}]},{"body":{"nodeType":"YulBlock","src":"19464:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19466:77:34"},"nodeType":"YulFunctionCall","src":"19466:79:34"},"nodeType":"YulExpressionStatement","src":"19466:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19431:8:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19445:4:34","type":"","value":"0x05"},{"kind":"number","nodeType":"YulLiteral","src":"19451:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19441:3:34"},"nodeType":"YulFunctionCall","src":"19441:15:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19427:3:34"},"nodeType":"YulFunctionCall","src":"19427:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"19459:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19424:2:34"},"nodeType":"YulFunctionCall","src":"19424:39:34"},"nodeType":"YulIf","src":"19421:126:34"}]},"name":"abi_decode_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19359:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"19367:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"19375:8:34","type":""}],"src":"19292:261:34"},{"body":{"nodeType":"YulBlock","src":"19657:169:34","statements":[{"nodeType":"YulAssignment","src":"19667:18:34","value":{"name":"offset","nodeType":"YulIdentifier","src":"19679:6:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19667:8:34"}]},{"body":{"nodeType":"YulBlock","src":"19737:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19739:77:34"},"nodeType":"YulFunctionCall","src":"19739:79:34"},"nodeType":"YulExpressionStatement","src":"19739:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19704:8:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19718:4:34","type":"","value":"0x05"},{"kind":"number","nodeType":"YulLiteral","src":"19724:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19714:3:34"},"nodeType":"YulFunctionCall","src":"19714:15:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19700:3:34"},"nodeType":"YulFunctionCall","src":"19700:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"19732:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19697:2:34"},"nodeType":"YulFunctionCall","src":"19697:39:34"},"nodeType":"YulIf","src":"19694:126:34"}]},"name":"abi_decode_t_array$_t_address_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19632:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"19640:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"19648:8:34","type":""}],"src":"19577:249:34"},{"body":{"nodeType":"YulBlock","src":"19930:169:34","statements":[{"nodeType":"YulAssignment","src":"19940:18:34","value":{"name":"offset","nodeType":"YulIdentifier","src":"19952:6:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19940:8:34"}]},{"body":{"nodeType":"YulBlock","src":"20010:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"20012:77:34"},"nodeType":"YulFunctionCall","src":"20012:79:34"},"nodeType":"YulExpressionStatement","src":"20012:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"19977:8:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19991:4:34","type":"","value":"0x03"},{"kind":"number","nodeType":"YulLiteral","src":"19997:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19987:3:34"},"nodeType":"YulFunctionCall","src":"19987:15:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19973:3:34"},"nodeType":"YulFunctionCall","src":"19973:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"20005:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19970:2:34"},"nodeType":"YulFunctionCall","src":"19970:39:34"},"nodeType":"YulIf","src":"19967:126:34"}]},"name":"abi_decode_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19905:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"19913:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"19921:8:34","type":""}],"src":"19850:249:34"},{"body":{"nodeType":"YulBlock","src":"20214:169:34","statements":[{"nodeType":"YulAssignment","src":"20224:18:34","value":{"name":"offset","nodeType":"YulIdentifier","src":"20236:6:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"20224:8:34"}]},{"body":{"nodeType":"YulBlock","src":"20294:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"20296:77:34"},"nodeType":"YulFunctionCall","src":"20296:79:34"},"nodeType":"YulExpressionStatement","src":"20296:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"20261:8:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20275:4:34","type":"","value":"0x03"},{"kind":"number","nodeType":"YulLiteral","src":"20281:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20271:3:34"},"nodeType":"YulFunctionCall","src":"20271:15:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20257:3:34"},"nodeType":"YulFunctionCall","src":"20257:30:34"},{"name":"end","nodeType":"YulIdentifier","src":"20289:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20254:2:34"},"nodeType":"YulFunctionCall","src":"20254:39:34"},"nodeType":"YulIf","src":"20251:126:34"}]},"name":"abi_decode_t_array$_t_string_calldata_ptr_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20189:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"20197:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"20205:8:34","type":""}],"src":"20122:261:34"},{"body":{"nodeType":"YulBlock","src":"20740:1764:34","statements":[{"body":{"nodeType":"YulBlock","src":"20787:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20789:77:34"},"nodeType":"YulFunctionCall","src":"20789:79:34"},"nodeType":"YulExpressionStatement","src":"20789:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20761:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"20770:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20757:3:34"},"nodeType":"YulFunctionCall","src":"20757:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"20782:3:34","type":"","value":"544"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20753:3:34"},"nodeType":"YulFunctionCall","src":"20753:33:34"},"nodeType":"YulIf","src":"20750:120:34"},{"nodeType":"YulBlock","src":"20880:314:34","statements":[{"nodeType":"YulVariableDeclaration","src":"20895:45:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20926:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20937:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20922:3:34"},"nodeType":"YulFunctionCall","src":"20922:17:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20909:12:34"},"nodeType":"YulFunctionCall","src":"20909:31:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20899:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"20987:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20989:77:34"},"nodeType":"YulFunctionCall","src":"20989:79:34"},"nodeType":"YulExpressionStatement","src":"20989:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20959:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"20967:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20956:2:34"},"nodeType":"YulFunctionCall","src":"20956:30:34"},"nodeType":"YulIf","src":"20953:117:34"},{"nodeType":"YulAssignment","src":"21084:100:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21156:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21167:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21152:3:34"},"nodeType":"YulFunctionCall","src":"21152:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21176:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulIdentifier","src":"21094:57:34"},"nodeType":"YulFunctionCall","src":"21094:90:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21084:6:34"}]}]},{"nodeType":"YulBlock","src":"21204:143:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21219:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21233:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21223:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21249:88:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21309:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21320:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21305:3:34"},"nodeType":"YulFunctionCall","src":"21305:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21329:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_address_$5_calldata_ptr","nodeType":"YulIdentifier","src":"21259:45:34"},"nodeType":"YulFunctionCall","src":"21259:78:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21249:6:34"}]}]},{"nodeType":"YulBlock","src":"21357:144:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21372:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21386:3:34","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21376:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21403:88:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21463:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21474:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21459:3:34"},"nodeType":"YulFunctionCall","src":"21459:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21483:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"21413:45:34"},"nodeType":"YulFunctionCall","src":"21413:78:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21403:6:34"}]}]},{"nodeType":"YulBlock","src":"21511:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21526:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21540:3:34","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21530:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21557:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21592:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21603:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21588:3:34"},"nodeType":"YulFunctionCall","src":"21588:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21612:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21567:20:34"},"nodeType":"YulFunctionCall","src":"21567:53:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21557:6:34"}]}]},{"nodeType":"YulBlock","src":"21640:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21655:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21669:3:34","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21659:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21686:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21721:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21732:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21717:3:34"},"nodeType":"YulFunctionCall","src":"21717:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21741:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21696:20:34"},"nodeType":"YulFunctionCall","src":"21696:53:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"21686:6:34"}]}]},{"nodeType":"YulBlock","src":"21769:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21784:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21798:3:34","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21788:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21815:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21850:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21861:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21846:3:34"},"nodeType":"YulFunctionCall","src":"21846:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21870:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21825:20:34"},"nodeType":"YulFunctionCall","src":"21825:53:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"21815:6:34"}]}]},{"nodeType":"YulBlock","src":"21898:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"21913:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"21927:3:34","type":"","value":"384"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21917:6:34","type":""}]},{"nodeType":"YulAssignment","src":"21944:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21979:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"21990:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21975:3:34"},"nodeType":"YulFunctionCall","src":"21975:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21999:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21954:20:34"},"nodeType":"YulFunctionCall","src":"21954:53:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"21944:6:34"}]}]},{"nodeType":"YulBlock","src":"22027:316:34","statements":[{"nodeType":"YulVariableDeclaration","src":"22042:47:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22073:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"22084:3:34","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22069:3:34"},"nodeType":"YulFunctionCall","src":"22069:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22056:12:34"},"nodeType":"YulFunctionCall","src":"22056:33:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22046:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"22136:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22138:77:34"},"nodeType":"YulFunctionCall","src":"22138:79:34"},"nodeType":"YulExpressionStatement","src":"22138:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22108:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"22116:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22105:2:34"},"nodeType":"YulFunctionCall","src":"22105:30:34"},"nodeType":"YulIf","src":"22102:117:34"},{"nodeType":"YulAssignment","src":"22233:100:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22305:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"22316:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22301:3:34"},"nodeType":"YulFunctionCall","src":"22301:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22325:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_string_calldata_ptr_$3_calldata_ptr","nodeType":"YulIdentifier","src":"22243:57:34"},"nodeType":"YulFunctionCall","src":"22243:90:34"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"22233:6:34"}]}]},{"nodeType":"YulBlock","src":"22353:144:34","statements":[{"nodeType":"YulVariableDeclaration","src":"22368:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"22382:3:34","type":"","value":"448"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22372:6:34","type":""}]},{"nodeType":"YulAssignment","src":"22399:88:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22459:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"22470:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22455:3:34"},"nodeType":"YulFunctionCall","src":"22455:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22479:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"22409:45:34"},"nodeType":"YulFunctionCall","src":"22409:78:34"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"22399:6:34"}]}]}]},"name":"abi_decode_tuple_t_array$_t_string_calldata_ptr_$5_calldata_ptrt_array$_t_address_$5_calldata_ptrt_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_array$_t_string_calldata_ptr_$3_calldata_ptrt_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20646:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20657:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20669:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20677:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20685:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20693:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20701:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20709:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20717:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"20725:6:34","type":""},{"name":"value8","nodeType":"YulTypedName","src":"20733:6:34","type":""}],"src":"20389:2115:34"},{"body":{"nodeType":"YulBlock","src":"22538:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22555:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22558:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22548:6:34"},"nodeType":"YulFunctionCall","src":"22548:88:34"},"nodeType":"YulExpressionStatement","src":"22548:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22652:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22655:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22645:6:34"},"nodeType":"YulFunctionCall","src":"22645:15:34"},"nodeType":"YulExpressionStatement","src":"22645:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22676:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22679:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22669:6:34"},"nodeType":"YulFunctionCall","src":"22669:15:34"},"nodeType":"YulExpressionStatement","src":"22669:15:34"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22510:180:34"},{"body":{"nodeType":"YulBlock","src":"22740:147:34","statements":[{"nodeType":"YulAssignment","src":"22750:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22773:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22755:17:34"},"nodeType":"YulFunctionCall","src":"22755:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22750:1:34"}]},{"nodeType":"YulAssignment","src":"22784:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22807:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22789:17:34"},"nodeType":"YulFunctionCall","src":"22789:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22784:1:34"}]},{"nodeType":"YulAssignment","src":"22818:16:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22829:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"22832:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22825:3:34"},"nodeType":"YulFunctionCall","src":"22825:9:34"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22818:3:34"}]},{"body":{"nodeType":"YulBlock","src":"22858:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22860:16:34"},"nodeType":"YulFunctionCall","src":"22860:18:34"},"nodeType":"YulExpressionStatement","src":"22860:18:34"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22850:1:34"},{"name":"sum","nodeType":"YulIdentifier","src":"22853:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22847:2:34"},"nodeType":"YulFunctionCall","src":"22847:10:34"},"nodeType":"YulIf","src":"22844:36:34"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22727:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"22730:1:34","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22736:3:34","type":""}],"src":"22696:191:34"},{"body":{"nodeType":"YulBlock","src":"22921:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22938:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22941:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22931:6:34"},"nodeType":"YulFunctionCall","src":"22931:88:34"},"nodeType":"YulExpressionStatement","src":"22931:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23035:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23038:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23028:6:34"},"nodeType":"YulFunctionCall","src":"23028:15:34"},"nodeType":"YulExpressionStatement","src":"23028:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23059:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23062:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23052:6:34"},"nodeType":"YulFunctionCall","src":"23052:15:34"},"nodeType":"YulExpressionStatement","src":"23052:15:34"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22893:180:34"},{"body":{"nodeType":"YulBlock","src":"23124:149:34","statements":[{"nodeType":"YulAssignment","src":"23134:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23157:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23139:17:34"},"nodeType":"YulFunctionCall","src":"23139:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23134:1:34"}]},{"nodeType":"YulAssignment","src":"23168:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23191:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23173:17:34"},"nodeType":"YulFunctionCall","src":"23173:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23168:1:34"}]},{"nodeType":"YulAssignment","src":"23202:17:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23214:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"23217:1:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23210:3:34"},"nodeType":"YulFunctionCall","src":"23210:9:34"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23202:4:34"}]},{"body":{"nodeType":"YulBlock","src":"23244:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23246:16:34"},"nodeType":"YulFunctionCall","src":"23246:18:34"},"nodeType":"YulExpressionStatement","src":"23246:18:34"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23235:4:34"},{"name":"x","nodeType":"YulIdentifier","src":"23241:1:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23232:2:34"},"nodeType":"YulFunctionCall","src":"23232:11:34"},"nodeType":"YulIf","src":"23229:37:34"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23110:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"23113:1:34","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23119:4:34","type":""}],"src":"23079:194:34"},{"body":{"nodeType":"YulBlock","src":"23307:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23324:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23327:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23317:6:34"},"nodeType":"YulFunctionCall","src":"23317:88:34"},"nodeType":"YulExpressionStatement","src":"23317:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23421:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23424:4:34","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23414:6:34"},"nodeType":"YulFunctionCall","src":"23414:15:34"},"nodeType":"YulExpressionStatement","src":"23414:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23445:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23448:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23438:6:34"},"nodeType":"YulFunctionCall","src":"23438:15:34"},"nodeType":"YulExpressionStatement","src":"23438:15:34"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"23279:180:34"},{"body":{"nodeType":"YulBlock","src":"23516:269:34","statements":[{"nodeType":"YulAssignment","src":"23526:22:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23540:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"23546:1:34","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23536:3:34"},"nodeType":"YulFunctionCall","src":"23536:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23526:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"23557:38:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23587:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"23593:1:34","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23583:3:34"},"nodeType":"YulFunctionCall","src":"23583:12:34"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"23561:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"23634:51:34","statements":[{"nodeType":"YulAssignment","src":"23648:27:34","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23662:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"23670:4:34","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23658:3:34"},"nodeType":"YulFunctionCall","src":"23658:17:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23648:6:34"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23614:18:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23607:6:34"},"nodeType":"YulFunctionCall","src":"23607:26:34"},"nodeType":"YulIf","src":"23604:81:34"},{"body":{"nodeType":"YulBlock","src":"23737:42:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"23751:16:34"},"nodeType":"YulFunctionCall","src":"23751:18:34"},"nodeType":"YulExpressionStatement","src":"23751:18:34"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23701:18:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23724:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"23732:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23721:2:34"},"nodeType":"YulFunctionCall","src":"23721:14:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23698:2:34"},"nodeType":"YulFunctionCall","src":"23698:38:34"},"nodeType":"YulIf","src":"23695:84:34"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23500:4:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23509:6:34","type":""}],"src":"23465:320:34"},{"body":{"nodeType":"YulBlock","src":"23834:190:34","statements":[{"nodeType":"YulAssignment","src":"23844:33:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23871:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23853:17:34"},"nodeType":"YulFunctionCall","src":"23853:24:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23844:5:34"}]},{"body":{"nodeType":"YulBlock","src":"23967:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23969:16:34"},"nodeType":"YulFunctionCall","src":"23969:18:34"},"nodeType":"YulExpressionStatement","src":"23969:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23892:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"23899:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23889:2:34"},"nodeType":"YulFunctionCall","src":"23889:77:34"},"nodeType":"YulIf","src":"23886:103:34"},{"nodeType":"YulAssignment","src":"23998:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24009:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"24016:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24005:3:34"},"nodeType":"YulFunctionCall","src":"24005:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23998:3:34"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23820:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23830:3:34","type":""}],"src":"23791:233:34"},{"body":{"nodeType":"YulBlock","src":"24174:210:34","statements":[{"nodeType":"YulAssignment","src":"24184:96:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24268:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"24273:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24191:76:34"},"nodeType":"YulFunctionCall","src":"24191:89:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24184:3:34"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"24327:5:34"},{"name":"pos","nodeType":"YulIdentifier","src":"24334:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"24339:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24290:36:34"},"nodeType":"YulFunctionCall","src":"24290:56:34"},"nodeType":"YulExpressionStatement","src":"24290:56:34"},{"nodeType":"YulAssignment","src":"24355:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24366:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"24371:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24362:3:34"},"nodeType":"YulFunctionCall","src":"24362:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24355:3:34"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"24147:5:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"24154:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24162:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24170:3:34","type":""}],"src":"24054:330:34"},{"body":{"nodeType":"YulBlock","src":"24536:149:34","statements":[{"nodeType":"YulAssignment","src":"24547:112:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24638:6:34"},{"name":"value1","nodeType":"YulIdentifier","src":"24646:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"24655:3:34"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24554:83:34"},"nodeType":"YulFunctionCall","src":"24554:105:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24547:3:34"}]},{"nodeType":"YulAssignment","src":"24669:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"24676:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24669:3:34"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24507:3:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24513:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24521:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24532:3:34","type":""}],"src":"24390:295:34"},{"body":{"nodeType":"YulBlock","src":"24817:215:34","statements":[{"nodeType":"YulAssignment","src":"24827:78:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24893:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"24898:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24834:58:34"},"nodeType":"YulFunctionCall","src":"24834:71:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24827:3:34"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"24952:5:34"},{"name":"pos","nodeType":"YulIdentifier","src":"24959:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"24964:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24915:36:34"},"nodeType":"YulFunctionCall","src":"24915:56:34"},"nodeType":"YulExpressionStatement","src":"24915:56:34"},{"nodeType":"YulAssignment","src":"24980:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24991:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25018:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"24996:21:34"},"nodeType":"YulFunctionCall","src":"24996:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24987:3:34"},"nodeType":"YulFunctionCall","src":"24987:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24980:3:34"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"24790:5:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"24797:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24805:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24813:3:34","type":""}],"src":"24715:317:34"},{"body":{"nodeType":"YulBlock","src":"25250:452:34","statements":[{"nodeType":"YulAssignment","src":"25260:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25272:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"25283:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25268:3:34"},"nodeType":"YulFunctionCall","src":"25268:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25260:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25341:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25354:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"25365:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25350:3:34"},"nodeType":"YulFunctionCall","src":"25350:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25297:43:34"},"nodeType":"YulFunctionCall","src":"25297:71:34"},"nodeType":"YulExpressionStatement","src":"25297:71:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25389:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"25400:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25385:3:34"},"nodeType":"YulFunctionCall","src":"25385:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25409:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"25415:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25405:3:34"},"nodeType":"YulFunctionCall","src":"25405:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25378:6:34"},"nodeType":"YulFunctionCall","src":"25378:48:34"},"nodeType":"YulExpressionStatement","src":"25378:48:34"},{"nodeType":"YulAssignment","src":"25435:96:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25509:6:34"},{"name":"value2","nodeType":"YulIdentifier","src":"25517:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"25526:4:34"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25443:65:34"},"nodeType":"YulFunctionCall","src":"25443:88:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25435:4:34"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25585:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25598:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"25609:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25594:3:34"},"nodeType":"YulFunctionCall","src":"25594:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25541:43:34"},"nodeType":"YulFunctionCall","src":"25541:72:34"},"nodeType":"YulExpressionStatement","src":"25541:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25667:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25680:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"25691:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25676:3:34"},"nodeType":"YulFunctionCall","src":"25676:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25623:43:34"},"nodeType":"YulFunctionCall","src":"25623:72:34"},"nodeType":"YulExpressionStatement","src":"25623:72:34"}]},"name":"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25190:9:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25202:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25210:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25218:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25226:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25234:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25245:4:34","type":""}],"src":"25038:664:34"},{"body":{"nodeType":"YulBlock","src":"25814:48:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25836:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"25844:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25832:3:34"},"nodeType":"YulFunctionCall","src":"25832:14:34"},{"hexValue":"57425443","kind":"string","nodeType":"YulLiteral","src":"25848:6:34","type":"","value":"WBTC"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25825:6:34"},"nodeType":"YulFunctionCall","src":"25825:30:34"},"nodeType":"YulExpressionStatement","src":"25825:30:34"}]},"name":"store_literal_in_memory_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25806:6:34","type":""}],"src":"25708:154:34"},{"body":{"nodeType":"YulBlock","src":"26032:236:34","statements":[{"nodeType":"YulAssignment","src":"26042:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26126:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"26131:1:34","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26049:76:34"},"nodeType":"YulFunctionCall","src":"26049:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26042:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26231:3:34"}],"functionName":{"name":"store_literal_in_memory_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73","nodeType":"YulIdentifier","src":"26142:88:34"},"nodeType":"YulFunctionCall","src":"26142:93:34"},"nodeType":"YulExpressionStatement","src":"26142:93:34"},{"nodeType":"YulAssignment","src":"26244:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26255:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"26260:1:34","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26251:3:34"},"nodeType":"YulFunctionCall","src":"26251:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26244:3:34"}]}]},"name":"abi_encode_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26020:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26028:3:34","type":""}],"src":"25868:400:34"},{"body":{"nodeType":"YulBlock","src":"26463:192:34","statements":[{"nodeType":"YulAssignment","src":"26474:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26625:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26481:142:34"},"nodeType":"YulFunctionCall","src":"26481:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26474:3:34"}]},{"nodeType":"YulAssignment","src":"26639:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"26646:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26639:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26450:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26459:3:34","type":""}],"src":"26274:381:34"},{"body":{"nodeType":"YulBlock","src":"26767:48:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26789:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"26797:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26785:3:34"},"nodeType":"YulFunctionCall","src":"26785:14:34"},{"hexValue":"55534443","kind":"string","nodeType":"YulLiteral","src":"26801:6:34","type":"","value":"USDC"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26778:6:34"},"nodeType":"YulFunctionCall","src":"26778:30:34"},"nodeType":"YulExpressionStatement","src":"26778:30:34"}]},"name":"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26759:6:34","type":""}],"src":"26661:154:34"},{"body":{"nodeType":"YulBlock","src":"26985:236:34","statements":[{"nodeType":"YulAssignment","src":"26995:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27079:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"27084:1:34","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27002:76:34"},"nodeType":"YulFunctionCall","src":"27002:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26995:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27184:3:34"}],"functionName":{"name":"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","nodeType":"YulIdentifier","src":"27095:88:34"},"nodeType":"YulFunctionCall","src":"27095:93:34"},"nodeType":"YulExpressionStatement","src":"27095:93:34"},{"nodeType":"YulAssignment","src":"27197:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27208:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"27213:1:34","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27204:3:34"},"nodeType":"YulFunctionCall","src":"27204:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27197:3:34"}]}]},"name":"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26973:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26981:3:34","type":""}],"src":"26821:400:34"},{"body":{"nodeType":"YulBlock","src":"27416:192:34","statements":[{"nodeType":"YulAssignment","src":"27427:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27578:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27434:142:34"},"nodeType":"YulFunctionCall","src":"27434:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27427:3:34"}]},{"nodeType":"YulAssignment","src":"27592:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"27599:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27592:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27403:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27412:3:34","type":""}],"src":"27227:381:34"},{"body":{"nodeType":"YulBlock","src":"27720:48:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27742:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"27750:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27738:3:34"},"nodeType":"YulFunctionCall","src":"27738:14:34"},{"hexValue":"55534454","kind":"string","nodeType":"YulLiteral","src":"27754:6:34","type":"","value":"USDT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27731:6:34"},"nodeType":"YulFunctionCall","src":"27731:30:34"},"nodeType":"YulExpressionStatement","src":"27731:30:34"}]},"name":"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27712:6:34","type":""}],"src":"27614:154:34"},{"body":{"nodeType":"YulBlock","src":"27938:236:34","statements":[{"nodeType":"YulAssignment","src":"27948:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28032:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"28037:1:34","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27955:76:34"},"nodeType":"YulFunctionCall","src":"27955:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27948:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28137:3:34"}],"functionName":{"name":"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","nodeType":"YulIdentifier","src":"28048:88:34"},"nodeType":"YulFunctionCall","src":"28048:93:34"},"nodeType":"YulExpressionStatement","src":"28048:93:34"},{"nodeType":"YulAssignment","src":"28150:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28161:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"28166:1:34","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28157:3:34"},"nodeType":"YulFunctionCall","src":"28157:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28150:3:34"}]}]},"name":"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27926:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27934:3:34","type":""}],"src":"27774:400:34"},{"body":{"nodeType":"YulBlock","src":"28369:192:34","statements":[{"nodeType":"YulAssignment","src":"28380:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28531:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28387:142:34"},"nodeType":"YulFunctionCall","src":"28387:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28380:3:34"}]},{"nodeType":"YulAssignment","src":"28545:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"28552:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28545:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28356:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28365:3:34","type":""}],"src":"28180:381:34"},{"body":{"nodeType":"YulBlock","src":"28656:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28673:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28676:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28666:6:34"},"nodeType":"YulFunctionCall","src":"28666:12:34"},"nodeType":"YulExpressionStatement","src":"28666:12:34"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"28567:117:34"},{"body":{"nodeType":"YulBlock","src":"28779:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28796:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28799:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28789:6:34"},"nodeType":"YulFunctionCall","src":"28789:12:34"},"nodeType":"YulExpressionStatement","src":"28789:12:34"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"28690:117:34"},{"body":{"nodeType":"YulBlock","src":"28902:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28919:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28922:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28912:6:34"},"nodeType":"YulFunctionCall","src":"28912:12:34"},"nodeType":"YulExpressionStatement","src":"28912:12:34"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"28813:117:34"},{"body":{"nodeType":"YulBlock","src":"29037:295:34","statements":[{"nodeType":"YulVariableDeclaration","src":"29047:51:34","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"29086:11:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29073:12:34"},"nodeType":"YulFunctionCall","src":"29073:25:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"29051:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"29192:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"29194:77:34"},"nodeType":"YulFunctionCall","src":"29194:79:34"},"nodeType":"YulExpressionStatement","src":"29194:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"29121:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"29149:12:34"},"nodeType":"YulFunctionCall","src":"29149:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"29165:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29145:3:34"},"nodeType":"YulFunctionCall","src":"29145:29:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29180:4:34","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"29186:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29176:3:34"},"nodeType":"YulFunctionCall","src":"29176:12:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29141:3:34"},"nodeType":"YulFunctionCall","src":"29141:48:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29117:3:34"},"nodeType":"YulFunctionCall","src":"29117:73:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29110:6:34"},"nodeType":"YulFunctionCall","src":"29110:81:34"},"nodeType":"YulIf","src":"29107:168:34"},{"nodeType":"YulAssignment","src":"29284:41:34","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"29296:8:34"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"29306:18:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29292:3:34"},"nodeType":"YulFunctionCall","src":"29292:33:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"29284:4:34"}]}]},"name":"access_calldata_tail_t_struct$_SwapParams_$6666_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"29006:8:34","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"29016:11:34","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"29032:4:34","type":""}],"src":"28936:396:34"},{"body":{"nodeType":"YulBlock","src":"29445:295:34","statements":[{"nodeType":"YulVariableDeclaration","src":"29455:51:34","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"29494:11:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29481:12:34"},"nodeType":"YulFunctionCall","src":"29481:25:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"29459:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"29600:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"29602:77:34"},"nodeType":"YulFunctionCall","src":"29602:79:34"},"nodeType":"YulExpressionStatement","src":"29602:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"29529:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"29557:12:34"},"nodeType":"YulFunctionCall","src":"29557:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"29573:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29553:3:34"},"nodeType":"YulFunctionCall","src":"29553:29:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29588:4:34","type":"","value":"0xa0"},{"kind":"number","nodeType":"YulLiteral","src":"29594:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29584:3:34"},"nodeType":"YulFunctionCall","src":"29584:12:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29549:3:34"},"nodeType":"YulFunctionCall","src":"29549:48:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29525:3:34"},"nodeType":"YulFunctionCall","src":"29525:73:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29518:6:34"},"nodeType":"YulFunctionCall","src":"29518:81:34"},"nodeType":"YulIf","src":"29515:168:34"},{"nodeType":"YulAssignment","src":"29692:41:34","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"29704:8:34"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"29714:18:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29700:3:34"},"nodeType":"YulFunctionCall","src":"29700:33:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"29692:4:34"}]}]},"name":"access_calldata_tail_t_struct$_ExactInputParams_$5460_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"29414:8:34","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"29424:11:34","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"29440:4:34","type":""}],"src":"29338:402:34"},{"body":{"nodeType":"YulBlock","src":"29836:634:34","statements":[{"nodeType":"YulVariableDeclaration","src":"29846:51:34","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"29885:11:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"29872:12:34"},"nodeType":"YulFunctionCall","src":"29872:25:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"29850:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"29991:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"29993:77:34"},"nodeType":"YulFunctionCall","src":"29993:79:34"},"nodeType":"YulExpressionStatement","src":"29993:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"29920:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"29948:12:34"},"nodeType":"YulFunctionCall","src":"29948:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"29964:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29944:3:34"},"nodeType":"YulFunctionCall","src":"29944:29:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29979:4:34","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"29985:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29975:3:34"},"nodeType":"YulFunctionCall","src":"29975:12:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29940:3:34"},"nodeType":"YulFunctionCall","src":"29940:48:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29916:3:34"},"nodeType":"YulFunctionCall","src":"29916:73:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29909:6:34"},"nodeType":"YulFunctionCall","src":"29909:81:34"},"nodeType":"YulIf","src":"29906:168:34"},{"nodeType":"YulAssignment","src":"30083:41:34","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"30095:8:34"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"30105:18:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30091:3:34"},"nodeType":"YulFunctionCall","src":"30091:33:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"30083:4:34"}]},{"nodeType":"YulAssignment","src":"30134:28:34","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"30157:4:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30144:12:34"},"nodeType":"YulFunctionCall","src":"30144:18:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30134:6:34"}]},{"body":{"nodeType":"YulBlock","src":"30205:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"30207:77:34"},"nodeType":"YulFunctionCall","src":"30207:79:34"},"nodeType":"YulExpressionStatement","src":"30207:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30177:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"30185:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30174:2:34"},"nodeType":"YulFunctionCall","src":"30174:30:34"},"nodeType":"YulIf","src":"30171:117:34"},{"nodeType":"YulAssignment","src":"30297:21:34","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"30309:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"30315:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30305:3:34"},"nodeType":"YulFunctionCall","src":"30305:13:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"30297:4:34"}]},{"body":{"nodeType":"YulBlock","src":"30380:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"30382:77:34"},"nodeType":"YulFunctionCall","src":"30382:79:34"},"nodeType":"YulExpressionStatement","src":"30382:79:34"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"30334:4:34"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"30344:12:34"},"nodeType":"YulFunctionCall","src":"30344:14:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30364:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"30372:4:34","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30360:3:34"},"nodeType":"YulFunctionCall","src":"30360:17:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30340:3:34"},"nodeType":"YulFunctionCall","src":"30340:38:34"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"30330:3:34"},"nodeType":"YulFunctionCall","src":"30330:49:34"},"nodeType":"YulIf","src":"30327:136:34"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"29797:8:34","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"29807:11:34","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"29823:4:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"29829:6:34","type":""}],"src":"29746:724:34"},{"body":{"nodeType":"YulBlock","src":"30571:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30588:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"30593:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30581:6:34"},"nodeType":"YulFunctionCall","src":"30581:19:34"},"nodeType":"YulExpressionStatement","src":"30581:19:34"},{"nodeType":"YulAssignment","src":"30609:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30628:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"30633:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30624:3:34"},"nodeType":"YulFunctionCall","src":"30624:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30609:11:34"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30543:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"30548:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30559:11:34","type":""}],"src":"30476:168:34"},{"body":{"nodeType":"YulBlock","src":"30772:214:34","statements":[{"nodeType":"YulAssignment","src":"30782:77:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30847:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"30852:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30789:57:34"},"nodeType":"YulFunctionCall","src":"30789:70:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30782:3:34"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30906:5:34"},{"name":"pos","nodeType":"YulIdentifier","src":"30913:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"30918:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"30869:36:34"},"nodeType":"YulFunctionCall","src":"30869:56:34"},"nodeType":"YulExpressionStatement","src":"30869:56:34"},{"nodeType":"YulAssignment","src":"30934:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30945:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30972:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"30950:21:34"},"nodeType":"YulFunctionCall","src":"30950:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30941:3:34"},"nodeType":"YulFunctionCall","src":"30941:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30934:3:34"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"30745:5:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"30752:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30760:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30768:3:34","type":""}],"src":"30672:314:34"},{"body":{"nodeType":"YulBlock","src":"31146:285:34","statements":[{"nodeType":"YulAssignment","src":"31156:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31168:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"31179:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31164:3:34"},"nodeType":"YulFunctionCall","src":"31164:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31156:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31203:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"31214:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31199:3:34"},"nodeType":"YulFunctionCall","src":"31199:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31222:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"31228:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31218:3:34"},"nodeType":"YulFunctionCall","src":"31218:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31192:6:34"},"nodeType":"YulFunctionCall","src":"31192:47:34"},"nodeType":"YulExpressionStatement","src":"31192:47:34"},{"nodeType":"YulAssignment","src":"31248:94:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31320:6:34"},{"name":"value1","nodeType":"YulIdentifier","src":"31328:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"31337:4:34"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31256:63:34"},"nodeType":"YulFunctionCall","src":"31256:86:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31248:4:34"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31396:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31409:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"31420:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31405:3:34"},"nodeType":"YulFunctionCall","src":"31405:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31352:43:34"},"nodeType":"YulFunctionCall","src":"31352:72:34"},"nodeType":"YulExpressionStatement","src":"31352:72:34"}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31102:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31114:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31122:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31130:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31141:4:34","type":""}],"src":"30992:439:34"},{"body":{"nodeType":"YulBlock","src":"31500:80:34","statements":[{"nodeType":"YulAssignment","src":"31510:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31525:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31519:5:34"},"nodeType":"YulFunctionCall","src":"31519:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31510:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31568:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"31541:26:34"},"nodeType":"YulFunctionCall","src":"31541:33:34"},"nodeType":"YulExpressionStatement","src":"31541:33:34"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31478:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"31486:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31494:5:34","type":""}],"src":"31437:143:34"},{"body":{"nodeType":"YulBlock","src":"31663:274:34","statements":[{"body":{"nodeType":"YulBlock","src":"31709:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31711:77:34"},"nodeType":"YulFunctionCall","src":"31711:79:34"},"nodeType":"YulExpressionStatement","src":"31711:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31684:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"31693:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31680:3:34"},"nodeType":"YulFunctionCall","src":"31680:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"31705:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31676:3:34"},"nodeType":"YulFunctionCall","src":"31676:32:34"},"nodeType":"YulIf","src":"31673:119:34"},{"nodeType":"YulBlock","src":"31802:128:34","statements":[{"nodeType":"YulVariableDeclaration","src":"31817:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"31831:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31821:6:34","type":""}]},{"nodeType":"YulAssignment","src":"31846:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31892:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"31903:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31888:3:34"},"nodeType":"YulFunctionCall","src":"31888:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31912:7:34"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"31856:31:34"},"nodeType":"YulFunctionCall","src":"31856:64:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31846:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31633:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31644:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31656:6:34","type":""}],"src":"31586:351:34"},{"body":{"nodeType":"YulBlock","src":"31996:53:34","statements":[{"nodeType":"YulAssignment","src":"32006:36:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32031:3:34","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"32036:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"32027:3:34"},"nodeType":"YulFunctionCall","src":"32027:15:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32006:8:34"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31977:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31987:8:34","type":""}],"src":"31943:106:34"},{"body":{"nodeType":"YulBlock","src":"32094:144:34","statements":[{"body":{"nodeType":"YulBlock","src":"32131:101:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32160:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32163:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32166:1:34","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"32145:14:34"},"nodeType":"YulFunctionCall","src":"32145:23:34"},"nodeType":"YulExpressionStatement","src":"32145:23:34"},{"nodeType":"YulAssignment","src":"32181:41:34","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32219:1:34","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32213:5:34"},"nodeType":"YulFunctionCall","src":"32213:8:34"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"32188:24:34"},"nodeType":"YulFunctionCall","src":"32188:34:34"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"32181:3:34"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"32110:14:34"},"nodeType":"YulFunctionCall","src":"32110:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"32128:1:34","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32107:2:34"},"nodeType":"YulFunctionCall","src":"32107:23:34"},"nodeType":"YulIf","src":"32104:128:34"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"32090:3:34","type":""}],"src":"32055:183:34"},{"body":{"nodeType":"YulBlock","src":"32287:668:34","statements":[{"body":{"nodeType":"YulBlock","src":"32327:9:34","statements":[{"nodeType":"YulLeave","src":"32329:5:34"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"32303:14:34"},"nodeType":"YulFunctionCall","src":"32303:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"32321:4:34","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32300:2:34"},"nodeType":"YulFunctionCall","src":"32300:26:34"},"nodeType":"YulIf","src":"32297:39:34"},{"nodeType":"YulVariableDeclaration","src":"32346:32:34","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"32358:18:34"},"nodeType":"YulFunctionCall","src":"32358:20:34"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"32350:4:34","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32402:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"32408:1:34","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"32415:14:34"},"nodeType":"YulFunctionCall","src":"32415:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"32433:1:34","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32411:3:34"},"nodeType":"YulFunctionCall","src":"32411:24:34"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"32387:14:34"},"nodeType":"YulFunctionCall","src":"32387:49:34"},"nodeType":"YulExpressionStatement","src":"32387:49:34"},{"nodeType":"YulVariableDeclaration","src":"32446:25:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32466:4:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32460:5:34"},"nodeType":"YulFunctionCall","src":"32460:11:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32450:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"32597:29:34","statements":[{"nodeType":"YulLeave","src":"32611:5:34"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32502:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"32510:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32499:2:34"},"nodeType":"YulFunctionCall","src":"32499:30:34"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32550:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"32558:4:34","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32546:3:34"},"nodeType":"YulFunctionCall","src":"32546:17:34"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"32565:14:34"},"nodeType":"YulFunctionCall","src":"32565:16:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32543:2:34"},"nodeType":"YulFunctionCall","src":"32543:39:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32483:2:34"},"nodeType":"YulFunctionCall","src":"32483:113:34"},"nodeType":"YulIf","src":"32480:146:34"},{"nodeType":"YulVariableDeclaration","src":"32636:28:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32651:4:34"},{"name":"offset","nodeType":"YulIdentifier","src":"32657:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32647:3:34"},"nodeType":"YulFunctionCall","src":"32647:17:34"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"32640:3:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32673:24:34","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"32693:3:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32687:5:34"},"nodeType":"YulFunctionCall","src":"32687:10:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32677:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"32740:9:34","statements":[{"nodeType":"YulLeave","src":"32742:5:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32712:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"32720:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32709:2:34"},"nodeType":"YulFunctionCall","src":"32709:30:34"},"nodeType":"YulIf","src":"32706:43:34"},{"nodeType":"YulVariableDeclaration","src":"32759:38:34","value":{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"32778:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"32783:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32774:3:34"},"nodeType":"YulFunctionCall","src":"32774:14:34"},{"name":"length","nodeType":"YulIdentifier","src":"32790:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32770:3:34"},"nodeType":"YulFunctionCall","src":"32770:27:34"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"32763:3:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"32854:9:34","statements":[{"nodeType":"YulLeave","src":"32856:5:34"}]},"condition":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"32812:3:34"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32821:4:34"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"32831:14:34"},"nodeType":"YulFunctionCall","src":"32831:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"32849:1:34","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32827:3:34"},"nodeType":"YulFunctionCall","src":"32827:24:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32817:3:34"},"nodeType":"YulFunctionCall","src":"32817:35:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32809:2:34"},"nodeType":"YulFunctionCall","src":"32809:44:34"},"nodeType":"YulIf","src":"32806:57:34"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32893:4:34"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32903:6:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32915:4:34","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"32921:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32911:3:34"},"nodeType":"YulFunctionCall","src":"32911:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32899:3:34"},"nodeType":"YulFunctionCall","src":"32899:30:34"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"32873:19:34"},"nodeType":"YulFunctionCall","src":"32873:57:34"},"nodeType":"YulExpressionStatement","src":"32873:57:34"},{"nodeType":"YulAssignment","src":"32939:10:34","value":{"name":"msg","nodeType":"YulIdentifier","src":"32946:3:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32939:3:34"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32283:3:34","type":""}],"src":"32244:711:34"},{"body":{"nodeType":"YulBlock","src":"33163:442:34","statements":[{"nodeType":"YulAssignment","src":"33173:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33185:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33196:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33181:3:34"},"nodeType":"YulFunctionCall","src":"33181:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33173:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33254:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33267:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33278:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33263:3:34"},"nodeType":"YulFunctionCall","src":"33263:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33210:43:34"},"nodeType":"YulFunctionCall","src":"33210:71:34"},"nodeType":"YulExpressionStatement","src":"33210:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33335:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33348:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33359:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33344:3:34"},"nodeType":"YulFunctionCall","src":"33344:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33291:43:34"},"nodeType":"YulFunctionCall","src":"33291:72:34"},"nodeType":"YulExpressionStatement","src":"33291:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33417:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33430:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33441:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33426:3:34"},"nodeType":"YulFunctionCall","src":"33426:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33373:43:34"},"nodeType":"YulFunctionCall","src":"33373:72:34"},"nodeType":"YulExpressionStatement","src":"33373:72:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33466:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33477:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33462:3:34"},"nodeType":"YulFunctionCall","src":"33462:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33486:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"33492:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33482:3:34"},"nodeType":"YulFunctionCall","src":"33482:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33455:6:34"},"nodeType":"YulFunctionCall","src":"33455:48:34"},"nodeType":"YulExpressionStatement","src":"33455:48:34"},{"nodeType":"YulAssignment","src":"33512:86:34","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33584:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"33593:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33520:63:34"},"nodeType":"YulFunctionCall","src":"33520:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33512:4:34"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33111:9:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33123:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33131:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33139:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33147:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33158:4:34","type":""}],"src":"32961:644:34"},{"body":{"nodeType":"YulBlock","src":"33793:371:34","statements":[{"nodeType":"YulAssignment","src":"33803:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33815:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33826:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33811:3:34"},"nodeType":"YulFunctionCall","src":"33811:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33803:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33884:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33897:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33908:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33893:3:34"},"nodeType":"YulFunctionCall","src":"33893:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33840:43:34"},"nodeType":"YulFunctionCall","src":"33840:71:34"},"nodeType":"YulExpressionStatement","src":"33840:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33965:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33978:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"33989:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33974:3:34"},"nodeType":"YulFunctionCall","src":"33974:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33921:43:34"},"nodeType":"YulFunctionCall","src":"33921:72:34"},"nodeType":"YulExpressionStatement","src":"33921:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34047:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34060:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"34071:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34056:3:34"},"nodeType":"YulFunctionCall","src":"34056:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34003:43:34"},"nodeType":"YulFunctionCall","src":"34003:72:34"},"nodeType":"YulExpressionStatement","src":"34003:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34129:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34142:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"34153:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34138:3:34"},"nodeType":"YulFunctionCall","src":"34138:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34085:43:34"},"nodeType":"YulFunctionCall","src":"34085:72:34"},"nodeType":"YulExpressionStatement","src":"34085:72:34"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33741:9:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33753:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33761:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33769:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33777:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33788:4:34","type":""}],"src":"33611:553:34"},{"body":{"nodeType":"YulBlock","src":"34218:362:34","statements":[{"nodeType":"YulAssignment","src":"34228:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34251:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34233:17:34"},"nodeType":"YulFunctionCall","src":"34233:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34228:1:34"}]},{"nodeType":"YulAssignment","src":"34262:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34285:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34267:17:34"},"nodeType":"YulFunctionCall","src":"34267:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34262:1:34"}]},{"nodeType":"YulVariableDeclaration","src":"34296:28:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34319:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"34322:1:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34315:3:34"},"nodeType":"YulFunctionCall","src":"34315:9:34"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"34300:11:34","type":""}]},{"nodeType":"YulAssignment","src":"34333:41:34","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"34362:11:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34344:17:34"},"nodeType":"YulFunctionCall","src":"34344:30:34"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"34333:7:34"}]},{"body":{"nodeType":"YulBlock","src":"34551:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34553:16:34"},"nodeType":"YulFunctionCall","src":"34553:18:34"},"nodeType":"YulExpressionStatement","src":"34553:18:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34484:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34477:6:34"},"nodeType":"YulFunctionCall","src":"34477:9:34"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34507:1:34"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"34514:7:34"},{"name":"x","nodeType":"YulIdentifier","src":"34523:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34510:3:34"},"nodeType":"YulFunctionCall","src":"34510:15:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34504:2:34"},"nodeType":"YulFunctionCall","src":"34504:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34457:2:34"},"nodeType":"YulFunctionCall","src":"34457:83:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34437:6:34"},"nodeType":"YulFunctionCall","src":"34437:113:34"},"nodeType":"YulIf","src":"34434:139:34"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34201:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"34204:1:34","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"34210:7:34","type":""}],"src":"34170:410:34"},{"body":{"nodeType":"YulBlock","src":"34614:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34631:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34634:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34624:6:34"},"nodeType":"YulFunctionCall","src":"34624:88:34"},"nodeType":"YulExpressionStatement","src":"34624:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34728:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"34731:4:34","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34721:6:34"},"nodeType":"YulFunctionCall","src":"34721:15:34"},"nodeType":"YulExpressionStatement","src":"34721:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34752:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34755:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34745:6:34"},"nodeType":"YulFunctionCall","src":"34745:15:34"},"nodeType":"YulExpressionStatement","src":"34745:15:34"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"34586:180:34"},{"body":{"nodeType":"YulBlock","src":"34814:143:34","statements":[{"nodeType":"YulAssignment","src":"34824:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34847:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34829:17:34"},"nodeType":"YulFunctionCall","src":"34829:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34824:1:34"}]},{"nodeType":"YulAssignment","src":"34858:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34881:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34863:17:34"},"nodeType":"YulFunctionCall","src":"34863:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34858:1:34"}]},{"body":{"nodeType":"YulBlock","src":"34905:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"34907:16:34"},"nodeType":"YulFunctionCall","src":"34907:18:34"},"nodeType":"YulExpressionStatement","src":"34907:18:34"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34902:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34895:6:34"},"nodeType":"YulFunctionCall","src":"34895:9:34"},"nodeType":"YulIf","src":"34892:35:34"},{"nodeType":"YulAssignment","src":"34937:14:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34946:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"34949:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34942:3:34"},"nodeType":"YulFunctionCall","src":"34942:9:34"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"34937:1:34"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34803:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"34806:1:34","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"34812:1:34","type":""}],"src":"34772:185:34"},{"body":{"nodeType":"YulBlock","src":"35069:50:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35091:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"35099:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35087:3:34"},"nodeType":"YulFunctionCall","src":"35087:14:34"},{"hexValue":"726f75746572","kind":"string","nodeType":"YulLiteral","src":"35103:8:34","type":"","value":"router"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35080:6:34"},"nodeType":"YulFunctionCall","src":"35080:32:34"},"nodeType":"YulExpressionStatement","src":"35080:32:34"}]},"name":"store_literal_in_memory_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35061:6:34","type":""}],"src":"34963:156:34"},{"body":{"nodeType":"YulBlock","src":"35289:236:34","statements":[{"nodeType":"YulAssignment","src":"35299:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35383:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"35388:1:34","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35306:76:34"},"nodeType":"YulFunctionCall","src":"35306:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35299:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35488:3:34"}],"functionName":{"name":"store_literal_in_memory_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185","nodeType":"YulIdentifier","src":"35399:88:34"},"nodeType":"YulFunctionCall","src":"35399:93:34"},"nodeType":"YulExpressionStatement","src":"35399:93:34"},{"nodeType":"YulAssignment","src":"35501:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35512:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"35517:1:34","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35508:3:34"},"nodeType":"YulFunctionCall","src":"35508:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35501:3:34"}]}]},"name":"abi_encode_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35277:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35285:3:34","type":""}],"src":"35125:400:34"},{"body":{"nodeType":"YulBlock","src":"35720:192:34","statements":[{"nodeType":"YulAssignment","src":"35731:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35882:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35738:142:34"},"nodeType":"YulFunctionCall","src":"35738:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35731:3:34"}]},{"nodeType":"YulAssignment","src":"35896:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"35903:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35896:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35707:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35716:3:34","type":""}],"src":"35531:381:34"},{"body":{"nodeType":"YulBlock","src":"35962:105:34","statements":[{"nodeType":"YulAssignment","src":"35972:89:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35987:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"35994:66:34","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35983:3:34"},"nodeType":"YulFunctionCall","src":"35983:78:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35972:7:34"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35944:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35954:7:34","type":""}],"src":"35918:149:34"},{"body":{"nodeType":"YulBlock","src":"36119:32:34","statements":[{"nodeType":"YulAssignment","src":"36129:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"36140:5:34"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"36129:7:34"}]}]},"name":"leftAlign_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36101:5:34","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"36111:7:34","type":""}],"src":"36073:78:34"},{"body":{"nodeType":"YulBlock","src":"36238:72:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36255:3:34"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36296:5:34"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"36279:16:34"},"nodeType":"YulFunctionCall","src":"36279:23:34"}],"functionName":{"name":"leftAlign_t_bytes1","nodeType":"YulIdentifier","src":"36260:18:34"},"nodeType":"YulFunctionCall","src":"36260:43:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36248:6:34"},"nodeType":"YulFunctionCall","src":"36248:56:34"},"nodeType":"YulExpressionStatement","src":"36248:56:34"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36226:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36233:3:34","type":""}],"src":"36157:153:34"},{"body":{"nodeType":"YulBlock","src":"36430:137:34","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36501:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"36510:3:34"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36441:59:34"},"nodeType":"YulFunctionCall","src":"36441:73:34"},"nodeType":"YulExpressionStatement","src":"36441:73:34"},{"nodeType":"YulAssignment","src":"36523:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36534:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"36539:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36530:3:34"},"nodeType":"YulFunctionCall","src":"36530:11:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36523:3:34"}]},{"nodeType":"YulAssignment","src":"36551:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"36558:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36551:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes1__to_t_bytes1__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36409:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36415:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36426:3:34","type":""}],"src":"36316:251:34"},{"body":{"nodeType":"YulBlock","src":"36805:527:34","statements":[{"nodeType":"YulAssignment","src":"36815:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36827:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"36838:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36823:3:34"},"nodeType":"YulFunctionCall","src":"36823:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36815:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36896:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36909:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"36920:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36905:3:34"},"nodeType":"YulFunctionCall","src":"36905:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36852:43:34"},"nodeType":"YulFunctionCall","src":"36852:71:34"},"nodeType":"YulExpressionStatement","src":"36852:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36977:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36990:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"37001:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36986:3:34"},"nodeType":"YulFunctionCall","src":"36986:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36933:43:34"},"nodeType":"YulFunctionCall","src":"36933:72:34"},"nodeType":"YulExpressionStatement","src":"36933:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37059:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37072:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"37083:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37068:3:34"},"nodeType":"YulFunctionCall","src":"37068:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37015:43:34"},"nodeType":"YulFunctionCall","src":"37015:72:34"},"nodeType":"YulExpressionStatement","src":"37015:72:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37108:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"37119:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37104:3:34"},"nodeType":"YulFunctionCall","src":"37104:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37128:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"37134:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37124:3:34"},"nodeType":"YulFunctionCall","src":"37124:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37097:6:34"},"nodeType":"YulFunctionCall","src":"37097:48:34"},"nodeType":"YulExpressionStatement","src":"37097:48:34"},{"nodeType":"YulAssignment","src":"37154:94:34","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37226:6:34"},{"name":"value4","nodeType":"YulIdentifier","src":"37234:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"37243:4:34"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37162:63:34"},"nodeType":"YulFunctionCall","src":"37162:86:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37154:4:34"}]},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"37296:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37309:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"37320:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37305:3:34"},"nodeType":"YulFunctionCall","src":"37305:19:34"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"37258:37:34"},"nodeType":"YulFunctionCall","src":"37258:67:34"},"nodeType":"YulExpressionStatement","src":"37258:67:34"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36737:9:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"36749:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36757:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36765:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36773:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36781:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36789:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36800:4:34","type":""}],"src":"36573:759:34"},{"body":{"nodeType":"YulBlock","src":"37396:40:34","statements":[{"nodeType":"YulAssignment","src":"37407:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37423:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37417:5:34"},"nodeType":"YulFunctionCall","src":"37417:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"37407:6:34"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37379:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"37389:6:34","type":""}],"src":"37338:98:34"},{"body":{"nodeType":"YulBlock","src":"37532:283:34","statements":[{"nodeType":"YulVariableDeclaration","src":"37542:52:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37588:5:34"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37556:31:34"},"nodeType":"YulFunctionCall","src":"37556:38:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37546:6:34","type":""}]},{"nodeType":"YulAssignment","src":"37603:77:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37668:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"37673:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37610:57:34"},"nodeType":"YulFunctionCall","src":"37610:70:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37603:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37728:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"37735:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37724:3:34"},"nodeType":"YulFunctionCall","src":"37724:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"37742:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"37747:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"37689:34:34"},"nodeType":"YulFunctionCall","src":"37689:65:34"},"nodeType":"YulExpressionStatement","src":"37689:65:34"},{"nodeType":"YulAssignment","src":"37763:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37774:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37801:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"37779:21:34"},"nodeType":"YulFunctionCall","src":"37779:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37770:3:34"},"nodeType":"YulFunctionCall","src":"37770:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37763:3:34"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37513:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37520:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37528:3:34","type":""}],"src":"37442:373:34"},{"body":{"nodeType":"YulBlock","src":"37904:40:34","statements":[{"nodeType":"YulAssignment","src":"37915:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37931:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37925:5:34"},"nodeType":"YulFunctionCall","src":"37925:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"37915:6:34"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37887:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"37897:6:34","type":""}],"src":"37821:123:34"},{"body":{"nodeType":"YulBlock","src":"38070:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38087:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"38092:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38080:6:34"},"nodeType":"YulFunctionCall","src":"38080:19:34"},"nodeType":"YulExpressionStatement","src":"38080:19:34"},{"nodeType":"YulAssignment","src":"38108:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38127:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"38132:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38123:3:34"},"nodeType":"YulFunctionCall","src":"38123:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38108:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38042:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"38047:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38058:11:34","type":""}],"src":"37950:193:34"},{"body":{"nodeType":"YulBlock","src":"38230:60:34","statements":[{"nodeType":"YulAssignment","src":"38240:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"38248:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"38240:4:34"}]},{"nodeType":"YulAssignment","src":"38261:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"38273:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"38278:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38269:3:34"},"nodeType":"YulFunctionCall","src":"38269:14:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"38261:4:34"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"38217:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"38225:4:34","type":""}],"src":"38149:141:34"},{"body":{"nodeType":"YulBlock","src":"38381:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38398:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"38403:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38391:6:34"},"nodeType":"YulFunctionCall","src":"38391:19:34"},"nodeType":"YulExpressionStatement","src":"38391:19:34"},{"nodeType":"YulAssignment","src":"38419:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38438:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"38443:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38434:3:34"},"nodeType":"YulFunctionCall","src":"38434:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38419:11:34"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38353:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"38358:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38369:11:34","type":""}],"src":"38296:158:34"},{"body":{"nodeType":"YulBlock","src":"38540:273:34","statements":[{"nodeType":"YulVariableDeclaration","src":"38550:52:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38596:5:34"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"38564:31:34"},"nodeType":"YulFunctionCall","src":"38564:38:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"38554:6:34","type":""}]},{"nodeType":"YulAssignment","src":"38611:67:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38666:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"38671:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"38618:47:34"},"nodeType":"YulFunctionCall","src":"38618:60:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38611:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38726:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"38733:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38722:3:34"},"nodeType":"YulFunctionCall","src":"38722:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"38740:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"38745:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38687:34:34"},"nodeType":"YulFunctionCall","src":"38687:65:34"},"nodeType":"YulExpressionStatement","src":"38687:65:34"},{"nodeType":"YulAssignment","src":"38761:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38772:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38799:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38777:21:34"},"nodeType":"YulFunctionCall","src":"38777:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38768:3:34"},"nodeType":"YulFunctionCall","src":"38768:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38761:3:34"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38521:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38528:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38536:3:34","type":""}],"src":"38460:353:34"},{"body":{"nodeType":"YulBlock","src":"38917:94:34","statements":[{"nodeType":"YulAssignment","src":"38927:78:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38993:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"39001:3:34"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"38941:51:34"},"nodeType":"YulFunctionCall","src":"38941:64:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"38927:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"38890:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38898:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"38906:10:34","type":""}],"src":"38819:192:34"},{"body":{"nodeType":"YulBlock","src":"39101:38:34","statements":[{"nodeType":"YulAssignment","src":"39111:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"39123:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"39128:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39119:3:34"},"nodeType":"YulFunctionCall","src":"39119:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"39111:4:34"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"39088:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"39096:4:34","type":""}],"src":"39017:122:34"},{"body":{"nodeType":"YulBlock","src":"39313:841:34","statements":[{"nodeType":"YulVariableDeclaration","src":"39323:77:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39394:5:34"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39337:56:34"},"nodeType":"YulFunctionCall","src":"39337:63:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"39327:6:34","type":""}]},{"nodeType":"YulAssignment","src":"39409:102:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39499:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"39504:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39416:82:34"},"nodeType":"YulFunctionCall","src":"39416:95:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39409:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"39520:20:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"39537:3:34"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"39524:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39549:39:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39565:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39574:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"39582:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39570:3:34"},"nodeType":"YulFunctionCall","src":"39570:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39561:3:34"},"nodeType":"YulFunctionCall","src":"39561:27:34"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"39553:4:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39597:80:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39671:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39612:58:34"},"nodeType":"YulFunctionCall","src":"39612:65:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"39601:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39686:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"39700:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"39690:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"39776:333:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39797:3:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39806:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"39812:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39802:3:34"},"nodeType":"YulFunctionCall","src":"39802:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39790:6:34"},"nodeType":"YulFunctionCall","src":"39790:33:34"},"nodeType":"YulExpressionStatement","src":"39790:33:34"},{"nodeType":"YulVariableDeclaration","src":"39836:34:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"39863:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39857:5:34"},"nodeType":"YulFunctionCall","src":"39857:13:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"39840:13:34","type":""}]},{"nodeType":"YulAssignment","src":"39883:90:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"39953:13:34"},{"name":"tail","nodeType":"YulIdentifier","src":"39968:4:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"39891:61:34"},"nodeType":"YulFunctionCall","src":"39891:82:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39883:4:34"}]},{"nodeType":"YulAssignment","src":"39986:79:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"40058:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39996:61:34"},"nodeType":"YulFunctionCall","src":"39996:69:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"39986:6:34"}]},{"nodeType":"YulAssignment","src":"40078:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40089:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"40094:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40085:3:34"},"nodeType":"YulFunctionCall","src":"40085:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40078:3:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39738:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"39741:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39735:2:34"},"nodeType":"YulFunctionCall","src":"39735:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39749:18:34","statements":[{"nodeType":"YulAssignment","src":"39751:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"39760:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"39763:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39756:3:34"},"nodeType":"YulFunctionCall","src":"39756:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"39751:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"39720:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"39722:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"39731:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"39726:1:34","type":""}]}]},"src":"39716:393:34"},{"nodeType":"YulAssignment","src":"40118:11:34","value":{"name":"tail","nodeType":"YulIdentifier","src":"40125:4:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40118:3:34"}]},{"nodeType":"YulAssignment","src":"40138:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"40145:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40138:3:34"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39292:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39299:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39308:3:34","type":""}],"src":"39171:983:34"},{"body":{"nodeType":"YulBlock","src":"40400:476:34","statements":[{"nodeType":"YulAssignment","src":"40410:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40422:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"40433:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40418:3:34"},"nodeType":"YulFunctionCall","src":"40418:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40410:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40457:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"40468:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40453:3:34"},"nodeType":"YulFunctionCall","src":"40453:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40476:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"40482:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40472:3:34"},"nodeType":"YulFunctionCall","src":"40472:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40446:6:34"},"nodeType":"YulFunctionCall","src":"40446:47:34"},"nodeType":"YulExpressionStatement","src":"40446:47:34"},{"nodeType":"YulAssignment","src":"40502:84:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40572:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"40581:4:34"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40510:61:34"},"nodeType":"YulFunctionCall","src":"40510:76:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40502:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40607:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"40618:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40603:3:34"},"nodeType":"YulFunctionCall","src":"40603:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40627:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"40633:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40623:3:34"},"nodeType":"YulFunctionCall","src":"40623:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40596:6:34"},"nodeType":"YulFunctionCall","src":"40596:48:34"},"nodeType":"YulExpressionStatement","src":"40596:48:34"},{"nodeType":"YulAssignment","src":"40653:134:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40773:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"40782:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40661:111:34"},"nodeType":"YulFunctionCall","src":"40661:126:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40653:4:34"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40841:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40854:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"40865:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40850:3:34"},"nodeType":"YulFunctionCall","src":"40850:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40797:43:34"},"nodeType":"YulFunctionCall","src":"40797:72:34"},"nodeType":"YulExpressionStatement","src":"40797:72:34"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40356:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40368:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40376:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40384:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40395:4:34","type":""}],"src":"40160:716:34"},{"body":{"nodeType":"YulBlock","src":"41028:277:34","statements":[{"nodeType":"YulAssignment","src":"41038:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41050:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"41061:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41046:3:34"},"nodeType":"YulFunctionCall","src":"41046:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41038:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41118:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41131:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"41142:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41127:3:34"},"nodeType":"YulFunctionCall","src":"41127:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41074:43:34"},"nodeType":"YulFunctionCall","src":"41074:71:34"},"nodeType":"YulExpressionStatement","src":"41074:71:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41166:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"41177:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41162:3:34"},"nodeType":"YulFunctionCall","src":"41162:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41186:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"41192:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41182:3:34"},"nodeType":"YulFunctionCall","src":"41182:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41155:6:34"},"nodeType":"YulFunctionCall","src":"41155:48:34"},"nodeType":"YulExpressionStatement","src":"41155:48:34"},{"nodeType":"YulAssignment","src":"41212:86:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41284:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"41293:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41220:63:34"},"nodeType":"YulFunctionCall","src":"41220:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41212:4:34"}]}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40992:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41004:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41012:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41023:4:34","type":""}],"src":"40882:423:34"},{"body":{"nodeType":"YulBlock","src":"41421:280:34","statements":[{"nodeType":"YulVariableDeclaration","src":"41431:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41478:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"41445:32:34"},"nodeType":"YulFunctionCall","src":"41445:39:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41435:6:34","type":""}]},{"nodeType":"YulAssignment","src":"41493:96:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41577:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"41582:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41500:76:34"},"nodeType":"YulFunctionCall","src":"41500:89:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41493:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41637:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"41644:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41633:3:34"},"nodeType":"YulFunctionCall","src":"41633:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"41651:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"41656:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41598:34:34"},"nodeType":"YulFunctionCall","src":"41598:65:34"},"nodeType":"YulExpressionStatement","src":"41598:65:34"},{"nodeType":"YulAssignment","src":"41672:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41683:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"41688:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41679:3:34"},"nodeType":"YulFunctionCall","src":"41679:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41672:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41402:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"41409:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41417:3:34","type":""}],"src":"41311:390:34"},{"body":{"nodeType":"YulBlock","src":"41843:139:34","statements":[{"nodeType":"YulAssignment","src":"41854:102:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41943:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"41952:3:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41861:81:34"},"nodeType":"YulFunctionCall","src":"41861:95:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41854:3:34"}]},{"nodeType":"YulAssignment","src":"41966:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"41973:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41966:3:34"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41822:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41828:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41839:3:34","type":""}],"src":"41707:275:34"},{"body":{"nodeType":"YulBlock","src":"42094:128:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42116:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"42124:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42112:3:34"},"nodeType":"YulFunctionCall","src":"42112:14:34"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"42128:34:34","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42105:6:34"},"nodeType":"YulFunctionCall","src":"42105:58:34"},"nodeType":"YulExpressionStatement","src":"42105:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42184:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"42192:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42180:3:34"},"nodeType":"YulFunctionCall","src":"42180:15:34"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"42197:17:34","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42173:6:34"},"nodeType":"YulFunctionCall","src":"42173:42:34"},"nodeType":"YulExpressionStatement","src":"42173:42:34"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42086:6:34","type":""}],"src":"41988:234:34"},{"body":{"nodeType":"YulBlock","src":"42374:220:34","statements":[{"nodeType":"YulAssignment","src":"42384:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42450:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"42455:2:34","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42391:58:34"},"nodeType":"YulFunctionCall","src":"42391:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42384:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42556:3:34"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"42467:88:34"},"nodeType":"YulFunctionCall","src":"42467:93:34"},"nodeType":"YulExpressionStatement","src":"42467:93:34"},{"nodeType":"YulAssignment","src":"42569:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42580:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"42585:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42576:3:34"},"nodeType":"YulFunctionCall","src":"42576:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42569:3:34"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42362:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42370:3:34","type":""}],"src":"42228:366:34"},{"body":{"nodeType":"YulBlock","src":"42771:248:34","statements":[{"nodeType":"YulAssignment","src":"42781:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42793:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"42804:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42789:3:34"},"nodeType":"YulFunctionCall","src":"42789:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42781:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42828:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"42839:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42824:3:34"},"nodeType":"YulFunctionCall","src":"42824:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42847:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"42853:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42843:3:34"},"nodeType":"YulFunctionCall","src":"42843:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42817:6:34"},"nodeType":"YulFunctionCall","src":"42817:47:34"},"nodeType":"YulExpressionStatement","src":"42817:47:34"},{"nodeType":"YulAssignment","src":"42873:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43007:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42881:124:34"},"nodeType":"YulFunctionCall","src":"42881:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42873:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42751:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42766:4:34","type":""}],"src":"42600:419:34"},{"body":{"nodeType":"YulBlock","src":"43131:127:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43153:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"43161:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43149:3:34"},"nodeType":"YulFunctionCall","src":"43149:14:34"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"43165:34:34","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43142:6:34"},"nodeType":"YulFunctionCall","src":"43142:58:34"},"nodeType":"YulExpressionStatement","src":"43142:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43221:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"43229:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43217:3:34"},"nodeType":"YulFunctionCall","src":"43217:15:34"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"43234:16:34","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43210:6:34"},"nodeType":"YulFunctionCall","src":"43210:41:34"},"nodeType":"YulExpressionStatement","src":"43210:41:34"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43123:6:34","type":""}],"src":"43025:233:34"},{"body":{"nodeType":"YulBlock","src":"43410:220:34","statements":[{"nodeType":"YulAssignment","src":"43420:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43486:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"43491:2:34","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43427:58:34"},"nodeType":"YulFunctionCall","src":"43427:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43420:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43592:3:34"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"43503:88:34"},"nodeType":"YulFunctionCall","src":"43503:93:34"},"nodeType":"YulExpressionStatement","src":"43503:93:34"},{"nodeType":"YulAssignment","src":"43605:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43616:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"43621:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43612:3:34"},"nodeType":"YulFunctionCall","src":"43612:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43605:3:34"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43398:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43406:3:34","type":""}],"src":"43264:366:34"},{"body":{"nodeType":"YulBlock","src":"43807:248:34","statements":[{"nodeType":"YulAssignment","src":"43817:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43829:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"43840:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43825:3:34"},"nodeType":"YulFunctionCall","src":"43825:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43817:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43864:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"43875:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43860:3:34"},"nodeType":"YulFunctionCall","src":"43860:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43883:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"43889:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43879:3:34"},"nodeType":"YulFunctionCall","src":"43879:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43853:6:34"},"nodeType":"YulFunctionCall","src":"43853:47:34"},"nodeType":"YulExpressionStatement","src":"43853:47:34"},{"nodeType":"YulAssignment","src":"43909:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44043:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43917:124:34"},"nodeType":"YulFunctionCall","src":"43917:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43909:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43787:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43802:4:34","type":""}],"src":"43636:419:34"},{"body":{"nodeType":"YulBlock","src":"44152:634:34","statements":[{"nodeType":"YulVariableDeclaration","src":"44162:51:34","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"44201:11:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"44188:12:34"},"nodeType":"YulFunctionCall","src":"44188:25:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"44166:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"44307:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"44309:77:34"},"nodeType":"YulFunctionCall","src":"44309:79:34"},"nodeType":"YulExpressionStatement","src":"44309:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"44236:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"44264:12:34"},"nodeType":"YulFunctionCall","src":"44264:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"44280:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44260:3:34"},"nodeType":"YulFunctionCall","src":"44260:29:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44295:4:34","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"44301:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44291:3:34"},"nodeType":"YulFunctionCall","src":"44291:12:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44256:3:34"},"nodeType":"YulFunctionCall","src":"44256:48:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44232:3:34"},"nodeType":"YulFunctionCall","src":"44232:73:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44225:6:34"},"nodeType":"YulFunctionCall","src":"44225:81:34"},"nodeType":"YulIf","src":"44222:168:34"},{"nodeType":"YulAssignment","src":"44399:41:34","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"44411:8:34"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"44421:18:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44407:3:34"},"nodeType":"YulFunctionCall","src":"44407:33:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"44399:4:34"}]},{"nodeType":"YulAssignment","src":"44450:28:34","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44473:4:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"44460:12:34"},"nodeType":"YulFunctionCall","src":"44460:18:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"44450:6:34"}]},{"body":{"nodeType":"YulBlock","src":"44521:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"44523:77:34"},"nodeType":"YulFunctionCall","src":"44523:79:34"},"nodeType":"YulExpressionStatement","src":"44523:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44493:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"44501:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44490:2:34"},"nodeType":"YulFunctionCall","src":"44490:30:34"},"nodeType":"YulIf","src":"44487:117:34"},{"nodeType":"YulAssignment","src":"44613:21:34","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44625:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"44631:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44621:3:34"},"nodeType":"YulFunctionCall","src":"44621:13:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"44613:4:34"}]},{"body":{"nodeType":"YulBlock","src":"44696:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"44698:77:34"},"nodeType":"YulFunctionCall","src":"44698:79:34"},"nodeType":"YulExpressionStatement","src":"44698:79:34"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"44650:4:34"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"44660:12:34"},"nodeType":"YulFunctionCall","src":"44660:14:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44680:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"44688:4:34","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44676:3:34"},"nodeType":"YulFunctionCall","src":"44676:17:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44656:3:34"},"nodeType":"YulFunctionCall","src":"44656:38:34"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"44646:3:34"},"nodeType":"YulFunctionCall","src":"44646:49:34"},"nodeType":"YulIf","src":"44643:136:34"}]},"name":"access_calldata_tail_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"44113:8:34","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"44123:11:34","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"44139:4:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"44145:6:34","type":""}],"src":"44061:725:34"},{"body":{"nodeType":"YulBlock","src":"44858:31:34","statements":[{"nodeType":"YulAssignment","src":"44869:13:34","value":{"name":"len","nodeType":"YulIdentifier","src":"44879:3:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"44869:6:34"}]}]},"name":"array_length_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44836:5:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"44843:3:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"44851:6:34","type":""}],"src":"44792:97:34"},{"body":{"nodeType":"YulBlock","src":"44949:87:34","statements":[{"nodeType":"YulAssignment","src":"44959:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"44967:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"44959:4:34"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44987:1:34","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"44990:3:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44980:6:34"},"nodeType":"YulFunctionCall","src":"44980:14:34"},"nodeType":"YulExpressionStatement","src":"44980:14:34"},{"nodeType":"YulAssignment","src":"45003:26:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45021:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45024:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"45011:9:34"},"nodeType":"YulFunctionCall","src":"45011:18:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"45003:4:34"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"44936:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"44944:4:34","type":""}],"src":"44895:141:34"},{"body":{"nodeType":"YulBlock","src":"45086:49:34","statements":[{"nodeType":"YulAssignment","src":"45096:33:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45114:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"45121:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45110:3:34"},"nodeType":"YulFunctionCall","src":"45110:14:34"},{"kind":"number","nodeType":"YulLiteral","src":"45126:2:34","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"45106:3:34"},"nodeType":"YulFunctionCall","src":"45106:23:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"45096:6:34"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45069:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"45079:6:34","type":""}],"src":"45042:93:34"},{"body":{"nodeType":"YulBlock","src":"45194:54:34","statements":[{"nodeType":"YulAssignment","src":"45204:37:34","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"45229:4:34"},{"name":"value","nodeType":"YulIdentifier","src":"45235:5:34"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45225:3:34"},"nodeType":"YulFunctionCall","src":"45225:16:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"45204:8:34"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"45169:4:34","type":""},{"name":"value","nodeType":"YulTypedName","src":"45175:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"45185:8:34","type":""}],"src":"45141:107:34"},{"body":{"nodeType":"YulBlock","src":"45330:317:34","statements":[{"nodeType":"YulVariableDeclaration","src":"45340:35:34","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"45361:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"45373:1:34","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"45357:3:34"},"nodeType":"YulFunctionCall","src":"45357:18:34"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"45344:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"45384:109:34","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"45415:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"45426:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"45396:18:34"},"nodeType":"YulFunctionCall","src":"45396:97:34"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"45388:4:34","type":""}]},{"nodeType":"YulAssignment","src":"45502:51:34","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"45533:9:34"},{"name":"toInsert","nodeType":"YulIdentifier","src":"45544:8:34"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"45514:18:34"},"nodeType":"YulFunctionCall","src":"45514:39:34"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"45502:8:34"}]},{"nodeType":"YulAssignment","src":"45562:30:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45575:5:34"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"45586:4:34"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"45582:3:34"},"nodeType":"YulFunctionCall","src":"45582:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45571:3:34"},"nodeType":"YulFunctionCall","src":"45571:21:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45562:5:34"}]},{"nodeType":"YulAssignment","src":"45601:40:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45614:5:34"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"45625:8:34"},{"name":"mask","nodeType":"YulIdentifier","src":"45635:4:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45621:3:34"},"nodeType":"YulFunctionCall","src":"45621:19:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"45611:2:34"},"nodeType":"YulFunctionCall","src":"45611:30:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"45601:6:34"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45291:5:34","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"45298:10:34","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"45310:8:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"45323:6:34","type":""}],"src":"45254:393:34"},{"body":{"nodeType":"YulBlock","src":"45685:28:34","statements":[{"nodeType":"YulAssignment","src":"45695:12:34","value":{"name":"value","nodeType":"YulIdentifier","src":"45702:5:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"45695:3:34"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45671:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"45681:3:34","type":""}],"src":"45653:60:34"},{"body":{"nodeType":"YulBlock","src":"45779:82:34","statements":[{"nodeType":"YulAssignment","src":"45789:66:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45847:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45829:17:34"},"nodeType":"YulFunctionCall","src":"45829:24:34"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"45820:8:34"},"nodeType":"YulFunctionCall","src":"45820:34:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45802:17:34"},"nodeType":"YulFunctionCall","src":"45802:53:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"45789:9:34"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45759:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"45769:9:34","type":""}],"src":"45719:142:34"},{"body":{"nodeType":"YulBlock","src":"45914:28:34","statements":[{"nodeType":"YulAssignment","src":"45924:12:34","value":{"name":"value","nodeType":"YulIdentifier","src":"45931:5:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"45924:3:34"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45900:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"45910:3:34","type":""}],"src":"45867:75:34"},{"body":{"nodeType":"YulBlock","src":"46024:193:34","statements":[{"nodeType":"YulVariableDeclaration","src":"46034:63:34","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"46089:7:34"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"46058:30:34"},"nodeType":"YulFunctionCall","src":"46058:39:34"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"46038:16:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46113:4:34"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46153:4:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"46147:5:34"},"nodeType":"YulFunctionCall","src":"46147:11:34"},{"name":"offset","nodeType":"YulIdentifier","src":"46160:6:34"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"46192:16:34"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"46168:23:34"},"nodeType":"YulFunctionCall","src":"46168:41:34"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"46119:27:34"},"nodeType":"YulFunctionCall","src":"46119:91:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"46106:6:34"},"nodeType":"YulFunctionCall","src":"46106:105:34"},"nodeType":"YulExpressionStatement","src":"46106:105:34"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"46001:4:34","type":""},{"name":"offset","nodeType":"YulTypedName","src":"46007:6:34","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"46015:7:34","type":""}],"src":"45948:269:34"},{"body":{"nodeType":"YulBlock","src":"46272:24:34","statements":[{"nodeType":"YulAssignment","src":"46282:8:34","value":{"kind":"number","nodeType":"YulLiteral","src":"46289:1:34","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"46282:3:34"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"46268:3:34","type":""}],"src":"46223:73:34"},{"body":{"nodeType":"YulBlock","src":"46355:136:34","statements":[{"nodeType":"YulVariableDeclaration","src":"46365:46:34","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"46379:30:34"},"nodeType":"YulFunctionCall","src":"46379:32:34"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"46369:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"46464:4:34"},{"name":"offset","nodeType":"YulIdentifier","src":"46470:6:34"},{"name":"zero_0","nodeType":"YulIdentifier","src":"46478:6:34"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"46420:43:34"},"nodeType":"YulFunctionCall","src":"46420:65:34"},"nodeType":"YulExpressionStatement","src":"46420:65:34"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"46341:4:34","type":""},{"name":"offset","nodeType":"YulTypedName","src":"46347:6:34","type":""}],"src":"46302:189:34"},{"body":{"nodeType":"YulBlock","src":"46547:136:34","statements":[{"body":{"nodeType":"YulBlock","src":"46614:63:34","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46658:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"46665:1:34","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"46628:29:34"},"nodeType":"YulFunctionCall","src":"46628:39:34"},"nodeType":"YulExpressionStatement","src":"46628:39:34"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46567:5:34"},{"name":"end","nodeType":"YulIdentifier","src":"46574:3:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"46564:2:34"},"nodeType":"YulFunctionCall","src":"46564:14:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"46579:26:34","statements":[{"nodeType":"YulAssignment","src":"46581:22:34","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"46594:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"46601:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46590:3:34"},"nodeType":"YulFunctionCall","src":"46590:13:34"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"46581:5:34"}]}]},"pre":{"nodeType":"YulBlock","src":"46561:2:34","statements":[]},"src":"46557:120:34"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"46535:5:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"46542:3:34","type":""}],"src":"46497:186:34"},{"body":{"nodeType":"YulBlock","src":"46768:464:34","statements":[{"body":{"nodeType":"YulBlock","src":"46794:431:34","statements":[{"nodeType":"YulVariableDeclaration","src":"46808:54:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"46856:5:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"46824:31:34"},"nodeType":"YulFunctionCall","src":"46824:38:34"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"46812:8:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"46875:63:34","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"46898:8:34"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"46926:10:34"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"46908:17:34"},"nodeType":"YulFunctionCall","src":"46908:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46894:3:34"},"nodeType":"YulFunctionCall","src":"46894:44:34"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"46879:11:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"47095:27:34","statements":[{"nodeType":"YulAssignment","src":"47097:23:34","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"47112:8:34"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"47097:11:34"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"47079:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"47091:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47076:2:34"},"nodeType":"YulFunctionCall","src":"47076:18:34"},"nodeType":"YulIf","src":"47073:49:34"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"47164:11:34"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47181:8:34"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"47209:3:34"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"47191:17:34"},"nodeType":"YulFunctionCall","src":"47191:22:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47177:3:34"},"nodeType":"YulFunctionCall","src":"47177:37:34"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"47135:28:34"},"nodeType":"YulFunctionCall","src":"47135:80:34"},"nodeType":"YulExpressionStatement","src":"47135:80:34"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"46785:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"46790:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46782:2:34"},"nodeType":"YulFunctionCall","src":"46782:11:34"},"nodeType":"YulIf","src":"46779:446:34"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"46744:5:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"46751:3:34","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"46756:10:34","type":""}],"src":"46689:543:34"},{"body":{"nodeType":"YulBlock","src":"47301:54:34","statements":[{"nodeType":"YulAssignment","src":"47311:37:34","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"47336:4:34"},{"name":"value","nodeType":"YulIdentifier","src":"47342:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"47332:3:34"},"nodeType":"YulFunctionCall","src":"47332:16:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"47311:8:34"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"47276:4:34","type":""},{"name":"value","nodeType":"YulTypedName","src":"47282:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"47292:8:34","type":""}],"src":"47238:117:34"},{"body":{"nodeType":"YulBlock","src":"47412:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"47422:68:34","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47471:1:34","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"47474:5:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47467:3:34"},"nodeType":"YulFunctionCall","src":"47467:13:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47486:1:34","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"47482:3:34"},"nodeType":"YulFunctionCall","src":"47482:6:34"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"47438:28:34"},"nodeType":"YulFunctionCall","src":"47438:51:34"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"47434:3:34"},"nodeType":"YulFunctionCall","src":"47434:56:34"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"47426:4:34","type":""}]},{"nodeType":"YulAssignment","src":"47499:25:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47513:4:34"},{"name":"mask","nodeType":"YulIdentifier","src":"47519:4:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47509:3:34"},"nodeType":"YulFunctionCall","src":"47509:15:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"47499:6:34"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"47389:4:34","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"47395:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"47405:6:34","type":""}],"src":"47361:169:34"},{"body":{"nodeType":"YulBlock","src":"47616:214:34","statements":[{"nodeType":"YulAssignment","src":"47749:37:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47776:4:34"},{"name":"len","nodeType":"YulIdentifier","src":"47782:3:34"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"47757:18:34"},"nodeType":"YulFunctionCall","src":"47757:29:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"47749:4:34"}]},{"nodeType":"YulAssignment","src":"47795:29:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"47806:4:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47816:1:34","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"47819:3:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47812:3:34"},"nodeType":"YulFunctionCall","src":"47812:11:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"47803:2:34"},"nodeType":"YulFunctionCall","src":"47803:21:34"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"47795:4:34"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"47597:4:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"47603:3:34","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"47611:4:34","type":""}],"src":"47535:295:34"},{"body":{"nodeType":"YulBlock","src":"47934:1304:34","statements":[{"nodeType":"YulVariableDeclaration","src":"47945:58:34","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"47994:3:34"},{"name":"len","nodeType":"YulIdentifier","src":"47999:3:34"}],"functionName":{"name":"array_length_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"47959:34:34"},"nodeType":"YulFunctionCall","src":"47959:44:34"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"47949:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"48088:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"48090:16:34"},"nodeType":"YulFunctionCall","src":"48090:18:34"},"nodeType":"YulExpressionStatement","src":"48090:18:34"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48060:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"48068:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48057:2:34"},"nodeType":"YulFunctionCall","src":"48057:30:34"},"nodeType":"YulIf","src":"48054:56:34"},{"nodeType":"YulVariableDeclaration","src":"48120:52:34","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48166:4:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"48160:5:34"},"nodeType":"YulFunctionCall","src":"48160:11:34"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"48134:25:34"},"nodeType":"YulFunctionCall","src":"48134:38:34"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"48124:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48265:4:34"},{"name":"oldLen","nodeType":"YulIdentifier","src":"48271:6:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"48279:6:34"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"48219:45:34"},"nodeType":"YulFunctionCall","src":"48219:67:34"},"nodeType":"YulExpressionStatement","src":"48219:67:34"},{"nodeType":"YulVariableDeclaration","src":"48296:18:34","value":{"kind":"number","nodeType":"YulLiteral","src":"48313:1:34","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"48300:9:34","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"48361:625:34","statements":[{"nodeType":"YulVariableDeclaration","src":"48375:37:34","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48394:6:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48406:4:34","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"48402:3:34"},"nodeType":"YulFunctionCall","src":"48402:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48390:3:34"},"nodeType":"YulFunctionCall","src":"48390:22:34"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"48379:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48426:51:34","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48472:4:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"48440:31:34"},"nodeType":"YulFunctionCall","src":"48440:37:34"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"48430:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48490:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"48499:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"48494:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"48558:170:34","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48583:6:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48608:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"48613:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48604:3:34"},"nodeType":"YulFunctionCall","src":"48604:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"48591:12:34"},"nodeType":"YulFunctionCall","src":"48591:33:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"48576:6:34"},"nodeType":"YulFunctionCall","src":"48576:49:34"},"nodeType":"YulExpressionStatement","src":"48576:49:34"},{"nodeType":"YulAssignment","src":"48642:24:34","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48656:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"48664:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48652:3:34"},"nodeType":"YulFunctionCall","src":"48652:14:34"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48642:6:34"}]},{"nodeType":"YulAssignment","src":"48683:31:34","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"48700:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"48711:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48696:3:34"},"nodeType":"YulFunctionCall","src":"48696:18:34"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"48683:9:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"48524:1:34"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"48527:7:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48521:2:34"},"nodeType":"YulFunctionCall","src":"48521:14:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"48536:21:34","statements":[{"nodeType":"YulAssignment","src":"48538:17:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"48547:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"48550:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48543:3:34"},"nodeType":"YulFunctionCall","src":"48543:12:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"48538:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"48517:3:34","statements":[]},"src":"48513:215:34"},{"body":{"nodeType":"YulBlock","src":"48764:163:34","statements":[{"nodeType":"YulVariableDeclaration","src":"48782:50:34","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48816:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"48821:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48812:3:34"},"nodeType":"YulFunctionCall","src":"48812:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"48799:12:34"},"nodeType":"YulFunctionCall","src":"48799:33:34"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"48786:9:34","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"48856:6:34"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"48883:9:34"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48898:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"48906:4:34","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"48894:3:34"},"nodeType":"YulFunctionCall","src":"48894:17:34"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"48864:18:34"},"nodeType":"YulFunctionCall","src":"48864:48:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"48849:6:34"},"nodeType":"YulFunctionCall","src":"48849:64:34"},"nodeType":"YulExpressionStatement","src":"48849:64:34"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"48747:7:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"48756:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48744:2:34"},"nodeType":"YulFunctionCall","src":"48744:19:34"},"nodeType":"YulIf","src":"48741:186:34"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"48947:4:34"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48961:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"48969:1:34","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"48957:3:34"},"nodeType":"YulFunctionCall","src":"48957:14:34"},{"kind":"number","nodeType":"YulLiteral","src":"48973:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48953:3:34"},"nodeType":"YulFunctionCall","src":"48953:22:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"48940:6:34"},"nodeType":"YulFunctionCall","src":"48940:36:34"},"nodeType":"YulExpressionStatement","src":"48940:36:34"}]},"nodeType":"YulCase","src":"48354:632:34","value":{"kind":"number","nodeType":"YulLiteral","src":"48359:1:34","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"49003:229:34","statements":[{"nodeType":"YulVariableDeclaration","src":"49017:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"49030:1:34","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"49021:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"49054:74:34","statements":[{"nodeType":"YulAssignment","src":"49072:42:34","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"49098:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"49103:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49094:3:34"},"nodeType":"YulFunctionCall","src":"49094:19:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"49081:12:34"},"nodeType":"YulFunctionCall","src":"49081:33:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"49072:5:34"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"49047:6:34"},"nodeType":"YulIf","src":"49044:84:34"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"49148:4:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49207:5:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"49214:6:34"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"49154:52:34"},"nodeType":"YulFunctionCall","src":"49154:67:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"49141:6:34"},"nodeType":"YulFunctionCall","src":"49141:81:34"},"nodeType":"YulExpressionStatement","src":"49141:81:34"}]},"nodeType":"YulCase","src":"48995:237:34","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"48334:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"48342:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48331:2:34"},"nodeType":"YulFunctionCall","src":"48331:14:34"},"nodeType":"YulSwitch","src":"48324:908:34"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"47918:4:34","type":""},{"name":"src","nodeType":"YulTypedName","src":"47924:3:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"47929:3:34","type":""}],"src":"47835:1403:34"},{"body":{"nodeType":"YulBlock","src":"49375:767:34","statements":[{"nodeType":"YulVariableDeclaration","src":"49385:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49408:5:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"49402:5:34"},"nodeType":"YulFunctionCall","src":"49402:12:34"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"49389:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49423:50:34","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"49463:9:34"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"49437:25:34"},"nodeType":"YulFunctionCall","src":"49437:36:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"49427:6:34","type":""}]},{"nodeType":"YulAssignment","src":"49482:96:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49566:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"49571:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"49489:76:34"},"nodeType":"YulFunctionCall","src":"49489:89:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49482:3:34"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"49627:159:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49680:3:34"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"49689:9:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49704:4:34","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"49700:3:34"},"nodeType":"YulFunctionCall","src":"49700:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49685:3:34"},"nodeType":"YulFunctionCall","src":"49685:25:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49673:6:34"},"nodeType":"YulFunctionCall","src":"49673:38:34"},"nodeType":"YulExpressionStatement","src":"49673:38:34"},{"nodeType":"YulAssignment","src":"49724:52:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49735:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"49744:6:34"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"49766:6:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49759:6:34"},"nodeType":"YulFunctionCall","src":"49759:14:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"49752:6:34"},"nodeType":"YulFunctionCall","src":"49752:22:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"49740:3:34"},"nodeType":"YulFunctionCall","src":"49740:35:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49731:3:34"},"nodeType":"YulFunctionCall","src":"49731:45:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"49724:3:34"}]}]},"nodeType":"YulCase","src":"49620:166:34","value":{"kind":"number","nodeType":"YulLiteral","src":"49625:1:34","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"49802:334:34","statements":[{"nodeType":"YulVariableDeclaration","src":"49847:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49894:5:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"49862:31:34"},"nodeType":"YulFunctionCall","src":"49862:38:34"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"49851:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49913:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"49922:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"49917:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"49980:110:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50009:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"50014:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50005:3:34"},"nodeType":"YulFunctionCall","src":"50005:11:34"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"50024:7:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"50018:5:34"},"nodeType":"YulFunctionCall","src":"50018:14:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49998:6:34"},"nodeType":"YulFunctionCall","src":"49998:35:34"},"nodeType":"YulExpressionStatement","src":"49998:35:34"},{"nodeType":"YulAssignment","src":"50050:26:34","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"50065:7:34"},{"kind":"number","nodeType":"YulLiteral","src":"50074:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50061:3:34"},"nodeType":"YulFunctionCall","src":"50061:15:34"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"50050:7:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"49947:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"49950:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"49944:2:34"},"nodeType":"YulFunctionCall","src":"49944:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"49958:21:34","statements":[{"nodeType":"YulAssignment","src":"49960:17:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"49969:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"49972:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49965:3:34"},"nodeType":"YulFunctionCall","src":"49965:12:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"49960:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"49940:3:34","statements":[]},"src":"49936:154:34"},{"nodeType":"YulAssignment","src":"50103:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50114:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"50119:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50110:3:34"},"nodeType":"YulFunctionCall","src":"50110:16:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"50103:3:34"}]}]},"nodeType":"YulCase","src":"49795:341:34","value":{"kind":"number","nodeType":"YulLiteral","src":"49800:1:34","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"49598:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"49609:1:34","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49594:3:34"},"nodeType":"YulFunctionCall","src":"49594:17:34"},"nodeType":"YulSwitch","src":"49587:549:34"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49356:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49363:3:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"49371:3:34","type":""}],"src":"49268:874:34"},{"body":{"nodeType":"YulBlock","src":"50281:136:34","statements":[{"nodeType":"YulAssignment","src":"50292:99:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50378:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"50387:3:34"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50299:78:34"},"nodeType":"YulFunctionCall","src":"50299:92:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50292:3:34"}]},{"nodeType":"YulAssignment","src":"50401:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"50408:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50401:3:34"}]}]},"name":"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50260:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"50266:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50277:3:34","type":""}],"src":"50148:269:34"},{"body":{"nodeType":"YulBlock","src":"50529:50:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50551:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"50559:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50547:3:34"},"nodeType":"YulFunctionCall","src":"50547:14:34"},{"hexValue":"71756f746572","kind":"string","nodeType":"YulLiteral","src":"50563:8:34","type":"","value":"quoter"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50540:6:34"},"nodeType":"YulFunctionCall","src":"50540:32:34"},"nodeType":"YulExpressionStatement","src":"50540:32:34"}]},"name":"store_literal_in_memory_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50521:6:34","type":""}],"src":"50423:156:34"},{"body":{"nodeType":"YulBlock","src":"50749:236:34","statements":[{"nodeType":"YulAssignment","src":"50759:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50843:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"50848:1:34","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"50766:76:34"},"nodeType":"YulFunctionCall","src":"50766:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50759:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50948:3:34"}],"functionName":{"name":"store_literal_in_memory_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1","nodeType":"YulIdentifier","src":"50859:88:34"},"nodeType":"YulFunctionCall","src":"50859:93:34"},"nodeType":"YulExpressionStatement","src":"50859:93:34"},{"nodeType":"YulAssignment","src":"50961:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50972:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"50977:1:34","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50968:3:34"},"nodeType":"YulFunctionCall","src":"50968:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50961:3:34"}]}]},"name":"abi_encode_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50737:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50745:3:34","type":""}],"src":"50585:400:34"},{"body":{"nodeType":"YulBlock","src":"51180:192:34","statements":[{"nodeType":"YulAssignment","src":"51191:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51342:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"51198:142:34"},"nodeType":"YulFunctionCall","src":"51198:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51191:3:34"}]},{"nodeType":"YulAssignment","src":"51356:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"51363:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51356:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51167:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51176:3:34","type":""}],"src":"50991:381:34"},{"body":{"nodeType":"YulBlock","src":"51484:51:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51506:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"51514:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51502:3:34"},"nodeType":"YulFunctionCall","src":"51502:14:34"},{"hexValue":"73776170706572","kind":"string","nodeType":"YulLiteral","src":"51518:9:34","type":"","value":"swapper"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51495:6:34"},"nodeType":"YulFunctionCall","src":"51495:33:34"},"nodeType":"YulExpressionStatement","src":"51495:33:34"}]},"name":"store_literal_in_memory_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51476:6:34","type":""}],"src":"51378:157:34"},{"body":{"nodeType":"YulBlock","src":"51705:236:34","statements":[{"nodeType":"YulAssignment","src":"51715:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51799:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"51804:1:34","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"51722:76:34"},"nodeType":"YulFunctionCall","src":"51722:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51715:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51904:3:34"}],"functionName":{"name":"store_literal_in_memory_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666","nodeType":"YulIdentifier","src":"51815:88:34"},"nodeType":"YulFunctionCall","src":"51815:93:34"},"nodeType":"YulExpressionStatement","src":"51815:93:34"},{"nodeType":"YulAssignment","src":"51917:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51928:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"51933:1:34","type":"","value":"7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51924:3:34"},"nodeType":"YulFunctionCall","src":"51924:11:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51917:3:34"}]}]},"name":"abi_encode_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51693:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51701:3:34","type":""}],"src":"51541:400:34"},{"body":{"nodeType":"YulBlock","src":"52136:192:34","statements":[{"nodeType":"YulAssignment","src":"52147:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52298:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"52154:142:34"},"nodeType":"YulFunctionCall","src":"52154:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52147:3:34"}]},{"nodeType":"YulAssignment","src":"52312:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"52319:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52312:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52123:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52132:3:34","type":""}],"src":"51947:381:34"},{"body":{"nodeType":"YulBlock","src":"52420:32:34","statements":[{"nodeType":"YulAssignment","src":"52431:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"52441:4:34","type":"","value":"0x05"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"52431:6:34"}]}]},"name":"array_length_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52403:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"52413:6:34","type":""}],"src":"52334:118:34"},{"body":{"nodeType":"YulBlock","src":"52542:28:34","statements":[{"nodeType":"YulAssignment","src":"52552:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"52560:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52552:4:34"}]}]},"name":"array_dataslot_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"52529:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"52537:4:34","type":""}],"src":"52458:112:34"},{"body":{"nodeType":"YulBlock","src":"52692:205:34","statements":[{"nodeType":"YulAssignment","src":"52702:68:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52758:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"52763:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"52709:48:34"},"nodeType":"YulFunctionCall","src":"52709:61:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52702:3:34"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"52817:5:34"},{"name":"pos","nodeType":"YulIdentifier","src":"52824:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"52829:6:34"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"52780:36:34"},"nodeType":"YulFunctionCall","src":"52780:56:34"},"nodeType":"YulExpressionStatement","src":"52780:56:34"},{"nodeType":"YulAssignment","src":"52845:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52856:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"52883:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"52861:21:34"},"nodeType":"YulFunctionCall","src":"52861:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52852:3:34"},"nodeType":"YulFunctionCall","src":"52852:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52845:3:34"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"52665:5:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"52672:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"52680:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52688:3:34","type":""}],"src":"52600:297:34"},{"body":{"nodeType":"YulBlock","src":"53013:106:34","statements":[{"nodeType":"YulAssignment","src":"53023:90:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53093:6:34"},{"name":"value1","nodeType":"YulIdentifier","src":"53101:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"53109:3:34"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"53037:55:34"},"nodeType":"YulFunctionCall","src":"53037:76:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"53023:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_string_calldata_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"52978:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52986:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"52994:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"53002:10:34","type":""}],"src":"52903:216:34"},{"body":{"nodeType":"YulBlock","src":"53214:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53231:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"53234:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"53224:6:34"},"nodeType":"YulFunctionCall","src":"53224:12:34"},"nodeType":"YulExpressionStatement","src":"53224:12:34"}]},"name":"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2","nodeType":"YulFunctionDefinition","src":"53125:117:34"},{"body":{"nodeType":"YulBlock","src":"53337:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53354:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"53357:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"53347:6:34"},"nodeType":"YulFunctionCall","src":"53347:12:34"},"nodeType":"YulExpressionStatement","src":"53347:12:34"}]},"name":"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20","nodeType":"YulFunctionDefinition","src":"53248:117:34"},{"body":{"nodeType":"YulBlock","src":"53460:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53477:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"53480:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"53470:6:34"},"nodeType":"YulFunctionCall","src":"53470:12:34"},"nodeType":"YulExpressionStatement","src":"53470:12:34"}]},"name":"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4","nodeType":"YulFunctionDefinition","src":"53371:117:34"},{"body":{"nodeType":"YulBlock","src":"53573:633:34","statements":[{"nodeType":"YulVariableDeclaration","src":"53583:43:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"53622:3:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"53609:12:34"},"nodeType":"YulFunctionCall","src":"53609:17:34"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"53587:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"53720:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4","nodeType":"YulIdentifier","src":"53722:77:34"},"nodeType":"YulFunctionCall","src":"53722:79:34"},"nodeType":"YulExpressionStatement","src":"53722:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"53649:18:34"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"53677:12:34"},"nodeType":"YulFunctionCall","src":"53677:14:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"53693:8:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53673:3:34"},"nodeType":"YulFunctionCall","src":"53673:29:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"53708:4:34","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"53714:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53704:3:34"},"nodeType":"YulFunctionCall","src":"53704:12:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53669:3:34"},"nodeType":"YulFunctionCall","src":"53669:48:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"53645:3:34"},"nodeType":"YulFunctionCall","src":"53645:73:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"53638:6:34"},"nodeType":"YulFunctionCall","src":"53638:81:34"},"nodeType":"YulIf","src":"53635:168:34"},{"nodeType":"YulAssignment","src":"53812:42:34","value":{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"53825:18:34"},{"name":"base_ref","nodeType":"YulIdentifier","src":"53845:8:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53821:3:34"},"nodeType":"YulFunctionCall","src":"53821:33:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"53812:5:34"}]},{"nodeType":"YulAssignment","src":"53864:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53887:5:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"53874:12:34"},"nodeType":"YulFunctionCall","src":"53874:19:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"53864:6:34"}]},{"nodeType":"YulAssignment","src":"53902:25:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53915:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"53922:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53911:3:34"},"nodeType":"YulFunctionCall","src":"53911:16:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"53902:5:34"}]},{"body":{"nodeType":"YulBlock","src":"53970:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2","nodeType":"YulIdentifier","src":"53972:77:34"},"nodeType":"YulFunctionCall","src":"53972:79:34"},"nodeType":"YulExpressionStatement","src":"53972:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"53942:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"53950:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"53939:2:34"},"nodeType":"YulFunctionCall","src":"53939:30:34"},"nodeType":"YulIf","src":"53936:117:34"},{"body":{"nodeType":"YulBlock","src":"54116:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20","nodeType":"YulIdentifier","src":"54118:77:34"},"nodeType":"YulFunctionCall","src":"54118:79:34"},"nodeType":"YulExpressionStatement","src":"54118:79:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54069:5:34"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"54080:12:34"},"nodeType":"YulFunctionCall","src":"54080:14:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"54100:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"54108:4:34","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"54096:3:34"},"nodeType":"YulFunctionCall","src":"54096:17:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54076:3:34"},"nodeType":"YulFunctionCall","src":"54076:38:34"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"54065:3:34"},"nodeType":"YulFunctionCall","src":"54065:50:34"},"nodeType":"YulIf","src":"54062:137:34"}]},"name":"calldata_access_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"53541:8:34","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"53551:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53559:5:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"53566:6:34","type":""}],"src":"53494:712:34"},{"body":{"nodeType":"YulBlock","src":"54299:38:34","statements":[{"nodeType":"YulAssignment","src":"54309:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"54321:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"54326:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54317:3:34"},"nodeType":"YulFunctionCall","src":"54317:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"54309:4:34"}]}]},"name":"array_nextElement_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"54286:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"54294:4:34","type":""}],"src":"54212:125:34"},{"body":{"nodeType":"YulBlock","src":"54517:924:34","statements":[{"nodeType":"YulVariableDeclaration","src":"54527:80:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54601:5:34"}],"functionName":{"name":"array_length_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulIdentifier","src":"54541:59:34"},"nodeType":"YulFunctionCall","src":"54541:66:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"54531:6:34","type":""}]},{"nodeType":"YulAssignment","src":"54616:101:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54705:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"54710:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54623:81:34"},"nodeType":"YulFunctionCall","src":"54623:94:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54616:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"54726:20:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"54743:3:34"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"54730:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"54755:39:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54771:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"54780:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"54788:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"54776:3:34"},"nodeType":"YulFunctionCall","src":"54776:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54767:3:34"},"nodeType":"YulFunctionCall","src":"54767:27:34"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"54759:4:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"54803:83:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54880:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulIdentifier","src":"54818:61:34"},"nodeType":"YulFunctionCall","src":"54818:68:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"54807:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"54895:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"54909:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"54899:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"54985:411:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55006:3:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55015:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"55021:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55011:3:34"},"nodeType":"YulFunctionCall","src":"55011:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54999:6:34"},"nodeType":"YulFunctionCall","src":"54999:33:34"},"nodeType":"YulExpressionStatement","src":"54999:33:34"},{"nodeType":"YulVariableDeclaration","src":"55045:90:34","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"55119:7:34"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"55128:6:34"}],"functionName":{"name":"calldata_access_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"55081:37:34"},"nodeType":"YulFunctionCall","src":"55081:54:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"55049:13:34","type":""},{"name":"elementValue1","nodeType":"YulTypedName","src":"55064:13:34","type":""}]},{"nodeType":"YulAssignment","src":"55148:109:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"55222:13:34"},{"name":"elementValue1","nodeType":"YulIdentifier","src":"55237:13:34"},{"name":"tail","nodeType":"YulIdentifier","src":"55252:4:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_calldata_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"55156:65:34"},"nodeType":"YulFunctionCall","src":"55156:101:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55148:4:34"}]},{"nodeType":"YulAssignment","src":"55270:82:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"55345:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_string_calldata_ptr_$5_calldata_ptr","nodeType":"YulIdentifier","src":"55280:64:34"},"nodeType":"YulFunctionCall","src":"55280:72:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"55270:6:34"}]},{"nodeType":"YulAssignment","src":"55365:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55376:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"55381:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55372:3:34"},"nodeType":"YulFunctionCall","src":"55372:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55365:3:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"54947:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"54950:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"54944:2:34"},"nodeType":"YulFunctionCall","src":"54944:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"54958:18:34","statements":[{"nodeType":"YulAssignment","src":"54960:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"54969:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"54972:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54965:3:34"},"nodeType":"YulFunctionCall","src":"54965:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"54960:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"54929:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"54931:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"54940:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"54935:1:34","type":""}]}]},"src":"54925:471:34"},{"nodeType":"YulAssignment","src":"55405:11:34","value":{"name":"tail","nodeType":"YulIdentifier","src":"55412:4:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55405:3:34"}]},{"nodeType":"YulAssignment","src":"55425:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"55432:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55425:3:34"}]}]},"name":"abi_encode_t_array$_t_string_calldata_ptr_$5_calldata_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54496:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"54503:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54512:3:34","type":""}],"src":"54373:1068:34"},{"body":{"nodeType":"YulBlock","src":"55521:32:34","statements":[{"nodeType":"YulAssignment","src":"55532:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"55542:4:34","type":"","value":"0x05"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"55532:6:34"}]}]},"name":"array_length_t_array$_t_address_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55504:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"55514:6:34","type":""}],"src":"55447:106:34"},{"body":{"nodeType":"YulBlock","src":"55668:34:34","statements":[{"nodeType":"YulAssignment","src":"55678:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"55693:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"55678:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55640:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"55645:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"55656:11:34","type":""}],"src":"55559:143:34"},{"body":{"nodeType":"YulBlock","src":"55780:28:34","statements":[{"nodeType":"YulAssignment","src":"55790:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"55798:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"55790:4:34"}]}]},"name":"array_dataslot_t_array$_t_address_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"55767:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"55775:4:34","type":""}],"src":"55708:100:34"},{"body":{"nodeType":"YulBlock","src":"55869:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55886:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55909:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"55891:17:34"},"nodeType":"YulFunctionCall","src":"55891:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55879:6:34"},"nodeType":"YulFunctionCall","src":"55879:37:34"},"nodeType":"YulExpressionStatement","src":"55879:37:34"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55857:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"55864:3:34","type":""}],"src":"55814:108:34"},{"body":{"nodeType":"YulBlock","src":"56008:99:34","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56052:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"56060:3:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"56018:33:34"},"nodeType":"YulFunctionCall","src":"56018:46:34"},"nodeType":"YulExpressionStatement","src":"56018:46:34"},{"nodeType":"YulAssignment","src":"56073:28:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56091:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"56096:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56087:3:34"},"nodeType":"YulFunctionCall","src":"56087:14:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"56073:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"55981:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"55989:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"55997:10:34","type":""}],"src":"55928:179:34"},{"body":{"nodeType":"YulBlock","src":"56171:64:34","statements":[{"nodeType":"YulAssignment","src":"56181:48:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"56211:3:34"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"56220:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"56225:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56216:3:34"},"nodeType":"YulFunctionCall","src":"56216:12:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"56190:20:34"},"nodeType":"YulFunctionCall","src":"56190:39:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"56181:5:34"}]}]},"name":"calldata_access_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"56148:7:34","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"56157:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"56165:5:34","type":""}],"src":"56113:122:34"},{"body":{"nodeType":"YulBlock","src":"56316:38:34","statements":[{"nodeType":"YulAssignment","src":"56326:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"56338:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"56343:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56334:3:34"},"nodeType":"YulFunctionCall","src":"56334:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"56326:4:34"}]}]},"name":"array_nextElement_t_array$_t_address_$5_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"56303:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"56311:4:34","type":""}],"src":"56241:113:34"},{"body":{"nodeType":"YulBlock","src":"56506:617:34","statements":[{"nodeType":"YulVariableDeclaration","src":"56516:68:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56578:5:34"}],"functionName":{"name":"array_length_t_array$_t_address_$5_calldata_ptr","nodeType":"YulIdentifier","src":"56530:47:34"},"nodeType":"YulFunctionCall","src":"56530:54:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"56520:6:34","type":""}]},{"nodeType":"YulAssignment","src":"56593:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56672:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"56677:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56600:71:34"},"nodeType":"YulFunctionCall","src":"56600:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56593:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"56693:71:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56758:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$5_calldata_ptr","nodeType":"YulIdentifier","src":"56708:49:34"},"nodeType":"YulFunctionCall","src":"56708:56:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"56697:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"56773:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"56787:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"56777:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"56863:253:34","statements":[{"nodeType":"YulVariableDeclaration","src":"56877:63:34","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"56924:7:34"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"56933:6:34"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"56898:25:34"},"nodeType":"YulFunctionCall","src":"56898:42:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"56881:13:34","type":""}]},{"nodeType":"YulAssignment","src":"56953:70:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"57004:13:34"},{"name":"pos","nodeType":"YulIdentifier","src":"57019:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"56960:43:34"},"nodeType":"YulFunctionCall","src":"56960:63:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56953:3:34"}]},{"nodeType":"YulAssignment","src":"57036:70:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"57099:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$5_calldata_ptr","nodeType":"YulIdentifier","src":"57046:52:34"},"nodeType":"YulFunctionCall","src":"57046:60:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"57036:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"56825:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"56828:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"56822:2:34"},"nodeType":"YulFunctionCall","src":"56822:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"56836:18:34","statements":[{"nodeType":"YulAssignment","src":"56838:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"56847:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"56850:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56843:3:34"},"nodeType":"YulFunctionCall","src":"56843:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"56838:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"56807:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"56809:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"56818:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"56813:1:34","type":""}]}]},"src":"56803:313:34"}]},"name":"abi_encode_t_array$_t_address_$5_calldata_ptr_to_t_array$_t_address_$5_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56493:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"56500:3:34","type":""}],"src":"56392:731:34"},{"body":{"nodeType":"YulBlock","src":"57203:32:34","statements":[{"nodeType":"YulAssignment","src":"57214:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"57224:4:34","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"57214:6:34"}]}]},"name":"array_length_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57186:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"57196:6:34","type":""}],"src":"57129:106:34"},{"body":{"nodeType":"YulBlock","src":"57350:34:34","statements":[{"nodeType":"YulAssignment","src":"57360:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"57375:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"57360:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57322:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"57327:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"57338:11:34","type":""}],"src":"57241:143:34"},{"body":{"nodeType":"YulBlock","src":"57462:28:34","statements":[{"nodeType":"YulAssignment","src":"57472:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"57480:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"57472:4:34"}]}]},"name":"array_dataslot_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"57449:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"57457:4:34","type":""}],"src":"57390:100:34"},{"body":{"nodeType":"YulBlock","src":"57571:38:34","statements":[{"nodeType":"YulAssignment","src":"57581:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"57593:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"57598:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57589:3:34"},"nodeType":"YulFunctionCall","src":"57589:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"57581:4:34"}]}]},"name":"array_nextElement_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"57558:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"57566:4:34","type":""}],"src":"57496:113:34"},{"body":{"nodeType":"YulBlock","src":"57761:617:34","statements":[{"nodeType":"YulVariableDeclaration","src":"57771:68:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57833:5:34"}],"functionName":{"name":"array_length_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"57785:47:34"},"nodeType":"YulFunctionCall","src":"57785:54:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"57775:6:34","type":""}]},{"nodeType":"YulAssignment","src":"57848:91:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57927:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"57932:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57855:71:34"},"nodeType":"YulFunctionCall","src":"57855:84:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57848:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"57948:71:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58013:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"57963:49:34"},"nodeType":"YulFunctionCall","src":"57963:56:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"57952:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"58028:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"58042:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"58032:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"58118:253:34","statements":[{"nodeType":"YulVariableDeclaration","src":"58132:63:34","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"58179:7:34"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"58188:6:34"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"58153:25:34"},"nodeType":"YulFunctionCall","src":"58153:42:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"58136:13:34","type":""}]},{"nodeType":"YulAssignment","src":"58208:70:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"58259:13:34"},{"name":"pos","nodeType":"YulIdentifier","src":"58274:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"58215:43:34"},"nodeType":"YulFunctionCall","src":"58215:63:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58208:3:34"}]},{"nodeType":"YulAssignment","src":"58291:70:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"58354:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"58301:52:34"},"nodeType":"YulFunctionCall","src":"58301:60:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"58291:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"58080:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"58083:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"58077:2:34"},"nodeType":"YulFunctionCall","src":"58077:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"58091:18:34","statements":[{"nodeType":"YulAssignment","src":"58093:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"58102:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"58105:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58098:3:34"},"nodeType":"YulFunctionCall","src":"58098:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"58093:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"58062:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"58064:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"58073:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"58068:1:34","type":""}]}]},"src":"58058:313:34"}]},"name":"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57748:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"57755:3:34","type":""}],"src":"57647:731:34"},{"body":{"nodeType":"YulBlock","src":"58460:32:34","statements":[{"nodeType":"YulAssignment","src":"58471:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"58481:4:34","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"58471:6:34"}]}]},"name":"array_length_t_array$_t_string_storage_$3_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"58443:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"58453:6:34","type":""}],"src":"58384:108:34"},{"body":{"nodeType":"YulBlock","src":"58617:34:34","statements":[{"nodeType":"YulAssignment","src":"58627:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"58642:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"58627:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"58589:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"58594:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"58605:11:34","type":""}],"src":"58498:153:34"},{"body":{"nodeType":"YulBlock","src":"58731:28:34","statements":[{"nodeType":"YulAssignment","src":"58741:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"58749:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"58741:4:34"}]}]},"name":"array_dataslot_t_array$_t_string_storage_$3_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"58718:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"58726:4:34","type":""}],"src":"58657:102:34"},{"body":{"nodeType":"YulBlock","src":"58868:732:34","statements":[{"nodeType":"YulVariableDeclaration","src":"58878:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58901:5:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"58895:5:34"},"nodeType":"YulFunctionCall","src":"58895:12:34"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"58882:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"58916:50:34","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"58956:9:34"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"58930:25:34"},"nodeType":"YulFunctionCall","src":"58930:36:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"58920:6:34","type":""}]},{"nodeType":"YulAssignment","src":"58975:68:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59031:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"59036:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"58982:48:34"},"nodeType":"YulFunctionCall","src":"58982:61:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58975:3:34"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"59092:157:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59145:3:34"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"59154:9:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59169:4:34","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"59165:3:34"},"nodeType":"YulFunctionCall","src":"59165:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"59150:3:34"},"nodeType":"YulFunctionCall","src":"59150:25:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59138:6:34"},"nodeType":"YulFunctionCall","src":"59138:38:34"},"nodeType":"YulExpressionStatement","src":"59138:38:34"},{"nodeType":"YulAssignment","src":"59189:50:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59200:3:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59209:4:34","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"59229:6:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"59222:6:34"},"nodeType":"YulFunctionCall","src":"59222:14:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"59215:6:34"},"nodeType":"YulFunctionCall","src":"59215:22:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"59205:3:34"},"nodeType":"YulFunctionCall","src":"59205:33:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59196:3:34"},"nodeType":"YulFunctionCall","src":"59196:43:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"59189:3:34"}]}]},"nodeType":"YulCase","src":"59085:164:34","value":{"kind":"number","nodeType":"YulLiteral","src":"59090:1:34","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"59265:329:34","statements":[{"nodeType":"YulVariableDeclaration","src":"59310:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59357:5:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"59325:31:34"},"nodeType":"YulFunctionCall","src":"59325:38:34"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"59314:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"59376:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"59385:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"59380:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"59443:110:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59472:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"59477:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59468:3:34"},"nodeType":"YulFunctionCall","src":"59468:11:34"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"59487:7:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"59481:5:34"},"nodeType":"YulFunctionCall","src":"59481:14:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59461:6:34"},"nodeType":"YulFunctionCall","src":"59461:35:34"},"nodeType":"YulExpressionStatement","src":"59461:35:34"},{"nodeType":"YulAssignment","src":"59513:26:34","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"59528:7:34"},{"kind":"number","nodeType":"YulLiteral","src":"59537:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59524:3:34"},"nodeType":"YulFunctionCall","src":"59524:15:34"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"59513:7:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"59410:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"59413:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"59407:2:34"},"nodeType":"YulFunctionCall","src":"59407:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"59421:21:34","statements":[{"nodeType":"YulAssignment","src":"59423:17:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"59432:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"59435:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59428:3:34"},"nodeType":"YulFunctionCall","src":"59428:12:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"59423:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"59403:3:34","statements":[]},"src":"59399:154:34"},{"nodeType":"YulAssignment","src":"59566:18:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59577:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"59582:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59573:3:34"},"nodeType":"YulFunctionCall","src":"59573:11:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"59566:3:34"}]}]},"nodeType":"YulCase","src":"59258:336:34","value":{"kind":"number","nodeType":"YulLiteral","src":"59263:1:34","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"59063:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"59074:1:34","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"59059:3:34"},"nodeType":"YulFunctionCall","src":"59059:17:34"},"nodeType":"YulSwitch","src":"59052:542:34"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"58849:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"58856:3:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"58864:3:34","type":""}],"src":"58789:811:34"},{"body":{"nodeType":"YulBlock","src":"59703:93:34","statements":[{"nodeType":"YulAssignment","src":"59713:77:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59778:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"59786:3:34"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"59727:50:34"},"nodeType":"YulFunctionCall","src":"59727:63:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"59713:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"59676:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"59684:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"59692:10:34","type":""}],"src":"59606:190:34"},{"body":{"nodeType":"YulBlock","src":"59879:38:34","statements":[{"nodeType":"YulAssignment","src":"59889:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"59901:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"59906:4:34","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59897:3:34"},"nodeType":"YulFunctionCall","src":"59897:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"59889:4:34"}]}]},"name":"array_nextElement_t_array$_t_string_storage_$3_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"59866:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"59874:4:34","type":""}],"src":"59802:115:34"},{"body":{"nodeType":"YulBlock","src":"60087:811:34","statements":[{"nodeType":"YulVariableDeclaration","src":"60097:70:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60161:5:34"}],"functionName":{"name":"array_length_t_array$_t_string_storage_$3_storage","nodeType":"YulIdentifier","src":"60111:49:34"},"nodeType":"YulFunctionCall","src":"60111:56:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"60101:6:34","type":""}]},{"nodeType":"YulAssignment","src":"60176:101:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60265:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"60270:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60183:81:34"},"nodeType":"YulFunctionCall","src":"60183:94:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60176:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"60286:20:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"60303:3:34"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"60290:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"60315:39:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60331:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"60340:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"60348:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"60336:3:34"},"nodeType":"YulFunctionCall","src":"60336:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60327:3:34"},"nodeType":"YulFunctionCall","src":"60327:27:34"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"60319:4:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"60363:73:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60430:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_string_storage_$3_storage","nodeType":"YulIdentifier","src":"60378:51:34"},"nodeType":"YulFunctionCall","src":"60378:58:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"60367:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"60445:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"60459:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"60449:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"60535:318:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60556:3:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60565:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"60571:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60561:3:34"},"nodeType":"YulFunctionCall","src":"60561:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60549:6:34"},"nodeType":"YulFunctionCall","src":"60549:33:34"},"nodeType":"YulExpressionStatement","src":"60549:33:34"},{"nodeType":"YulVariableDeclaration","src":"60595:27:34","value":{"name":"srcPtr","nodeType":"YulIdentifier","src":"60616:6:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"60599:13:34","type":""}]},{"nodeType":"YulAssignment","src":"60635:89:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"60704:13:34"},{"name":"tail","nodeType":"YulIdentifier","src":"60719:4:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"60643:60:34"},"nodeType":"YulFunctionCall","src":"60643:81:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60635:4:34"}]},{"nodeType":"YulAssignment","src":"60737:72:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"60802:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_string_storage_$3_storage","nodeType":"YulIdentifier","src":"60747:54:34"},"nodeType":"YulFunctionCall","src":"60747:62:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"60737:6:34"}]},{"nodeType":"YulAssignment","src":"60822:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60833:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"60838:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60829:3:34"},"nodeType":"YulFunctionCall","src":"60829:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60822:3:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"60497:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"60500:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"60494:2:34"},"nodeType":"YulFunctionCall","src":"60494:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"60508:18:34","statements":[{"nodeType":"YulAssignment","src":"60510:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"60519:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"60522:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60515:3:34"},"nodeType":"YulFunctionCall","src":"60515:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"60510:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"60479:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"60481:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"60490:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"60485:1:34","type":""}]}]},"src":"60475:378:34"},{"nodeType":"YulAssignment","src":"60862:11:34","value":{"name":"tail","nodeType":"YulIdentifier","src":"60869:4:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60862:3:34"}]},{"nodeType":"YulAssignment","src":"60882:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"60889:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60882:3:34"}]}]},"name":"abi_encode_t_array$_t_string_storage_$3_storage_to_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"60066:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"60073:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60082:3:34","type":""}],"src":"59953:945:34"},{"body":{"nodeType":"YulBlock","src":"61528:1246:34","statements":[{"nodeType":"YulAssignment","src":"61538:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61550:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"61561:3:34","type":"","value":"576"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61546:3:34"},"nodeType":"YulFunctionCall","src":"61546:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61538:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"61619:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61632:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"61643:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61628:3:34"},"nodeType":"YulFunctionCall","src":"61628:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"61575:43:34"},"nodeType":"YulFunctionCall","src":"61575:71:34"},"nodeType":"YulExpressionStatement","src":"61575:71:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61667:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"61678:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61663:3:34"},"nodeType":"YulFunctionCall","src":"61663:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61687:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"61693:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61683:3:34"},"nodeType":"YulFunctionCall","src":"61683:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61656:6:34"},"nodeType":"YulFunctionCall","src":"61656:48:34"},"nodeType":"YulExpressionStatement","src":"61656:48:34"},{"nodeType":"YulAssignment","src":"61713:136:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"61835:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"61844:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_string_calldata_ptr_$5_calldata_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61721:113:34"},"nodeType":"YulFunctionCall","src":"61721:128:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61713:4:34"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"61951:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61964:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"61975:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61960:3:34"},"nodeType":"YulFunctionCall","src":"61960:18:34"}],"functionName":{"name":"abi_encode_t_array$_t_address_$5_calldata_ptr_to_t_array$_t_address_$5_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61859:91:34"},"nodeType":"YulFunctionCall","src":"61859:120:34"},"nodeType":"YulExpressionStatement","src":"61859:120:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"62081:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62094:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62105:3:34","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62090:3:34"},"nodeType":"YulFunctionCall","src":"62090:19:34"}],"functionName":{"name":"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61989:91:34"},"nodeType":"YulFunctionCall","src":"61989:121:34"},"nodeType":"YulExpressionStatement","src":"61989:121:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"62164:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62177:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62188:3:34","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62173:3:34"},"nodeType":"YulFunctionCall","src":"62173:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"62120:43:34"},"nodeType":"YulFunctionCall","src":"62120:73:34"},"nodeType":"YulExpressionStatement","src":"62120:73:34"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"62247:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62260:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62271:3:34","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62256:3:34"},"nodeType":"YulFunctionCall","src":"62256:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"62203:43:34"},"nodeType":"YulFunctionCall","src":"62203:73:34"},"nodeType":"YulExpressionStatement","src":"62203:73:34"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"62330:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62343:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62354:3:34","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62339:3:34"},"nodeType":"YulFunctionCall","src":"62339:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"62286:43:34"},"nodeType":"YulFunctionCall","src":"62286:73:34"},"nodeType":"YulExpressionStatement","src":"62286:73:34"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"62413:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62426:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62437:3:34","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62422:3:34"},"nodeType":"YulFunctionCall","src":"62422:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"62369:43:34"},"nodeType":"YulFunctionCall","src":"62369:73:34"},"nodeType":"YulExpressionStatement","src":"62369:73:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62463:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62474:3:34","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62459:3:34"},"nodeType":"YulFunctionCall","src":"62459:19:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62484:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"62490:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"62480:3:34"},"nodeType":"YulFunctionCall","src":"62480:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62452:6:34"},"nodeType":"YulFunctionCall","src":"62452:49:34"},"nodeType":"YulExpressionStatement","src":"62452:49:34"},{"nodeType":"YulAssignment","src":"62510:126:34","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"62622:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"62631:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_string_storage_$3_storage_to_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62518:103:34"},"nodeType":"YulFunctionCall","src":"62518:118:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62510:4:34"}]},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"62738:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62751:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"62762:3:34","type":"","value":"480"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62747:3:34"},"nodeType":"YulFunctionCall","src":"62747:19:34"}],"functionName":{"name":"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62646:91:34"},"nodeType":"YulFunctionCall","src":"62646:121:34"},"nodeType":"YulExpressionStatement","src":"62646:121:34"}]},"name":"abi_encode_tuple_t_address_t_array$_t_string_calldata_ptr_$5_calldata_ptr_t_array$_t_address_$5_calldata_ptr_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_storage_$3_storage_t_array$_t_address_$3_calldata_ptr__to_t_address_t_array$_t_string_memory_ptr_$5_memory_ptr_t_array$_t_address_$5_memory_ptr_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_memory_ptr_$3_memory_ptr_t_array$_t_address_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61428:9:34","type":""},{"name":"value9","nodeType":"YulTypedName","src":"61440:6:34","type":""},{"name":"value8","nodeType":"YulTypedName","src":"61448:6:34","type":""},{"name":"value7","nodeType":"YulTypedName","src":"61456:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"61464:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"61472:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"61480:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"61488:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"61496:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"61504:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"61512:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61523:4:34","type":""}],"src":"60904:1870:34"},{"body":{"nodeType":"YulBlock","src":"62833:32:34","statements":[{"nodeType":"YulAssignment","src":"62843:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"62854:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62843:7:34"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62815:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"62825:7:34","type":""}],"src":"62780:85:34"},{"body":{"nodeType":"YulBlock","src":"62914:43:34","statements":[{"nodeType":"YulAssignment","src":"62924:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62939:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"62946:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"62935:3:34"},"nodeType":"YulFunctionCall","src":"62935:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62924:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62896:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"62906:7:34","type":""}],"src":"62871:86:34"},{"body":{"nodeType":"YulBlock","src":"63029:88:34","statements":[{"nodeType":"YulAssignment","src":"63039:72:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63103:5:34"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"63077:25:34"},"nodeType":"YulFunctionCall","src":"63077:32:34"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"63068:8:34"},"nodeType":"YulFunctionCall","src":"63068:42:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"63052:15:34"},"nodeType":"YulFunctionCall","src":"63052:59:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"63039:9:34"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63009:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"63019:9:34","type":""}],"src":"62963:154:34"},{"body":{"nodeType":"YulBlock","src":"63194:72:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63211:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63253:5:34"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"63216:36:34"},"nodeType":"YulFunctionCall","src":"63216:43:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63204:6:34"},"nodeType":"YulFunctionCall","src":"63204:56:34"},"nodeType":"YulExpressionStatement","src":"63204:56:34"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63182:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63189:3:34","type":""}],"src":"63123:143:34"},{"body":{"nodeType":"YulBlock","src":"63376:130:34","statements":[{"nodeType":"YulAssignment","src":"63386:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63398:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"63409:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63394:3:34"},"nodeType":"YulFunctionCall","src":"63394:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63386:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"63472:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63485:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"63496:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63481:3:34"},"nodeType":"YulFunctionCall","src":"63481:17:34"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"63422:49:34"},"nodeType":"YulFunctionCall","src":"63422:77:34"},"nodeType":"YulExpressionStatement","src":"63422:77:34"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63348:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"63360:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63371:4:34","type":""}],"src":"63272:234:34"},{"body":{"nodeType":"YulBlock","src":"63696:369:34","statements":[{"nodeType":"YulAssignment","src":"63706:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63718:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"63729:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63714:3:34"},"nodeType":"YulFunctionCall","src":"63714:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63706:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"63786:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63799:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"63810:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63795:3:34"},"nodeType":"YulFunctionCall","src":"63795:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"63742:43:34"},"nodeType":"YulFunctionCall","src":"63742:71:34"},"nodeType":"YulExpressionStatement","src":"63742:71:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63834:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"63845:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63830:3:34"},"nodeType":"YulFunctionCall","src":"63830:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63854:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"63860:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"63850:3:34"},"nodeType":"YulFunctionCall","src":"63850:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63823:6:34"},"nodeType":"YulFunctionCall","src":"63823:48:34"},"nodeType":"YulExpressionStatement","src":"63823:48:34"},{"nodeType":"YulAssignment","src":"63880:96:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"63954:6:34"},{"name":"value2","nodeType":"YulIdentifier","src":"63962:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"63971:4:34"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63888:65:34"},"nodeType":"YulFunctionCall","src":"63888:88:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63880:4:34"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"64030:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64043:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"64054:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64039:3:34"},"nodeType":"YulFunctionCall","src":"64039:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"63986:43:34"},"nodeType":"YulFunctionCall","src":"63986:72:34"},"nodeType":"YulExpressionStatement","src":"63986:72:34"}]},"name":"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63644:9:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"63656:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"63664:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"63672:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"63680:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63691:4:34","type":""}],"src":"63512:553:34"},{"body":{"nodeType":"YulBlock","src":"64177:75:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"64199:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"64207:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64195:3:34"},"nodeType":"YulFunctionCall","src":"64195:14:34"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"64211:33:34","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64188:6:34"},"nodeType":"YulFunctionCall","src":"64188:57:34"},"nodeType":"YulExpressionStatement","src":"64188:57:34"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"64169:6:34","type":""}],"src":"64071:181:34"},{"body":{"nodeType":"YulBlock","src":"64404:220:34","statements":[{"nodeType":"YulAssignment","src":"64414:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64480:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"64485:2:34","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64421:58:34"},"nodeType":"YulFunctionCall","src":"64421:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64414:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64586:3:34"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"64497:88:34"},"nodeType":"YulFunctionCall","src":"64497:93:34"},"nodeType":"YulExpressionStatement","src":"64497:93:34"},{"nodeType":"YulAssignment","src":"64599:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64610:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"64615:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64606:3:34"},"nodeType":"YulFunctionCall","src":"64606:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64599:3:34"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64392:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"64400:3:34","type":""}],"src":"64258:366:34"},{"body":{"nodeType":"YulBlock","src":"64801:248:34","statements":[{"nodeType":"YulAssignment","src":"64811:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64823:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"64834:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64819:3:34"},"nodeType":"YulFunctionCall","src":"64819:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64811:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64858:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"64869:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64854:3:34"},"nodeType":"YulFunctionCall","src":"64854:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64877:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"64883:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"64873:3:34"},"nodeType":"YulFunctionCall","src":"64873:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64847:6:34"},"nodeType":"YulFunctionCall","src":"64847:47:34"},"nodeType":"YulExpressionStatement","src":"64847:47:34"},{"nodeType":"YulAssignment","src":"64903:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"65037:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64911:124:34"},"nodeType":"YulFunctionCall","src":"64911:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64903:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"64781:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"64796:4:34","type":""}],"src":"64630:419:34"},{"body":{"nodeType":"YulBlock","src":"65181:206:34","statements":[{"nodeType":"YulAssignment","src":"65191:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65203:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"65214:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65199:3:34"},"nodeType":"YulFunctionCall","src":"65199:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"65191:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"65271:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65284:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"65295:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65280:3:34"},"nodeType":"YulFunctionCall","src":"65280:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"65227:43:34"},"nodeType":"YulFunctionCall","src":"65227:71:34"},"nodeType":"YulExpressionStatement","src":"65227:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"65352:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"65365:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"65376:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65361:3:34"},"nodeType":"YulFunctionCall","src":"65361:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"65308:43:34"},"nodeType":"YulFunctionCall","src":"65308:72:34"},"nodeType":"YulExpressionStatement","src":"65308:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"65145:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"65157:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"65165:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"65176:4:34","type":""}],"src":"65055:332:34"},{"body":{"nodeType":"YulBlock","src":"65499:124:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"65521:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"65529:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65517:3:34"},"nodeType":"YulFunctionCall","src":"65517:14:34"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"65533:34:34","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65510:6:34"},"nodeType":"YulFunctionCall","src":"65510:58:34"},"nodeType":"YulExpressionStatement","src":"65510:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"65589:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"65597:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65585:3:34"},"nodeType":"YulFunctionCall","src":"65585:15:34"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"65602:13:34","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65578:6:34"},"nodeType":"YulFunctionCall","src":"65578:38:34"},"nodeType":"YulExpressionStatement","src":"65578:38:34"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"65491:6:34","type":""}],"src":"65393:230:34"},{"body":{"nodeType":"YulBlock","src":"65775:220:34","statements":[{"nodeType":"YulAssignment","src":"65785:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65851:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"65856:2:34","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"65792:58:34"},"nodeType":"YulFunctionCall","src":"65792:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"65785:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65957:3:34"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"65868:88:34"},"nodeType":"YulFunctionCall","src":"65868:93:34"},"nodeType":"YulExpressionStatement","src":"65868:93:34"},{"nodeType":"YulAssignment","src":"65970:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65981:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"65986:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65977:3:34"},"nodeType":"YulFunctionCall","src":"65977:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"65970:3:34"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"65763:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"65771:3:34","type":""}],"src":"65629:366:34"},{"body":{"nodeType":"YulBlock","src":"66172:248:34","statements":[{"nodeType":"YulAssignment","src":"66182:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66194:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"66205:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66190:3:34"},"nodeType":"YulFunctionCall","src":"66190:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66182:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66229:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"66240:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66225:3:34"},"nodeType":"YulFunctionCall","src":"66225:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66248:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"66254:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66244:3:34"},"nodeType":"YulFunctionCall","src":"66244:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66218:6:34"},"nodeType":"YulFunctionCall","src":"66218:47:34"},"nodeType":"YulExpressionStatement","src":"66218:47:34"},{"nodeType":"YulAssignment","src":"66274:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66408:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66282:124:34"},"nodeType":"YulFunctionCall","src":"66282:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66274:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"66152:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"66167:4:34","type":""}],"src":"66001:419:34"},{"body":{"nodeType":"YulBlock","src":"66532:67:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"66554:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"66562:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66550:3:34"},"nodeType":"YulFunctionCall","src":"66550:14:34"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"66566:25:34","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66543:6:34"},"nodeType":"YulFunctionCall","src":"66543:49:34"},"nodeType":"YulExpressionStatement","src":"66543:49:34"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"66524:6:34","type":""}],"src":"66426:173:34"},{"body":{"nodeType":"YulBlock","src":"66769:238:34","statements":[{"nodeType":"YulAssignment","src":"66779:92:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66863:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"66868:2:34","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"66786:76:34"},"nodeType":"YulFunctionCall","src":"66786:85:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"66779:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66969:3:34"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"66880:88:34"},"nodeType":"YulFunctionCall","src":"66880:93:34"},"nodeType":"YulExpressionStatement","src":"66880:93:34"},{"nodeType":"YulAssignment","src":"66982:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66993:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"66998:2:34","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66989:3:34"},"nodeType":"YulFunctionCall","src":"66989:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"66982:3:34"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"66757:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"66765:3:34","type":""}],"src":"66605:402:34"},{"body":{"nodeType":"YulBlock","src":"67119:61:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"67141:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"67149:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67137:3:34"},"nodeType":"YulFunctionCall","src":"67137:14:34"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"67153:19:34","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"67130:6:34"},"nodeType":"YulFunctionCall","src":"67130:43:34"},"nodeType":"YulExpressionStatement","src":"67130:43:34"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"67111:6:34","type":""}],"src":"67013:167:34"},{"body":{"nodeType":"YulBlock","src":"67350:238:34","statements":[{"nodeType":"YulAssignment","src":"67360:92:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67444:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"67449:2:34","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"67367:76:34"},"nodeType":"YulFunctionCall","src":"67367:85:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"67360:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67550:3:34"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"67461:88:34"},"nodeType":"YulFunctionCall","src":"67461:93:34"},"nodeType":"YulExpressionStatement","src":"67461:93:34"},{"nodeType":"YulAssignment","src":"67563:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67574:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"67579:2:34","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67570:3:34"},"nodeType":"YulFunctionCall","src":"67570:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"67563:3:34"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"67338:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"67346:3:34","type":""}],"src":"67186:402:34"},{"body":{"nodeType":"YulBlock","src":"67980:581:34","statements":[{"nodeType":"YulAssignment","src":"67991:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"68142:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"67998:142:34"},"nodeType":"YulFunctionCall","src":"67998:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"67991:3:34"}]},{"nodeType":"YulAssignment","src":"68156:102:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"68245:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"68254:3:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"68163:81:34"},"nodeType":"YulFunctionCall","src":"68163:95:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"68156:3:34"}]},{"nodeType":"YulAssignment","src":"68268:155:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"68419:3:34"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"68275:142:34"},"nodeType":"YulFunctionCall","src":"68275:148:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"68268:3:34"}]},{"nodeType":"YulAssignment","src":"68433:102:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"68522:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"68531:3:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"68440:81:34"},"nodeType":"YulFunctionCall","src":"68440:95:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"68433:3:34"}]},{"nodeType":"YulAssignment","src":"68545:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"68552:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"68545:3:34"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"67951:3:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"67957:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"67965:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"67976:3:34","type":""}],"src":"67594:967:34"},{"body":{"nodeType":"YulBlock","src":"68607:76:34","statements":[{"body":{"nodeType":"YulBlock","src":"68661:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"68670:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"68673:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"68663:6:34"},"nodeType":"YulFunctionCall","src":"68663:12:34"},"nodeType":"YulExpressionStatement","src":"68663:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68630:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68652:5:34"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"68637:14:34"},"nodeType":"YulFunctionCall","src":"68637:21:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"68627:2:34"},"nodeType":"YulFunctionCall","src":"68627:32:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"68620:6:34"},"nodeType":"YulFunctionCall","src":"68620:40:34"},"nodeType":"YulIf","src":"68617:60:34"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68600:5:34","type":""}],"src":"68567:116:34"},{"body":{"nodeType":"YulBlock","src":"68749:77:34","statements":[{"nodeType":"YulAssignment","src":"68759:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"68774:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"68768:5:34"},"nodeType":"YulFunctionCall","src":"68768:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"68759:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68814:5:34"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"68790:23:34"},"nodeType":"YulFunctionCall","src":"68790:30:34"},"nodeType":"YulExpressionStatement","src":"68790:30:34"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"68727:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"68735:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"68743:5:34","type":""}],"src":"68689:137:34"},{"body":{"nodeType":"YulBlock","src":"68906:271:34","statements":[{"body":{"nodeType":"YulBlock","src":"68952:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"68954:77:34"},"nodeType":"YulFunctionCall","src":"68954:79:34"},"nodeType":"YulExpressionStatement","src":"68954:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"68927:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"68936:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"68923:3:34"},"nodeType":"YulFunctionCall","src":"68923:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"68948:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"68919:3:34"},"nodeType":"YulFunctionCall","src":"68919:32:34"},"nodeType":"YulIf","src":"68916:119:34"},{"nodeType":"YulBlock","src":"69045:125:34","statements":[{"nodeType":"YulVariableDeclaration","src":"69060:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"69074:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"69064:6:34","type":""}]},{"nodeType":"YulAssignment","src":"69089:71:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"69132:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"69143:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69128:3:34"},"nodeType":"YulFunctionCall","src":"69128:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"69152:7:34"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"69099:28:34"},"nodeType":"YulFunctionCall","src":"69099:61:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"69089:6:34"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"68876:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"68887:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"68899:6:34","type":""}],"src":"68832:345:34"},{"body":{"nodeType":"YulBlock","src":"69289:123:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"69311:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"69319:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69307:3:34"},"nodeType":"YulFunctionCall","src":"69307:14:34"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"69323:34:34","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"69300:6:34"},"nodeType":"YulFunctionCall","src":"69300:58:34"},"nodeType":"YulExpressionStatement","src":"69300:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"69379:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"69387:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69375:3:34"},"nodeType":"YulFunctionCall","src":"69375:15:34"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"69392:12:34","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"69368:6:34"},"nodeType":"YulFunctionCall","src":"69368:37:34"},"nodeType":"YulExpressionStatement","src":"69368:37:34"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"69281:6:34","type":""}],"src":"69183:229:34"},{"body":{"nodeType":"YulBlock","src":"69564:220:34","statements":[{"nodeType":"YulAssignment","src":"69574:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69640:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"69645:2:34","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"69581:58:34"},"nodeType":"YulFunctionCall","src":"69581:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"69574:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69746:3:34"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"69657:88:34"},"nodeType":"YulFunctionCall","src":"69657:93:34"},"nodeType":"YulExpressionStatement","src":"69657:93:34"},{"nodeType":"YulAssignment","src":"69759:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69770:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"69775:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69766:3:34"},"nodeType":"YulFunctionCall","src":"69766:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"69759:3:34"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"69552:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"69560:3:34","type":""}],"src":"69418:366:34"},{"body":{"nodeType":"YulBlock","src":"69961:248:34","statements":[{"nodeType":"YulAssignment","src":"69971:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"69983:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"69994:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69979:3:34"},"nodeType":"YulFunctionCall","src":"69979:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"69971:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"70018:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"70029:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70014:3:34"},"nodeType":"YulFunctionCall","src":"70014:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"70037:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"70043:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"70033:3:34"},"nodeType":"YulFunctionCall","src":"70033:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70007:6:34"},"nodeType":"YulFunctionCall","src":"70007:47:34"},"nodeType":"YulExpressionStatement","src":"70007:47:34"},{"nodeType":"YulAssignment","src":"70063:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"70197:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"70071:124:34"},"nodeType":"YulFunctionCall","src":"70071:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"70063:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69941:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"69956:4:34","type":""}],"src":"69790:419:34"},{"body":{"nodeType":"YulBlock","src":"70258:128:34","statements":[{"nodeType":"YulAssignment","src":"70268:33:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"70295:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"70277:17:34"},"nodeType":"YulFunctionCall","src":"70277:24:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"70268:5:34"}]},{"body":{"nodeType":"YulBlock","src":"70329:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"70331:16:34"},"nodeType":"YulFunctionCall","src":"70331:18:34"},"nodeType":"YulExpressionStatement","src":"70331:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"70316:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"70323:4:34","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"70313:2:34"},"nodeType":"YulFunctionCall","src":"70313:15:34"},"nodeType":"YulIf","src":"70310:41:34"},{"nodeType":"YulAssignment","src":"70360:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"70371:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"70378:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"70367:3:34"},"nodeType":"YulFunctionCall","src":"70367:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"70360:3:34"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"70244:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"70254:3:34","type":""}],"src":"70215:171:34"},{"body":{"nodeType":"YulBlock","src":"70498:76:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"70520:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"70528:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70516:3:34"},"nodeType":"YulFunctionCall","src":"70516:14:34"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"70532:34:34","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70509:6:34"},"nodeType":"YulFunctionCall","src":"70509:58:34"},"nodeType":"YulExpressionStatement","src":"70509:58:34"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"70490:6:34","type":""}],"src":"70392:182:34"},{"body":{"nodeType":"YulBlock","src":"70726:220:34","statements":[{"nodeType":"YulAssignment","src":"70736:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70802:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"70807:2:34","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"70743:58:34"},"nodeType":"YulFunctionCall","src":"70743:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"70736:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70908:3:34"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"70819:88:34"},"nodeType":"YulFunctionCall","src":"70819:93:34"},"nodeType":"YulExpressionStatement","src":"70819:93:34"},{"nodeType":"YulAssignment","src":"70921:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70932:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"70937:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70928:3:34"},"nodeType":"YulFunctionCall","src":"70928:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"70921:3:34"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"70714:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"70722:3:34","type":""}],"src":"70580:366:34"},{"body":{"nodeType":"YulBlock","src":"71123:248:34","statements":[{"nodeType":"YulAssignment","src":"71133:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"71145:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"71156:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71141:3:34"},"nodeType":"YulFunctionCall","src":"71141:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"71133:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"71180:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"71191:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71176:3:34"},"nodeType":"YulFunctionCall","src":"71176:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"71199:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"71205:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"71195:3:34"},"nodeType":"YulFunctionCall","src":"71195:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71169:6:34"},"nodeType":"YulFunctionCall","src":"71169:47:34"},"nodeType":"YulExpressionStatement","src":"71169:47:34"},{"nodeType":"YulAssignment","src":"71225:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"71359:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"71233:124:34"},"nodeType":"YulFunctionCall","src":"71233:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"71225:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"71103:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"71118:4:34","type":""}],"src":"70952:419:34"},{"body":{"nodeType":"YulBlock","src":"71405:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71422:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"71425:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71415:6:34"},"nodeType":"YulFunctionCall","src":"71415:88:34"},"nodeType":"YulExpressionStatement","src":"71415:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71519:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"71522:4:34","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71512:6:34"},"nodeType":"YulFunctionCall","src":"71512:15:34"},"nodeType":"YulExpressionStatement","src":"71512:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71543:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"71546:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"71536:6:34"},"nodeType":"YulFunctionCall","src":"71536:15:34"},"nodeType":"YulExpressionStatement","src":"71536:15:34"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"71377:180:34"},{"body":{"nodeType":"YulBlock","src":"71669:119:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"71691:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"71699:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71687:3:34"},"nodeType":"YulFunctionCall","src":"71687:14:34"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"71703:34:34","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71680:6:34"},"nodeType":"YulFunctionCall","src":"71680:58:34"},"nodeType":"YulExpressionStatement","src":"71680:58:34"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"71759:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"71767:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71755:3:34"},"nodeType":"YulFunctionCall","src":"71755:15:34"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"71772:8:34","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71748:6:34"},"nodeType":"YulFunctionCall","src":"71748:33:34"},"nodeType":"YulExpressionStatement","src":"71748:33:34"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"71661:6:34","type":""}],"src":"71563:225:34"},{"body":{"nodeType":"YulBlock","src":"71940:220:34","statements":[{"nodeType":"YulAssignment","src":"71950:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72016:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"72021:2:34","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"71957:58:34"},"nodeType":"YulFunctionCall","src":"71957:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"71950:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72122:3:34"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"72033:88:34"},"nodeType":"YulFunctionCall","src":"72033:93:34"},"nodeType":"YulExpressionStatement","src":"72033:93:34"},{"nodeType":"YulAssignment","src":"72135:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72146:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"72151:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72142:3:34"},"nodeType":"YulFunctionCall","src":"72142:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"72135:3:34"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"71928:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"71936:3:34","type":""}],"src":"71794:366:34"},{"body":{"nodeType":"YulBlock","src":"72337:248:34","statements":[{"nodeType":"YulAssignment","src":"72347:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"72359:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"72370:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72355:3:34"},"nodeType":"YulFunctionCall","src":"72355:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"72347:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"72394:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"72405:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72390:3:34"},"nodeType":"YulFunctionCall","src":"72390:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"72413:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"72419:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"72409:3:34"},"nodeType":"YulFunctionCall","src":"72409:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"72383:6:34"},"nodeType":"YulFunctionCall","src":"72383:47:34"},"nodeType":"YulExpressionStatement","src":"72383:47:34"},{"nodeType":"YulAssignment","src":"72439:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"72573:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"72447:124:34"},"nodeType":"YulFunctionCall","src":"72447:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"72439:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"72317:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"72332:4:34","type":""}],"src":"72166:419:34"},{"body":{"nodeType":"YulBlock","src":"72704:34:34","statements":[{"nodeType":"YulAssignment","src":"72714:18:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"72729:3:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"72714:11:34"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"72676:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"72681:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"72692:11:34","type":""}],"src":"72591:147:34"},{"body":{"nodeType":"YulBlock","src":"72852:278:34","statements":[{"nodeType":"YulVariableDeclaration","src":"72862:52:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72908:5:34"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"72876:31:34"},"nodeType":"YulFunctionCall","src":"72876:38:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"72866:6:34","type":""}]},{"nodeType":"YulAssignment","src":"72923:95:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73006:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"73011:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"72930:75:34"},"nodeType":"YulFunctionCall","src":"72930:88:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"72923:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"73066:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"73073:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73062:3:34"},"nodeType":"YulFunctionCall","src":"73062:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"73080:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"73085:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"73027:34:34"},"nodeType":"YulFunctionCall","src":"73027:65:34"},"nodeType":"YulExpressionStatement","src":"73027:65:34"},{"nodeType":"YulAssignment","src":"73101:23:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73112:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"73117:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73108:3:34"},"nodeType":"YulFunctionCall","src":"73108:16:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"73101:3:34"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72833:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"72840:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"72848:3:34","type":""}],"src":"72744:386:34"},{"body":{"nodeType":"YulBlock","src":"73270:137:34","statements":[{"nodeType":"YulAssignment","src":"73281:100:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"73368:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"73377:3:34"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"73288:79:34"},"nodeType":"YulFunctionCall","src":"73288:93:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"73281:3:34"}]},{"nodeType":"YulAssignment","src":"73391:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"73398:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"73391:3:34"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"73249:3:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"73255:6:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"73266:3:34","type":""}],"src":"73136:271:34"},{"body":{"nodeType":"YulBlock","src":"73519:73:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"73541:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"73549:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73537:3:34"},"nodeType":"YulFunctionCall","src":"73537:14:34"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"73553:31:34","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73530:6:34"},"nodeType":"YulFunctionCall","src":"73530:55:34"},"nodeType":"YulExpressionStatement","src":"73530:55:34"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"73511:6:34","type":""}],"src":"73413:179:34"},{"body":{"nodeType":"YulBlock","src":"73744:220:34","statements":[{"nodeType":"YulAssignment","src":"73754:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73820:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"73825:2:34","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"73761:58:34"},"nodeType":"YulFunctionCall","src":"73761:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"73754:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73926:3:34"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"73837:88:34"},"nodeType":"YulFunctionCall","src":"73837:93:34"},"nodeType":"YulExpressionStatement","src":"73837:93:34"},{"nodeType":"YulAssignment","src":"73939:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73950:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"73955:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73946:3:34"},"nodeType":"YulFunctionCall","src":"73946:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"73939:3:34"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"73732:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"73740:3:34","type":""}],"src":"73598:366:34"},{"body":{"nodeType":"YulBlock","src":"74141:248:34","statements":[{"nodeType":"YulAssignment","src":"74151:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74163:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"74174:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74159:3:34"},"nodeType":"YulFunctionCall","src":"74159:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"74151:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74198:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"74209:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74194:3:34"},"nodeType":"YulFunctionCall","src":"74194:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"74217:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"74223:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"74213:3:34"},"nodeType":"YulFunctionCall","src":"74213:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"74187:6:34"},"nodeType":"YulFunctionCall","src":"74187:47:34"},"nodeType":"YulExpressionStatement","src":"74187:47:34"},{"nodeType":"YulAssignment","src":"74243:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"74377:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"74251:124:34"},"nodeType":"YulFunctionCall","src":"74251:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"74243:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"74121:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"74136:4:34","type":""}],"src":"73970:419:34"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"WETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not payable on this chain\")\n\n    }\n\n    function abi_encode_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44b75d32f7b84ef436ca7c8450bb29e25dd15246d5172bc0b3dc29d96b0127cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[5] -> string[5]\n    function abi_encode_t_array$_t_string_memory_ptr_$5_memory_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$5_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$5_memory_ptr__to_t_array$_t_string_memory_ptr_$5_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$5_memory_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct IColateralContract2.SwapParams[]\n    function abi_decode_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_SwapParams_$6666_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // string[5]\n    function abi_decode_t_array$_t_string_calldata_ptr_$5_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x05, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[5]\n    function abi_decode_t_array$_t_address_$5_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x05, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[3]\n    function abi_decode_t_array$_t_address_$3_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x03, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_calldata_ptr_$3_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x03, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_string_calldata_ptr_$5_calldata_ptrt_array$_t_address_$5_calldata_ptrt_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_array$_t_string_calldata_ptr_$3_calldata_ptrt_array$_t_address_$3_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 544) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_string_calldata_ptr_$5_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_array$_t_address_$5_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value2 := abi_decode_t_array$_t_address_$3_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 320\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 352\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 384\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 416))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7 := abi_decode_t_array$_t_string_calldata_ptr_$3_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 448\n\n            value8 := abi_decode_t_array$_t_address_$3_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73(memPtr) {\n\n        mstore(add(memPtr, 0), \"WBTC\")\n\n    }\n\n    function abi_encode_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDC\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_SwapParams_$6666_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x60, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function access_calldata_tail_t_struct$_ExactInputParams_$5460_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xa0, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185(memPtr) {\n\n        mstore(add(memPtr, 0), \"router\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes1(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes1(cleanup_t_bytes1(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes1__to_t_bytes1__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr_t_bool__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value3, value4,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 128))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function access_calldata_tail_t_string_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"quoter\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_b5799fb611a9686d06c14bb2f57d08ffc2aa4db75ffdd3f24710315d78a008a1_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666(memPtr) {\n\n        mstore(add(memPtr, 0), \"swapper\")\n\n    }\n\n    function abi_encode_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 7)\n        store_literal_in_memory_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666(pos)\n        end := add(pos, 7)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_47e7cd4d4b10a587e40c049f0a090fe063d9f7fa26f7c32a7a0e9bdd13e4e666_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_array$_t_string_calldata_ptr_$5_calldata_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_dataslot_t_array$_t_string_calldata_ptr_$5_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_calldata_ptr_to_t_string_memory_ptr(value0, value1, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr(value0, value1, pos)\n    }\n\n    function revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() {\n        revert(0, 0)\n    }\n\n    function revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() {\n        revert(0, 0)\n    }\n\n    function revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() {\n        revert(0, 0)\n    }\n\n    function calldata_access_t_string_calldata_ptr(base_ref, ptr) -> value, length {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() }\n        value := add(rel_offset_of_tail, base_ref)\n\n        length := calldataload(value)\n        value := add(value, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() }\n        if sgt(value, sub(calldatasize(), mul(length, 0x01))) { revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() }\n\n    }\n\n    function array_nextElement_t_array$_t_string_calldata_ptr_$5_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[5] -> string[5]\n    function abi_encode_t_array$_t_string_calldata_ptr_$5_calldata_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_calldata_ptr_$5_calldata_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_calldata_ptr_$5_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0, elementValue1 := calldata_access_t_string_calldata_ptr(baseRef, srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_calldata_ptr_to_t_string_memory_ptr(elementValue0, elementValue1, tail)\n            srcPtr := array_nextElement_t_array$_t_string_calldata_ptr_$5_calldata_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function array_length_t_array$_t_address_$5_calldata_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_$5_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function array_nextElement_t_array$_t_address_$5_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[5] -> address[5]\n    function abi_encode_t_array$_t_address_$5_calldata_ptr_to_t_array$_t_address_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$5_calldata_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$5_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$5_calldata_ptr(srcPtr)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$3_calldata_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_$3_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_nextElement_t_array$_t_address_$3_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[3] -> address[3]\n    function abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$3_calldata_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$3_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$3_calldata_ptr(srcPtr)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_storage_$3_storage(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_string_storage_$3_storage(ptr) -> data {\n        data := ptr\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_storage_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_storage_$3_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // string[3] -> string[3]\n    function abi_encode_t_array$_t_string_storage_$3_storage_to_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_storage_$3_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_storage_$3_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := srcPtr\n            tail := abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_storage_$3_storage(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_string_calldata_ptr_$5_calldata_ptr_t_array$_t_address_$5_calldata_ptr_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_storage_$3_storage_t_array$_t_address_$3_calldata_ptr__to_t_address_t_array$_t_string_memory_ptr_$5_memory_ptr_t_array$_t_address_$5_memory_ptr_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_array$_t_string_memory_ptr_$3_memory_ptr_t_array$_t_address_$3_memory_ptr__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 576)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_calldata_ptr_$5_calldata_ptr_to_t_array$_t_string_memory_ptr_$5_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_array$_t_address_$5_calldata_ptr_to_t_array$_t_address_$5_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value3,  add(headStart, 224))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 320))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 352))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 384))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 416))\n\n        mstore(add(headStart, 448), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$3_storage_to_t_array$_t_string_memory_ptr_$3_memory_ptr_fromStack(value8,  tail)\n\n        abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value9,  add(headStart, 480))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101db5760003560e01c806355452d0411610102578063ca15c87311610095578063de6bd68711610064578063de6bd687146107e6578063df668eca14610823578063e5df800a1461084e578063ee67cc2a14610879576102c8565b8063ca15c8731461072e578063d00411c91461076b578063d547741f14610794578063dc048cf2146107bd576102c8565b806391d14854116100d157806391d1485414610672578063a217fddf146106af578063b14ec101146106da578063c869787e14610705576102c8565b806355452d04146105a257806371372544146105df57806383d333191461060a5780639010d07c14610635576102c8565b80632ad753e41161017a57806332cc815d1161014957806332cc815d146104e657806335ee5f871461051157806336568abe1461054e57806354fd4d5014610577576102c8565b80632ad753e41461042c5780632f2ff15d146104575780632ffe994214610480578063310495ab146104a9576102c8565b806315ac7358116101b657806315ac73581461035e578063212f603914610389578063248a9ca3146103b257806325acc985146103ef576102c8565b8062113e08146102cd57806301ffc9a7146102f85780630828c40414610335576102c8565b366102c857601e460361028b576101026040516101f790613a20565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561026d57600080fd5b505af1158015610281573d6000803e3d6000fd5b50505050506102c6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90613a92565b60405180910390fd5b005b600080fd5b3480156102d957600080fd5b506102e26108b6565b6040516102ef9190613b7a565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a9190613c08565b610a2e565b60405161032c9190613c50565b60405180910390f35b34801561034157600080fd5b5061035c60048036038101906103579190613cfc565b610aa8565b005b34801561036a57600080fd5b50610373610bc0565b6040516103809190613d9d565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab9190613de4565b610be7565b005b3480156103be57600080fd5b506103d960048036038101906103d49190613e47565b610cbd565b6040516103e69190613e83565b60405180910390f35b3480156103fb57600080fd5b5061041660048036038101906104119190613e9e565b610cdd565b6040516104239190613e83565b60405180910390f35b34801561043857600080fd5b50610441610cfa565b60405161044e9190614011565b60405180910390f35b34801561046357600080fd5b5061047e60048036038101906104799190614033565b610dc7565b005b34801561048c57600080fd5b506104a760048036038101906104a291906140c9565b610de8565b005b3480156104b557600080fd5b506104d060048036038101906104cb9190613e9e565b611965565b6040516104dd919061414f565b60405180910390f35b3480156104f257600080fd5b506104fb611a08565b6040516105089190613e83565b60405180910390f35b34801561051d57600080fd5b50610538600480360381019061053391906142a1565b611a2c565b60405161054591906142f9565b60405180910390f35b34801561055a57600080fd5b5061057560048036038101906105709190614033565b611af3565b005b34801561058357600080fd5b5061058c611b76565b604051610599919061414f565b60405180910390f35b3480156105ae57600080fd5b506105c960048036038101906105c491906142a1565b611bb3565b6040516105d69190613d9d565b60405180910390f35b3480156105eb57600080fd5b506105f4611bfd565b6040516106019190613e83565b60405180910390f35b34801561061657600080fd5b5061061f611c21565b60405161062c91906142f9565b60405180910390f35b34801561064157600080fd5b5061065c60048036038101906106579190614314565b611c32565b6040516106699190613d9d565b60405180910390f35b34801561067e57600080fd5b5061069960048036038101906106949190614033565b611c61565b6040516106a69190613c50565b60405180910390f35b3480156106bb57600080fd5b506106c4611ccc565b6040516106d19190613e83565b60405180910390f35b3480156106e657600080fd5b506106ef611cd3565b6040516106fc9190613d9d565b60405180910390f35b34801561071157600080fd5b5061072c600480360381019061072791906143dc565b611cfa565b005b34801561073a57600080fd5b5061075560048036038101906107509190613e47565b6128d7565b60405161076291906142f9565b60405180910390f35b34801561077757600080fd5b50610792600480360381019061078d9190613de4565b6128fb565b005b3480156107a057600080fd5b506107bb60048036038101906107b69190614033565b6129d1565b005b3480156107c957600080fd5b506107e460048036038101906107df9190613cfc565b6129f2565b005b3480156107f257600080fd5b5061080d60048036038101906108089190613e9e565b612b01565b60405161081a919061414f565b60405180910390f35b34801561082f57600080fd5b50610838612ba5565b6040516108459190613e83565b60405180910390f35b34801561085a57600080fd5b50610863612bc9565b6040516108709190613e83565b60405180910390f35b34801561088557600080fd5b506108a0600480360381019061089b91906142a1565b612bed565b6040516108ad9190613d9d565b60405180910390f35b60606000600160056108c89190614512565b67ffffffffffffffff8111156108e1576108e0614176565b5b60405190808252806020026020018201604052801561090f5781602001602082028036833780820191505090505b509050478160008151811061092757610926614546565b5b6020026020010181815250506000600190505b60058111610a26576109f460fd6001836109549190614575565b6005811061096557610964614546565b5b018054610971906145d8565b80601f016020809104026020016040519081016040528092919081815260200182805461099d906145d8565b80156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b5050505050611a2c565b828281518110610a0757610a06614546565b5b6020026020010181815250508080610a1e90614609565b91505061093a565b508091505090565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610aa15750610aa082612c37565b5b9050919050565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707610ad281612cb1565b610ada612cc5565b610b496101028484604051610af0929190614676565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686612d14565b7f22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa610b72612d9a565b84848761010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610baa9594939291906146bc565b60405180910390a1610bba612da2565b50505050565b61010360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2610c1181612cb1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c77576040517fd766085d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600060656000838152602001908152602001600020600101549050919050565b6000610cf38260fb612dac90919063ffffffff16565b9050919050565b610d026139a2565b60fd600580602002604051908101604052809291906000905b82821015610dbe578382018054610d31906145d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d906145d8565b8015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b505050505081526020019060010190610d1b565b50505050905090565b610dd082610cbd565b610dd981612cb1565b610de38383612dc3565b505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6610e1281612cb1565b6000610102604051610e2390613a20565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610e6590614756565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610ea7906147b7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610102604051610ee990614818565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b8787905081101561195b5736888883818110610f3c57610f3b614546565b5b9050602002810190610f4e919061483c565b90503073ffffffffffffffffffffffffffffffffffffffff16818060000190610f779190614864565b6020016020810190610f899190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614610fd6576040517f99c71e6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168160400160208101906110009190613de4565b73ffffffffffffffffffffffffffffffffffffffff161415801561106257508273ffffffffffffffffffffffffffffffffffffffff168160400160208101906110499190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611099576040517f419fde0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168160200160208101906110c39190613de4565b73ffffffffffffffffffffffffffffffffffffffff161415801561112557508473ffffffffffffffffffffffffffffffffffffffff1681602001602081019061110c9190613de4565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561115c576040517f7d8ee31c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061010a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cdca17538380600001906111ad9190614864565b80600001906111bc919061488c565b8580600001906111cc9190614864565b606001356040518463ffffffff1660e01b81526004016111ee9392919061492d565b6020604051808303816000875af192505050801561122a57506040513d601f19601f820116820180604052508101906112279190614974565b60015b6112e0576112366149ae565b806308c379a0036112cf575061124a6149d0565b8061125557506112d1565b7fa5d58d69861729f1703d1b6e4dfb43369bb7f6049cc96e68f35a94129fc14dce8360200160208101906112899190613de4565b84604001602081019061129c9190613de4565b8580600001906112ac9190614864565b60600135846040516112c19493929190614a60565b60405180910390a1506112db565b505b3d6000803e3d6000fd5b611359565b8091507f2486dbd80d4ae64aa9afaacc3370501ed791559e2fdfcd6101f3835150f310808360200160208101906113179190613de4565b84604001602081019061132a9190613de4565b85806000019061133a9190614864565b606001358560405161134f9493929190614aac565b60405180910390a1505b600082806000019061136b9190614864565b608001351115806113a6575060646062826113869190614af1565b6113909190614b62565b8280600001906113a09190614864565b60800135105b156113dd576040517f1792539f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260200160208101906113f29190613de4565b905060008380600001906114069190614864565b606001351115806114a257508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161144b9190613d9d565b602060405180830381865afa158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c9190614974565b83806000019061149c9190614864565b60600135115b156114d9576040517f54e80d1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360400160208101906114ee9190613de4565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115269190613d9d565b602060405180830381865afa158015611543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115679190614974565b90506115c48261010860405161157c90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168680600001906115bb9190614864565b60600135612d14565b60008060f81b6040516020016115da9190614c41565b60405160208183030381529060405290506000600167ffffffffffffffff81111561160857611607614176565b5b60405190808252806020026020018201604052801561163b57816020015b60608152602001906001900390816116265790505b50905085806000019061164e9190614864565b60200160208101906116609190613de4565b8680600001906116709190614864565b606001358780600001906116849190614864565b608001358880600001906116989190614864565b80600001906116a7919061488c565b60006040516020016116be96959493929190614c5c565b604051602081830303815290604052816000815181106116e1576116e0614546565b5b60200260200101819052506101086040516116fb90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633593564c83838980600001906117579190614864565b604001356040518463ffffffff1660e01b815260040161177993929190614e08565b600060405180830381600087803b15801561179357600080fd5b505af19250505080156117a4575060015b611831576117b06149ae565b806308c379a00361182057506117c46149d0565b806117cf5750611822565b7f48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb918760200160208101906118039190613de4565b82604051611812929190614e4d565b60405180910390a15061182c565b505b3d6000803e3d6000fd5b611942565b60008660400160208101906118469190613de4565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161187e9190613d9d565b602060405180830381865afa15801561189b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bf9190614974565b90507ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe2358760200160208101906118f59190613de4565b8860400160208101906119089190613de4565b8980600001906119189190614864565b6060013587856119289190614575565b6040516119389493929190614aac565b60405180910390a1505b505050505050808061195390614609565b915050610f1d565b5050505050505050565b60fd816005811061197557600080fd5b016000915090508054611987906145d8565b80601f01602080910402602001604051908101604052809291908181526020018280546119b3906145d8565b8015611a005780601f106119d557610100808354040283529160200191611a00565b820191906000526020600020905b8154815290600101906020018083116119e357829003601f168201915b505050505081565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a681565b60008061010283604051611a409190614eae565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611aaa9190613d9d565b602060405180830381865afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190614974565b915050919050565b611afb612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5f90614f37565b60405180910390fd5b611b728282612df7565b5050565b60606040518060400160405280600581526020017f322e302e30000000000000000000000000000000000000000000000000000000815250905090565b610102818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270781565b6000611c2d60fb612e2b565b905090565b6000611c598260976000868152602001908152602001600020612e4090919063ffffffff16565b905092915050565b60006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff16159050808015611d2b5750600160008054906101000a900460ff1660ff16105b80611d585750611d3a30612e5a565b158015611d575750600160008054906101000a900460ff1660ff16145b5b611d97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8e90614fc9565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611dd4576001600060016101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff1688600060038110611e0057611dff614546565b5b602002016020810190611e139190613de4565b73ffffffffffffffffffffffffffffffffffffffff16148015611e885750600073ffffffffffffffffffffffffffffffffffffffff1688600160038110611e5d57611e5c614546565b5b602002016020810190611e709190613de4565b73ffffffffffffffffffffffffffffffffffffffff16145b8015611ee65750600073ffffffffffffffffffffffffffffffffffffffff1688600260038110611ebb57611eba614546565b5b602002016020810190611ece9190613de4565b73ffffffffffffffffffffffffffffffffffffffff16145b15611f1d576040517fbfac83b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603611f83576040517fdf51a0d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611fe9576040517fd766085d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361204f576040517f4e12a74f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036120b5576040517f8dd8261b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120bd612e7d565b6120c5612ece565b600580146120ff576040517fda3ebf7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600581101561220a5789816005811061211e5761211d614546565b5b6020020160208101906121319190613de4565b6101028c836005811061214757612146614546565b5b6020028101906121579190614fe9565b604051612165929190614676565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a81600581106121c4576121c3614546565b5b6020028101906121d49190614fe9565b60fd83600581106121e8576121e7614546565b5b0191826121f6929190615203565b50808061220290614609565b915050612102565b508561010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508661010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b600381101561238d578381600381106122ae576122ad614546565b5b6020028101906122be9190614fe9565b61010583600381106122d3576122d2614546565b5b0191826122e1929190615203565b508281600381106122f5576122f4614546565b5b6020020160208101906123089190613de4565b61010861010583600381106123205761231f614546565b5b0160405161232e9190615356565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061238590614609565b915050612292565b5061010860405161239d90614bdf565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010860405161241c906153b9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124c07ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e260fb612f2790919063ffffffff16565b506124f57ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a660fb612f2790919063ffffffff16565b5061252a7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270760fb612f2790919063ffffffff16565b5061255f7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc660fb612f2790919063ffffffff16565b506125b07ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e28960006003811061259857612597614546565b5b6020020160208101906125ab9190613de4565b612dc3565b6126007ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2896001600381106125e8576125e7614546565b5b6020020160208101906125fb9190613de4565b612dc3565b6126507ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e28960026003811061263857612637614546565b5b60200201602081019061264b9190613de4565b612dc3565b61267a7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a686612dc3565b6126a47ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a685612dc3565b6126ce7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270786612dc3565b6126f87fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270785612dc3565b61275f7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc661010860405161272b9061541a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612dc3565b6127897ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e280612f3e565b6127b37ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a680612f3e565b6127dd7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270780612f3e565b6128277fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc67ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2612f3e565b7f7f1f0de4dc14e9ab39c52c069e883f78ab6f9c7854b254718a298e76f2ebdc6d338b8b8b8b8b8b8b6101058b60405161286a9a99989796959493929190615814565b60405180910390a180156128cb5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516128c2919061590a565b60405180910390a15b50505050505050505050565b60006128f460976000848152602001908152602001600020612f9a565b9050919050565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e261292581612cb1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361298b576040517fdf51a0d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161010360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6129da82610cbd565b6129e381612cb1565b6129ed8383612df7565b505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6612a1c81612cb1565b612a24612cc5565b612a936101028484604051612a3a929190614676565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686612d14565b7f901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848487604051612aeb9493929190615925565b60405180910390a1612afb612da2565b50505050565b6101058160038110612b1257600080fd5b016000915090508054612b24906145d8565b80601f0160208091040260200160405190810160405280929190818152602001828054612b50906145d8565b8015612b9d5780601f10612b7257610100808354040283529160200191612b9d565b820191906000526020600020905b815481529060010190602001808311612b8057829003601f168201915b505050505081565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e281565b610108818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612caa5750612ca982612faf565b5b9050919050565b612cc281612cbd612d9a565b613019565b50565b600260c95403612d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d01906159b1565b60405180910390fd5b600260c981905550565b612d958363a9059cbb60e01b8484604051602401612d339291906159d1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061309e565b505050565b600033905090565b600160c981905550565b6000612dbb8360000183613166565b905092915050565b612dcd8282613191565b612df2816097600085815260200190815260200160002061327290919063ffffffff16565b505050565b612e0182826132a2565b612e26816097600085815260200190815260200160002061338490919063ffffffff16565b505050565b6000612e39826000016133b4565b9050919050565b6000612e4f8360000183613166565b60001c905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16612ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec390615a6c565b60405180910390fd5b565b600060019054906101000a900460ff16612f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1490615a6c565b60405180910390fd5b600160c981905550565b6000612f3683600001836133c5565b905092915050565b6000612f4983610cbd565b90508160656000858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b6000612fa8826000016133b4565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6130238282611c61565b61309a5761303081613435565b61303e8360001c6020613462565b60405160200161304f929190615b24565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613091919061414f565b60405180910390fd5b5050565b6000613100826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661369e9092919063ffffffff16565b90506000815114806131225750808060200190518101906131219190615b8a565b5b613161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161315890615c29565b60405180910390fd5b505050565b600082600001828154811061317e5761317d614546565b5b9060005260206000200154905092915050565b61319b8282611c61565b61326e5760016065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613213612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061329a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6133c5565b905092915050565b6132ac8282611c61565b156133805760006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550613325612d9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006133ac836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6136b6565b905092915050565b600081600001805490509050919050565b60006133d183836137ca565b61342a57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061342f565b600090505b92915050565b606061345b8273ffffffffffffffffffffffffffffffffffffffff16601460ff16613462565b9050919050565b6060600060028360026134759190614af1565b61347f9190614512565b67ffffffffffffffff81111561349857613497614176565b5b6040519080825280601f01601f1916602001820160405280156134ca5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061350257613501614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061356657613565614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026135a69190614af1565b6135b09190614512565b90505b6001811115613650577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106135f2576135f1614546565b5b1a60f81b82828151811061360957613608614546565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061364990615c49565b90506135b3565b5060008414613694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161368b90615cbe565b60405180910390fd5b8091505092915050565b60606136ad84846000856137ed565b90509392505050565b600080836001016000848152602001908152602001600020549050600081146137be5760006001826136e89190614575565b90506000600186600001805490506137009190614575565b905081811461376f57600086600001828154811061372157613720614546565b5b906000526020600020015490508087600001848154811061374557613744614546565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061378357613782615cde565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506137c4565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015613832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161382990615d7f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161385b9190615ddb565b60006040518083038185875af1925050503d8060008114613898576040519150601f19603f3d011682016040523d82523d6000602084013e61389d565b606091505b50915091506138ae878383876138ba565b92505050949350505050565b6060831561391c576000835103613914576138d48561392f565b613913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161390a90615e3e565b60405180910390fd5b5b829050613927565b6139268383613952565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156139655781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613999919061414f565b60405180910390fd5b6040518060a001604052806005905b60608152602001906001900390816139b15790505090565b600081905092915050565b7f5745544800000000000000000000000000000000000000000000000000000000600082015250565b6000613a0a6004836139c9565b9150613a15826139d4565b600482019050919050565b6000613a2b826139fd565b9150819050919050565b600082825260208201905092915050565b7f4e6f742070617961626c65206f6e207468697320636861696e00000000000000600082015250565b6000613a7c601983613a35565b9150613a8782613a46565b602082019050919050565b60006020820190508181036000830152613aab81613a6f565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b613af181613ade565b82525050565b6000613b038383613ae8565b60208301905092915050565b6000602082019050919050565b6000613b2782613ab2565b613b318185613abd565b9350613b3c83613ace565b8060005b83811015613b6d578151613b548882613af7565b9750613b5f83613b0f565b925050600181019050613b40565b5085935050505092915050565b60006020820190508181036000830152613b948184613b1c565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613be581613bb0565b8114613bf057600080fd5b50565b600081359050613c0281613bdc565b92915050565b600060208284031215613c1e57613c1d613ba6565b5b6000613c2c84828501613bf3565b91505092915050565b60008115159050919050565b613c4a81613c35565b82525050565b6000602082019050613c656000830184613c41565b92915050565b613c7481613ade565b8114613c7f57600080fd5b50565b600081359050613c9181613c6b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112613cbc57613cbb613c97565b5b8235905067ffffffffffffffff811115613cd957613cd8613c9c565b5b602083019150836001820283011115613cf557613cf4613ca1565b5b9250929050565b600080600060408486031215613d1557613d14613ba6565b5b6000613d2386828701613c82565b935050602084013567ffffffffffffffff811115613d4457613d43613bab565b5b613d5086828701613ca6565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613d8782613d5c565b9050919050565b613d9781613d7c565b82525050565b6000602082019050613db26000830184613d8e565b92915050565b613dc181613d7c565b8114613dcc57600080fd5b50565b600081359050613dde81613db8565b92915050565b600060208284031215613dfa57613df9613ba6565b5b6000613e0884828501613dcf565b91505092915050565b6000819050919050565b613e2481613e11565b8114613e2f57600080fd5b50565b600081359050613e4181613e1b565b92915050565b600060208284031215613e5d57613e5c613ba6565b5b6000613e6b84828501613e32565b91505092915050565b613e7d81613e11565b82525050565b6000602082019050613e986000830184613e74565b92915050565b600060208284031215613eb457613eb3613ba6565b5b6000613ec284828501613c82565b91505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613f25578082015181840152602081019050613f0a565b60008484015250505050565b6000601f19601f8301169050919050565b6000613f4d82613eeb565b613f578185613ef6565b9350613f67818560208601613f07565b613f7081613f31565b840191505092915050565b6000613f878383613f42565b905092915050565b6000602082019050919050565b6000613fa782613ecb565b613fb18185613ed6565b935083602082028501613fc385613ee1565b8060005b85811015613fff5784840389528151613fe08582613f7b565b9450613feb83613f8f565b925060208a01995050600181019050613fc7565b50829750879550505050505092915050565b6000602082019050818103600083015261402b8184613f9c565b905092915050565b6000806040838503121561404a57614049613ba6565b5b600061405885828601613e32565b925050602061406985828601613dcf565b9150509250929050565b60008083601f84011261408957614088613c97565b5b8235905067ffffffffffffffff8111156140a6576140a5613c9c565b5b6020830191508360208202830111156140c2576140c1613ca1565b5b9250929050565b600080602083850312156140e0576140df613ba6565b5b600083013567ffffffffffffffff8111156140fe576140fd613bab565b5b61410a85828601614073565b92509250509250929050565b600061412182613eeb565b61412b8185613a35565b935061413b818560208601613f07565b61414481613f31565b840191505092915050565b600060208201905081810360008301526141698184614116565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6141ae82613f31565b810181811067ffffffffffffffff821117156141cd576141cc614176565b5b80604052505050565b60006141e0613b9c565b90506141ec82826141a5565b919050565b600067ffffffffffffffff82111561420c5761420b614176565b5b61421582613f31565b9050602081019050919050565b82818337600083830152505050565b600061424461423f846141f1565b6141d6565b9050828152602081018484840111156142605761425f614171565b5b61426b848285614222565b509392505050565b600082601f83011261428857614287613c97565b5b8135614298848260208601614231565b91505092915050565b6000602082840312156142b7576142b6613ba6565b5b600082013567ffffffffffffffff8111156142d5576142d4613bab565b5b6142e184828501614273565b91505092915050565b6142f381613ade565b82525050565b600060208201905061430e60008301846142ea565b92915050565b6000806040838503121561432b5761432a613ba6565b5b600061433985828601613e32565b925050602061434a85828601613c82565b9150509250929050565b6000819050826020600502820111156143705761436f613ca1565b5b92915050565b60008190508260206005028201111561439257614391613ca1565b5b92915050565b6000819050826020600302820111156143b4576143b3613ca1565b5b92915050565b6000819050826020600302820111156143d6576143d5613ca1565b5b92915050565b60008060008060008060008060006102208a8c0312156143ff576143fe613ba6565b5b60008a013567ffffffffffffffff81111561441d5761441c613bab565b5b6144298c828d01614354565b995050602061443a8c828d01614376565b98505060c061444b8c828d01614398565b97505061012061445d8c828d01613dcf565b96505061014061446f8c828d01613dcf565b9550506101606144818c828d01613dcf565b9450506101806144938c828d01613dcf565b9350506101a08a013567ffffffffffffffff8111156144b5576144b4613bab565b5b6144c18c828d016143ba565b9250506101c06144d38c828d01614398565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061451d82613ade565b915061452883613ade565b92508282019050808211156145405761453f6144e3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061458082613ade565b915061458b83613ade565b92508282039050818111156145a3576145a26144e3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806145f057607f821691505b602082108103614603576146026145a9565b5b50919050565b600061461482613ade565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614646576146456144e3565b5b600182019050919050565b600061465d83856139c9565b935061466a838584614222565b82840190509392505050565b6000614683828486614651565b91508190509392505050565b600061469b8385613a35565b93506146a8838584614222565b6146b183613f31565b840190509392505050565b60006080820190506146d16000830188613d8e565b81810360208301526146e481868861468f565b90506146f360408301856142ea565b6147006060830184613d8e565b9695505050505050565b7f5742544300000000000000000000000000000000000000000000000000000000600082015250565b60006147406004836139c9565b915061474b8261470a565b600482019050919050565b600061476182614733565b9150819050919050565b7f5553444300000000000000000000000000000000000000000000000000000000600082015250565b60006147a16004836139c9565b91506147ac8261476b565b600482019050919050565b60006147c282614794565b9150819050919050565b7f5553445400000000000000000000000000000000000000000000000000000000600082015250565b60006148026004836139c9565b915061480d826147cc565b600482019050919050565b6000614823826147f5565b9150819050919050565b600080fd5b600080fd5b600080fd5b6000823560016060038336030381126148585761485761482d565b5b80830191505092915050565b60008235600160a0038336030381126148805761487f61482d565b5b80830191505092915050565b600080833560016020038436030381126148a9576148a861482d565b5b80840192508235915067ffffffffffffffff8211156148cb576148ca614832565b5b6020830192506001820236038313156148e7576148e6614837565b5b509250929050565b600082825260208201905092915050565b600061490c83856148ef565b9350614919838584614222565b61492283613f31565b840190509392505050565b60006040820190508181036000830152614948818587614900565b905061495760208301846142ea565b949350505050565b60008151905061496e81613c6b565b92915050565b60006020828403121561498a57614989613ba6565b5b60006149988482850161495f565b91505092915050565b60008160e01c9050919050565b600060033d11156149cd5760046000803e6149ca6000516149a1565b90505b90565b600060443d10614a5d576149e2613b9c565b60043d036004823e80513d602482011167ffffffffffffffff82111715614a0a575050614a5d565b808201805167ffffffffffffffff811115614a285750505050614a5d565b80602083010160043d038501811115614a45575050505050614a5d565b614a54826020018501866141a5565b82955050505050505b90565b6000608082019050614a756000830187613d8e565b614a826020830186613d8e565b614a8f60408301856142ea565b8181036060830152614aa18184614116565b905095945050505050565b6000608082019050614ac16000830187613d8e565b614ace6020830186613d8e565b614adb60408301856142ea565b614ae860608301846142ea565b95945050505050565b6000614afc82613ade565b9150614b0783613ade565b9250828202614b1581613ade565b91508282048414831517614b2c57614b2b6144e3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614b6d82613ade565b9150614b7883613ade565b925082614b8857614b87614b33565b5b828204905092915050565b7f726f757465720000000000000000000000000000000000000000000000000000600082015250565b6000614bc96006836139c9565b9150614bd482614b93565b600682019050919050565b6000614bea82614bbc565b9150819050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614c3b614c3682614bf4565b614c20565b82525050565b6000614c4d8284614c2a565b60018201915081905092915050565b600060a082019050614c716000830189613d8e565b614c7e60208301886142ea565b614c8b60408301876142ea565b8181036060830152614c9e818587614900565b9050614cad6080830184613c41565b979650505050505050565b600081519050919050565b6000614cce82614cb8565b614cd881856148ef565b9350614ce8818560208601613f07565b614cf181613f31565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000614d4482614cb8565b614d4e8185614d28565b9350614d5e818560208601613f07565b614d6781613f31565b840191505092915050565b6000614d7e8383614d39565b905092915050565b6000602082019050919050565b6000614d9e82614cfc565b614da88185614d07565b935083602082028501614dba85614d18565b8060005b85811015614df65784840389528151614dd78582614d72565b9450614de283614d86565b925060208a01995050600181019050614dbe565b50829750879550505050505092915050565b60006060820190508181036000830152614e228186614cc3565b90508181036020830152614e368185614d93565b9050614e4560408301846142ea565b949350505050565b6000604082019050614e626000830185613d8e565b8181036020830152614e748184614116565b90509392505050565b6000614e8882613eeb565b614e9281856139c9565b9350614ea2818560208601613f07565b80840191505092915050565b6000614eba8284614e7d565b915081905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000614f21602f83613a35565b9150614f2c82614ec5565b604082019050919050565b60006020820190508181036000830152614f5081614f14565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614fb3602e83613a35565b9150614fbe82614f57565b604082019050919050565b60006020820190508181036000830152614fe281614fa6565b9050919050565b600080833560016020038436030381126150065761500561482d565b5b80840192508235915067ffffffffffffffff82111561502857615027614832565b5b60208301925060018202360383131561504457615043614837565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026150b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261507c565b6150c3868361507c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006151006150fb6150f684613ade565b6150db565b613ade565b9050919050565b6000819050919050565b61511a836150e5565b61512e61512682615107565b848454615089565b825550505050565b600090565b615143615136565b61514e818484615111565b505050565b5b818110156151725761516760008261513b565b600181019050615154565b5050565b601f8211156151b75761518881615057565b6151918461506c565b810160208510156151a0578190505b6151b46151ac8561506c565b830182615153565b50505b505050565b600082821c905092915050565b60006151da600019846008026151bc565b1980831691505092915050565b60006151f383836151c9565b9150826002028217905092915050565b61520d838361504c565b67ffffffffffffffff81111561522657615225614176565b5b61523082546145d8565b61523b828285615176565b6000601f83116001811461526a5760008415615258578287013590505b61526285826151e7565b8655506152ca565b601f19841661527886615057565b60005b828110156152a05784890135825560018201915060208501945060208101905061527b565b868310156152bd57848901356152b9601f8916826151c9565b8355505b6001600288020188555050505b50505050505050565b600081546152e0816145d8565b6152ea81866139c9565b94506001821660008114615305576001811461531a5761534d565b60ff198316865281151582028601935061534d565b61532385615057565b60005b8381101561534557815481890152600182019150602081019050615326565b838801955050505b50505092915050565b600061536282846152d3565b915081905092915050565b7f71756f7465720000000000000000000000000000000000000000000000000000600082015250565b60006153a36006836139c9565b91506153ae8261536d565b600682019050919050565b60006153c482615396565b9150819050919050565b7f7377617070657200000000000000000000000000000000000000000000000000600082015250565b60006154046007836139c9565b915061540f826153ce565b600782019050919050565b6000615425826153f7565b9150819050919050565b600060059050919050565b6000819050919050565b60006154508385613ef6565b935061545d838584614222565b61546683613f31565b840190509392505050565b600061547e848484615444565b90509392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126154b3576154b2615491565b5b83810192508235915060208301925067ffffffffffffffff8211156154db576154da615487565b5b6001820236038313156154f1576154f061548c565b5b509250929050565b6000602082019050919050565b60006155118261542f565b61551b8185613ed6565b93508360208202850161552d8561543a565b8060005b858110156155735784840389526155488284615496565b615553868284615471565b955061555e846154f9565b935060208b019a505050600181019050615531565b50829750879550505050505092915050565b600060059050919050565b600081905092915050565b6000819050919050565b6155ae81613d7c565b82525050565b60006155c083836155a5565b60208301905092915050565b60006155db6020840184613dcf565b905092915050565b6000602082019050919050565b6155f981615585565b6156038184615590565b925061560e8261559b565b8060005b838110156156475761562482846155cc565b61562e87826155b4565b9650615639836155e3565b925050600181019050615612565b505050505050565b600060039050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6156858161564f565b61568f818461565a565b925061569a82615665565b8060005b838110156156d3576156b082846155cc565b6156ba87826155b4565b96506156c58361566f565b92505060018101905061569e565b505050505050565b600060039050919050565b600081905092915050565b6000819050919050565b60008154615708816145d8565b6157128186613ef6565b9450600182166000811461572d576001811461574357615776565b60ff198316865281151560200286019350615776565b61574c85615057565b60005b8381101561576e5781548189015260018201915060208101905061574f565b808801955050505b50505092915050565b600061578b83836156fb565b905092915050565b6000600182019050919050565b60006157ab826156db565b6157b581856156e6565b9350836020820285016157c7856156f1565b8060005b85811015615802578484038952816157e3858261577f565b94506157ee83615793565b925060208a019950506001810190506157cb565b50829750879550505050505092915050565b60006102408201905061582a600083018d613d8e565b818103602083015261583c818c615506565b905061584b604083018b6155f0565b61585860e083018a61567c565b615866610140830189613d8e565b615874610160830188613d8e565b615882610180830187613d8e565b6158906101a0830186613d8e565b8181036101c08301526158a381856157a0565b90506158b36101e083018461567c565b9b9a5050505050505050505050565b6000819050919050565b600060ff82169050919050565b60006158f46158ef6158ea846158c2565b6150db565b6158cc565b9050919050565b615904816158d9565b82525050565b600060208201905061591f60008301846158fb565b92915050565b600060608201905061593a6000830187613d8e565b818103602083015261594d81858761468f565b905061595c60408301846142ea565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061599b601f83613a35565b91506159a682615965565b602082019050919050565b600060208201905081810360008301526159ca8161598e565b9050919050565b60006040820190506159e66000830185613d8e565b6159f360208301846142ea565b9392505050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000615a56602b83613a35565b9150615a61826159fa565b604082019050919050565b60006020820190508181036000830152615a8581615a49565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000615ac26017836139c9565b9150615acd82615a8c565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000615b0e6011836139c9565b9150615b1982615ad8565b601182019050919050565b6000615b2f82615ab5565b9150615b3b8285614e7d565b9150615b4682615b01565b9150615b528284614e7d565b91508190509392505050565b615b6781613c35565b8114615b7257600080fd5b50565b600081519050615b8481615b5e565b92915050565b600060208284031215615ba057615b9f613ba6565b5b6000615bae84828501615b75565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000615c13602a83613a35565b9150615c1e82615bb7565b604082019050919050565b60006020820190508181036000830152615c4281615c06565b9050919050565b6000615c5482613ade565b915060008203615c6757615c666144e3565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000615ca8602083613a35565b9150615cb382615c72565b602082019050919050565b60006020820190508181036000830152615cd781615c9b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000615d69602683613a35565b9150615d7482615d0d565b604082019050919050565b60006020820190508181036000830152615d9881615d5c565b9050919050565b600081905092915050565b6000615db582614cb8565b615dbf8185615d9f565b9350615dcf818560208601613f07565b80840191505092915050565b6000615de78284615daa565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000615e28601d83613a35565b9150615e3382615df2565b602082019050919050565b60006020820190508181036000830152615e5781615e1b565b905091905056fea26469706673582212202d25f13f28a36bf6b2d3184f9ac2ffac8c311a16d458e191a402f3927284b2ea64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55452D04 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDE6BD687 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE6BD687 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0xDF668ECA EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0xE5DF800A EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0xEE67CC2A EQ PUSH2 0x879 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xD00411C9 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0xDC048CF2 EQ PUSH2 0x7BD JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xB14EC101 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xC869787E EQ PUSH2 0x705 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x55452D04 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x71372544 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x83D33319 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x635 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2AD753E4 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x32CC815D GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x32CC815D EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x35EE5F87 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x577 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x2AD753E4 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x2FFE9942 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x310495AB EQ PUSH2 0x4A9 JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH4 0x15AC7358 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x15AC7358 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x212F6039 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x25ACC985 EQ PUSH2 0x3EF JUMPI PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x828C404 EQ PUSH2 0x335 JUMPI PUSH2 0x2C8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2C8 JUMPI PUSH1 0x1E CHAINID SUB PUSH2 0x28B JUMPI PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD SWAP1 PUSH2 0x3A92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3C08 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x4011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x40C9 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1AF3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58C PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F4 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61F PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62C SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x4314 JUMP JUMPDEST PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x699 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x3C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C4 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x43DC JUMP JUMPDEST PUSH2 0x1CFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x755 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x42F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x792 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x28FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x4033 JUMP JUMPDEST PUSH2 0x29D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x3CFC JUMP JUMPDEST PUSH2 0x29F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x2B01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x838 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x863 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x3E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x42A1 JUMP JUMPDEST PUSH2 0x2BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E1 JUMPI PUSH2 0x8E0 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x90F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP SELFBALANCE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 GT PUSH2 0xA26 JUMPI PUSH2 0x9F4 PUSH1 0xFD PUSH1 0x1 DUP4 PUSH2 0x954 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99D SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1A2C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xA1E SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93A JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xAA1 JUMPI POP PUSH2 0xAA0 DUP3 PUSH2 0x2C37 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH2 0xAD2 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0xADA PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0xB49 PUSH2 0x102 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF0 SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x2D14 JUMP JUMPDEST PUSH32 0x22CB89E6358014BB27F5658E2B820189F8F4C9E3F7165ECF266EDC53BE12D9FA PUSH2 0xB72 PUSH2 0x2D9A JUMP JUMPDEST DUP5 DUP5 DUP8 PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBBA PUSH2 0x2DA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x103 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0xC11 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD766085D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x104 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF3 DUP3 PUSH1 0xFB PUSH2 0x2DAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD02 PUSH2 0x39A2 JUMP JUMPDEST PUSH1 0xFD PUSH1 0x5 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xDBE JUMPI DUP4 DUP3 ADD DUP1 SLOAD PUSH2 0xD31 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDAA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD7F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDAA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD8D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD1B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD0 DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0xDD9 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0xDE3 DUP4 DUP4 PUSH2 0x2DC3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0xE12 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xE65 SWAP1 PUSH2 0x4756 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xEA7 SWAP1 PUSH2 0x47B7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x102 PUSH1 0x40 MLOAD PUSH2 0xEE9 SWAP1 PUSH2 0x4818 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP8 SWAP1 POP DUP2 LT ISZERO PUSH2 0x195B JUMPI CALLDATASIZE DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xF3C JUMPI PUSH2 0xF3B PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xF4E SWAP2 SWAP1 PUSH2 0x483C JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x99C71E6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1000 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0x419FDE0100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x7D8EE31C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCDCA1753 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11AD SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x488C JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x11CC SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1227 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E0 JUMPI PUSH2 0x1236 PUSH2 0x49AE JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x12CF JUMPI POP PUSH2 0x124A PUSH2 0x49D0 JUMP JUMPDEST DUP1 PUSH2 0x1255 JUMPI POP PUSH2 0x12D1 JUMP JUMPDEST PUSH32 0xA5D58D69861729F1703D1B6E4DFB43369BB7F6049CC96E68F35A94129FC14DCE DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x12C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x12DB JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1359 JUMP JUMPDEST DUP1 SWAP2 POP PUSH32 0x2486DBD80D4AE64AA9AFAACC3370501ED791559E2FDFCD6101F3835150F31080 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x134F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x136B SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD GT ISZERO DUP1 PUSH2 0x13A6 JUMPI POP PUSH1 0x64 PUSH1 0x62 DUP3 PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x4B62 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x13A0 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD LT JUMPDEST ISZERO PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1792539F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT ISZERO DUP1 PUSH2 0x14A2 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144B SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1468 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT JUMPDEST ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x54E80D1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1543 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x157C SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x2D14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF8 SHL PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x4C41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1607 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x163B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1626 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP7 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD DUP9 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x16A7 SWAP2 SWAP1 PUSH2 0x488C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16BE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x16FB SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3593564C DUP4 DUP4 DUP10 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1757 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1779 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17A4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1831 JUMPI PUSH2 0x17B0 PUSH2 0x49AE JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1820 JUMPI POP PUSH2 0x17C4 PUSH2 0x49D0 JUMP JUMPDEST DUP1 PUSH2 0x17CF JUMPI POP PUSH2 0x1822 JUMP JUMPDEST PUSH32 0x48DBF1F65DC9FB918DCF47A87D0D7DBFE9CD78BCFAEA409049EE36785201CB91 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1803 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1812 SWAP3 SWAP2 SWAP1 PUSH2 0x4E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x182C JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1846 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187E SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP1 POP PUSH32 0xFA2DDA1CC1B86E41239702756B13EFFBC1A092B5C57E3AD320FBE4F3B13FE235 DUP8 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1908 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST DUP10 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x4864 JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP8 DUP6 PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1938 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x1953 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF1D JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFD DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x1987 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x19B3 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x102 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A40 SWAP2 SWAP1 PUSH2 0x4EAE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AEB SWAP2 SWAP1 PUSH2 0x4974 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFB PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5F SWAP1 PUSH2 0x4F37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B72 DUP3 DUP3 PUSH2 0x2DF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2D PUSH1 0xFB PUSH2 0x2E2B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP3 PUSH1 0x97 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2E40 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1D2B JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1D58 JUMPI POP PUSH2 0x1D3A ADDRESS PUSH2 0x2E5A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1D57 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1D97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8E SWAP1 PUSH2 0x4FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1DD4 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1E88 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1E5D JUMPI PUSH2 0x1E5C PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E70 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1EE6 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBFAC83B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F83 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF51A0D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD766085D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH32 0x4E12A74F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DD8261B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20BD PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x20C5 PUSH2 0x2ECE JUMP JUMPDEST PUSH1 0x5 DUP1 EQ PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xDA3EBF7300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x220A JUMPI DUP10 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2131 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x102 DUP13 DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2157 SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2165 SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x21C4 JUMPI PUSH2 0x21C3 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x21D4 SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH1 0xFD DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x21E8 JUMPI PUSH2 0x21E7 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD SWAP2 DUP3 PUSH2 0x21F6 SWAP3 SWAP2 SWAP1 PUSH2 0x5203 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x2202 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2102 JUMP JUMPDEST POP DUP6 PUSH2 0x104 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH2 0x103 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x238D JUMPI DUP4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x22BE SWAP2 SWAP1 PUSH2 0x4FE9 JUMP JUMPDEST PUSH2 0x105 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x22D3 JUMPI PUSH2 0x22D2 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD SWAP2 DUP3 PUSH2 0x22E1 SWAP3 SWAP2 SWAP1 PUSH2 0x5203 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x22F5 JUMPI PUSH2 0x22F4 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2308 SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x105 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x2320 JUMPI PUSH2 0x231F PUSH2 0x4546 JUMP JUMPDEST JUMPDEST ADD PUSH1 0x40 MLOAD PUSH2 0x232E SWAP2 SWAP1 PUSH2 0x5356 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x2385 SWAP1 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2292 JUMP JUMPDEST POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x239D SWAP1 PUSH2 0x4BDF JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x109 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x241C SWAP1 PUSH2 0x53B9 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x24C0 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x24F5 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x252A PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x255F PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH1 0xFB PUSH2 0x2F27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x25B0 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2598 JUMPI PUSH2 0x2597 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x25AB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2600 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x25E8 JUMPI PUSH2 0x25E7 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x25FB SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2650 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x2638 JUMPI PUSH2 0x2637 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x264B SWAP2 SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x267A PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP7 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26A4 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP6 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26CE PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP7 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x26F8 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP6 PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x275F PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0x108 PUSH1 0x40 MLOAD PUSH2 0x272B SWAP1 PUSH2 0x541A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DC3 JUMP JUMPDEST PUSH2 0x2789 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x27B3 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x27DD PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP1 PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x2827 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x2F3E JUMP JUMPDEST PUSH32 0x7F1F0DE4DC14E9AB39C52C069E883F78AB6F9C7854B254718A298E76F2EBDC6D CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x105 DUP12 PUSH1 0x40 MLOAD PUSH2 0x286A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 ISZERO PUSH2 0x28CB JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x28C2 SWAP2 SWAP1 PUSH2 0x590A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F4 PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2F9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x2925 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x298B JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF51A0D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x103 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x29DA DUP3 PUSH2 0xCBD JUMP JUMPDEST PUSH2 0x29E3 DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x29ED DUP4 DUP4 PUSH2 0x2DF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH2 0x2A1C DUP2 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x2A24 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2A93 PUSH2 0x102 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2A3A SWAP3 SWAP2 SWAP1 PUSH2 0x4676 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x2D14 JUMP JUMPDEST PUSH32 0x901C03DA5D88EB3D62AB4617E7B7D17D86DB16356823A7971127D5181A842FEF PUSH2 0x104 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2AEB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x2AFB PUSH2 0x2DA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x2B24 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B50 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B9D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B72 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B9D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B80 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP2 JUMP JUMPDEST PUSH2 0x108 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2CAA JUMPI POP PUSH2 0x2CA9 DUP3 PUSH2 0x2FAF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC2 DUP2 PUSH2 0x2CBD PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x3019 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x2D0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D01 SWAP1 PUSH2 0x59B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2D95 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2D33 SWAP3 SWAP2 SWAP1 PUSH2 0x59D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x309E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3166 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DCD DUP3 DUP3 PUSH2 0x3191 JUMP JUMPDEST PUSH2 0x2DF2 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3272 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2E01 DUP3 DUP3 PUSH2 0x32A2 JUMP JUMPDEST PUSH2 0x2E26 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x3384 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E39 DUP3 PUSH1 0x0 ADD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4F DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x3166 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2ECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC3 SWAP1 PUSH2 0x5A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2F1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F14 SWAP1 PUSH2 0x5A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F36 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x33C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F49 DUP4 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA8 DUP3 PUSH1 0x0 ADD PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3023 DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x309A JUMPI PUSH2 0x3030 DUP2 PUSH2 0x3435 JUMP JUMPDEST PUSH2 0x303E DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x304F SWAP3 SWAP2 SWAP1 PUSH2 0x5B24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3091 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3100 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x369E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x3122 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3121 SWAP2 SWAP1 PUSH2 0x5B8A JUMP JUMPDEST JUMPDEST PUSH2 0x3161 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3158 SWAP1 PUSH2 0x5C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x319B DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x326E JUMPI PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3213 PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329A DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x33C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32AC DUP3 DUP3 PUSH2 0x1C61 JUMP JUMPDEST ISZERO PUSH2 0x3380 JUMPI PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3325 PUSH2 0x2D9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AC DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x36B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D1 DUP4 DUP4 PUSH2 0x37CA JUMP JUMPDEST PUSH2 0x342A JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x342F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x345B DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x3462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x3475 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x347F SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3498 JUMPI PUSH2 0x3497 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34CA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3502 JUMPI PUSH2 0x3501 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3566 JUMPI PUSH2 0x3565 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x35A6 SWAP2 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH2 0x35B0 SWAP2 SWAP1 PUSH2 0x4512 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3650 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x35F2 JUMPI PUSH2 0x35F1 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3609 JUMPI PUSH2 0x3608 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x3649 SWAP1 PUSH2 0x5C49 JUMP JUMPDEST SWAP1 POP PUSH2 0x35B3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x3694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368B SWAP1 PUSH2 0x5CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x36AD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x37ED JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x37BE JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x36E8 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3700 SWAP2 SWAP1 PUSH2 0x4575 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x376F JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3721 JUMPI PUSH2 0x3720 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3745 JUMPI PUSH2 0x3744 PUSH2 0x4546 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x3783 JUMPI PUSH2 0x3782 PUSH2 0x5CDE JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x37C4 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3829 SWAP1 PUSH2 0x5D7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x385B SWAP2 SWAP1 PUSH2 0x5DDB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3898 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x389D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x38AE DUP8 DUP4 DUP4 DUP8 PUSH2 0x38BA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x391C JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3914 JUMPI PUSH2 0x38D4 DUP6 PUSH2 0x392F JUMP JUMPDEST PUSH2 0x3913 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390A SWAP1 PUSH2 0x5E3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3927 JUMP JUMPDEST PUSH2 0x3926 DUP4 DUP4 PUSH2 0x3952 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3965 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3999 SWAP2 SWAP1 PUSH2 0x414F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SWAP1 JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x39B1 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5745544800000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0A PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A15 DUP3 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2B DUP3 PUSH2 0x39FD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742070617961626C65206F6E207468697320636861696E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A7C PUSH1 0x19 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A87 DUP3 PUSH2 0x3A46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AAB DUP2 PUSH2 0x3A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AF1 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B03 DUP4 DUP4 PUSH2 0x3AE8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B27 DUP3 PUSH2 0x3AB2 JUMP JUMPDEST PUSH2 0x3B31 DUP2 DUP6 PUSH2 0x3ABD JUMP JUMPDEST SWAP4 POP PUSH2 0x3B3C DUP4 PUSH2 0x3ACE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B6D JUMPI DUP2 MLOAD PUSH2 0x3B54 DUP9 DUP3 PUSH2 0x3AF7 JUMP JUMPDEST SWAP8 POP PUSH2 0x3B5F DUP4 PUSH2 0x3B0F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B40 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B94 DUP2 DUP5 PUSH2 0x3B1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BE5 DUP2 PUSH2 0x3BB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C02 DUP2 PUSH2 0x3BDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C1E JUMPI PUSH2 0x3C1D PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C2C DUP5 DUP3 DUP6 ADD PUSH2 0x3BF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C4A DUP2 PUSH2 0x3C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C74 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP2 EQ PUSH2 0x3C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C91 DUP2 PUSH2 0x3C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3CBC JUMPI PUSH2 0x3CBB PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CD9 JUMPI PUSH2 0x3CD8 PUSH2 0x3C9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3CF5 JUMPI PUSH2 0x3CF4 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3D15 JUMPI PUSH2 0x3D14 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D23 DUP7 DUP3 DUP8 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D44 JUMPI PUSH2 0x3D43 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x3D50 DUP7 DUP3 DUP8 ADD PUSH2 0x3CA6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D87 DUP3 PUSH2 0x3D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D97 DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DC1 DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP2 EQ PUSH2 0x3DCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3DDE DUP2 PUSH2 0x3DB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DFA JUMPI PUSH2 0x3DF9 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E08 DUP5 DUP3 DUP6 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E24 DUP2 PUSH2 0x3E11 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E41 DUP2 PUSH2 0x3E1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5D JUMPI PUSH2 0x3E5C PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6B DUP5 DUP3 DUP6 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E7D DUP2 PUSH2 0x3E11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E98 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EB4 JUMPI PUSH2 0x3EB3 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EC2 DUP5 DUP3 DUP6 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F25 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F0A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4D DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x3F57 DUP2 DUP6 PUSH2 0x3EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x3F70 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F87 DUP4 DUP4 PUSH2 0x3F42 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA7 DUP3 PUSH2 0x3ECB JUMP JUMPDEST PUSH2 0x3FB1 DUP2 DUP6 PUSH2 0x3ED6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3FC3 DUP6 PUSH2 0x3EE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3FFF JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3FE0 DUP6 DUP3 PUSH2 0x3F7B JUMP JUMPDEST SWAP5 POP PUSH2 0x3FEB DUP4 PUSH2 0x3F8F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3FC7 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x402B DUP2 DUP5 PUSH2 0x3F9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x404A JUMPI PUSH2 0x4049 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4058 DUP6 DUP3 DUP7 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4069 DUP6 DUP3 DUP7 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A6 JUMPI PUSH2 0x40A5 PUSH2 0x3C9C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x40C2 JUMPI PUSH2 0x40C1 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40E0 JUMPI PUSH2 0x40DF PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40FE JUMPI PUSH2 0x40FD PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x410A DUP6 DUP3 DUP7 ADD PUSH2 0x4073 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4121 DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x412B DUP2 DUP6 PUSH2 0x3A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x413B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4144 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4169 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41AE DUP3 PUSH2 0x3F31 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x41CD JUMPI PUSH2 0x41CC PUSH2 0x4176 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E0 PUSH2 0x3B9C JUMP JUMPDEST SWAP1 POP PUSH2 0x41EC DUP3 DUP3 PUSH2 0x41A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x420C JUMPI PUSH2 0x420B PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH2 0x4215 DUP3 PUSH2 0x3F31 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4244 PUSH2 0x423F DUP5 PUSH2 0x41F1 JUMP JUMPDEST PUSH2 0x41D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4260 JUMPI PUSH2 0x425F PUSH2 0x4171 JUMP JUMPDEST JUMPDEST PUSH2 0x426B DUP5 DUP3 DUP6 PUSH2 0x4222 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4288 JUMPI PUSH2 0x4287 PUSH2 0x3C97 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4298 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4231 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42B7 JUMPI PUSH2 0x42B6 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42D5 JUMPI PUSH2 0x42D4 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x42E1 DUP5 DUP3 DUP6 ADD PUSH2 0x4273 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42F3 DUP2 PUSH2 0x3ADE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x430E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x432B JUMPI PUSH2 0x432A PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4339 DUP6 DUP3 DUP7 ADD PUSH2 0x3E32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x434A DUP6 DUP3 DUP7 ADD PUSH2 0x3C82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x5 MUL DUP3 ADD GT ISZERO PUSH2 0x4370 JUMPI PUSH2 0x436F PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x5 MUL DUP3 ADD GT ISZERO PUSH2 0x4392 JUMPI PUSH2 0x4391 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x43B4 JUMPI PUSH2 0x43B3 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x43D6 JUMPI PUSH2 0x43D5 PUSH2 0x3CA1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x220 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x43FF JUMPI PUSH2 0x43FE PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x441D JUMPI PUSH2 0x441C PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x4429 DUP13 DUP3 DUP14 ADD PUSH2 0x4354 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x443A DUP13 DUP3 DUP14 ADD PUSH2 0x4376 JUMP JUMPDEST SWAP9 POP POP PUSH1 0xC0 PUSH2 0x444B DUP13 DUP3 DUP14 ADD PUSH2 0x4398 JUMP JUMPDEST SWAP8 POP POP PUSH2 0x120 PUSH2 0x445D DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP7 POP POP PUSH2 0x140 PUSH2 0x446F DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP6 POP POP PUSH2 0x160 PUSH2 0x4481 DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP5 POP POP PUSH2 0x180 PUSH2 0x4493 DUP13 DUP3 DUP14 ADD PUSH2 0x3DCF JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1A0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44B5 JUMPI PUSH2 0x44B4 PUSH2 0x3BAB JUMP JUMPDEST JUMPDEST PUSH2 0x44C1 DUP13 DUP3 DUP14 ADD PUSH2 0x43BA JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C0 PUSH2 0x44D3 DUP13 DUP3 DUP14 ADD PUSH2 0x4398 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x451D DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4528 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4540 JUMPI PUSH2 0x453F PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4580 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x458B DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x45A3 JUMPI PUSH2 0x45A2 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x45F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4603 JUMPI PUSH2 0x4602 PUSH2 0x45A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4614 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4646 JUMPI PUSH2 0x4645 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465D DUP4 DUP6 PUSH2 0x39C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x466A DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4683 DUP3 DUP5 DUP7 PUSH2 0x4651 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x469B DUP4 DUP6 PUSH2 0x3A35 JUMP JUMPDEST SWAP4 POP PUSH2 0x46A8 DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x46B1 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x46D1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x46E4 DUP2 DUP7 DUP9 PUSH2 0x468F JUMP JUMPDEST SWAP1 POP PUSH2 0x46F3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4700 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3D8E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4740 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x474B DUP3 PUSH2 0x470A JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4761 DUP3 PUSH2 0x4733 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A1 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x47AC DUP3 PUSH2 0x476B JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C2 DUP3 PUSH2 0x4794 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 PUSH1 0x4 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x480D DUP3 PUSH2 0x47CC JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4823 DUP3 PUSH2 0x47F5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4858 JUMPI PUSH2 0x4857 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4880 JUMPI PUSH2 0x487F PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x48A9 JUMPI PUSH2 0x48A8 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x48CB JUMPI PUSH2 0x48CA PUSH2 0x4832 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x48E7 JUMPI PUSH2 0x48E6 PUSH2 0x4837 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490C DUP4 DUP6 PUSH2 0x48EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4919 DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x4922 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4948 DUP2 DUP6 DUP8 PUSH2 0x4900 JUMP JUMPDEST SWAP1 POP PUSH2 0x4957 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x496E DUP2 PUSH2 0x3C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x498A JUMPI PUSH2 0x4989 PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4998 DUP5 DUP3 DUP6 ADD PUSH2 0x495F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x49CD JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x49CA PUSH1 0x0 MLOAD PUSH2 0x49A1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x4A5D JUMPI PUSH2 0x49E2 PUSH2 0x3B9C JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4A0A JUMPI POP POP PUSH2 0x4A5D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A28 JUMPI POP POP POP POP PUSH2 0x4A5D JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x4A45 JUMPI POP POP POP POP POP PUSH2 0x4A5D JUMP JUMPDEST PUSH2 0x4A54 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x41A5 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4A75 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4A82 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4A8F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4AA1 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4AC1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4ACE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4ADB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4AE8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFC DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B07 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B15 DUP2 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4B2C JUMPI PUSH2 0x4B2B PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B6D DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B78 DUP4 PUSH2 0x3ADE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B88 JUMPI PUSH2 0x4B87 PUSH2 0x4B33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x726F757465720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC9 PUSH1 0x6 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BD4 DUP3 PUSH2 0x4B93 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BEA DUP3 PUSH2 0x4BBC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3B PUSH2 0x4C36 DUP3 PUSH2 0x4BF4 JUMP JUMPDEST PUSH2 0x4C20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C4D DUP3 DUP5 PUSH2 0x4C2A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4C71 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x4C7E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x42EA JUMP JUMPDEST PUSH2 0x4C8B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x42EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4C9E DUP2 DUP6 DUP8 PUSH2 0x4900 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CAD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3C41 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCE DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x4CD8 DUP2 DUP6 PUSH2 0x48EF JUMP JUMPDEST SWAP4 POP PUSH2 0x4CE8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4CF1 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D44 DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x4D4E DUP2 DUP6 PUSH2 0x4D28 JUMP JUMPDEST SWAP4 POP PUSH2 0x4D5E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST PUSH2 0x4D67 DUP2 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D7E DUP4 DUP4 PUSH2 0x4D39 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9E DUP3 PUSH2 0x4CFC JUMP JUMPDEST PUSH2 0x4DA8 DUP2 DUP6 PUSH2 0x4D07 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x4DBA DUP6 PUSH2 0x4D18 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4DF6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x4DD7 DUP6 DUP3 PUSH2 0x4D72 JUMP JUMPDEST SWAP5 POP PUSH2 0x4DE2 DUP4 PUSH2 0x4D86 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4DBE JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E22 DUP2 DUP7 PUSH2 0x4CC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E36 DUP2 DUP6 PUSH2 0x4D93 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E62 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4E74 DUP2 DUP5 PUSH2 0x4116 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E88 DUP3 PUSH2 0x3EEB JUMP JUMPDEST PUSH2 0x4E92 DUP2 DUP6 PUSH2 0x39C9 JUMP JUMPDEST SWAP4 POP PUSH2 0x4EA2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EBA DUP3 DUP5 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F21 PUSH1 0x2F DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F2C DUP3 PUSH2 0x4EC5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F50 DUP2 PUSH2 0x4F14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FB3 PUSH1 0x2E DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FBE DUP3 PUSH2 0x4F57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FE2 DUP2 PUSH2 0x4FA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x5006 JUMPI PUSH2 0x5005 PUSH2 0x482D JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5028 JUMPI PUSH2 0x5027 PUSH2 0x4832 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5044 JUMPI PUSH2 0x5043 PUSH2 0x4837 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x50B9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x507C JUMP JUMPDEST PUSH2 0x50C3 DUP7 DUP4 PUSH2 0x507C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5100 PUSH2 0x50FB PUSH2 0x50F6 DUP5 PUSH2 0x3ADE JUMP JUMPDEST PUSH2 0x50DB JUMP JUMPDEST PUSH2 0x3ADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x511A DUP4 PUSH2 0x50E5 JUMP JUMPDEST PUSH2 0x512E PUSH2 0x5126 DUP3 PUSH2 0x5107 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5089 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5143 PUSH2 0x5136 JUMP JUMPDEST PUSH2 0x514E DUP2 DUP5 DUP5 PUSH2 0x5111 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5172 JUMPI PUSH2 0x5167 PUSH1 0x0 DUP3 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5154 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x51B7 JUMPI PUSH2 0x5188 DUP2 PUSH2 0x5057 JUMP JUMPDEST PUSH2 0x5191 DUP5 PUSH2 0x506C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x51A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x51B4 PUSH2 0x51AC DUP6 PUSH2 0x506C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5153 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51DA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x51BC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F3 DUP4 DUP4 PUSH2 0x51C9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x520D DUP4 DUP4 PUSH2 0x504C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5226 JUMPI PUSH2 0x5225 PUSH2 0x4176 JUMP JUMPDEST JUMPDEST PUSH2 0x5230 DUP3 SLOAD PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x523B DUP3 DUP3 DUP6 PUSH2 0x5176 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x526A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5258 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x5262 DUP6 DUP3 PUSH2 0x51E7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x52CA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5278 DUP7 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x52A0 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x527B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52BD JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x52B9 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x51C9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x52E0 DUP2 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x52EA DUP2 DUP7 PUSH2 0x39C9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5305 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x531A JUMPI PUSH2 0x534D JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x534D JUMP JUMPDEST PUSH2 0x5323 DUP6 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5345 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5326 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5362 DUP3 DUP5 PUSH2 0x52D3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x71756F7465720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A3 PUSH1 0x6 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x53AE DUP3 PUSH2 0x536D JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53C4 DUP3 PUSH2 0x5396 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7377617070657200000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5404 PUSH1 0x7 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x540F DUP3 PUSH2 0x53CE JUMP JUMPDEST PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5425 DUP3 PUSH2 0x53F7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5450 DUP4 DUP6 PUSH2 0x3EF6 JUMP JUMPDEST SWAP4 POP PUSH2 0x545D DUP4 DUP6 DUP5 PUSH2 0x4222 JUMP JUMPDEST PUSH2 0x5466 DUP4 PUSH2 0x3F31 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547E DUP5 DUP5 DUP5 PUSH2 0x5444 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x54B3 JUMPI PUSH2 0x54B2 PUSH2 0x5491 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x54DB JUMPI PUSH2 0x54DA PUSH2 0x5487 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x54F1 JUMPI PUSH2 0x54F0 PUSH2 0x548C JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5511 DUP3 PUSH2 0x542F JUMP JUMPDEST PUSH2 0x551B DUP2 DUP6 PUSH2 0x3ED6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x552D DUP6 PUSH2 0x543A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5573 JUMPI DUP5 DUP5 SUB DUP10 MSTORE PUSH2 0x5548 DUP3 DUP5 PUSH2 0x5496 JUMP JUMPDEST PUSH2 0x5553 DUP7 DUP3 DUP5 PUSH2 0x5471 JUMP JUMPDEST SWAP6 POP PUSH2 0x555E DUP5 PUSH2 0x54F9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP12 ADD SWAP11 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5531 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55AE DUP2 PUSH2 0x3D7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55C0 DUP4 DUP4 PUSH2 0x55A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55DB PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3DCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F9 DUP2 PUSH2 0x5585 JUMP JUMPDEST PUSH2 0x5603 DUP2 DUP5 PUSH2 0x5590 JUMP JUMPDEST SWAP3 POP PUSH2 0x560E DUP3 PUSH2 0x559B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5647 JUMPI PUSH2 0x5624 DUP3 DUP5 PUSH2 0x55CC JUMP JUMPDEST PUSH2 0x562E DUP8 DUP3 PUSH2 0x55B4 JUMP JUMPDEST SWAP7 POP PUSH2 0x5639 DUP4 PUSH2 0x55E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5612 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5685 DUP2 PUSH2 0x564F JUMP JUMPDEST PUSH2 0x568F DUP2 DUP5 PUSH2 0x565A JUMP JUMPDEST SWAP3 POP PUSH2 0x569A DUP3 PUSH2 0x5665 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56D3 JUMPI PUSH2 0x56B0 DUP3 DUP5 PUSH2 0x55CC JUMP JUMPDEST PUSH2 0x56BA DUP8 DUP3 PUSH2 0x55B4 JUMP JUMPDEST SWAP7 POP PUSH2 0x56C5 DUP4 PUSH2 0x566F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x569E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x5708 DUP2 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x5712 DUP2 DUP7 PUSH2 0x3EF6 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x572D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5743 JUMPI PUSH2 0x5776 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x5776 JUMP JUMPDEST PUSH2 0x574C DUP6 PUSH2 0x5057 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x576E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x574F JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578B DUP4 DUP4 PUSH2 0x56FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57AB DUP3 PUSH2 0x56DB JUMP JUMPDEST PUSH2 0x57B5 DUP2 DUP6 PUSH2 0x56E6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x57C7 DUP6 PUSH2 0x56F1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5802 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x57E3 DUP6 DUP3 PUSH2 0x577F JUMP JUMPDEST SWAP5 POP PUSH2 0x57EE DUP4 PUSH2 0x5793 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x57CB JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 ADD SWAP1 POP PUSH2 0x582A PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x583C DUP2 DUP13 PUSH2 0x5506 JUMP JUMPDEST SWAP1 POP PUSH2 0x584B PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x55F0 JUMP JUMPDEST PUSH2 0x5858 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x567C JUMP JUMPDEST PUSH2 0x5866 PUSH2 0x140 DUP4 ADD DUP10 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5874 PUSH2 0x160 DUP4 ADD DUP9 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5882 PUSH2 0x180 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x5890 PUSH2 0x1A0 DUP4 ADD DUP7 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x1C0 DUP4 ADD MSTORE PUSH2 0x58A3 DUP2 DUP6 PUSH2 0x57A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x58B3 PUSH2 0x1E0 DUP4 ADD DUP5 PUSH2 0x567C JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58F4 PUSH2 0x58EF PUSH2 0x58EA DUP5 PUSH2 0x58C2 JUMP JUMPDEST PUSH2 0x50DB JUMP JUMPDEST PUSH2 0x58CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5904 DUP2 PUSH2 0x58D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x591F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x593A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3D8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x594D DUP2 DUP6 DUP8 PUSH2 0x468F JUMP JUMPDEST SWAP1 POP PUSH2 0x595C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x599B PUSH1 0x1F DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x59A6 DUP3 PUSH2 0x5965 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59CA DUP2 PUSH2 0x598E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x59E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D8E JUMP JUMPDEST PUSH2 0x59F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A56 PUSH1 0x2B DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A61 DUP3 PUSH2 0x59FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A85 DUP2 PUSH2 0x5A49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC2 PUSH1 0x17 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5ACD DUP3 PUSH2 0x5A8C JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B0E PUSH1 0x11 DUP4 PUSH2 0x39C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B19 DUP3 PUSH2 0x5AD8 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2F DUP3 PUSH2 0x5AB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B3B DUP3 DUP6 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP PUSH2 0x5B46 DUP3 PUSH2 0x5B01 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B52 DUP3 DUP5 PUSH2 0x4E7D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5B67 DUP2 PUSH2 0x3C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x5B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B84 DUP2 PUSH2 0x5B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BA0 JUMPI PUSH2 0x5B9F PUSH2 0x3BA6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BAE DUP5 DUP3 DUP6 ADD PUSH2 0x5B75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C13 PUSH1 0x2A DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C1E DUP3 PUSH2 0x5BB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C42 DUP2 PUSH2 0x5C06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C54 DUP3 PUSH2 0x3ADE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x5C67 JUMPI PUSH2 0x5C66 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CA8 PUSH1 0x20 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CB3 DUP3 PUSH2 0x5C72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CD7 DUP2 PUSH2 0x5C9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D69 PUSH1 0x26 DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D74 DUP3 PUSH2 0x5D0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D98 DUP2 PUSH2 0x5D5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB5 DUP3 PUSH2 0x4CB8 JUMP JUMPDEST PUSH2 0x5DBF DUP2 DUP6 PUSH2 0x5D9F JUMP JUMPDEST SWAP4 POP PUSH2 0x5DCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3F07 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE7 DUP3 DUP5 PUSH2 0x5DAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E28 PUSH1 0x1D DUP4 PUSH2 0x3A35 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E33 DUP3 PUSH2 0x5DF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E57 DUP2 PUSH2 0x5E1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0x25 CALL EXTCODEHASH 0x28 LOG3 PUSH12 0xF6B2D3184F9AC2FFAC8C311A AND 0xD4 PC 0xE1 SWAP2 LOG4 MUL RETURN SWAP3 PUSH19 0x84B2EA64736F6C634300081200330000000000 ","sourceMap":"783:10807:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:2;11429:13;:23;11425:157;;11469:10;:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11463:33;;;11504:9;11463:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11425:157;;;11539:35;;;;;;;;;;:::i;:::-;;;;;;;;11425:157;783:10807;;;;;9629:323;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;983:223:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9958:383:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1580:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5178:276;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4855:129:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11132:124:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11262:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5280:145:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5730:3021:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1497:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1058:65;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9387:236;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6389:214:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5079:93:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1529:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1147:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10485:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1791:151:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3350:145:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2320:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1619:36:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2268:2805;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2110:140:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5460:264:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5705:147:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8999:382:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1662:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1227:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:63;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9629:323;9684:16;9709:25;9771:1;9751:17;:21;;;;:::i;:::-;9737:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9709:64;;9794:21;9780:8;9789:1;9780:11;;;;;;;;:::i;:::-;;;;;;;:35;;;;;9827:6;9836:1;9827:10;;9822:103;9844:17;9839:1;:22;9822:103;;9891:26;9901:10;9914:1;9912;:3;;;;:::i;:::-;9901:15;;;;;;;:::i;:::-;;;9891:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:26::i;:::-;9877:8;9886:1;9877:11;;;;;;;;:::i;:::-;;;;;;;:40;;;;;9863:3;;;;;:::i;:::-;;;;9822:103;;;;9938:8;9931:15;;;9629:323;:::o;983:223:0:-;1068:4;1106:53;1091:68;;;:11;:68;;;;:108;;;;1163:36;1187:11;1163:23;:36::i;:::-;1091:108;1084:115;;983:223;;;:::o;9958:383:30:-;1186:20;2798:16:1;2809:4;2798:10;:16::i;:::-;2526:21:5::1;:19;:21::i;:::-;10173:86:30::2;10203:10;10214:12;;10203:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10230:19;;;;;;;;;;;10251:7;10173:22;:86::i;:::-;10271:64;10278:12;:10;:12::i;:::-;10292;;10306:7;10315:19;;;;;;;;;;;10271:64;;;;;;;;;;:::i;:::-;;;;;;;;2568:20:5::1;:18;:20::i;:::-;9958:383:30::0;;;;:::o;1580:34::-;;;;;;;;;;;;;:::o;5178:276::-;1003:22;2798:16:1;2809:4;2798:10;:16::i;:::-;5342:3:30::1;5308:38;;:22;:38;;::::0;5304:92:::1;;5364:24;;;;;;;;;;;;;;5304:92;5426:22;5402:21;;:46;;;;;;;;;;;;;;;;;;5178:276:::0;;:::o;4855:129:1:-;4929:7;4955:6;:12;4962:4;4955:12;;;;;;;;;;;:22;;;4948:29;;4855:129;;;:::o;11132:124:30:-;11208:7;11231:19;11244:5;11231:9;:12;;:19;;;;:::i;:::-;11224:26;;11132:124;;;:::o;11262:96::-;11310:16;;:::i;:::-;11342:10;11335:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11262:96;:::o;5280:145:1:-;5363:18;5376:4;5363:12;:18::i;:::-;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;5730:3021:30:-;1266:20;2798:16:1;2809:4;2798:10;:16::i;:::-;5882:12:30::1;5897:10;:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5882:33;;5922:12;5937:10;:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5922:33;;5962:12;5977:10;:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5962:33;;6002:12;6017:10;:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6002:33;;6049:9;6044:2702;6068:11;;:18;;6064:1;:22;6044:2702;;;6102:30;6135:11;;6147:1;6135:14;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;6102:47;;6231:4;6192:44;;:10;:17;;;;;;;;:::i;:::-;:27;;;;;;;;;;:::i;:::-;:44;;;6188:94;;6256:16;;;;;;;;;;;;;;6188:94;6319:4;6296:27;;:10;:19;;;;;;;;;;:::i;:::-;:27;;;;:58;;;;;6350:4;6327:27;;:10;:19;;;;;;;;;;:::i;:::-;:27;;;;6296:58;6292:107;;;6374:15;;;;;;;;;;;;;;6292:107;6485:4;6463:26;;:10;:18;;;;;;;;;;:::i;:::-;:26;;;;:56;;;;;6515:4;6493:26;;:10;:18;;;;;;;;;;:::i;:::-;:26;;;;6463:56;6459:104;;;6539:14;;;;;;;;;;;;;;6459:104;6681:23;6725:6;;;;;;;;;;;:22;;;6748:10;:17;;;;;;;;:::i;:::-;:22;;;;;;;;:::i;:::-;6772:10;:17;;;;;;;;:::i;:::-;:26;;;6725:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6721:430;;;;:::i;:::-;;;::::0;::::1;;;;;:::i;:::-;;;;;;;;7050:89;7061:10;:18;;;;;;;;;;:::i;:::-;7081:10;:19;;;;;;;;;;:::i;:::-;7102:10;:17;;;;;;;;:::i;:::-;:26;;;7130:8;7050:89;;;;;;;;;:::i;:::-;;;;;;;;6994:157;6721:430;;;;;;;::::0;::::1;;;;;;;;6861:9;6843:27;;6890:91;6896:10;:18;;;;;;;;;;:::i;:::-;6916:10;:19;;;;;;;;;;:::i;:::-;6937:10;:17;;;;;;;;:::i;:::-;:26;;;6965:15;6890:91;;;;;;;;;:::i;:::-;;;;;;;;6800:193;6721:430;7301:1;7263:10;:17;;;;;;;;:::i;:::-;:34;;;:39;;:108;;;;7368:3;7362:2;7344:15;:20;;;;:::i;:::-;7343:28;;;;:::i;:::-;7306:10;:17;;;;;;;;:::i;:::-;:34;;;:65;7263:108;7259:166;;;7391:24;;;;;;;;;;;;;;7259:166;7455:12;7477:10;:18;;;;;;;;;;:::i;:::-;7455:41;;7539:1;7509:10;:17;;;;;;;;:::i;:::-;:26;;;:31;;:94;;;;7573:5;:15;;;7597:4;7573:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7544:10;:17;;;;;;;;:::i;:::-;:26;;;:59;7509:94;7505:143;;;7623:15;;;;;;;;;;;;;;7505:143;7658:22;7690:10;:19;;;;;;;;;;:::i;:::-;7683:37;;;7729:4;7683:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7658:77;;7786:86;7809:5;7816:17;:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7845:10;:17;;;;;;;;:::i;:::-;:26;;;7786:22;:86::i;:::-;7925:21;510:4:26::0;7966:40:30::1;;7949:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;7925:82;;8016:21;8052:1;8040:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8016:38;;8185:10;:17;;;;;;;;:::i;:::-;:27;;;;;;;;;;:::i;:::-;8214:10;:17;;;;;;;;:::i;:::-;:26;;;8242:10;:17;;;;;;;;:::i;:::-;:34;;;8278:10;:17;;;;;;;;:::i;:::-;:22;;;;;;;;:::i;:::-;8302:5;8174:134;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8162:6;8169:1;8162:9;;;;;;;;:::i;:::-;;;;;;;:146;;;;8338:17;:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8321:53;;;8375:8;8385:6;8393:10;:17;;;;;;;;:::i;:::-;:26;;;8321:99;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;8317:422;;;;:::i;:::-;;;::::0;::::1;;;;;:::i;:::-;;;;;;;;8690:39;8700:10;:18;;;;;;;;;;:::i;:::-;8720:8;8690:39;;;;;;;:::i;:::-;;;;;;;;8638:101;8317:422;;;;;;;::::0;::::1;;;;;;;;8432:20;8462:10;:19;;;;;;;;;;:::i;:::-;8455:37;;;8501:4;8455:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8432:75;;8523:104;8528:10;:18;;;;;;;;;;:::i;:::-;8548:10;:19;;;;;;;;;;:::i;:::-;8569:10;:17;;;;;;;;:::i;:::-;:26;;;8612:14;8597:12;:29;;;;:::i;:::-;8523:104;;;;;;;;;:::i;:::-;;;;;;;;8421:216;8317:422;6093:2653;;;;;;6088:3;;;;;:::i;:::-;;;;6044:2702;;;;5841:2910;;;;5730:3021:::0;;;:::o;1497:27::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1058:65::-;1100:23;1058:65;:::o;9387:236::-;9464:7;9526:12;9548:10;9559:12;9548:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9526:47;;9587:5;:15;;;9611:4;9587:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9580:37;;;9387:236;;;:::o;6389:214:1:-;6495:12;:10;:12::i;:::-;6484:23;;:7;:23;;;6476:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;5079:93:30:-;5130:13;5152:14;;;;;;;;;;;;;;;;;;;5079:93;:::o;1529:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1147:59::-;1186:20;1147:59;:::o;10485:111::-;10549:7;10572:18;:9;:16;:18::i;:::-;10565:25;;10485:111;:::o;1791:151:0:-;1881:7;1907:28;1929:5;1907:12;:18;1920:4;1907:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1900:35;;1791:151;;;;:::o;3350:145:1:-;3436:4;3459:6;:12;3466:4;3459:12;;;;;;;;;;;:20;;:29;3480:7;3459:29;;;;;;;;;;;;;;;;;;;;;;;;;3452:36;;3350:145;;;;:::o;2320:49::-;2365:4;2320:49;;;:::o;1619:36:30:-;;;;;;;;;;;;;:::o;2268:2805::-;3279:19:4;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;2683:1:30::1;2658:27;;:10;2669:1;2658:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;:58;;;;;2714:1;2689:27;;:10;2700:1;2689:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;2658:58;:89;;;;;2745:1;2720:27;;:10;2731:1;2720:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;2658:89;2654:140;;;2765:21;;;;;;;;;;;;;;2654:140;2836:1;2804:34;;:20;:34;;::::0;2800:86:::1;;2856:22;;;;;;;;;;;;;;2800:86;2930:1;2896:36;;:22;:36;;::::0;2892:90:::1;;2950:24;;;;;;;;;;;;;;2892:90;3019:1;2992:29;;:15;:29;;::::0;2988:89:::1;;3039:30;;;;;;;;;;;;;;2988:89;3115:1;3087:30;;:16;:30;;::::0;3083:91:::1;;3135:31;;;;;;;;;;;;;;3083:91;3182:32;:30;:32::i;:::-;3221:34;:32;:34::i;:::-;3290:22;3268:18:::0;:44:::1;3264:109;;3330:35;;;;;;;;;;;;;;3264:109;3388:6;3383:149;3404:18;3400:1;:22;3383:149;;;3467:15;3483:1;3467:18;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3438:10;3449:11;3461:1;3449:14;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3438:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;3510:11;3522:1;3510:14;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3494:10;3505:1;3494:13;;;;;;;:::i;:::-;;;:30;;;;;;;:::i;:::-;;3424:3;;;;;:::i;:::-;;;;3383:149;;;;3564:22;3540:21;;:46;;;;;;;;;;;;;;;;;;3615:20;3593:19;;:42;;;;;;;;;;;;;;;;;;3679:6;3674:166;3695:20;3691:1;:24;3674:166;;;3749:13;3763:1;3749:16;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3731:12;3744:1;3731:15;;;;;;;:::i;:::-;;;:34;;;;;;;:::i;:::-;;3811:18;3830:1;3811:21;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3774:17;3792:12;3805:1;3792:15;;;;;;;:::i;:::-;;;3774:34;;;;;;:::i;:::-;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;3717:3;;;;;:::i;:::-;;;;3674:166;;;;3873:17;:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3848:10;;:53;;;;;;;;;;;;;;;;;;3925:17;:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3908:6;;:45;;;;;;;;;;;;;;;;;;4020:29;1003:22;4020:9;:13;;:29;;;;:::i;:::-;;4056:30;1100:23;4056:9;:13;;:30;;;;:::i;:::-;;4093:27;1186:20;4093:9;:13;;:27;;;;:::i;:::-;;4127;1266:20;4127:9;:13;;:27;;;;:::i;:::-;;4163:41;1003:22;4190:10;4201:1;4190:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4163:10;:41::i;:::-;4211;1003:22;4238:10;4249:1;4238:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4211:10;:41::i;:::-;4259;1003:22;4286:10;4297:1;4286:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4259:10;:41::i;:::-;4307:44;1100:23;4335:15;4307:10;:44::i;:::-;4358:45;1100:23;4386:16;4358:10;:45::i;:::-;4410:41;1186:20;4435:15;4410:10;:41::i;:::-;4458:42;1186:20;4483:16;4458:10;:42::i;:::-;4507:54;1266:20;4532:17;:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4507:10;:54::i;:::-;4570:45;1003:22;::::0;4570:13:::1;:45::i;:::-;4622:47;1100:23;::::0;4622:13:::1;:47::i;:::-;4676:41;1186:20;::::0;4676:13:::1;:41::i;:::-;4724:43;1266:20;1003:22;4724:13;:43::i;:::-;4811:256;4830:10;4849:11;4869:15;4893:10;4912:20;4941:22;4972:15;4996:16;5021:12;5042:18;4811:256;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3651:14:4::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;2268:2805:30;;;;;;;;;:::o;2110:140:0:-;2190:7;2216:27;:12;:18;2229:4;2216:18;;;;;;;;;;;:25;:27::i;:::-;2209:34;;2110:140;;;:::o;5460:264:30:-;1003:22;2798:16:1;2809:4;2798:10;:16::i;:::-;5618:3:30::1;5586:36;;:20;:36;;::::0;5582:88:::1;;5640:22;;;;;;;;;;;;;;5582:88;5698:20;5676:19;;:42;;;;;;;;;;;;;;;;;;5460:264:::0;;:::o;5705:147:1:-;5789:18;5802:4;5789:12;:18::i;:::-;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;:::-;5705:147:::0;;;:::o;8999:382:30:-;1100:23;2798:16:1;2809:4;2798:10;:16::i;:::-;2526:21:5::1;:19;:21::i;:::-;9221:88:30::2;9251:10;9262:12;;9251:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9278:21;;;;;;;;;;;9301:7;9221:22;:88::i;:::-;9321:54;9330:21;;;;;;;;;;;9353:12;;9367:7;9321:54;;;;;;;;;:::i;:::-;;;;;;;;2568:20:5::1;:18;:20::i;:::-;8999:382:30::0;;;;:::o;1662:29::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1227:59::-;1266:20;1227:59;:::o;962:63::-;1003:22;962:63;:::o;1696:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3050:213:1:-;3135:4;3173:43;3158:58;;;:11;:58;;;;:98;;;;3220:36;3244:11;3220:23;:36::i;:::-;3158:98;3151:105;;3050:213;;;:::o;3789:103::-;3855:30;3866:4;3872:12;:10;:12::i;:::-;3855:10;:30::i;:::-;3789:103;:::o;2601:287:5:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;941:175:17:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;886:96:7:-;939:7;965:10;958:17;;886:96;:::o;2894:209:5:-;1808:1;3074:7;:22;;;;2894:209::o;7107:129:13:-;7181:7;7207:22;7211:3;:10;;7223:5;7207:3;:22::i;:::-;7200:29;;7107:129;;;;:::o;2338:166:0:-;2425:31;2442:4;2448:7;2425:16;:31::i;:::-;2466;2489:7;2466:12;:18;2479:4;2466:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2338:166;;:::o;2593:171::-;2681:32;2699:4;2705:7;2681:17;:32::i;:::-;2723:34;2749:7;2723:12;:18;2736:4;2723:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2593:171;;:::o;6650:115:13:-;6713:7;6739:19;6747:3;:10;;6739:7;:19::i;:::-;6732:26;;6650:115;;;:::o;9574:156::-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;1423:320:6:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2909:75:1:-;5374:13:4;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2909:75:1:o;2006:109:5:-;5374:13:4;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1808:1:5::1;2086:7;:22;;;;2006:109::o:0;5930:123:13:-;6000:4;6023:23;6028:3;:10;;6040:5;6023:4;:23::i;:::-;6016:30;;5930:123;;;;:::o;7523:247:1:-;7606:25;7634:18;7647:4;7634:12;:18::i;:::-;7606:46;;7687:9;7662:6;:12;7669:4;7662:12;;;;;;;;;;;:22;;:34;;;;7753:9;7734:17;7728:4;7711:52;;;;;;;;;;7596:174;7523:247;;:::o;9117:115:13:-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;1081:166:9:-;1166:4;1204:36;1189:51;;;:11;:51;;;;1182:58;;1081:166;;;:::o;4173:501:1:-;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4585:13;;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4299:358;;;;;;;;;;;:::i;:::-;;;;;;;;4256:412;4173:501;;:::o;5196:642:17:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4923:118:13:-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;7938:233:1:-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8091:4;8059:6;:12;8066:4;8059:12;;;;;;;;;;;:20;;:29;8080:7;8059:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8141:12;:10;:12::i;:::-;8114:40;;8132:7;8114:40;;8126:4;8114:40;;;;;;;;;;8016:149;7938:233;;:::o;8316:150:13:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;8342:234:1:-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:6;:12;8470:4;8463:12;;;;;;;;;;;:20;;:29;8484:7;8463:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8546:12;:10;:12::i;:::-;8519:40;;8537:7;8519:40;;8531:4;8519:40;;;;;;;;;;8421:149;8342:234;;:::o;8634:156:13:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;4474:107::-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;2225:404::-;2288:4;2309:21;2319:3;2324:5;2309:9;:21::i;:::-;2304:319;;2346:3;:11;;2363:5;2346:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:3;:11;;:18;;;;2504:3;:12;;:19;2517:5;2504:19;;;;;;;;;;;:40;;;;2565:4;2558:11;;;;2304:319;2607:5;2600:12;;2225:404;;;;;:::o;2473:149:8:-;2531:13;2563:52;2591:4;2575:22;;376:2;2563:52;;:11;:52::i;:::-;2556:59;;2473:149;;;:::o;1884:437::-;1959:13;1984:19;2029:1;2020:6;2016:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2096:9;2121:1;2112:6;2108:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2179:3;2171:5;:11;2162:21;;;;;;;:::i;:::-;;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2207:1;2197:11;;;;;2131:3;;;;:::i;:::-;;;2091:128;;;;2245:1;2236:5;:10;2228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:6;2293:21;;;1884:437;;;;:::o;4108:223:19:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;2797:1388:13:-;2863:4;2979:18;3000:3;:12;;:19;3013:5;3000:19;;;;;;;;;;;;2979:40;;3048:1;3034:10;:15;3030:1149;;3403:21;3440:1;3427:10;:14;;;;:::i;:::-;3403:38;;3455:17;3496:1;3475:3;:11;;:18;;;;:22;;;;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3842:10;3816:3;:12;;:23;3829:9;3816:23;;;;;;;;;;;:36;;;;3544:366;3512:398;3988:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;2797:1388;;;;;:::o;4266:127::-;4339:4;4385:1;4362:3;:12;;:19;4375:5;4362:19;;;;;;;;;;;;:24;;4355:31;;4266:127;;;;:::o;5165:446:19:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:148:34:-;109:11;146:3;131:18;;7:148;;;;:::o;161:154::-;301:6;297:1;289:6;285:14;278:30;161:154;:::o;321:400::-;481:3;502:84;584:1;579:3;502:84;:::i;:::-;495:91;;595:93;684:3;595:93;:::i;:::-;713:1;708:3;704:11;697:18;;321:400;;;:::o;727:381::-;912:3;934:148;1078:3;934:148;:::i;:::-;927:155;;1099:3;1092:10;;727:381;;;:::o;1114:169::-;1198:11;1232:6;1227:3;1220:19;1272:4;1267:3;1263:14;1248:29;;1114:169;;;;:::o;1289:175::-;1429:27;1425:1;1417:6;1413:14;1406:51;1289:175;:::o;1470:366::-;1612:3;1633:67;1697:2;1692:3;1633:67;:::i;:::-;1626:74;;1709:93;1798:3;1709:93;:::i;:::-;1827:2;1822:3;1818:12;1811:19;;1470:366;;;:::o;1842:419::-;2008:4;2046:2;2035:9;2031:18;2023:26;;2095:9;2089:4;2085:20;2081:1;2070:9;2066:17;2059:47;2123:131;2249:4;2123:131;:::i;:::-;2115:139;;1842:419;;;:::o;2267:114::-;2334:6;2368:5;2362:12;2352:22;;2267:114;;;:::o;2387:184::-;2486:11;2520:6;2515:3;2508:19;2560:4;2555:3;2551:14;2536:29;;2387:184;;;;:::o;2577:132::-;2644:4;2667:3;2659:11;;2697:4;2692:3;2688:14;2680:22;;2577:132;;;:::o;2715:77::-;2752:7;2781:5;2770:16;;2715:77;;;:::o;2798:108::-;2875:24;2893:5;2875:24;:::i;:::-;2870:3;2863:37;2798:108;;:::o;2912:179::-;2981:10;3002:46;3044:3;3036:6;3002:46;:::i;:::-;3080:4;3075:3;3071:14;3057:28;;2912:179;;;;:::o;3097:113::-;3167:4;3199;3194:3;3190:14;3182:22;;3097:113;;;:::o;3246:732::-;3365:3;3394:54;3442:5;3394:54;:::i;:::-;3464:86;3543:6;3538:3;3464:86;:::i;:::-;3457:93;;3574:56;3624:5;3574:56;:::i;:::-;3653:7;3684:1;3669:284;3694:6;3691:1;3688:13;3669:284;;;3770:6;3764:13;3797:63;3856:3;3841:13;3797:63;:::i;:::-;3790:70;;3883:60;3936:6;3883:60;:::i;:::-;3873:70;;3729:224;3716:1;3713;3709:9;3704:14;;3669:284;;;3673:14;3969:3;3962:10;;3370:608;;;3246:732;;;;:::o;3984:373::-;4127:4;4165:2;4154:9;4150:18;4142:26;;4214:9;4208:4;4204:20;4200:1;4189:9;4185:17;4178:47;4242:108;4345:4;4336:6;4242:108;:::i;:::-;4234:116;;3984:373;;;;:::o;4363:75::-;4396:6;4429:2;4423:9;4413:19;;4363:75;:::o;4444:117::-;4553:1;4550;4543:12;4567:117;4676:1;4673;4666:12;4690:149;4726:7;4766:66;4759:5;4755:78;4744:89;;4690:149;;;:::o;4845:120::-;4917:23;4934:5;4917:23;:::i;:::-;4910:5;4907:34;4897:62;;4955:1;4952;4945:12;4897:62;4845:120;:::o;4971:137::-;5016:5;5054:6;5041:20;5032:29;;5070:32;5096:5;5070:32;:::i;:::-;4971:137;;;;:::o;5114:327::-;5172:6;5221:2;5209:9;5200:7;5196:23;5192:32;5189:119;;;5227:79;;:::i;:::-;5189:119;5347:1;5372:52;5416:7;5407:6;5396:9;5392:22;5372:52;:::i;:::-;5362:62;;5318:116;5114:327;;;;:::o;5447:90::-;5481:7;5524:5;5517:13;5510:21;5499:32;;5447:90;;;:::o;5543:109::-;5624:21;5639:5;5624:21;:::i;:::-;5619:3;5612:34;5543:109;;:::o;5658:210::-;5745:4;5783:2;5772:9;5768:18;5760:26;;5796:65;5858:1;5847:9;5843:17;5834:6;5796:65;:::i;:::-;5658:210;;;;:::o;5874:122::-;5947:24;5965:5;5947:24;:::i;:::-;5940:5;5937:35;5927:63;;5986:1;5983;5976:12;5927:63;5874:122;:::o;6002:139::-;6048:5;6086:6;6073:20;6064:29;;6102:33;6129:5;6102:33;:::i;:::-;6002:139;;;;:::o;6147:117::-;6256:1;6253;6246:12;6270:117;6379:1;6376;6369:12;6393:117;6502:1;6499;6492:12;6530:553;6588:8;6598:6;6648:3;6641:4;6633:6;6629:17;6625:27;6615:122;;6656:79;;:::i;:::-;6615:122;6769:6;6756:20;6746:30;;6799:18;6791:6;6788:30;6785:117;;;6821:79;;:::i;:::-;6785:117;6935:4;6927:6;6923:17;6911:29;;6989:3;6981:4;6973:6;6969:17;6959:8;6955:32;6952:41;6949:128;;;6996:79;;:::i;:::-;6949:128;6530:553;;;;;:::o;7089:674::-;7169:6;7177;7185;7234:2;7222:9;7213:7;7209:23;7205:32;7202:119;;;7240:79;;:::i;:::-;7202:119;7360:1;7385:53;7430:7;7421:6;7410:9;7406:22;7385:53;:::i;:::-;7375:63;;7331:117;7515:2;7504:9;7500:18;7487:32;7546:18;7538:6;7535:30;7532:117;;;7568:79;;:::i;:::-;7532:117;7681:65;7738:7;7729:6;7718:9;7714:22;7681:65;:::i;:::-;7663:83;;;;7458:298;7089:674;;;;;:::o;7769:126::-;7806:7;7846:42;7839:5;7835:54;7824:65;;7769:126;;;:::o;7901:96::-;7938:7;7967:24;7985:5;7967:24;:::i;:::-;7956:35;;7901:96;;;:::o;8003:118::-;8090:24;8108:5;8090:24;:::i;:::-;8085:3;8078:37;8003:118;;:::o;8127:222::-;8220:4;8258:2;8247:9;8243:18;8235:26;;8271:71;8339:1;8328:9;8324:17;8315:6;8271:71;:::i;:::-;8127:222;;;;:::o;8355:122::-;8428:24;8446:5;8428:24;:::i;:::-;8421:5;8418:35;8408:63;;8467:1;8464;8457:12;8408:63;8355:122;:::o;8483:139::-;8529:5;8567:6;8554:20;8545:29;;8583:33;8610:5;8583:33;:::i;:::-;8483:139;;;;:::o;8628:329::-;8687:6;8736:2;8724:9;8715:7;8711:23;8707:32;8704:119;;;8742:79;;:::i;:::-;8704:119;8862:1;8887:53;8932:7;8923:6;8912:9;8908:22;8887:53;:::i;:::-;8877:63;;8833:117;8628:329;;;;:::o;8963:77::-;9000:7;9029:5;9018:16;;8963:77;;;:::o;9046:122::-;9119:24;9137:5;9119:24;:::i;:::-;9112:5;9109:35;9099:63;;9158:1;9155;9148:12;9099:63;9046:122;:::o;9174:139::-;9220:5;9258:6;9245:20;9236:29;;9274:33;9301:5;9274:33;:::i;:::-;9174:139;;;;:::o;9319:329::-;9378:6;9427:2;9415:9;9406:7;9402:23;9398:32;9395:119;;;9433:79;;:::i;:::-;9395:119;9553:1;9578:53;9623:7;9614:6;9603:9;9599:22;9578:53;:::i;:::-;9568:63;;9524:117;9319:329;;;;:::o;9654:118::-;9741:24;9759:5;9741:24;:::i;:::-;9736:3;9729:37;9654:118;;:::o;9778:222::-;9871:4;9909:2;9898:9;9894:18;9886:26;;9922:71;9990:1;9979:9;9975:17;9966:6;9922:71;:::i;:::-;9778:222;;;;:::o;10006:329::-;10065:6;10114:2;10102:9;10093:7;10089:23;10085:32;10082:119;;;10120:79;;:::i;:::-;10082:119;10240:1;10265:53;10310:7;10301:6;10290:9;10286:22;10265:53;:::i;:::-;10255:63;;10211:117;10006:329;;;;:::o;10341:114::-;10416:6;10444:4;10434:14;;10341:114;;;:::o;10461:153::-;10568:11;10605:3;10590:18;;10461:153;;;;:::o;10620:108::-;10695:4;10718:3;10710:11;;10620:108;;;:::o;10734:99::-;10786:6;10820:5;10814:12;10804:22;;10734:99;;;:::o;10839:159::-;10913:11;10947:6;10942:3;10935:19;10987:4;10982:3;10978:14;10963:29;;10839:159;;;;:::o;11004:246::-;11085:1;11095:113;11109:6;11106:1;11103:13;11095:113;;;11194:1;11189:3;11185:11;11179:18;11175:1;11170:3;11166:11;11159:39;11131:2;11128:1;11124:10;11119:15;;11095:113;;;11242:1;11233:6;11228:3;11224:16;11217:27;11066:184;11004:246;;;:::o;11256:102::-;11297:6;11348:2;11344:7;11339:2;11332:5;11328:14;11324:28;11314:38;;11256:102;;;:::o;11364:357::-;11442:3;11470:39;11503:5;11470:39;:::i;:::-;11525:61;11579:6;11574:3;11525:61;:::i;:::-;11518:68;;11595:65;11653:6;11648:3;11641:4;11634:5;11630:16;11595:65;:::i;:::-;11685:29;11707:6;11685:29;:::i;:::-;11680:3;11676:39;11669:46;;11446:275;11364:357;;;;:::o;11727:196::-;11816:10;11851:66;11913:3;11905:6;11851:66;:::i;:::-;11837:80;;11727:196;;;;:::o;11929:121::-;12007:4;12039;12034:3;12030:14;12022:22;;11929:121;;;:::o;12086:979::-;12221:3;12250:62;12306:5;12250:62;:::i;:::-;12328:94;12415:6;12410:3;12328:94;:::i;:::-;12321:101;;12448:3;12493:4;12485:6;12481:17;12476:3;12472:27;12523:64;12581:5;12523:64;:::i;:::-;12610:7;12641:1;12626:394;12651:6;12648:1;12645:13;12626:394;;;12722:9;12716:4;12712:20;12707:3;12700:33;12773:6;12767:13;12801:84;12880:4;12865:13;12801:84;:::i;:::-;12793:92;;12908:68;12969:6;12908:68;:::i;:::-;12898:78;;13005:4;13000:3;12996:14;12989:21;;12686:334;12673:1;12670;12666:9;12661:14;;12626:394;;;12630:14;13036:4;13029:11;;13056:3;13049:10;;12226:839;;;;;12086:979;;;;:::o;13071:405::-;13230:4;13268:2;13257:9;13253:18;13245:26;;13317:9;13311:4;13307:20;13303:1;13292:9;13288:17;13281:47;13345:124;13464:4;13455:6;13345:124;:::i;:::-;13337:132;;13071:405;;;;:::o;13482:474::-;13550:6;13558;13607:2;13595:9;13586:7;13582:23;13578:32;13575:119;;;13613:79;;:::i;:::-;13575:119;13733:1;13758:53;13803:7;13794:6;13783:9;13779:22;13758:53;:::i;:::-;13748:63;;13704:117;13860:2;13886:53;13931:7;13922:6;13911:9;13907:22;13886:53;:::i;:::-;13876:63;;13831:118;13482:474;;;;;:::o;14009:598::-;14112:8;14122:6;14172:3;14165:4;14157:6;14153:17;14149:27;14139:122;;14180:79;;:::i;:::-;14139:122;14293:6;14280:20;14270:30;;14323:18;14315:6;14312:30;14309:117;;;14345:79;;:::i;:::-;14309:117;14459:4;14451:6;14447:17;14435:29;;14513:3;14505:4;14497:6;14493:17;14483:8;14479:32;14476:41;14473:128;;;14520:79;;:::i;:::-;14473:128;14009:598;;;;;:::o;14613:619::-;14729:6;14737;14786:2;14774:9;14765:7;14761:23;14757:32;14754:119;;;14792:79;;:::i;:::-;14754:119;14940:1;14929:9;14925:17;14912:31;14970:18;14962:6;14959:30;14956:117;;;14992:79;;:::i;:::-;14956:117;15105:110;15207:7;15198:6;15187:9;15183:22;15105:110;:::i;:::-;15087:128;;;;14883:342;14613:619;;;;;:::o;15238:377::-;15326:3;15354:39;15387:5;15354:39;:::i;:::-;15409:71;15473:6;15468:3;15409:71;:::i;:::-;15402:78;;15489:65;15547:6;15542:3;15535:4;15528:5;15524:16;15489:65;:::i;:::-;15579:29;15601:6;15579:29;:::i;:::-;15574:3;15570:39;15563:46;;15330:285;15238:377;;;;:::o;15621:313::-;15734:4;15772:2;15761:9;15757:18;15749:26;;15821:9;15815:4;15811:20;15807:1;15796:9;15792:17;15785:47;15849:78;15922:4;15913:6;15849:78;:::i;:::-;15841:86;;15621:313;;;;:::o;15940:117::-;16049:1;16046;16039:12;16063:180;16111:77;16108:1;16101:88;16208:4;16205:1;16198:15;16232:4;16229:1;16222:15;16249:281;16332:27;16354:4;16332:27;:::i;:::-;16324:6;16320:40;16462:6;16450:10;16447:22;16426:18;16414:10;16411:34;16408:62;16405:88;;;16473:18;;:::i;:::-;16405:88;16513:10;16509:2;16502:22;16292:238;16249:281;;:::o;16536:129::-;16570:6;16597:20;;:::i;:::-;16587:30;;16626:33;16654:4;16646:6;16626:33;:::i;:::-;16536:129;;;:::o;16671:308::-;16733:4;16823:18;16815:6;16812:30;16809:56;;;16845:18;;:::i;:::-;16809:56;16883:29;16905:6;16883:29;:::i;:::-;16875:37;;16967:4;16961;16957:15;16949:23;;16671:308;;;:::o;16985:146::-;17082:6;17077:3;17072;17059:30;17123:1;17114:6;17109:3;17105:16;17098:27;16985:146;;;:::o;17137:425::-;17215:5;17240:66;17256:49;17298:6;17256:49;:::i;:::-;17240:66;:::i;:::-;17231:75;;17329:6;17322:5;17315:21;17367:4;17360:5;17356:16;17405:3;17396:6;17391:3;17387:16;17384:25;17381:112;;;17412:79;;:::i;:::-;17381:112;17502:54;17549:6;17544:3;17539;17502:54;:::i;:::-;17221:341;17137:425;;;;;:::o;17582:340::-;17638:5;17687:3;17680:4;17672:6;17668:17;17664:27;17654:122;;17695:79;;:::i;:::-;17654:122;17812:6;17799:20;17837:79;17912:3;17904:6;17897:4;17889:6;17885:17;17837:79;:::i;:::-;17828:88;;17644:278;17582:340;;;;:::o;17928:509::-;17997:6;18046:2;18034:9;18025:7;18021:23;18017:32;18014:119;;;18052:79;;:::i;:::-;18014:119;18200:1;18189:9;18185:17;18172:31;18230:18;18222:6;18219:30;18216:117;;;18252:79;;:::i;:::-;18216:117;18357:63;18412:7;18403:6;18392:9;18388:22;18357:63;:::i;:::-;18347:73;;18143:287;17928:509;;;;:::o;18443:118::-;18530:24;18548:5;18530:24;:::i;:::-;18525:3;18518:37;18443:118;;:::o;18567:222::-;18660:4;18698:2;18687:9;18683:18;18675:26;;18711:71;18779:1;18768:9;18764:17;18755:6;18711:71;:::i;:::-;18567:222;;;;:::o;18795:474::-;18863:6;18871;18920:2;18908:9;18899:7;18895:23;18891:32;18888:119;;;18926:79;;:::i;:::-;18888:119;19046:1;19071:53;19116:7;19107:6;19096:9;19092:22;19071:53;:::i;:::-;19061:63;;19017:117;19173:2;19199:53;19244:7;19235:6;19224:9;19220:22;19199:53;:::i;:::-;19189:63;;19144:118;18795:474;;;;;:::o;19292:261::-;19375:8;19406:6;19394:18;;19459:3;19451:4;19445;19441:15;19431:8;19427:30;19424:39;19421:126;;;19466:79;;:::i;:::-;19421:126;19292:261;;;;:::o;19577:249::-;19648:8;19679:6;19667:18;;19732:3;19724:4;19718;19714:15;19704:8;19700:30;19697:39;19694:126;;;19739:79;;:::i;:::-;19694:126;19577:249;;;;:::o;19850:::-;19921:8;19952:6;19940:18;;20005:3;19997:4;19991;19987:15;19977:8;19973:30;19970:39;19967:126;;;20012:79;;:::i;:::-;19967:126;19850:249;;;;:::o;20122:261::-;20205:8;20236:6;20224:18;;20289:3;20281:4;20275;20271:15;20261:8;20257:30;20254:39;20251:126;;;20296:79;;:::i;:::-;20251:126;20122:261;;;;:::o;20389:2115::-;20669:6;20677;20685;20693;20701;20709;20717;20725;20733;20782:3;20770:9;20761:7;20757:23;20753:33;20750:120;;;20789:79;;:::i;:::-;20750:120;20937:1;20926:9;20922:17;20909:31;20967:18;20959:6;20956:30;20953:117;;;20989:79;;:::i;:::-;20953:117;21094:90;21176:7;21167:6;21156:9;21152:22;21094:90;:::i;:::-;21084:100;;20880:314;21233:2;21259:78;21329:7;21320:6;21309:9;21305:22;21259:78;:::i;:::-;21249:88;;21204:143;21386:3;21413:78;21483:7;21474:6;21463:9;21459:22;21413:78;:::i;:::-;21403:88;;21357:144;21540:3;21567:53;21612:7;21603:6;21592:9;21588:22;21567:53;:::i;:::-;21557:63;;21511:119;21669:3;21696:53;21741:7;21732:6;21721:9;21717:22;21696:53;:::i;:::-;21686:63;;21640:119;21798:3;21825:53;21870:7;21861:6;21850:9;21846:22;21825:53;:::i;:::-;21815:63;;21769:119;21927:3;21954:53;21999:7;21990:6;21979:9;21975:22;21954:53;:::i;:::-;21944:63;;21898:119;22084:3;22073:9;22069:19;22056:33;22116:18;22108:6;22105:30;22102:117;;;22138:79;;:::i;:::-;22102:117;22243:90;22325:7;22316:6;22305:9;22301:22;22243:90;:::i;:::-;22233:100;;22027:316;22382:3;22409:78;22479:7;22470:6;22459:9;22455:22;22409:78;:::i;:::-;22399:88;;22353:144;20389:2115;;;;;;;;;;;:::o;22510:180::-;22558:77;22555:1;22548:88;22655:4;22652:1;22645:15;22679:4;22676:1;22669:15;22696:191;22736:3;22755:20;22773:1;22755:20;:::i;:::-;22750:25;;22789:20;22807:1;22789:20;:::i;:::-;22784:25;;22832:1;22829;22825:9;22818:16;;22853:3;22850:1;22847:10;22844:36;;;22860:18;;:::i;:::-;22844:36;22696:191;;;;:::o;22893:180::-;22941:77;22938:1;22931:88;23038:4;23035:1;23028:15;23062:4;23059:1;23052:15;23079:194;23119:4;23139:20;23157:1;23139:20;:::i;:::-;23134:25;;23173:20;23191:1;23173:20;:::i;:::-;23168:25;;23217:1;23214;23210:9;23202:17;;23241:1;23235:4;23232:11;23229:37;;;23246:18;;:::i;:::-;23229:37;23079:194;;;;:::o;23279:180::-;23327:77;23324:1;23317:88;23424:4;23421:1;23414:15;23448:4;23445:1;23438:15;23465:320;23509:6;23546:1;23540:4;23536:12;23526:22;;23593:1;23587:4;23583:12;23614:18;23604:81;;23670:4;23662:6;23658:17;23648:27;;23604:81;23732:2;23724:6;23721:14;23701:18;23698:38;23695:84;;23751:18;;:::i;:::-;23695:84;23516:269;23465:320;;;:::o;23791:233::-;23830:3;23853:24;23871:5;23853:24;:::i;:::-;23844:33;;23899:66;23892:5;23889:77;23886:103;;23969:18;;:::i;:::-;23886:103;24016:1;24009:5;24005:13;23998:20;;23791:233;;;:::o;24054:330::-;24170:3;24191:89;24273:6;24268:3;24191:89;:::i;:::-;24184:96;;24290:56;24339:6;24334:3;24327:5;24290:56;:::i;:::-;24371:6;24366:3;24362:16;24355:23;;24054:330;;;;;:::o;24390:295::-;24532:3;24554:105;24655:3;24646:6;24638;24554:105;:::i;:::-;24547:112;;24676:3;24669:10;;24390:295;;;;;:::o;24715:317::-;24813:3;24834:71;24898:6;24893:3;24834:71;:::i;:::-;24827:78;;24915:56;24964:6;24959:3;24952:5;24915:56;:::i;:::-;24996:29;25018:6;24996:29;:::i;:::-;24991:3;24987:39;24980:46;;24715:317;;;;;:::o;25038:664::-;25245:4;25283:3;25272:9;25268:19;25260:27;;25297:71;25365:1;25354:9;25350:17;25341:6;25297:71;:::i;:::-;25415:9;25409:4;25405:20;25400:2;25389:9;25385:18;25378:48;25443:88;25526:4;25517:6;25509;25443:88;:::i;:::-;25435:96;;25541:72;25609:2;25598:9;25594:18;25585:6;25541:72;:::i;:::-;25623;25691:2;25680:9;25676:18;25667:6;25623:72;:::i;:::-;25038:664;;;;;;;;:::o;25708:154::-;25848:6;25844:1;25836:6;25832:14;25825:30;25708:154;:::o;25868:400::-;26028:3;26049:84;26131:1;26126:3;26049:84;:::i;:::-;26042:91;;26142:93;26231:3;26142:93;:::i;:::-;26260:1;26255:3;26251:11;26244:18;;25868:400;;;:::o;26274:381::-;26459:3;26481:148;26625:3;26481:148;:::i;:::-;26474:155;;26646:3;26639:10;;26274:381;;;:::o;26661:154::-;26801:6;26797:1;26789:6;26785:14;26778:30;26661:154;:::o;26821:400::-;26981:3;27002:84;27084:1;27079:3;27002:84;:::i;:::-;26995:91;;27095:93;27184:3;27095:93;:::i;:::-;27213:1;27208:3;27204:11;27197:18;;26821:400;;;:::o;27227:381::-;27412:3;27434:148;27578:3;27434:148;:::i;:::-;27427:155;;27599:3;27592:10;;27227:381;;;:::o;27614:154::-;27754:6;27750:1;27742:6;27738:14;27731:30;27614:154;:::o;27774:400::-;27934:3;27955:84;28037:1;28032:3;27955:84;:::i;:::-;27948:91;;28048:93;28137:3;28048:93;:::i;:::-;28166:1;28161:3;28157:11;28150:18;;27774:400;;;:::o;28180:381::-;28365:3;28387:148;28531:3;28387:148;:::i;:::-;28380:155;;28552:3;28545:10;;28180:381;;;:::o;28567:117::-;28676:1;28673;28666:12;28690:117;28799:1;28796;28789:12;28813:117;28922:1;28919;28912:12;28936:396;29032:4;29086:11;29073:25;29186:1;29180:4;29176:12;29165:8;29149:14;29145:29;29141:48;29121:18;29117:73;29107:168;;29194:79;;:::i;:::-;29107:168;29306:18;29296:8;29292:33;29284:41;;29037:295;28936:396;;;;:::o;29338:402::-;29440:4;29494:11;29481:25;29594:1;29588:4;29584:12;29573:8;29557:14;29553:29;29549:48;29529:18;29525:73;29515:168;;29602:79;;:::i;:::-;29515:168;29714:18;29704:8;29700:33;29692:41;;29445:295;29338:402;;;;:::o;29746:724::-;29823:4;29829:6;29885:11;29872:25;29985:1;29979:4;29975:12;29964:8;29948:14;29944:29;29940:48;29920:18;29916:73;29906:168;;29993:79;;:::i;:::-;29906:168;30105:18;30095:8;30091:33;30083:41;;30157:4;30144:18;30134:28;;30185:18;30177:6;30174:30;30171:117;;;30207:79;;:::i;:::-;30171:117;30315:2;30309:4;30305:13;30297:21;;30372:4;30364:6;30360:17;30344:14;30340:38;30334:4;30330:49;30327:136;;;30382:79;;:::i;:::-;30327:136;29836:634;29746:724;;;;;:::o;30476:168::-;30559:11;30593:6;30588:3;30581:19;30633:4;30628:3;30624:14;30609:29;;30476:168;;;;:::o;30672:314::-;30768:3;30789:70;30852:6;30847:3;30789:70;:::i;:::-;30782:77;;30869:56;30918:6;30913:3;30906:5;30869:56;:::i;:::-;30950:29;30972:6;30950:29;:::i;:::-;30945:3;30941:39;30934:46;;30672:314;;;;;:::o;30992:439::-;31141:4;31179:2;31168:9;31164:18;31156:26;;31228:9;31222:4;31218:20;31214:1;31203:9;31199:17;31192:47;31256:86;31337:4;31328:6;31320;31256:86;:::i;:::-;31248:94;;31352:72;31420:2;31409:9;31405:18;31396:6;31352:72;:::i;:::-;30992:439;;;;;;:::o;31437:143::-;31494:5;31525:6;31519:13;31510:22;;31541:33;31568:5;31541:33;:::i;:::-;31437:143;;;;:::o;31586:351::-;31656:6;31705:2;31693:9;31684:7;31680:23;31676:32;31673:119;;;31711:79;;:::i;:::-;31673:119;31831:1;31856:64;31912:7;31903:6;31892:9;31888:22;31856:64;:::i;:::-;31846:74;;31802:128;31586:351;;;;:::o;31943:106::-;31987:8;32036:5;32031:3;32027:15;32006:36;;31943:106;;;:::o;32055:183::-;32090:3;32128:1;32110:16;32107:23;32104:128;;;32166:1;32163;32160;32145:23;32188:34;32219:1;32213:8;32188:34;:::i;:::-;32181:41;;32104:128;32055:183;:::o;32244:711::-;32283:3;32321:4;32303:16;32300:26;32329:5;32297:39;32358:20;;:::i;:::-;32433:1;32415:16;32411:24;32408:1;32402:4;32387:49;32466:4;32460:11;32565:16;32558:4;32550:6;32546:17;32543:39;32510:18;32502:6;32499:30;32483:113;32480:146;;;32611:5;;;;32480:146;32657:6;32651:4;32647:17;32693:3;32687:10;32720:18;32712:6;32709:30;32706:43;;;32742:5;;;;;;32706:43;32790:6;32783:4;32778:3;32774:14;32770:27;32849:1;32831:16;32827:24;32821:4;32817:35;32812:3;32809:44;32806:57;;;32856:5;;;;;;;32806:57;32873;32921:6;32915:4;32911:17;32903:6;32899:30;32893:4;32873:57;:::i;:::-;32946:3;32939:10;;32287:668;;;;;32244:711;;:::o;32961:644::-;33158:4;33196:3;33185:9;33181:19;33173:27;;33210:71;33278:1;33267:9;33263:17;33254:6;33210:71;:::i;:::-;33291:72;33359:2;33348:9;33344:18;33335:6;33291:72;:::i;:::-;33373;33441:2;33430:9;33426:18;33417:6;33373:72;:::i;:::-;33492:9;33486:4;33482:20;33477:2;33466:9;33462:18;33455:48;33520:78;33593:4;33584:6;33520:78;:::i;:::-;33512:86;;32961:644;;;;;;;:::o;33611:553::-;33788:4;33826:3;33815:9;33811:19;33803:27;;33840:71;33908:1;33897:9;33893:17;33884:6;33840:71;:::i;:::-;33921:72;33989:2;33978:9;33974:18;33965:6;33921:72;:::i;:::-;34003;34071:2;34060:9;34056:18;34047:6;34003:72;:::i;:::-;34085;34153:2;34142:9;34138:18;34129:6;34085:72;:::i;:::-;33611:553;;;;;;;:::o;34170:410::-;34210:7;34233:20;34251:1;34233:20;:::i;:::-;34228:25;;34267:20;34285:1;34267:20;:::i;:::-;34262:25;;34322:1;34319;34315:9;34344:30;34362:11;34344:30;:::i;:::-;34333:41;;34523:1;34514:7;34510:15;34507:1;34504:22;34484:1;34477:9;34457:83;34434:139;;34553:18;;:::i;:::-;34434:139;34218:362;34170:410;;;;:::o;34586:180::-;34634:77;34631:1;34624:88;34731:4;34728:1;34721:15;34755:4;34752:1;34745:15;34772:185;34812:1;34829:20;34847:1;34829:20;:::i;:::-;34824:25;;34863:20;34881:1;34863:20;:::i;:::-;34858:25;;34902:1;34892:35;;34907:18;;:::i;:::-;34892:35;34949:1;34946;34942:9;34937:14;;34772:185;;;;:::o;34963:156::-;35103:8;35099:1;35091:6;35087:14;35080:32;34963:156;:::o;35125:400::-;35285:3;35306:84;35388:1;35383:3;35306:84;:::i;:::-;35299:91;;35399:93;35488:3;35399:93;:::i;:::-;35517:1;35512:3;35508:11;35501:18;;35125:400;;;:::o;35531:381::-;35716:3;35738:148;35882:3;35738:148;:::i;:::-;35731:155;;35903:3;35896:10;;35531:381;;;:::o;35918:149::-;35954:7;35994:66;35987:5;35983:78;35972:89;;35918:149;;;:::o;36073:78::-;36111:7;36140:5;36129:16;;36073:78;;;:::o;36157:153::-;36260:43;36279:23;36296:5;36279:23;:::i;:::-;36260:43;:::i;:::-;36255:3;36248:56;36157:153;;:::o;36316:251::-;36426:3;36441:73;36510:3;36501:6;36441:73;:::i;:::-;36539:1;36534:3;36530:11;36523:18;;36558:3;36551:10;;36316:251;;;;:::o;36573:759::-;36800:4;36838:3;36827:9;36823:19;36815:27;;36852:71;36920:1;36909:9;36905:17;36896:6;36852:71;:::i;:::-;36933:72;37001:2;36990:9;36986:18;36977:6;36933:72;:::i;:::-;37015;37083:2;37072:9;37068:18;37059:6;37015:72;:::i;:::-;37134:9;37128:4;37124:20;37119:2;37108:9;37104:18;37097:48;37162:86;37243:4;37234:6;37226;37162:86;:::i;:::-;37154:94;;37258:67;37320:3;37309:9;37305:19;37296:6;37258:67;:::i;:::-;36573:759;;;;;;;;;:::o;37338:98::-;37389:6;37423:5;37417:12;37407:22;;37338:98;;;:::o;37442:373::-;37528:3;37556:38;37588:5;37556:38;:::i;:::-;37610:70;37673:6;37668:3;37610:70;:::i;:::-;37603:77;;37689:65;37747:6;37742:3;37735:4;37728:5;37724:16;37689:65;:::i;:::-;37779:29;37801:6;37779:29;:::i;:::-;37774:3;37770:39;37763:46;;37532:283;37442:373;;;;:::o;37821:123::-;37897:6;37931:5;37925:12;37915:22;;37821:123;;;:::o;37950:193::-;38058:11;38092:6;38087:3;38080:19;38132:4;38127:3;38123:14;38108:29;;37950:193;;;;:::o;38149:141::-;38225:4;38248:3;38240:11;;38278:4;38273:3;38269:14;38261:22;;38149:141;;;:::o;38296:158::-;38369:11;38403:6;38398:3;38391:19;38443:4;38438:3;38434:14;38419:29;;38296:158;;;;:::o;38460:353::-;38536:3;38564:38;38596:5;38564:38;:::i;:::-;38618:60;38671:6;38666:3;38618:60;:::i;:::-;38611:67;;38687:65;38745:6;38740:3;38733:4;38726:5;38722:16;38687:65;:::i;:::-;38777:29;38799:6;38777:29;:::i;:::-;38772:3;38768:39;38761:46;;38540:273;38460:353;;;;:::o;38819:192::-;38906:10;38941:64;39001:3;38993:6;38941:64;:::i;:::-;38927:78;;38819:192;;;;:::o;39017:122::-;39096:4;39128;39123:3;39119:14;39111:22;;39017:122;;;:::o;39171:983::-;39308:3;39337:63;39394:5;39337:63;:::i;:::-;39416:95;39504:6;39499:3;39416:95;:::i;:::-;39409:102;;39537:3;39582:4;39574:6;39570:17;39565:3;39561:27;39612:65;39671:5;39612:65;:::i;:::-;39700:7;39731:1;39716:393;39741:6;39738:1;39735:13;39716:393;;;39812:9;39806:4;39802:20;39797:3;39790:33;39863:6;39857:13;39891:82;39968:4;39953:13;39891:82;:::i;:::-;39883:90;;39996:69;40058:6;39996:69;:::i;:::-;39986:79;;40094:4;40089:3;40085:14;40078:21;;39776:333;39763:1;39760;39756:9;39751:14;;39716:393;;;39720:14;40125:4;40118:11;;40145:3;40138:10;;39313:841;;;;;39171:983;;;;:::o;40160:716::-;40395:4;40433:2;40422:9;40418:18;40410:26;;40482:9;40476:4;40472:20;40468:1;40457:9;40453:17;40446:47;40510:76;40581:4;40572:6;40510:76;:::i;:::-;40502:84;;40633:9;40627:4;40623:20;40618:2;40607:9;40603:18;40596:48;40661:126;40782:4;40773:6;40661:126;:::i;:::-;40653:134;;40797:72;40865:2;40854:9;40850:18;40841:6;40797:72;:::i;:::-;40160:716;;;;;;:::o;40882:423::-;41023:4;41061:2;41050:9;41046:18;41038:26;;41074:71;41142:1;41131:9;41127:17;41118:6;41074:71;:::i;:::-;41192:9;41186:4;41182:20;41177:2;41166:9;41162:18;41155:48;41220:78;41293:4;41284:6;41220:78;:::i;:::-;41212:86;;40882:423;;;;;:::o;41311:390::-;41417:3;41445:39;41478:5;41445:39;:::i;:::-;41500:89;41582:6;41577:3;41500:89;:::i;:::-;41493:96;;41598:65;41656:6;41651:3;41644:4;41637:5;41633:16;41598:65;:::i;:::-;41688:6;41683:3;41679:16;41672:23;;41421:280;41311:390;;;;:::o;41707:275::-;41839:3;41861:95;41952:3;41943:6;41861:95;:::i;:::-;41854:102;;41973:3;41966:10;;41707:275;;;;:::o;41988:234::-;42128:34;42124:1;42116:6;42112:14;42105:58;42197:17;42192:2;42184:6;42180:15;42173:42;41988:234;:::o;42228:366::-;42370:3;42391:67;42455:2;42450:3;42391:67;:::i;:::-;42384:74;;42467:93;42556:3;42467:93;:::i;:::-;42585:2;42580:3;42576:12;42569:19;;42228:366;;;:::o;42600:419::-;42766:4;42804:2;42793:9;42789:18;42781:26;;42853:9;42847:4;42843:20;42839:1;42828:9;42824:17;42817:47;42881:131;43007:4;42881:131;:::i;:::-;42873:139;;42600:419;;;:::o;43025:233::-;43165:34;43161:1;43153:6;43149:14;43142:58;43234:16;43229:2;43221:6;43217:15;43210:41;43025:233;:::o;43264:366::-;43406:3;43427:67;43491:2;43486:3;43427:67;:::i;:::-;43420:74;;43503:93;43592:3;43503:93;:::i;:::-;43621:2;43616:3;43612:12;43605:19;;43264:366;;;:::o;43636:419::-;43802:4;43840:2;43829:9;43825:18;43817:26;;43889:9;43883:4;43879:20;43875:1;43864:9;43860:17;43853:47;43917:131;44043:4;43917:131;:::i;:::-;43909:139;;43636:419;;;:::o;44061:725::-;44139:4;44145:6;44201:11;44188:25;44301:1;44295:4;44291:12;44280:8;44264:14;44260:29;44256:48;44236:18;44232:73;44222:168;;44309:79;;:::i;:::-;44222:168;44421:18;44411:8;44407:33;44399:41;;44473:4;44460:18;44450:28;;44501:18;44493:6;44490:30;44487:117;;;44523:79;;:::i;:::-;44487:117;44631:2;44625:4;44621:13;44613:21;;44688:4;44680:6;44676:17;44660:14;44656:38;44650:4;44646:49;44643:136;;;44698:79;;:::i;:::-;44643:136;44152:634;44061:725;;;;;:::o;44792:97::-;44851:6;44879:3;44869:13;;44792:97;;;;:::o;44895:141::-;44944:4;44967:3;44959:11;;44990:3;44987:1;44980:14;45024:4;45021:1;45011:18;45003:26;;44895:141;;;:::o;45042:93::-;45079:6;45126:2;45121;45114:5;45110:14;45106:23;45096:33;;45042:93;;;:::o;45141:107::-;45185:8;45235:5;45229:4;45225:16;45204:37;;45141:107;;;;:::o;45254:393::-;45323:6;45373:1;45361:10;45357:18;45396:97;45426:66;45415:9;45396:97;:::i;:::-;45514:39;45544:8;45533:9;45514:39;:::i;:::-;45502:51;;45586:4;45582:9;45575:5;45571:21;45562:30;;45635:4;45625:8;45621:19;45614:5;45611:30;45601:40;;45330:317;;45254:393;;;;;:::o;45653:60::-;45681:3;45702:5;45695:12;;45653:60;;;:::o;45719:142::-;45769:9;45802:53;45820:34;45829:24;45847:5;45829:24;:::i;:::-;45820:34;:::i;:::-;45802:53;:::i;:::-;45789:66;;45719:142;;;:::o;45867:75::-;45910:3;45931:5;45924:12;;45867:75;;;:::o;45948:269::-;46058:39;46089:7;46058:39;:::i;:::-;46119:91;46168:41;46192:16;46168:41;:::i;:::-;46160:6;46153:4;46147:11;46119:91;:::i;:::-;46113:4;46106:105;46024:193;45948:269;;;:::o;46223:73::-;46268:3;46223:73;:::o;46302:189::-;46379:32;;:::i;:::-;46420:65;46478:6;46470;46464:4;46420:65;:::i;:::-;46355:136;46302:189;;:::o;46497:186::-;46557:120;46574:3;46567:5;46564:14;46557:120;;;46628:39;46665:1;46658:5;46628:39;:::i;:::-;46601:1;46594:5;46590:13;46581:22;;46557:120;;;46497:186;;:::o;46689:543::-;46790:2;46785:3;46782:11;46779:446;;;46824:38;46856:5;46824:38;:::i;:::-;46908:29;46926:10;46908:29;:::i;:::-;46898:8;46894:44;47091:2;47079:10;47076:18;47073:49;;;47112:8;47097:23;;47073:49;47135:80;47191:22;47209:3;47191:22;:::i;:::-;47181:8;47177:37;47164:11;47135:80;:::i;:::-;46794:431;;46779:446;46689:543;;;:::o;47238:117::-;47292:8;47342:5;47336:4;47332:16;47311:37;;47238:117;;;;:::o;47361:169::-;47405:6;47438:51;47486:1;47482:6;47474:5;47471:1;47467:13;47438:51;:::i;:::-;47434:56;47519:4;47513;47509:15;47499:25;;47412:118;47361:169;;;;:::o;47535:295::-;47611:4;47757:29;47782:3;47776:4;47757:29;:::i;:::-;47749:37;;47819:3;47816:1;47812:11;47806:4;47803:21;47795:29;;47535:295;;;;:::o;47835:1403::-;47959:44;47999:3;47994;47959:44;:::i;:::-;48068:18;48060:6;48057:30;48054:56;;;48090:18;;:::i;:::-;48054:56;48134:38;48166:4;48160:11;48134:38;:::i;:::-;48219:67;48279:6;48271;48265:4;48219:67;:::i;:::-;48313:1;48342:2;48334:6;48331:14;48359:1;48354:632;;;;49030:1;49047:6;49044:84;;;49103:9;49098:3;49094:19;49081:33;49072:42;;49044:84;49154:67;49214:6;49207:5;49154:67;:::i;:::-;49148:4;49141:81;49003:229;48324:908;;48354:632;48406:4;48402:9;48394:6;48390:22;48440:37;48472:4;48440:37;:::i;:::-;48499:1;48513:215;48527:7;48524:1;48521:14;48513:215;;;48613:9;48608:3;48604:19;48591:33;48583:6;48576:49;48664:1;48656:6;48652:14;48642:24;;48711:2;48700:9;48696:18;48683:31;;48550:4;48547:1;48543:12;48538:17;;48513:215;;;48756:6;48747:7;48744:19;48741:186;;;48821:9;48816:3;48812:19;48799:33;48864:48;48906:4;48898:6;48894:17;48883:9;48864:48;:::i;:::-;48856:6;48849:64;48764:163;48741:186;48973:1;48969;48961:6;48957:14;48953:22;48947:4;48940:36;48361:625;;;48324:908;;47934:1304;;;47835:1403;;;:::o;49268:874::-;49371:3;49408:5;49402:12;49437:36;49463:9;49437:36;:::i;:::-;49489:89;49571:6;49566:3;49489:89;:::i;:::-;49482:96;;49609:1;49598:9;49594:17;49625:1;49620:166;;;;49800:1;49795:341;;;;49587:549;;49620:166;49704:4;49700:9;49689;49685:25;49680:3;49673:38;49766:6;49759:14;49752:22;49744:6;49740:35;49735:3;49731:45;49724:52;;49620:166;;49795:341;49862:38;49894:5;49862:38;:::i;:::-;49922:1;49936:154;49950:6;49947:1;49944:13;49936:154;;;50024:7;50018:14;50014:1;50009:3;50005:11;49998:35;50074:1;50065:7;50061:15;50050:26;;49972:4;49969:1;49965:12;49960:17;;49936:154;;;50119:6;50114:3;50110:16;50103:23;;49802:334;;49587:549;;49375:767;;49268:874;;;;:::o;50148:269::-;50277:3;50299:92;50387:3;50378:6;50299:92;:::i;:::-;50292:99;;50408:3;50401:10;;50148:269;;;;:::o;50423:156::-;50563:8;50559:1;50551:6;50547:14;50540:32;50423:156;:::o;50585:400::-;50745:3;50766:84;50848:1;50843:3;50766:84;:::i;:::-;50759:91;;50859:93;50948:3;50859:93;:::i;:::-;50977:1;50972:3;50968:11;50961:18;;50585:400;;;:::o;50991:381::-;51176:3;51198:148;51342:3;51198:148;:::i;:::-;51191:155;;51363:3;51356:10;;50991:381;;;:::o;51378:157::-;51518:9;51514:1;51506:6;51502:14;51495:33;51378:157;:::o;51541:400::-;51701:3;51722:84;51804:1;51799:3;51722:84;:::i;:::-;51715:91;;51815:93;51904:3;51815:93;:::i;:::-;51933:1;51928:3;51924:11;51917:18;;51541:400;;;:::o;51947:381::-;52132:3;52154:148;52298:3;52154:148;:::i;:::-;52147:155;;52319:3;52312:10;;51947:381;;;:::o;52334:118::-;52413:6;52441:4;52431:14;;52334:118;;;:::o;52458:112::-;52537:4;52560:3;52552:11;;52458:112;;;:::o;52600:297::-;52688:3;52709:61;52763:6;52758:3;52709:61;:::i;:::-;52702:68;;52780:56;52829:6;52824:3;52817:5;52780:56;:::i;:::-;52861:29;52883:6;52861:29;:::i;:::-;52856:3;52852:39;52845:46;;52600:297;;;;;:::o;52903:216::-;53002:10;53037:76;53109:3;53101:6;53093;53037:76;:::i;:::-;53023:90;;52903:216;;;;;:::o;53125:117::-;53234:1;53231;53224:12;53248:117;53357:1;53354;53347:12;53371:117;53480:1;53477;53470:12;53494:712;53559:5;53566:6;53622:3;53609:17;53714:1;53708:4;53704:12;53693:8;53677:14;53673:29;53669:48;53649:18;53645:73;53635:168;;53722:79;;:::i;:::-;53635:168;53845:8;53825:18;53821:33;53812:42;;53887:5;53874:19;53864:29;;53922:4;53915:5;53911:16;53902:25;;53950:18;53942:6;53939:30;53936:117;;;53972:79;;:::i;:::-;53936:117;54108:4;54100:6;54096:17;54080:14;54076:38;54069:5;54065:50;54062:137;;;54118:79;;:::i;:::-;54062:137;53573:633;53494:712;;;;;:::o;54212:125::-;54294:4;54326;54321:3;54317:14;54309:22;;54212:125;;;:::o;54373:1068::-;54512:3;54541:66;54601:5;54541:66;:::i;:::-;54623:94;54710:6;54705:3;54623:94;:::i;:::-;54616:101;;54743:3;54788:4;54780:6;54776:17;54771:3;54767:27;54818:68;54880:5;54818:68;:::i;:::-;54909:7;54940:1;54925:471;54950:6;54947:1;54944:13;54925:471;;;55021:9;55015:4;55011:20;55006:3;54999:33;55081:54;55128:6;55119:7;55081:54;:::i;:::-;55156:101;55252:4;55237:13;55222;55156:101;:::i;:::-;55148:109;;55280:72;55345:6;55280:72;:::i;:::-;55270:82;;55381:4;55376:3;55372:14;55365:21;;54985:411;;54972:1;54969;54965:9;54960:14;;54925:471;;;54929:14;55412:4;55405:11;;55432:3;55425:10;;54517:924;;;;;54373:1068;;;;:::o;55447:106::-;55514:6;55542:4;55532:14;;55447:106;;;:::o;55559:143::-;55656:11;55693:3;55678:18;;55559:143;;;;:::o;55708:100::-;55775:4;55798:3;55790:11;;55708:100;;;:::o;55814:108::-;55891:24;55909:5;55891:24;:::i;:::-;55886:3;55879:37;55814:108;;:::o;55928:179::-;55997:10;56018:46;56060:3;56052:6;56018:46;:::i;:::-;56096:4;56091:3;56087:14;56073:28;;55928:179;;;;:::o;56113:122::-;56165:5;56190:39;56225:2;56220:3;56216:12;56211:3;56190:39;:::i;:::-;56181:48;;56113:122;;;;:::o;56241:113::-;56311:4;56343;56338:3;56334:14;56326:22;;56241:113;;;:::o;56392:731::-;56530:54;56578:5;56530:54;:::i;:::-;56600:84;56677:6;56672:3;56600:84;:::i;:::-;56593:91;;56708:56;56758:5;56708:56;:::i;:::-;56787:7;56818:1;56803:313;56828:6;56825:1;56822:13;56803:313;;;56898:42;56933:6;56924:7;56898:42;:::i;:::-;56960:63;57019:3;57004:13;56960:63;:::i;:::-;56953:70;;57046:60;57099:6;57046:60;:::i;:::-;57036:70;;56863:253;56850:1;56847;56843:9;56838:14;;56803:313;;;56807:14;56506:617;;;56392:731;;:::o;57129:106::-;57196:6;57224:4;57214:14;;57129:106;;;:::o;57241:143::-;57338:11;57375:3;57360:18;;57241:143;;;;:::o;57390:100::-;57457:4;57480:3;57472:11;;57390:100;;;:::o;57496:113::-;57566:4;57598;57593:3;57589:14;57581:22;;57496:113;;;:::o;57647:731::-;57785:54;57833:5;57785:54;:::i;:::-;57855:84;57932:6;57927:3;57855:84;:::i;:::-;57848:91;;57963:56;58013:5;57963:56;:::i;:::-;58042:7;58073:1;58058:313;58083:6;58080:1;58077:13;58058:313;;;58153:42;58188:6;58179:7;58153:42;:::i;:::-;58215:63;58274:3;58259:13;58215:63;:::i;:::-;58208:70;;58301:60;58354:6;58301:60;:::i;:::-;58291:70;;58118:253;58105:1;58102;58098:9;58093:14;;58058:313;;;58062:14;57761:617;;;57647:731;;:::o;58384:108::-;58453:6;58481:4;58471:14;;58384:108;;;:::o;58498:153::-;58605:11;58642:3;58627:18;;58498:153;;;;:::o;58657:102::-;58726:4;58749:3;58741:11;;58657:102;;;:::o;58789:811::-;58864:3;58901:5;58895:12;58930:36;58956:9;58930:36;:::i;:::-;58982:61;59036:6;59031:3;58982:61;:::i;:::-;58975:68;;59074:1;59063:9;59059:17;59090:1;59085:164;;;;59263:1;59258:336;;;;59052:542;;59085:164;59169:4;59165:9;59154;59150:25;59145:3;59138:38;59229:6;59222:14;59215:22;59209:4;59205:33;59200:3;59196:43;59189:50;;59085:164;;59258:336;59325:38;59357:5;59325:38;:::i;:::-;59385:1;59399:154;59413:6;59410:1;59407:13;59399:154;;;59487:7;59481:14;59477:1;59472:3;59468:11;59461:35;59537:1;59528:7;59524:15;59513:26;;59435:4;59432:1;59428:12;59423:17;;59399:154;;;59582:1;59577:3;59573:11;59566:18;;59265:329;;59052:542;;58868:732;;58789:811;;;;:::o;59606:190::-;59692:10;59727:63;59786:3;59778:6;59727:63;:::i;:::-;59713:77;;59606:190;;;;:::o;59802:115::-;59874:4;59906;59901:3;59897:14;59889:22;;59802:115;;;:::o;59953:945::-;60082:3;60111:56;60161:5;60111:56;:::i;:::-;60183:94;60270:6;60265:3;60183:94;:::i;:::-;60176:101;;60303:3;60348:4;60340:6;60336:17;60331:3;60327:27;60378:58;60430:5;60378:58;:::i;:::-;60459:7;60490:1;60475:378;60500:6;60497:1;60494:13;60475:378;;;60571:9;60565:4;60561:20;60556:3;60549:33;60616:6;60643:81;60719:4;60704:13;60643:81;:::i;:::-;60635:89;;60747:62;60802:6;60747:62;:::i;:::-;60737:72;;60838:4;60833:3;60829:14;60822:21;;60535:318;60522:1;60519;60515:9;60510:14;;60475:378;;;60479:14;60869:4;60862:11;;60889:3;60882:10;;60087:811;;;;;59953:945;;;;:::o;60904:1870::-;61523:4;61561:3;61550:9;61546:19;61538:27;;61575:71;61643:1;61632:9;61628:17;61619:6;61575:71;:::i;:::-;61693:9;61687:4;61683:20;61678:2;61667:9;61663:18;61656:48;61721:128;61844:4;61835:6;61721:128;:::i;:::-;61713:136;;61859:120;61975:2;61964:9;61960:18;61951:6;61859:120;:::i;:::-;61989:121;62105:3;62094:9;62090:19;62081:6;61989:121;:::i;:::-;62120:73;62188:3;62177:9;62173:19;62164:6;62120:73;:::i;:::-;62203;62271:3;62260:9;62256:19;62247:6;62203:73;:::i;:::-;62286;62354:3;62343:9;62339:19;62330:6;62286:73;:::i;:::-;62369;62437:3;62426:9;62422:19;62413:6;62369:73;:::i;:::-;62490:9;62484:4;62480:20;62474:3;62463:9;62459:19;62452:49;62518:118;62631:4;62622:6;62518:118;:::i;:::-;62510:126;;62646:121;62762:3;62751:9;62747:19;62738:6;62646:121;:::i;:::-;60904:1870;;;;;;;;;;;;;:::o;62780:85::-;62825:7;62854:5;62843:16;;62780:85;;;:::o;62871:86::-;62906:7;62946:4;62939:5;62935:16;62924:27;;62871:86;;;:::o;62963:154::-;63019:9;63052:59;63068:42;63077:32;63103:5;63077:32;:::i;:::-;63068:42;:::i;:::-;63052:59;:::i;:::-;63039:72;;62963:154;;;:::o;63123:143::-;63216:43;63253:5;63216:43;:::i;:::-;63211:3;63204:56;63123:143;;:::o;63272:234::-;63371:4;63409:2;63398:9;63394:18;63386:26;;63422:77;63496:1;63485:9;63481:17;63472:6;63422:77;:::i;:::-;63272:234;;;;:::o;63512:553::-;63691:4;63729:2;63718:9;63714:18;63706:26;;63742:71;63810:1;63799:9;63795:17;63786:6;63742:71;:::i;:::-;63860:9;63854:4;63850:20;63845:2;63834:9;63830:18;63823:48;63888:88;63971:4;63962:6;63954;63888:88;:::i;:::-;63880:96;;63986:72;64054:2;64043:9;64039:18;64030:6;63986:72;:::i;:::-;63512:553;;;;;;;:::o;64071:181::-;64211:33;64207:1;64199:6;64195:14;64188:57;64071:181;:::o;64258:366::-;64400:3;64421:67;64485:2;64480:3;64421:67;:::i;:::-;64414:74;;64497:93;64586:3;64497:93;:::i;:::-;64615:2;64610:3;64606:12;64599:19;;64258:366;;;:::o;64630:419::-;64796:4;64834:2;64823:9;64819:18;64811:26;;64883:9;64877:4;64873:20;64869:1;64858:9;64854:17;64847:47;64911:131;65037:4;64911:131;:::i;:::-;64903:139;;64630:419;;;:::o;65055:332::-;65176:4;65214:2;65203:9;65199:18;65191:26;;65227:71;65295:1;65284:9;65280:17;65271:6;65227:71;:::i;:::-;65308:72;65376:2;65365:9;65361:18;65352:6;65308:72;:::i;:::-;65055:332;;;;;:::o;65393:230::-;65533:34;65529:1;65521:6;65517:14;65510:58;65602:13;65597:2;65589:6;65585:15;65578:38;65393:230;:::o;65629:366::-;65771:3;65792:67;65856:2;65851:3;65792:67;:::i;:::-;65785:74;;65868:93;65957:3;65868:93;:::i;:::-;65986:2;65981:3;65977:12;65970:19;;65629:366;;;:::o;66001:419::-;66167:4;66205:2;66194:9;66190:18;66182:26;;66254:9;66248:4;66244:20;66240:1;66229:9;66225:17;66218:47;66282:131;66408:4;66282:131;:::i;:::-;66274:139;;66001:419;;;:::o;66426:173::-;66566:25;66562:1;66554:6;66550:14;66543:49;66426:173;:::o;66605:402::-;66765:3;66786:85;66868:2;66863:3;66786:85;:::i;:::-;66779:92;;66880:93;66969:3;66880:93;:::i;:::-;66998:2;66993:3;66989:12;66982:19;;66605:402;;;:::o;67013:167::-;67153:19;67149:1;67141:6;67137:14;67130:43;67013:167;:::o;67186:402::-;67346:3;67367:85;67449:2;67444:3;67367:85;:::i;:::-;67360:92;;67461:93;67550:3;67461:93;:::i;:::-;67579:2;67574:3;67570:12;67563:19;;67186:402;;;:::o;67594:967::-;67976:3;67998:148;68142:3;67998:148;:::i;:::-;67991:155;;68163:95;68254:3;68245:6;68163:95;:::i;:::-;68156:102;;68275:148;68419:3;68275:148;:::i;:::-;68268:155;;68440:95;68531:3;68522:6;68440:95;:::i;:::-;68433:102;;68552:3;68545:10;;67594:967;;;;;:::o;68567:116::-;68637:21;68652:5;68637:21;:::i;:::-;68630:5;68627:32;68617:60;;68673:1;68670;68663:12;68617:60;68567:116;:::o;68689:137::-;68743:5;68774:6;68768:13;68759:22;;68790:30;68814:5;68790:30;:::i;:::-;68689:137;;;;:::o;68832:345::-;68899:6;68948:2;68936:9;68927:7;68923:23;68919:32;68916:119;;;68954:79;;:::i;:::-;68916:119;69074:1;69099:61;69152:7;69143:6;69132:9;69128:22;69099:61;:::i;:::-;69089:71;;69045:125;68832:345;;;;:::o;69183:229::-;69323:34;69319:1;69311:6;69307:14;69300:58;69392:12;69387:2;69379:6;69375:15;69368:37;69183:229;:::o;69418:366::-;69560:3;69581:67;69645:2;69640:3;69581:67;:::i;:::-;69574:74;;69657:93;69746:3;69657:93;:::i;:::-;69775:2;69770:3;69766:12;69759:19;;69418:366;;;:::o;69790:419::-;69956:4;69994:2;69983:9;69979:18;69971:26;;70043:9;70037:4;70033:20;70029:1;70018:9;70014:17;70007:47;70071:131;70197:4;70071:131;:::i;:::-;70063:139;;69790:419;;;:::o;70215:171::-;70254:3;70277:24;70295:5;70277:24;:::i;:::-;70268:33;;70323:4;70316:5;70313:15;70310:41;;70331:18;;:::i;:::-;70310:41;70378:1;70371:5;70367:13;70360:20;;70215:171;;;:::o;70392:182::-;70532:34;70528:1;70520:6;70516:14;70509:58;70392:182;:::o;70580:366::-;70722:3;70743:67;70807:2;70802:3;70743:67;:::i;:::-;70736:74;;70819:93;70908:3;70819:93;:::i;:::-;70937:2;70932:3;70928:12;70921:19;;70580:366;;;:::o;70952:419::-;71118:4;71156:2;71145:9;71141:18;71133:26;;71205:9;71199:4;71195:20;71191:1;71180:9;71176:17;71169:47;71233:131;71359:4;71233:131;:::i;:::-;71225:139;;70952:419;;;:::o;71377:180::-;71425:77;71422:1;71415:88;71522:4;71519:1;71512:15;71546:4;71543:1;71536:15;71563:225;71703:34;71699:1;71691:6;71687:14;71680:58;71772:8;71767:2;71759:6;71755:15;71748:33;71563:225;:::o;71794:366::-;71936:3;71957:67;72021:2;72016:3;71957:67;:::i;:::-;71950:74;;72033:93;72122:3;72033:93;:::i;:::-;72151:2;72146:3;72142:12;72135:19;;71794:366;;;:::o;72166:419::-;72332:4;72370:2;72359:9;72355:18;72347:26;;72419:9;72413:4;72409:20;72405:1;72394:9;72390:17;72383:47;72447:131;72573:4;72447:131;:::i;:::-;72439:139;;72166:419;;;:::o;72591:147::-;72692:11;72729:3;72714:18;;72591:147;;;;:::o;72744:386::-;72848:3;72876:38;72908:5;72876:38;:::i;:::-;72930:88;73011:6;73006:3;72930:88;:::i;:::-;72923:95;;73027:65;73085:6;73080:3;73073:4;73066:5;73062:16;73027:65;:::i;:::-;73117:6;73112:3;73108:16;73101:23;;72852:278;72744:386;;;;:::o;73136:271::-;73266:3;73288:93;73377:3;73368:6;73288:93;:::i;:::-;73281:100;;73398:3;73391:10;;73136:271;;;;:::o;73413:179::-;73553:31;73549:1;73541:6;73537:14;73530:55;73413:179;:::o;73598:366::-;73740:3;73761:67;73825:2;73820:3;73761:67;:::i;:::-;73754:74;;73837:93;73926:3;73837:93;:::i;:::-;73955:2;73950:3;73946:12;73939:19;;73598:366;;;:::o;73970:419::-;74136:4;74174:2;74163:9;74159:18;74151:26;;74223:9;74217:4;74213:20;74209:1;74198:9;74194:17;74187:47;74251:131;74377:4;74251:131;:::i;:::-;74243:139;;73970:419;;;:::o"},"methodIdentifiers":{"ACONCAGUA_ROLE()":"e5df800a","DEFAULT_ADMIN_ROLE()":"a217fddf","LENDER_LIQ_ROLE()":"32cc815d","RESCUER_ROLE()":"71372544","SWAPPER_ROLE()":"df668eca","balanceOf(string)":"35ee5f87","contractAddresses(string)":"ee67cc2a","contractKeys(uint256)":"de6bd687","getBalances()":"00113e08","getRoleAdmin(bytes32)":"248a9ca3","getRoleByIndex(uint256)":"25acc985","getRoleCount()":"83d33319","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","getTokenNames()":"2ad753e4","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(string[5],address[5],address[3],address,address,address,address,string[3],address[3])":"c869787e","renounceRole(bytes32,address)":"36568abe","rescue(uint256,string)":"0828c404","rescueWalletAddress()":"15ac7358","revokeRole(bytes32,address)":"d547741f","setRescueWalletAddress(address)":"d00411c9","setWithdrawWalletAddress(address)":"212f6039","supportsInterface(bytes4)":"01ffc9a7","swapExactInputs(((bytes,address,uint256,uint256,uint256),address,address)[])":"2ffe9942","tokenNames(uint256)":"310495ab","tokenTable(string)":"55452d04","version()":"54fd4d50","withdraw(uint256,string)":"dc048cf2","withdrawWalletAddress()":"b14ec101"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AdminAddressInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountInError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountOutMinimumTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstLenderLiqAddressInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RescueAddressInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SecondLenderLiqAddressInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenInError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNameAndAddressLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenOutError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawAddressInvalid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[5]\",\"name\":\"_tokenNames\",\"type\":\"string[5]\"},{\"indexed\":false,\"internalType\":\"address[5]\",\"name\":\"_tokenAddresses\",\"type\":\"address[5]\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"_aconcagua\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_firstLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_secondLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[3]\",\"name\":\"_contractKeys\",\"type\":\"string[3]\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"_contractAddresses\",\"type\":\"address[3]\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quotedAmountOut\",\"type\":\"uint256\"}],\"name\":\"Quote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"QuoteError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Rescue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"SwapError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACONCAGUA_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDER_LIQ_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAPPER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"contractAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractKeys\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenNames\",\"outputs\":[{\"internalType\":\"string[5]\",\"name\":\"\",\"type\":\"string[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[5]\",\"name\":\"_tokenNames\",\"type\":\"string[5]\"},{\"internalType\":\"address[5]\",\"name\":\"_tokenAddresses\",\"type\":\"address[5]\"},{\"internalType\":\"address[3]\",\"name\":\"_aconcagua\",\"type\":\"address[3]\"},{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_firstLenderLiq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_secondLenderLiq\",\"type\":\"address\"},{\"internalType\":\"string[3]\",\"name\":\"_contractKeys\",\"type\":\"string[3]\"},{\"internalType\":\"address[3]\",\"name\":\"_contractAddresses\",\"type\":\"address[3]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"}],\"name\":\"setRescueWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"internalType\":\"struct IColateralContract2.SwapParams[]\",\"name\":\"swapsParams\",\"type\":\"tuple[]\"}],\"name\":\"swapExactInputs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenTable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleByIndex(uint256)\":{\"details\":\"Returns one of the `roles`. `index` must be a value between 0 and {getRoleCount}, non-inclusive. Role are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleCount()\":{\"details\":\"Returns the number `roles`. Can be used together with {getRoleByIndex} to enumerate all bearers of a role.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ColateralContract2.sol\":\"ColateralContract2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7d24c901e098a04fa7f388c9ff1890bb522307272a2fee8030ee15a8d907096f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://581f4c4b9af18b5a8e811a0a45d38a125cad4627d67f7a605626ff3a2b26eb70\",\"dweb:/ipfs/QmWZwM8HEbPPjf5MaaRnELgW8JtDdWNu7oBXWCtLCERQyz\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@uniswap/universal-router/contracts/interfaces/IRewardsCollector.sol\":{\"keccak256\":\"0x394a3c99a6ef18c0de171e85f8c6352eb3f6f1c5165fe9a2fdc4db181dd407b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9937d3b2df12264789f3bbf053a0b044b3d21c86c39dac4757a9a40bae6185c0\",\"dweb:/ipfs/QmayA3uwk1wXCA8K1R5HrnszaPL9ymUSDwyWxmbtv2ujXP\"]},\"@uniswap/universal-router/contracts/interfaces/IUniversalRouter.sol\":{\"keccak256\":\"0x417bd7e38a2373a7560004b38aab6987b4e0c655574d18c879a562dcff275e00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2153e7c4ae3cdae8f593e52daf4e5eed902f11c255913adcae39af3c55a4c192\",\"dweb:/ipfs/QmPBJjgjqwShM9ugYy7TvsLQwvAuepEdw1bLhSJs1gLzzi\"]},\"@uniswap/universal-router/contracts/libraries/Commands.sol\":{\"keccak256\":\"0x7495192865b4cdd91d2469183c4550ac621669f77a0c8952a53d3c287410f64f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://aff58d4b4bbe0f72382ff645fd4da7c12db98c15807026fba000fcf8ebedc031\",\"dweb:/ipfs/QmWdibdwQKWEMbGZPWQ5cXLKQRZtcWQNP4FjY8G3k587TX\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/ColateralContract2.sol\":{\"keccak256\":\"0x93d21c611c2d386e09349cb60fd999a19b0a3825aa8cae6a7a7a0b91ba03ac1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff934a67c4d89a852f507c18798bf203ac3e1b70a65e61ac72d0b084c805d30b\",\"dweb:/ipfs/QmaX38b7mXnWiWomkaMNAFdo8Aun61fzjpV6eUHE9cAokp\"]},\"contracts/IColateralContract2.sol\":{\"keccak256\":\"0x594c81b54140c5d4603da8b1d41d36edc461977e37e26b8573b9c166db89dff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb4856db73abcc56aa2fde79ec599e59542f7828ec041a6e1b2646a703b340c\",\"dweb:/ipfs/QmezwaTQhZjfsSMQPbDsUSF3yR8guyjbiCpKC2CXnmUvry\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0xddb4f13fa046b31fd4ccd8992f88e9df4bba451e6f4a146b84830bd14af062b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3f5eafe3b8287a3485d07a9470335e96428ea0aa6f00ccf73fee2533bd8be7c\",\"dweb:/ipfs/QmS4YCL3L2C9SiBokD3XHmesnEYY6tFDVcFnc7rzgh73pN\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}"}},"contracts/IColateralContract2.sol":{"IColateralContract2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string[5]","name":"_tokenNames","type":"string[5]"},{"indexed":false,"internalType":"address[5]","name":"_tokenAddresses","type":"address[5]"},{"indexed":false,"internalType":"address[3]","name":"_aconcagua","type":"address[3]"},{"indexed":false,"internalType":"address","name":"_rescueWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_withdrawWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_firstLenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"_secondLenderLiq","type":"address"},{"indexed":false,"internalType":"string[3]","name":"_contractKeys","type":"string[3]"},{"indexed":false,"internalType":"address[3]","name":"_contractAddresses","type":"address[3]"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quotedAmountOut","type":"uint256"}],"name":"Quote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"QuoteError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Rescue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"SwapError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleByIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRoleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rescueWalletAddress","type":"address"}],"name":"setRescueWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawWalletAddress","type":"address"}],"name":"setWithdrawWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"}],"internalType":"struct IColateralContract2.SwapParams[]","name":"swapsParams","type":"tuple[]"}],"name":"swapExactInputs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(string)":"35ee5f87","getBalances()":"00113e08","getRoleByIndex(uint256)":"25acc985","getRoleCount()":"83d33319","rescue(uint256,string)":"0828c404","setRescueWalletAddress(address)":"d00411c9","setWithdrawWalletAddress(address)":"212f6039","swapExactInputs(((bytes,address,uint256,uint256,uint256),address,address)[])":"2ffe9942","version()":"54fd4d50","withdraw(uint256,string)":"dc048cf2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[5]\",\"name\":\"_tokenNames\",\"type\":\"string[5]\"},{\"indexed\":false,\"internalType\":\"address[5]\",\"name\":\"_tokenAddresses\",\"type\":\"address[5]\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"_aconcagua\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_firstLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_secondLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[3]\",\"name\":\"_contractKeys\",\"type\":\"string[3]\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"_contractAddresses\",\"type\":\"address[3]\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quotedAmountOut\",\"type\":\"uint256\"}],\"name\":\"Quote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"QuoteError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Rescue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"SwapError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"}],\"name\":\"setRescueWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"internalType\":\"struct IColateralContract2.SwapParams[]\",\"name\":\"swapsParams\",\"type\":\"tuple[]\"}],\"name\":\"swapExactInputs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IColateralContract2.sol\":\"IColateralContract2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/IColateralContract2.sol\":{\"keccak256\":\"0x594c81b54140c5d4603da8b1d41d36edc461977e37e26b8573b9c166db89dff9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbb4856db73abcc56aa2fde79ec599e59542f7828ec041a6e1b2646a703b340c\",\"dweb:/ipfs/QmezwaTQhZjfsSMQPbDsUSF3yR8guyjbiCpKC2CXnmUvry\"]}},\"version\":1}"}},"contracts/IWETH.sol":{"IWETH":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposit()":"d0e30db0","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IWETH.sol\":{\"keccak256\":\"0xddb4f13fa046b31fd4ccd8992f88e9df4bba451e6f4a146b84830bd14af062b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3f5eafe3b8287a3485d07a9470335e96428ea0aa6f00ccf73fee2533bd8be7c\",\"dweb:/ipfs/QmS4YCL3L2C9SiBokD3XHmesnEYY6tFDVcFnc7rzgh73pN\"]}},\"version\":1}"}},"solmate/src/tokens/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}"}}}}}