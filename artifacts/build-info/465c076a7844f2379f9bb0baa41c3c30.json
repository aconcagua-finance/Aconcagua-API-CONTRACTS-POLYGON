{"id":"465c076a7844f2379f9bb0baa41c3c30","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerableUpgradeable.sol\";\nimport \"./AccessControlUpgradeable.sol\";\nimport \"../utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/ColateralContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol';\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\nimport './IColateralContract.sol';\r\n\r\npragma solidity 0.8.18;\r\n\r\ncontract ColateralContract is\r\n  IColateralContract,\r\n  AccessControlEnumerableUpgradeable,\r\n  ReentrancyGuardUpgradeable\r\n{\r\n  using Strings for uint256;\r\n\r\n  // Admin role\r\n  bytes32 public constant ACONCAGUA_ROLE = keccak256('ACONCAGUA');\r\n  // Lender liquidity role\r\n  bytes32 public constant LENDER_LIQ_ROLE = keccak256('LENDER_LIQ');\r\n  // Rescuer role\r\n  bytes32 public constant RESCUER_ROLE = keccak256('RESCUER');\r\n  // Pause role\r\n  bytes32 public constant PAUSER_ROLE = keccak256('PAUSER');\r\n  // Swap role\r\n  bytes32 public constant SWAPPER_ROLE = keccak256('SWAPPER');\r\n\r\n  using EnumerableSetUpgradeable for EnumerableSetUpgradeable.Bytes32Set;\r\n  EnumerableSetUpgradeable.Bytes32Set private _rolesSet;\r\n\r\n  // Supported Tokens\r\n  string public constant USDC = 'USDC';\r\n  string public constant USDT = 'USDT';\r\n  string public constant USDM = 'USDM';\r\n  string public constant WBTC = 'WBTC';\r\n  // Token => Token Address\r\n  mapping(string => address) public tokenAddress;\r\n\r\n  address public rescueWalletAddress;\r\n  address public withdrawWalletAddress;\r\n\r\n  ISwapRouter internal swapRouter;\r\n\r\n  constructor() {\r\n    _disableInitializers();\r\n  }\r\n\r\n  function initialize(\r\n    address _usdcTokenAddress,\r\n    address _usdtTokenAddress,\r\n    address _usdmTokenAddress,\r\n    address _wbtcTokenAddress,\r\n    address[3] calldata _aconcagua,\r\n    address _rescueWalletAddress,\r\n    address _withdrawWalletAddress,\r\n    address _firstLenderLiq,\r\n    address _secondLenderLiq,\r\n    address _swapRouterAddress,\r\n    address _swapper\r\n  ) external initializer {\r\n    require(\r\n      _aconcagua[0] != address(0) || _aconcagua[1] != address(0) || _aconcagua[2] != address(0),\r\n      'AdminAddr'\r\n    );\r\n    require(_rescueWalletAddress != address(0), 'RescueAddr');\r\n    require(_withdrawWalletAddress != address(0), 'WithdrawAddr');\r\n    require(_firstLenderLiq != address(0), 'FirstLenderLiqAddr');\r\n    require(_secondLenderLiq != address(0), 'SecondLenderLiqAddr');\r\n    require(_swapRouterAddress != address(0), 'SwapRouterAddr');\r\n    require(_swapper != address(0), 'SwapperAddr');\r\n\r\n    __AccessControl_init_unchained();\r\n    __ReentrancyGuard_init_unchained();\r\n    tokenAddress[USDC] = _usdcTokenAddress;\r\n    tokenAddress[USDT] = _usdtTokenAddress;\r\n    tokenAddress[USDM] = _usdmTokenAddress;\r\n    tokenAddress[WBTC] = _wbtcTokenAddress;\r\n\r\n    withdrawWalletAddress = _withdrawWalletAddress;\r\n    rescueWalletAddress = _rescueWalletAddress;\r\n\r\n    swapRouter = ISwapRouter(_swapRouterAddress);\r\n\r\n    // Add roles to the set of Roles for later tracking\r\n    _rolesSet.add(ACONCAGUA_ROLE);\r\n    _rolesSet.add(LENDER_LIQ_ROLE);\r\n    _rolesSet.add(RESCUER_ROLE);\r\n    _rolesSet.add(SWAPPER_ROLE);\r\n\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[0]);\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[1]);\r\n    _grantRole(ACONCAGUA_ROLE, _aconcagua[2]);\r\n    _grantRole(LENDER_LIQ_ROLE, _firstLenderLiq);\r\n    _grantRole(LENDER_LIQ_ROLE, _secondLenderLiq);\r\n    _grantRole(RESCUER_ROLE, _firstLenderLiq);\r\n    _grantRole(RESCUER_ROLE, _secondLenderLiq);\r\n    _grantRole(SWAPPER_ROLE, _swapper);\r\n\r\n    _setRoleAdmin(ACONCAGUA_ROLE, ACONCAGUA_ROLE);\r\n    _setRoleAdmin(LENDER_LIQ_ROLE, LENDER_LIQ_ROLE);\r\n    _setRoleAdmin(RESCUER_ROLE, RESCUER_ROLE);\r\n    _setRoleAdmin(SWAPPER_ROLE, ACONCAGUA_ROLE);\r\n\r\n    // Emit initialize event\r\n    emit Initialize(\r\n      msg.sender,\r\n      _usdcTokenAddress,\r\n      _usdtTokenAddress,\r\n      _usdmTokenAddress,\r\n      _wbtcTokenAddress,\r\n      _aconcagua,\r\n      _rescueWalletAddress,\r\n      _withdrawWalletAddress,\r\n      _firstLenderLiq,\r\n      _secondLenderLiq,\r\n      _swapRouterAddress,\r\n      _swapper\r\n    );\r\n  }\r\n\r\n  // Version\r\n  function version() external pure override returns (string memory) {\r\n    return '1.1.0';\r\n  }\r\n\r\n  function setWithdrawWalletAddress(\r\n    address _withdrawWalletAddress\r\n  ) external override onlyRole(ACONCAGUA_ROLE) {\r\n    require(_withdrawWalletAddress != address(0x0), 'Withdraw0Addr');\r\n    withdrawWalletAddress = _withdrawWalletAddress;\r\n  }\r\n\r\n  function setRescueWalletAddress(\r\n    address _rescueWalletAddress\r\n  ) external override onlyRole(ACONCAGUA_ROLE) {\r\n    require(_rescueWalletAddress != address(0x0), 'Rescue0Addr');\r\n    rescueWalletAddress = _rescueWalletAddress;\r\n  }\r\n\r\n  function swapExactInputs(\r\n    SwapParams[] calldata swapsParams\r\n  ) external override onlyRole(SWAPPER_ROLE) {\r\n    for (uint256 i = 0; i < swapsParams.length; i++) {\r\n      SwapParams calldata swapParams = swapsParams[i];\r\n\r\n      // Input validations\r\n      require(swapParams.params.recipient == address(this), 'Err recipient');\r\n      require(swapParams.params.amountOutMinimum > 0, 'Err Slipp');\r\n      require(\r\n        swapParams.tokenOut == tokenAddress['USDC'] || swapParams.tokenOut == tokenAddress['USDT'] || swapParams.tokenOut == tokenAddress['USDM'],\r\n        'Err TokenOut'\r\n      );\r\n\r\n      // Get token and approve amount\r\n      IERC20 token = IERC20(address(swapParams.tokenIn));\r\n      require(\r\n        swapParams.params.amountIn > 0 &&\r\n          swapParams.params.amountIn <= token.balanceOf(address(this)),\r\n        'Err AmountIn'\r\n      );\r\n      require(token.approve(address(swapRouter), swapParams.params.amountIn), 'Err Approval');\r\n\r\n      // Execute swap and revoke approval.\r\n      try swapRouter.exactInput(swapParams.params) returns (uint256 amountOut) {\r\n        emit Swap(swapParams.tokenIn, swapParams.tokenOut, swapParams.params.amountIn, amountOut);\r\n        require(token.approve(address(swapRouter), 0), 'Err Approval0');\r\n      } catch Error(string memory errorMsg) {\r\n        emit SwapError(swapParams.tokenIn, errorMsg);\r\n        require(token.approve(address(swapRouter), 0), 'Err Approval0');\r\n      }\r\n    }\r\n  }\r\n\r\n  function withdraw(\r\n    uint256 _amount,\r\n    string calldata _tokenSymbol\r\n  ) external override onlyRole(LENDER_LIQ_ROLE) nonReentrant {\r\n    // transfers Tokens that belong to your contract to the withdraw address\r\n    SafeERC20.safeTransfer(IERC20(tokenAddress[_tokenSymbol]), withdrawWalletAddress, _amount);\r\n    emit Withdraw(withdrawWalletAddress, _tokenSymbol, _amount);\r\n  }\r\n\r\n  function balanceOf(string memory _tokenSymbol) public view override returns (uint256) {\r\n    // returns balance of token  in contract.\r\n    IERC20 token = IERC20(tokenAddress[_tokenSymbol]);\r\n    return token.balanceOf(address(this));\r\n  }\r\n\r\n  function getBalances() external view override returns (uint256[] memory) {\r\n    uint256[] memory balances = new uint256[](5);\r\n    balances[0] = address(this).balance;\r\n    balances[1] = balanceOf(USDC);\r\n    balances[2] = balanceOf(USDT);\r\n    balances[3] = balanceOf(USDM);\r\n    balances[4] = balanceOf(WBTC);\r\n\r\n    return balances;\r\n  }\r\n\r\n  function rescue(\r\n    uint256 _amount,\r\n    string calldata _tokenSymbol\r\n  ) external override onlyRole(RESCUER_ROLE) nonReentrant {\r\n    // transfers Tokens that belong to your contract to the sender address\r\n    SafeERC20.safeTransfer(IERC20(tokenAddress[_tokenSymbol]), rescueWalletAddress, _amount);\r\n    emit Rescue(_msgSender(), _tokenSymbol, _amount, rescueWalletAddress);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the number `roles`. Can be used\r\n   * together with {getRoleByIndex} to enumerate all bearers of a role.\r\n   */\r\n  function getRoleCount() external view virtual override returns (uint256) {\r\n    return _rolesSet.length();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns one of the `roles`. `index` must be a\r\n   * value between 0 and {getRoleCount}, non-inclusive.\r\n   *\r\n   * Role are not sorted in any particular way, and their ordering may\r\n   * change at any point.\r\n   *\r\n   * WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure\r\n   * you perform all queries on the same block. See the following\r\n   * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n   * for more information.\r\n   */\r\n  function getRoleByIndex(uint index) external view virtual override returns (bytes32) {\r\n    return _rolesSet.at(index);\r\n  }\r\n}\r\n"},"contracts/IColateralContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IColateralContract {\r\n  // Emitted when the `ColateralContract` is initialized\r\n  event Initialize(\r\n    address sender,\r\n    address usdcTokenAddress,\r\n    address usdtTokenAddress,\r\n    address usdmTokenAddress,\r\n    address wbtcTokenAddress,\r\n    address[3] admins,\r\n    address rescueWalletAddress,\r\n    address withdrawWalletAddress,\r\n    address firstlenderLiq,\r\n    address secondLenderLiq,\r\n    address swapRouterAddress,\r\n    address swapper\r\n  );\r\n  // Emitted when token address is changed\r\n  event TokenAddressChange(\r\n    address sender,\r\n    string token,\r\n    address oldTokenAddress,\r\n    address newTokenAddress\r\n  );\r\n  // Emitted when withdrawal limit is changed\r\n  event WithdrawalLimitChange(\r\n    address sender,\r\n    string token,\r\n    uint256 oldWithdrawalLimit,\r\n    uint256 newWithdrawalLimit\r\n  );\r\n  // Emitted when withdraw\r\n  event Withdraw(address sender, string token, uint256 amount);\r\n  // Emitted when rescue\r\n  event Rescue(address sender, string token, uint256 amount, address to);\r\n  // Emitted when swap is done\r\n  event Swap(address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\r\n  // Emitted when swap fails\r\n  event SwapError(address tokenIn, string msg);\r\n\r\n  struct SwapParams {\r\n    ISwapRouter.ExactInputParams params;\r\n    address tokenIn;\r\n    address tokenOut;\r\n  }\r\n\r\n  function version() external view returns (string memory);\r\n\r\n  function setWithdrawWalletAddress(address _withdrawWalletAddress) external;\r\n\r\n  function setRescueWalletAddress(address _rescueWalletAddress) external;\r\n\r\n  function withdraw(uint256 _amount, string calldata _tokenSymbol) external;\r\n\r\n  function balanceOf(string memory _tokenSymbol) external view returns (uint256);\r\n\r\n  function rescue(uint256 _amount, string calldata _tokenSymbol) external;\r\n\r\n  function getBalances() external view returns (uint256[] memory);\r\n\r\n  function getRoleCount() external view returns (uint256);\r\n\r\n  function getRoleByIndex(uint index) external view returns (bytes32);\r\n\r\n  function swapExactInputs(SwapParams[] calldata swapsParams) external;\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"AddressUpgradeable":[1161],"ContextUpgradeable":[1203],"ERC165Upgradeable":[1476],"EnumerableSetUpgradeable":[3072],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[1488],"Initializable":[747],"MathUpgradeable":[2354],"SignedMathUpgradeable":[2459],"StringsUpgradeable":[1432]},"id":145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","file":"./IAccessControlEnumerableUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":506,"src":"143:51:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"./AccessControlUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":481,"src":"195:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"../utils/structs/EnumerableSetUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":3073,"src":"236:55:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":145,"sourceUnit":748,"src":"292:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["487:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"487:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"487:13:0"},{"baseName":{"id":9,"name":"IAccessControlEnumerableUpgradeable","nameLocations":["502:35:0"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"502:35:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"502:35:0"},{"baseName":{"id":11,"name":"AccessControlUpgradeable","nameLocations":["539:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"539:24:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"539:24:0"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"336:94:0","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144,480,1476,1488,505,578,1203,747],"name":"AccessControlEnumerableUpgradeable","nameLocation":"449:34:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":17,"nodeType":"Block","src":"638:7:0","statements":[]},"id":18,"implemented":true,"kind":"function","modifiers":[{"id":15,"kind":"modifierInvocation","modifierName":{"id":14,"name":"onlyInitializing","nameLocations":["621:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"621:16:0"},"nodeType":"ModifierInvocation","src":"621:16:0"}],"name":"__AccessControlEnumerable_init","nameLocation":"579:30:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"609:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"638:0:0"},"scope":144,"src":"570:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":23,"nodeType":"Block","src":"729:7:0","statements":[]},"id":24,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nameLocations":["712:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"712:16:0"},"nodeType":"ModifierInvocation","src":"712:16:0"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"660:40:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"700:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"729:0:0"},"scope":144,"src":"651:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"global":false,"id":28,"libraryName":{"id":25,"name":"EnumerableSetUpgradeable","nameLocations":["747:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":3072,"src":"747:24:0"},"nodeType":"UsingForDirective","src":"741:71:0","typeName":{"id":27,"nodeType":"UserDefinedTypeName","pathNode":{"id":26,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["776:24:0","801:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"776:35:0"},"referencedDeclaration":2785,"src":"776:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":33,"mutability":"mutable","name":"_roleMembers","nameLocation":"882:12:0","nodeType":"VariableDeclaration","scope":144,"src":"818:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"typeName":{"id":32,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"818:55:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":31,"nodeType":"UserDefinedTypeName","pathNode":{"id":30,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["837:24:0","862:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"837:35:0"},"referencedDeclaration":2785,"src":"837:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},"visibility":"private"},{"baseFunctions":[220],"body":{"id":54,"nodeType":"Block","src":"1053:132:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1070:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":44,"name":"IAccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1090:35:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$505_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}],"id":43,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1085:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1085:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerableUpgradeable_$505","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1127:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1085:53:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1070:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1166:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":48,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1142:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1148:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":220,"src":"1142:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1142:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1070:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41,"id":53,"nodeType":"Return","src":"1063:115:0"}]},"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"901:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"971:17:0","nodeType":"FunctionDefinition","overrides":{"id":38,"nodeType":"OverrideSpecifier","overrides":[],"src":"1029:8:0"},"parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"interfaceId","nameLocation":"996:11:0","nodeType":"VariableDeclaration","scope":55,"src":"989:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":35,"name":"bytes4","nodeType":"ElementaryTypeName","src":"989:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"988:20:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1047:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1047:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1046:6:0"},"scope":144,"src":"962:223:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[496],"body":{"id":73,"nodeType":"Block","src":"1869:52:0","statements":[{"expression":{"arguments":[{"id":70,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1908:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":66,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1886:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":68,"indexExpression":{"id":67,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1886:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":69,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1905:2:0","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"1886:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2785_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2785_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1886:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":65,"id":72,"nodeType":"Return","src":"1879:35:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1191:574:0","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":74,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1779:13:0","nodeType":"FunctionDefinition","overrides":{"id":62,"nodeType":"OverrideSpecifier","overrides":[],"src":"1842:8:0"},"parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"role","nameLocation":"1801:4:0","nodeType":"VariableDeclaration","scope":74,"src":"1793:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"index","nameLocation":"1815:5:0","nodeType":"VariableDeclaration","scope":74,"src":"1807:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:29:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"1860:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:9:0"},"scope":144,"src":"1770:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":89,"nodeType":"Block","src":"2178:51:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":83,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":85,"indexExpression":{"id":84,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2208:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2195:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":86,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2214:6:0","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2881,"src":"2195:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2785_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2785_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2195:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":82,"id":88,"nodeType":"Return","src":"2188:34:0"}]},"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1927:157:0","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":90,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2098:18:0","nodeType":"FunctionDefinition","overrides":{"id":79,"nodeType":"OverrideSpecifier","overrides":[],"src":"2151:8:0"},"parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"role","nameLocation":"2125:4:0","nodeType":"VariableDeclaration","scope":90,"src":"2117:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2116:14:0"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"2169:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2168:9:0"},"scope":144,"src":"2089:140:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[443],"body":{"id":113,"nodeType":"Block","src":"2394:89:0","statements":[{"expression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2421:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2427:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":99,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2404:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:10:0","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2404:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"2404:31:0"},{"expression":{"arguments":[{"id":110,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":106,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2445:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":108,"indexExpression":{"id":107,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2458:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2464:3:0","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"2445:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2785_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2785_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2445:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"ExpressionStatement","src":"2445:31:0"}]},"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"2235:77:0","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2326:10:0","nodeType":"FunctionDefinition","overrides":{"id":97,"nodeType":"OverrideSpecifier","overrides":[],"src":"2385:8:0"},"parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"role","nameLocation":"2345:4:0","nodeType":"VariableDeclaration","scope":114,"src":"2337:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"account","nameLocation":"2359:7:0","nodeType":"VariableDeclaration","scope":114,"src":"2351:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:31:0"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"2394:0:0"},"scope":144,"src":"2317:166:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[474],"body":{"id":137,"nodeType":"Block","src":"2650:93:0","statements":[{"expression":{"arguments":[{"id":126,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":127,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":123,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2660:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$144_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2666:11:0","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":474,"src":"2660:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"2660:32:0"},{"expression":{"arguments":[{"id":134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2728:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":130,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2702:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$2785_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":132,"indexExpression":{"id":131,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2702:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2721:6:0","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"2702:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2785_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2785_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"ExpressionStatement","src":"2702:34:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"2489:78:0","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":138,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2581:11:0","nodeType":"FunctionDefinition","overrides":{"id":121,"nodeType":"OverrideSpecifier","overrides":[],"src":"2641:8:0"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"2601:4:0","nodeType":"VariableDeclaration","scope":138,"src":"2593:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2593:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"account","nameLocation":"2615:7:0","nodeType":"VariableDeclaration","scope":138,"src":"2607:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2592:31:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"2650:0:0"},"scope":144,"src":"2572:171:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2749:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":143,"mutability":"mutable","name":"__gap","nameLocation":"3028:5:0","nodeType":"VariableDeclaration","scope":144,"src":"3008:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":142,"length":{"hexValue":"3439","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3016:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3008:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":145,"src":"431:2605:0","usedErrors":[]}],"src":"118:2919:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[480],"AddressUpgradeable":[1161],"ContextUpgradeable":[1203],"ERC165Upgradeable":[1476],"IAccessControlUpgradeable":[578],"IERC165Upgradeable":[1488],"Initializable":[747],"MathUpgradeable":[2354],"SignedMathUpgradeable":[2459],"StringsUpgradeable":[1432]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":579,"src":"133:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":1204,"src":"175:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":1433,"src":"217:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":1477,"src":"259:54:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":481,"sourceUnit":748,"src":"314:42:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":153,"name":"Initializable","nameLocations":["2065:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"2065:13:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"2065:13:1"},{"baseName":{"id":155,"name":"ContextUpgradeable","nameLocations":["2080:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"2080:18:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"2080:18:1"},{"baseName":{"id":157,"name":"IAccessControlUpgradeable","nameLocations":["2100:25:1"],"nodeType":"IdentifierPath","referencedDeclaration":578,"src":"2100:25:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"2100:25:1"},{"baseName":{"id":159,"name":"ERC165Upgradeable","nameLocations":["2127:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"2127:17:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"2127:17:1"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"358:1660:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":480,"linearizedBaseContracts":[480,1476,1488,578,1203,747],"name":"AccessControlUpgradeable","nameLocation":"2037:24:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":165,"nodeType":"Block","src":"2209:7:1","statements":[]},"id":166,"implemented":true,"kind":"function","modifiers":[{"id":163,"kind":"modifierInvocation","modifierName":{"id":162,"name":"onlyInitializing","nameLocations":["2192:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"2192:16:1"},"nodeType":"ModifierInvocation","src":"2192:16:1"}],"name":"__AccessControl_init","nameLocation":"2160:20:1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"2180:2:1"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"2209:0:1"},"scope":480,"src":"2151:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"2290:7:1","statements":[]},"id":172,"implemented":true,"kind":"function","modifiers":[{"id":169,"kind":"modifierInvocation","modifierName":{"id":168,"name":"onlyInitializing","nameLocations":["2273:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"2273:16:1"},"nodeType":"ModifierInvocation","src":"2273:16:1"}],"name":"__AccessControl_init_unchained","nameLocation":"2231:30:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"2261:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"2290:0:1"},"scope":480,"src":"2222:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":179,"members":[{"constant":false,"id":176,"mutability":"mutable","name":"members","nameLocation":"2353:7:1","nodeType":"VariableDeclaration","scope":179,"src":"2328:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":175,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2328:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2347:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"adminRole","nameLocation":"2378:9:1","nodeType":"VariableDeclaration","scope":179,"src":"2370:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2309:8:1","nodeType":"StructDefinition","scope":480,"src":"2302:92:1","visibility":"public"},{"constant":false,"id":184,"mutability":"mutable","name":"_roles","nameLocation":"2437:6:1","nodeType":"VariableDeclaration","scope":480,"src":"2400:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":183,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2400:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":182,"nodeType":"UserDefinedTypeName","pathNode":{"id":181,"name":"RoleData","nameLocations":["2419:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"2419:8:1"},"referencedDeclaration":179,"src":"2419:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":187,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2474:18:1","nodeType":"VariableDeclaration","scope":480,"src":"2450:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":197,"nodeType":"Block","src":"2918:44:1","statements":[{"expression":{"arguments":[{"id":193,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2939:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":192,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":252,"src":"2928:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2928:16:1"},{"id":196,"nodeType":"PlaceholderStatement","src":"2954:1:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2506:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":198,"name":"onlyRole","nameLocation":"2895:8:1","nodeType":"ModifierDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"role","nameLocation":"2912:4:1","nodeType":"VariableDeclaration","scope":198,"src":"2904:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:14:1"},"src":"2886:76:1","virtual":false,"visibility":"internal"},{"baseFunctions":[1470],"body":{"id":219,"nodeType":"Block","src":"3120:122:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3137:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":209,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3157:25:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$578_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3152:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$578","typeString":"type(contract IAccessControlUpgradeable)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3184:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"3152:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3137:58:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":215,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"3223:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":213,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3199:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$480_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"3199:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3137:98:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":206,"id":218,"nodeType":"Return","src":"3130:105:1"}]},"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"2968:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3038:17:1","nodeType":"FunctionDefinition","overrides":{"id":203,"nodeType":"OverrideSpecifier","overrides":[],"src":"3096:8:1"},"parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:1","nodeType":"VariableDeclaration","scope":220,"src":"3056:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":200,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3055:20:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"3114:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":204,"name":"bool","nodeType":"ElementaryTypeName","src":"3114:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3113:6:1"},"scope":480,"src":"3029:213:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":238,"nodeType":"Block","src":"3421:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":231,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3438:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":233,"indexExpression":{"id":232,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3445:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"3438:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":236,"indexExpression":{"id":235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3459:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":230,"id":237,"nodeType":"Return","src":"3431:36:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3248:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":239,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3338:7:1","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3397:8:1"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"role","nameLocation":"3354:4:1","nodeType":"VariableDeclaration","scope":239,"src":"3346:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"account","nameLocation":"3368:7:1","nodeType":"VariableDeclaration","scope":239,"src":"3360:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:31:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"3415:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"3415:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3414:6:1"},"scope":480,"src":"3329:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3824:47:1","statements":[{"expression":{"arguments":[{"id":246,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3845:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,291],"referencedDeclaration":291,"src":"3834:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3834:30:1"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3480:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3777:10:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"role","nameLocation":"3796:4:1","nodeType":"VariableDeclaration","scope":252,"src":"3788:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3788:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3787:14:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"3824:0:1"},"scope":480,"src":"3768:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"4225:428:1","statements":[{"condition":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4239:23:1","subExpression":{"arguments":[{"id":261,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4248:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4254:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4240:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":289,"nodeType":"IfStatement","src":"4235:412:1","trueBody":{"id":288,"nodeType":"Block","src":"4264:383:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4372:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4454:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":271,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"4423:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1432_$","typeString":"type(library StringsUpgradeable)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:11:1","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"4423:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4488:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"4572:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4564:7:1","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":276,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"4533:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$1432_$","typeString":"type(library StringsUpgradeable)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:11:1","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"4533:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"4330:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:274:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:1","typeDescriptions":{}}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:320:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":265,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4278:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:358:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"4278:358:1"}]}}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3877:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4161:10:1","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"role","nameLocation":"4180:4:1","nodeType":"VariableDeclaration","scope":291,"src":"4172:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4172:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"account","nameLocation":"4194:7:1","nodeType":"VariableDeclaration","scope":291,"src":"4186:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4171:31:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"4225:0:1"},"scope":480,"src":"4152:501:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[553],"body":{"id":305,"nodeType":"Block","src":"4917:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":300,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"4934:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":302,"indexExpression":{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4941:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4934:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4947:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"4934:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":299,"id":304,"nodeType":"Return","src":"4927:29:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"4659:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":306,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4843:12:1","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"4890:8:1"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"role","nameLocation":"4864:4:1","nodeType":"VariableDeclaration","scope":306,"src":"4856:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4856:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4855:14:1"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"4908:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4908:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4907:9:1"},"scope":480,"src":"4834:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[561],"body":{"id":325,"nodeType":"Block","src":"5362:42:1","statements":[{"expression":{"arguments":[{"id":321,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5383:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"5372:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5372:25:1"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4969:285:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":326,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":316,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5355:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":315,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5342:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":318,"kind":"modifierInvocation","modifierName":{"id":314,"name":"onlyRole","nameLocations":["5333:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5333:8:1"},"nodeType":"ModifierInvocation","src":"5333:28:1"}],"name":"grantRole","nameLocation":"5268:9:1","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"5324:8:1"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"role","nameLocation":"5286:4:1","nodeType":"VariableDeclaration","scope":326,"src":"5278:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5278:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"account","nameLocation":"5300:7:1","nodeType":"VariableDeclaration","scope":326,"src":"5292:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5277:31:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"5362:0:1"},"scope":480,"src":"5259:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[569],"body":{"id":345,"nodeType":"Block","src":"5788:43:1","statements":[{"expression":{"arguments":[{"id":341,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5810:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":342,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5816:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":340,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"5798:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5798:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"ExpressionStatement","src":"5798:26:1"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"5410:269:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":346,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":336,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5781:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":335,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5768:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5768:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":338,"kind":"modifierInvocation","modifierName":{"id":334,"name":"onlyRole","nameLocations":["5759:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"5759:8:1"},"nodeType":"ModifierInvocation","src":"5759:28:1"}],"name":"revokeRole","nameLocation":"5693:10:1","nodeType":"FunctionDefinition","overrides":{"id":333,"nodeType":"OverrideSpecifier","overrides":[],"src":"5750:8:1"},"parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"role","nameLocation":"5712:4:1","nodeType":"VariableDeclaration","scope":346,"src":"5704:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5704:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"account","nameLocation":"5726:7:1","nodeType":"VariableDeclaration","scope":346,"src":"5718:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"5718:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5703:31:1"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"5788:0:1"},"scope":480,"src":"5684:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[577],"body":{"id":368,"nodeType":"Block","src":"6445:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6463:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6474:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6488:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6455:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6455:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"6455:83:1"},{"expression":{"arguments":[{"id":364,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6561:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"6567:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":363,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6549:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"6549:26:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"5837:526:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6377:12:1","nodeType":"FunctionDefinition","overrides":{"id":353,"nodeType":"OverrideSpecifier","overrides":[],"src":"6436:8:1"},"parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"6398:4:1","nodeType":"VariableDeclaration","scope":369,"src":"6390:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6390:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"account","nameLocation":"6412:7:1","nodeType":"VariableDeclaration","scope":369,"src":"6404:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"6404:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6389:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"6445:0:1"},"scope":480,"src":"6368:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":382,"nodeType":"Block","src":"7335:42:1","statements":[{"expression":{"arguments":[{"id":378,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"7356:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7362:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7345:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"7345:25:1"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"6588:674:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7276:10:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"7295:4:1","nodeType":"VariableDeclaration","scope":383,"src":"7287:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7287:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"account","nameLocation":"7309:7:1","nodeType":"VariableDeclaration","scope":383,"src":"7301:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7286:31:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"7335:0:1"},"scope":480,"src":"7267:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"7575:174:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7593:17:1","nodeType":"VariableDeclaration","scope":410,"src":"7585:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7585:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":396,"initialValue":{"arguments":[{"id":394,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7626:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":393,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"7613:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7585:46:1"},{"expression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":397,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7641:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":399,"indexExpression":{"id":398,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7648:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7641:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7654:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":178,"src":"7641:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":401,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7666:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7641:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":403,"nodeType":"ExpressionStatement","src":"7641:34:1"},{"eventCall":{"arguments":[{"id":405,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7707:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":406,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"7713:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7732:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":404,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7690:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"EmitStatement","src":"7685:57:1"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"7383:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7511:13:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"7533:4:1","nodeType":"VariableDeclaration","scope":411,"src":"7525:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7525:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"adminRole","nameLocation":"7547:9:1","nodeType":"VariableDeclaration","scope":411,"src":"7539:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7524:33:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"7575:0:1"},"scope":480,"src":"7502:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":442,"nodeType":"Block","src":"7985:165:1","statements":[{"condition":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7999:23:1","subExpression":{"arguments":[{"id":420,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8008:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8014:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"8000:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"7995:149:1","trueBody":{"id":440,"nodeType":"Block","src":"8024:120:1","statements":[{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":424,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"8038:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":426,"indexExpression":{"id":425,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8045:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8051:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"8038:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":429,"indexExpression":{"id":428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8059:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8038:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8070:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8038:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":432,"nodeType":"ExpressionStatement","src":"8038:36:1"},{"eventCall":{"arguments":[{"id":434,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"8105:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":435,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"8111:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"8120:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":433,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8093:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":439,"nodeType":"EmitStatement","src":"8088:45:1"}]}}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"7755:157:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7926:10:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"role","nameLocation":"7945:4:1","nodeType":"VariableDeclaration","scope":443,"src":"7937:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"account","nameLocation":"7959:7:1","nodeType":"VariableDeclaration","scope":443,"src":"7951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"7951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7936:31:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"7985:0:1"},"scope":480,"src":"7917:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"8390:165:1","statements":[{"condition":{"arguments":[{"id":452,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8412:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":453,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8418:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":451,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"8404:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"8400:149:1","trueBody":{"id":471,"nodeType":"Block","src":"8428:121:1","statements":[{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":455,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"8442:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$179_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":457,"indexExpression":{"id":456,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8449:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8442:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$179_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8455:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":176,"src":"8442:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":460,"indexExpression":{"id":459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8463:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8442:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8442:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"ExpressionStatement","src":"8442:37:1"},{"eventCall":{"arguments":[{"id":465,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"8510:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"8516:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"8525:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8525:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":464,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"8498:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"EmitStatement","src":"8493:45:1"}]}}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"8156:160:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8330:11:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"role","nameLocation":"8350:4:1","nodeType":"VariableDeclaration","scope":474,"src":"8342:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8342:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"account","nameLocation":"8364:7:1","nodeType":"VariableDeclaration","scope":474,"src":"8356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8341:31:1"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"8390:0:1"},"scope":480,"src":"8321:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"8561:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":479,"mutability":"mutable","name":"__gap","nameLocation":"8840:5:1","nodeType":"VariableDeclaration","scope":480,"src":"8820:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"length":{"hexValue":"3439","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8820:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":481,"src":"2019:6829:1","usedErrors":[]}],"src":"108:8741:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol","exportedSymbols":{"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578]},"id":506,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":506,"sourceUnit":579,"src":"129:41:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":485,"name":"IAccessControlUpgradeable","nameLocations":["321:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":578,"src":"321:25:2"},"id":486,"nodeType":"InheritanceSpecifier","src":"321:25:2"}],"canonicalName":"IAccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"172:99:2","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":505,"linearizedBaseContracts":[505,578],"name":"IAccessControlEnumerableUpgradeable","nameLocation":"282:35:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"353:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"941:13:2","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"role","nameLocation":"963:4:2","nodeType":"VariableDeclaration","scope":496,"src":"955:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"index","nameLocation":"977:5:2","nodeType":"VariableDeclaration","scope":496,"src":"969:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:29:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":496,"src":"1007:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:9:2"},"scope":505,"src":"932:84:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"1022:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1193:18:2","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"role","nameLocation":"1220:4:2","nodeType":"VariableDeclaration","scope":504,"src":"1212:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1211:14:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"1249:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:2"},"scope":505,"src":"1184:74:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":506,"src":"272:988:2","usedErrors":[]}],"src":"104:1157:2"},"id":2},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[578]},"id":579,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":507,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":578,"linearizedBaseContracts":[578],"name":"IAccessControlUpgradeable","nameLocation":"219:25:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"251:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":517,"name":"RoleAdminChanged","nameLocation":"554:16:3","nodeType":"EventDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:3","nodeType":"VariableDeclaration","scope":517,"src":"571:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:3","nodeType":"VariableDeclaration","scope":517,"src":"593:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:3","nodeType":"VariableDeclaration","scope":517,"src":"628:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:3"},"src":"548:110:3"},{"anonymous":false,"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"664:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":526,"name":"RoleGranted","nameLocation":"887:11:3","nodeType":"EventDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:3","nodeType":"VariableDeclaration","scope":526,"src":"899:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":522,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:3","nodeType":"VariableDeclaration","scope":526,"src":"921:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:3","nodeType":"VariableDeclaration","scope":526,"src":"946:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:3"},"src":"881:89:3"},{"anonymous":false,"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"976:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":535,"name":"RoleRevoked","nameLocation":"1262:11:3","nodeType":"EventDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:3","nodeType":"VariableDeclaration","scope":535,"src":"1274:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":531,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:3","nodeType":"VariableDeclaration","scope":535,"src":"1296:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:3","nodeType":"VariableDeclaration","scope":535,"src":"1321:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:3"},"src":"1256:89:3"},{"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"1351:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:3","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"role","nameLocation":"1457:4:3","nodeType":"VariableDeclaration","scope":545,"src":"1449:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"1471:7:3","nodeType":"VariableDeclaration","scope":545,"src":"1463:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"1503:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":542,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:3"},"scope":578,"src":"1432:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"1515:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"role","nameLocation":"1734:4:3","nodeType":"VariableDeclaration","scope":553,"src":"1726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"1763:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:3"},"scope":578,"src":"1704:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1778:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:3","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"role","nameLocation":"2049:4:3","nodeType":"VariableDeclaration","scope":561,"src":"2041:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"account","nameLocation":"2063:7:3","nodeType":"VariableDeclaration","scope":561,"src":"2055:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2080:0:3"},"scope":578,"src":"2022:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"2087:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:3","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"role","nameLocation":"2343:4:3","nodeType":"VariableDeclaration","scope":569,"src":"2335:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"account","nameLocation":"2357:7:3","nodeType":"VariableDeclaration","scope":569,"src":"2349:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:3"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"2374:0:3"},"scope":578,"src":"2315:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2381:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:3","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"role","nameLocation":"2896:4:3","nodeType":"VariableDeclaration","scope":577,"src":"2888:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"account","nameLocation":"2910:7:3","nodeType":"VariableDeclaration","scope":577,"src":"2902:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"2927:0:3"},"scope":578,"src":"2866:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":579,"src":"209:2721:3","usedErrors":[]}],"src":"94:2837:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"Initializable":[747]},"id":748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":580,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":748,"sourceUnit":1162,"src":"138:44:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"184:2209:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":747,"linearizedBaseContracts":[747],"name":"Initializable","nameLocation":"2412:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"2432:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":585,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:4","nodeType":"VariableDeclaration","scope":747,"src":"2546:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":584,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"2579:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":588,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:4","nodeType":"VariableDeclaration","scope":747,"src":"2675:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":587,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"2708:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":593,"name":"Initialized","nameLocation":"2809:11:4","nodeType":"EventDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":593,"src":"2821:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":590,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:4"},"src":"2803:33:4"},{"body":{"id":648,"nodeType":"Block","src":"3269:483:4","statements":[{"assignments":[597],"declarations":[{"constant":false,"id":597,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:4","nodeType":"VariableDeclaration","scope":648,"src":"3279:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":596,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":600,"initialValue":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:4","subExpression":{"id":598,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3302:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3347:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3365:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:4","subExpression":{"arguments":[{"arguments":[{"id":612,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$747","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$747","typeString":"contract Initializable"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:4","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":608,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"3388:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":849,"src":"3388:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3436:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"ExpressionStatement","src":"3325:201:4"},{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3536:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":628,"nodeType":"ExpressionStatement","src":"3536:16:4"},{"condition":{"id":629,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3566:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"3562:65:4","trueBody":{"id":634,"nodeType":"Block","src":"3582:45:4","statements":[{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3596:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":633,"nodeType":"ExpressionStatement","src":"3596:20:4"}]}},{"id":636,"nodeType":"PlaceholderStatement","src":"3636:1:4"},{"condition":{"id":637,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3651:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"3647:99:4","trueBody":{"id":646,"nodeType":"Block","src":"3667:79:4","statements":[{"expression":{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3681:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":641,"nodeType":"ExpressionStatement","src":"3681:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":642,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3721:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"EmitStatement","src":"3716:19:4"}]}}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2842:399:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":649,"name":"initializer","nameLocation":"3255:11:4","nodeType":"ModifierDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"3266:2:4"},"src":"3246:506:4","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"4863:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:4","subExpression":{"id":655,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4882:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":657,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4899:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":658,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4914:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"4873:99:4"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":664,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4982:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":665,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4997:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":667,"nodeType":"ExpressionStatement","src":"4982:22:4"},{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":668,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5014:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"nodeType":"ExpressionStatement","src":"5014:20:4"},{"id":672,"nodeType":"PlaceholderStatement","src":"5044:1:4"},{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":673,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5055:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"ExpressionStatement","src":"5055:21:4"},{"eventCall":{"arguments":[{"id":678,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5103:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":677,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5091:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"EmitStatement","src":"5086:25:4"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"3758:1062:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":682,"name":"reinitializer","nameLocation":"4834:13:4","nodeType":"ModifierDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"version","nameLocation":"4854:7:4","nodeType":"VariableDeclaration","scope":682,"src":"4848:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":651,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:4"},"src":"4825:293:4","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"5356:97:4","statements":[{"expression":{"arguments":[{"id":686,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5374:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"5366:69:4"},{"id":690,"nodeType":"PlaceholderStatement","src":"5445:1:4"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"5124:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":692,"name":"onlyInitializing","nameLocation":"5337:16:4","nodeType":"ModifierDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"5353:2:4"},"src":"5328:125:4","virtual":false,"visibility":"internal"},{"body":{"id":727,"nodeType":"Block","src":"5988:231:4","statements":[{"expression":{"arguments":[{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:4","subExpression":{"id":697,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6007:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"5998:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6078:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":704,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:4","memberName":"max","nodeType":"MemberAccess","src":"6094:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"nodeType":"IfStatement","src":"6074:139:4","trueBody":{"id":725,"nodeType":"Block","src":"6111:102:4","statements":[{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":709,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6125:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":711,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:4","memberName":"max","nodeType":"MemberAccess","src":"6140:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":716,"nodeType":"ExpressionStatement","src":"6125:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":719,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:4","memberName":"max","nodeType":"MemberAccess","src":"6186:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":717,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6174:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"EmitStatement","src":"6169:33:4"}]}}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"5459:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":728,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:4","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"5968:2:4"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"5988:0:4"},"scope":747,"src":"5939:280:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"6393:36:4","statements":[{"expression":{"id":734,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"6410:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":733,"id":735,"nodeType":"Return","src":"6403:19:4"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"6225:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:4","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"6360:2:4"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":737,"src":"6386:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":731,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:4"},"scope":747,"src":"6329:100:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"6601:37:4","statements":[{"expression":{"id":743,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6618:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":742,"id":744,"nodeType":"Return","src":"6611:20:4"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"6435:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:4","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"6569:2:4"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"6595:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":740,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:4"},"scope":747,"src":"6545:93:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":748,"src":"2394:4246:4","usedErrors":[]}],"src":"113:6528:4"},"id":4},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"Initializable":[747],"ReentrancyGuardUpgradeable":[831]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":749,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":748,"src":"136:42:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":752,"name":"Initializable","nameLocations":["979:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"979:13:5"},"id":753,"nodeType":"InheritanceSpecifier","src":"979:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"180:750:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831,747],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":756,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:5","nodeType":"VariableDeclaration","scope":831,"src":"1747:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":759,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:5","nodeType":"VariableDeclaration","scope":831,"src":"1794:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":761,"mutability":"mutable","name":"_status","nameLocation":"1854:7:5","nodeType":"VariableDeclaration","scope":831,"src":"1838:23:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":769,"nodeType":"Block","src":"1928:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":766,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1938:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"1938:34:5"}]},"id":770,"implemented":true,"kind":"function","modifiers":[{"id":764,"kind":"modifierInvocation","modifierName":{"id":763,"name":"onlyInitializing","nameLocations":["1911:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"1911:16:5"},"nodeType":"ModifierInvocation","src":"1911:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:5","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"1899:2:5"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"1928:0:5"},"scope":831,"src":"1868:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"2055:39:5","statements":[{"expression":{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":775,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":776,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2075:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ExpressionStatement","src":"2065:22:5"}]},"id":780,"implemented":true,"kind":"function","modifiers":[{"id":773,"kind":"modifierInvocation","modifierName":{"id":772,"name":"onlyInitializing","nameLocations":["2038:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"2038:16:5"},"nodeType":"ModifierInvocation","src":"2038:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:5","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"2026:2:5"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"2055:0:5"},"scope":831,"src":"1985:109:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":790,"nodeType":"Block","src":"2495:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":783,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2505:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"2505:21:5"},{"id":786,"nodeType":"PlaceholderStatement","src":"2536:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":787,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2547:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"2547:20:5"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"2100:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":791,"name":"nonReentrant","nameLocation":"2480:12:5","nodeType":"ModifierDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"2492:2:5"},"src":"2471:103:5","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"2619:248:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":796,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"2723:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2704:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"2704:63:5"},{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":801,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":802,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"2852:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"2842:18:5"}]},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:5","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"2608:2:5"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"2619:0:5"},"scope":831,"src":"2580:287:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":813,"nodeType":"Block","src":"2911:171:5","statements":[{"expression":{"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":809,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3053:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":810,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3063:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":812,"nodeType":"ExpressionStatement","src":"3053:22:5"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:5","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"2900:2:5"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"2911:0:5"},"scope":831,"src":"2873:209:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":824,"nodeType":"Block","src":"3325:43:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":821,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3353:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":819,"id":823,"nodeType":"Return","src":"3335:26:5"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"3088:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3270:23:5","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"3293:2:5"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"3319:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":817,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3318:6:5"},"scope":831,"src":"3261:107:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"3374:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":830,"mutability":"mutable","name":"__gap","nameLocation":"3653:5:5","nodeType":"VariableDeclaration","scope":831,"src":"3633:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"length":{"hexValue":"3439","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3641:2:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3633:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":832,"src":"931:2730:5","usedErrors":[]}],"src":"112:3550:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161]},"id":1162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1161,"linearizedBaseContracts":[1161],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":848,"nodeType":"Block","src":"1489:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":842,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1713:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:6","memberName":"code","nodeType":"MemberAccess","src":"1713:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:6","memberName":"length","nodeType":"MemberAccess","src":"1713:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":841,"id":847,"nodeType":"Return","src":"1706:30:6"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"227:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:6","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"account","nameLocation":"1451:7:6","nodeType":"VariableDeclaration","scope":849,"src":"1443:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:6"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"1483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:6"},"scope":1161,"src":"1423:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"2729:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":860,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:6","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"2739:73:6"},{"assignments":[869,null],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"success","nameLocation":"2829:7:6","nodeType":"VariableDeclaration","scope":882,"src":"2824:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":868,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":876,"initialValue":{"arguments":[{"hexValue":"","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":870,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"2842:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:6","memberName":"call","nodeType":"MemberAccess","src":"2842:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:6"},{"expression":{"arguments":[{"id":878,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2893:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"2885:78:6"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1749:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:6","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:6","nodeType":"VariableDeclaration","scope":883,"src":"2677:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"amount","nameLocation":"2712:6:6","nodeType":"VariableDeclaration","scope":883,"src":"2704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"2729:0:6"},"scope":1161,"src":"2658:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"3801:96:6","statements":[{"expression":{"arguments":[{"id":894,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3840:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"3848:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":893,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"3818:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":892,"id":899,"nodeType":"Return","src":"3811:79:6"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"2976:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:6","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"target","nameLocation":"3742:6:6","nodeType":"VariableDeclaration","scope":901,"src":"3734:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"data","nameLocation":"3763:4:6","nodeType":"VariableDeclaration","scope":901,"src":"3750:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:6"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"3787:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:6"},"scope":1161,"src":"3712:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"4266:76:6","statements":[{"expression":{"arguments":[{"id":914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"4305:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":917,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4322:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":913,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"4283:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":912,"id":919,"nodeType":"Return","src":"4276:59:6"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3903:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:6","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"target","nameLocation":"4158:6:6","nodeType":"VariableDeclaration","scope":921,"src":"4150:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"data","nameLocation":"4187:4:6","nodeType":"VariableDeclaration","scope":921,"src":"4174:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:6","nodeType":"VariableDeclaration","scope":921,"src":"4201:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:6"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"4252:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":910,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:6"},"scope":1161,"src":"4119:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"4817:111:6","statements":[{"expression":{"arguments":[{"id":934,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"4856:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"4864:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"4870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":933,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"4834:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":932,"id":939,"nodeType":"Return","src":"4827:94:6"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"4348:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:6","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"target","nameLocation":"4743:6:6","nodeType":"VariableDeclaration","scope":941,"src":"4735:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"4764:4:6","nodeType":"VariableDeclaration","scope":941,"src":"4751:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"value","nameLocation":"4778:5:6","nodeType":"VariableDeclaration","scope":941,"src":"4770:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:6"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"4803:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:6"},"scope":1161,"src":"4704:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"5355:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":958,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:6","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"5365:81:6"},{"assignments":[967,969],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"success","nameLocation":"5462:7:6","nodeType":"VariableDeclaration","scope":984,"src":"5457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":966,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:6","nodeType":"VariableDeclaration","scope":984,"src":"5471:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":976,"initialValue":{"arguments":[{"id":974,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":970,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5498:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:6","memberName":"call","nodeType":"MemberAccess","src":"5498:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:6"},{"expression":{"arguments":[{"id":978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5573:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5581:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5590:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":981,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5602:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":977,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"5546:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":954,"id":983,"nodeType":"Return","src":"5539:76:6"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"4934:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"target","nameLocation":"5224:6:6","nodeType":"VariableDeclaration","scope":985,"src":"5216:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"data","nameLocation":"5253:4:6","nodeType":"VariableDeclaration","scope":985,"src":"5240:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"value","nameLocation":"5275:5:6","nodeType":"VariableDeclaration","scope":985,"src":"5267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:6","nodeType":"VariableDeclaration","scope":985,"src":"5290:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"5341:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:6"},"scope":1161,"src":"5176:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"5899:97:6","statements":[{"expression":{"arguments":[{"id":996,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5935:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5943:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":995,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1002,1031],"referencedDeclaration":1031,"src":"5916:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":994,"id":1000,"nodeType":"Return","src":"5909:80:6"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"5628:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:6","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"target","nameLocation":"5835:6:6","nodeType":"VariableDeclaration","scope":1002,"src":"5827:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"data","nameLocation":"5856:4:6","nodeType":"VariableDeclaration","scope":1002,"src":"5843:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":989,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:6"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"5885:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:6"},"scope":1161,"src":"5799:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1030,"nodeType":"Block","src":"6338:168:6","statements":[{"assignments":[1015,1017],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"success","nameLocation":"6354:7:6","nodeType":"VariableDeclaration","scope":1030,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:6","nodeType":"VariableDeclaration","scope":1030,"src":"6363:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"id":1020,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1018,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6390:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:6"},{"expression":{"arguments":[{"id":1024,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6465:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1026,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"6474:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1027,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6486:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1023,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"6430:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1013,"id":1029,"nodeType":"Return","src":"6423:76:6"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"6002:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:6","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"target","nameLocation":"6225:6:6","nodeType":"VariableDeclaration","scope":1031,"src":"6217:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"data","nameLocation":"6254:4:6","nodeType":"VariableDeclaration","scope":1031,"src":"6241:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:6","nodeType":"VariableDeclaration","scope":1031,"src":"6268:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:6"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"6324:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:6"},"scope":1161,"src":"6180:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"6782:101:6","statements":[{"expression":{"arguments":[{"id":1042,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6820:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1041,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1048,1077],"referencedDeclaration":1077,"src":"6799:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1040,"id":1046,"nodeType":"Return","src":"6792:84:6"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"6512:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:6","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"target","nameLocation":"6723:6:6","nodeType":"VariableDeclaration","scope":1048,"src":"6715:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"data","nameLocation":"6744:4:6","nodeType":"VariableDeclaration","scope":1048,"src":"6731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:6"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1048,"src":"6768:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:6"},"scope":1161,"src":"6685:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"7224:170:6","statements":[{"assignments":[1061,1063],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"success","nameLocation":"7240:7:6","nodeType":"VariableDeclaration","scope":1076,"src":"7235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1060,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:6","nodeType":"VariableDeclaration","scope":1076,"src":"7249:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1068,"initialValue":{"arguments":[{"id":1066,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7296:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1064,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7276:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:6"},{"expression":{"arguments":[{"id":1070,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7345:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1072,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7362:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1073,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"7374:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1069,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"7318:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1059,"id":1075,"nodeType":"Return","src":"7311:76:6"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"6889:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:6","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"target","nameLocation":"7116:6:6","nodeType":"VariableDeclaration","scope":1077,"src":"7108:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"data","nameLocation":"7145:4:6","nodeType":"VariableDeclaration","scope":1077,"src":"7132:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:6","nodeType":"VariableDeclaration","scope":1077,"src":"7159:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1054,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:6"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"7210:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:6"},"scope":1161,"src":"7069:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"7876:434:6","statements":[{"condition":{"id":1091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7890:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1113,"nodeType":"Block","src":"8246:58:6","statements":[{"expression":{"arguments":[{"id":1109,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8268:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1110,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8280:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1108,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8260:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"ExpressionStatement","src":"8260:33:6"}]},"id":1114,"nodeType":"IfStatement","src":"7886:418:6","trueBody":{"id":1107,"nodeType":"Block","src":"7899:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7917:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:6","memberName":"length","nodeType":"MemberAccess","src":"7917:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"7913:286:6","trueBody":{"id":1103,"nodeType":"Block","src":"7941:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1098,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"8143:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8132:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"8124:60:6"}]}},{"expression":{"id":1105,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8219:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1090,"id":1106,"nodeType":"Return","src":"8212:17:6"}]}}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"7400:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:6","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"target","nameLocation":"7735:6:6","nodeType":"VariableDeclaration","scope":1116,"src":"7727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"success","nameLocation":"7756:7:6","nodeType":"VariableDeclaration","scope":1116,"src":"7751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:6","nodeType":"VariableDeclaration","scope":1116,"src":"7773:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:6","nodeType":"VariableDeclaration","scope":1116,"src":"7806:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1085,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:6"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"7862:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1088,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:6"},"scope":1161,"src":"7682:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"8691:135:6","statements":[{"condition":{"id":1128,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"8705:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1137,"nodeType":"Block","src":"8762:58:6","statements":[{"expression":{"arguments":[{"id":1133,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8784:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1134,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1132,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"8776:33:6"}]},"id":1138,"nodeType":"IfStatement","src":"8701:119:6","trueBody":{"id":1131,"nodeType":"Block","src":"8714:42:6","statements":[{"expression":{"id":1129,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1127,"id":1130,"nodeType":"Return","src":"8728:17:6"}]}}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"8316:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"success","nameLocation":"8571:7:6","nodeType":"VariableDeclaration","scope":1140,"src":"8566:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:6","nodeType":"VariableDeclaration","scope":1140,"src":"8588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:6","nodeType":"VariableDeclaration","scope":1140,"src":"8621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1122,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:6"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"8677:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:6"},"scope":1161,"src":"8531:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"8915:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8991:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:6","memberName":"length","nodeType":"MemberAccess","src":"8991:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1157,"nodeType":"Block","src":"9321:45:6","statements":[{"expression":{"arguments":[{"id":1154,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9342:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1153,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"9335:20:6"}]},"id":1158,"nodeType":"IfStatement","src":"8987:379:6","trueBody":{"id":1152,"nodeType":"Block","src":"9014:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:6"},"nodeType":"YulFunctionCall","src":"9213:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:6"},"nodeType":"YulFunctionCall","src":"9254:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:6"},"nodeType":"YulFunctionCall","src":"9247:44:6"},"nodeType":"YulExpressionStatement","src":"9247:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1142,"isOffset":false,"isSlot":false,"src":"9219:10:6","valueSize":1},{"declaration":1142,"isOffset":false,"isSlot":false,"src":"9262:10:6","valueSize":1}],"id":1151,"nodeType":"InlineAssembly","src":"9163:142:6"}]}}]},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:6","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:6","nodeType":"VariableDeclaration","scope":1160,"src":"8849:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:6","nodeType":"VariableDeclaration","scope":1160,"src":"8874:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1143,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:6"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"8915:0:6"},"scope":1161,"src":"8832:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1162,"src":"194:9180:6","usedErrors":[]}],"src":"101:9274:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ContextUpgradeable":[1203],"Initializable":[747]},"id":1204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1163,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":748,"src":"110:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1166,"name":"Initializable","nameLocations":["691:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"691:13:7"},"id":1167,"nodeType":"InheritanceSpecifier","src":"691:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"154:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1203,"linearizedBaseContracts":[1203,747],"name":"ContextUpgradeable","nameLocation":"669:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1172,"nodeType":"Block","src":"763:7:7","statements":[]},"id":1173,"implemented":true,"kind":"function","modifiers":[{"id":1170,"kind":"modifierInvocation","modifierName":{"id":1169,"name":"onlyInitializing","nameLocations":["746:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"746:16:7"},"nodeType":"ModifierInvocation","src":"746:16:7"}],"name":"__Context_init","nameLocation":"720:14:7","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"734:2:7"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"763:0:7"},"scope":1203,"src":"711:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1178,"nodeType":"Block","src":"838:7:7","statements":[]},"id":1179,"implemented":true,"kind":"function","modifiers":[{"id":1176,"kind":"modifierInvocation","modifierName":{"id":1175,"name":"onlyInitializing","nameLocations":["821:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"821:16:7"},"nodeType":"ModifierInvocation","src":"821:16:7"}],"name":"__Context_init_unchained","nameLocation":"785:24:7","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"809:2:7"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"838:0:7"},"scope":1203,"src":"776:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1187,"nodeType":"Block","src":"912:34:7","statements":[{"expression":{"expression":{"id":1184,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:7","memberName":"sender","nodeType":"MemberAccess","src":"929:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1183,"id":1186,"nodeType":"Return","src":"922:17:7"}]},"id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:7","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"869:2:7"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:7"},"scope":1203,"src":"850:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"1019:32:7","statements":[{"expression":{"expression":{"id":1193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:7","memberName":"data","nodeType":"MemberAccess","src":"1036:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1192,"id":1195,"nodeType":"Return","src":"1029:15:7"}]},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:7","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"969:2:7"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"1003:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:7"},"scope":1203,"src":"952:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"1057:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1202,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:7","nodeType":"VariableDeclaration","scope":1203,"src":"1316:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1201,"length":{"hexValue":"3530","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1204,"src":"651:693:7","usedErrors":[]}],"src":"86:1259:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[2354],"SignedMathUpgradeable":[2459],"StringsUpgradeable":[1432]},"id":1433,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1205,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":1206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2355,"src":"126:36:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":1207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1433,"sourceUnit":2460,"src":"163:42:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"207:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":1432,"linearizedBaseContracts":[1432],"name":"StringsUpgradeable","nameLocation":"250:18:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1211,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:8","nodeType":"VariableDeclaration","scope":1432,"src":"275:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1209,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1214,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:8","nodeType":"VariableDeclaration","scope":1432,"src":"335:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1212,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1261,"nodeType":"Block","src":"551:636:8","statements":[{"id":1260,"nodeType":"UncheckedBlock","src":"561:620:8","statements":[{"assignments":[1223],"declarations":[{"constant":false,"id":1223,"mutability":"mutable","name":"length","nameLocation":"593:6:8","nodeType":"VariableDeclaration","scope":1260,"src":"585:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"624:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1224,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"602:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2354_$","typeString":"type(library MathUpgradeable)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2191,"src":"602:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:8"},{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"buffer","nameLocation":"662:6:8","nodeType":"VariableDeclaration","scope":1260,"src":"648:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1231,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1237,"initialValue":{"arguments":[{"id":1235,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"682:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1233,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:8"},{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"ptr","nameLocation":"711:3:8","nodeType":"VariableDeclaration","scope":1260,"src":"703:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1240,"nodeType":"VariableDeclarationStatement","src":"703:11:8"},{"AST":{"nodeType":"YulBlock","src":"784:67:8","statements":[{"nodeType":"YulAssignment","src":"802:35:8","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:8","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:8"},"nodeType":"YulFunctionCall","src":"821:15:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:8"},"nodeType":"YulFunctionCall","src":"809:28:8"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1232,"isOffset":false,"isSlot":false,"src":"813:6:8","valueSize":1},{"declaration":1223,"isOffset":false,"isSlot":false,"src":"829:6:8","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"802:3:8","valueSize":1}],"id":1241,"nodeType":"InlineAssembly","src":"775:76:8"},{"body":{"id":1256,"nodeType":"Block","src":"877:267:8","statements":[{"expression":{"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:8","subExpression":{"id":1243,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"895:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1245,"nodeType":"ExpressionStatement","src":"895:5:8"},{"AST":{"nodeType":"YulBlock","src":"978:84:8","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:8"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:8"},"nodeType":"YulFunctionCall","src":"1018:14:8"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:8"},"nodeType":"YulFunctionCall","src":"1013:30:8"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:8"},"nodeType":"YulFunctionCall","src":"1000:44:8"},"nodeType":"YulExpressionStatement","src":"1000:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1211,"isOffset":false,"isSlot":false,"src":"1034:8:8","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"1008:3:8","valueSize":1},{"declaration":1217,"isOffset":false,"isSlot":false,"src":"1022:5:8","valueSize":1}],"id":1246,"nodeType":"InlineAssembly","src":"969:93:8"},{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1079:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"1079:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1112:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"1108:21:8","trueBody":{"id":1254,"nodeType":"Break","src":"1124:5:8"}}]},"condition":{"hexValue":"74727565","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1257,"nodeType":"WhileStatement","src":"864:280:8"},{"expression":{"id":1258,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1164:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1221,"id":1259,"nodeType":"Return","src":"1157:13:8"}]}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"385:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:8","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"506:5:8","nodeType":"VariableDeclaration","scope":1262,"src":"498:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:8"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"536:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:8"},"scope":1432,"src":"480:707:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"1357:114:8","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1398:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:8","trueExpression":{"hexValue":"2d","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1455:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1281,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1429:21:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$2459_$","typeString":"type(library SignedMathUpgradeable)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"1429:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1262,1290],"referencedDeclaration":1262,"src":"1420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1272,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1270,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:8","typeDescriptions":{}}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1269,"id":1288,"nodeType":"Return","src":"1367:97:8"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1193:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:8","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"value","nameLocation":"1312:5:8","nodeType":"VariableDeclaration","scope":1290,"src":"1305:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1264,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:8"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"1342:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1267,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:8"},"scope":1432,"src":"1287:184:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"1650:111:8","statements":[{"id":1308,"nodeType":"UncheckedBlock","src":"1660:95:8","statements":[{"expression":{"arguments":[{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1703:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"1733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1300,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"1710:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$2354_$","typeString":"type(library MathUpgradeable)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2314,"src":"1710:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1298,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1310,1386,1406],"referencedDeclaration":1386,"src":"1691:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1297,"id":1307,"nodeType":"Return","src":"1684:60:8"}]}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"1477:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:8","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"1605:5:8","nodeType":"VariableDeclaration","scope":1310,"src":"1597:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:8"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"1635:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1295,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:8"},"scope":1432,"src":"1576:185:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"1974:347:8","statements":[{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:8","nodeType":"VariableDeclaration","scope":1385,"src":"1984:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1330,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1325,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"2020:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1322,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:8"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1331,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2041:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1333,"indexExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1336,"nodeType":"ExpressionStatement","src":"2041:15:8"},{"expression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1337,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2066:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1339,"indexExpression":{"hexValue":"31","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1342,"nodeType":"ExpressionStatement","src":"2066:15:8"},{"body":{"id":1371,"nodeType":"Block","src":"2136:83:8","statements":[{"expression":{"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1357,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2150:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1359,"indexExpression":{"id":1358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2157:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1360,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"2162:8:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1364,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2171:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1366,"nodeType":"ExpressionStatement","src":"2150:33:8"},{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2197:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1370,"nodeType":"ExpressionStatement","src":"2197:11:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2124:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1372,"initializationExpression":{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"i","nameLocation":"2104:1:8","nodeType":"VariableDeclaration","scope":1372,"src":"2096:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1346,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"2112:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:8"},"loopExpression":{"expression":{"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:8","subExpression":{"id":1354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2133:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1356,"nodeType":"ExpressionStatement","src":"2131:3:8"},"nodeType":"ForStatement","src":"2091:128:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2236:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"2228:55:8"},{"expression":{"arguments":[{"id":1382,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2307:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:8","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1319,"id":1384,"nodeType":"Return","src":"2293:21:8"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"1767:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:8","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"value","nameLocation":"1913:5:8","nodeType":"VariableDeclaration","scope":1386,"src":"1905:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"length","nameLocation":"1928:6:8","nodeType":"VariableDeclaration","scope":1386,"src":"1920:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:8"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"1959:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1317,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:8"},"scope":1432,"src":"1884:437:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"2546:76:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1399,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"2591:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1397,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:8","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:8","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1402,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"2599:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1394,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1310,1386,1406],"referencedDeclaration":1386,"src":"2563:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1393,"id":1404,"nodeType":"Return","src":"2556:59:8"}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"2327:141:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:8","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"addr","nameLocation":"2502:4:8","nodeType":"VariableDeclaration","scope":1406,"src":"2494:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:8"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"2531:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1391,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:8"},"scope":1432,"src":"2473:149:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1430,"nodeType":"Block","src":"2777:66:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"2810:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:8","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1416,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2833:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:8","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1422,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1415,"id":1429,"nodeType":"Return","src":"2787:49:8"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"2628:66:8","text":" @dev Returns true if the two strings are equal."},"id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:8","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"a","nameLocation":"2728:1:8","nodeType":"VariableDeclaration","scope":1431,"src":"2714:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1408,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"b","nameLocation":"2745:1:8","nodeType":"VariableDeclaration","scope":1431,"src":"2731:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1410,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:8"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":1432,"src":"2699:144:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1433,"src":"242:2603:8","usedErrors":[]}],"src":"101:2745:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ERC165Upgradeable":[1476],"IERC165Upgradeable":[1488],"Initializable":[747]},"id":1477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1434,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":1435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1489,"src":"124:34:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":748,"src":"159:45:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1438,"name":"Initializable","nameLocations":["822:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":747,"src":"822:13:9"},"id":1439,"nodeType":"InheritanceSpecifier","src":"822:13:9"},{"baseName":{"id":1440,"name":"IERC165Upgradeable","nameLocations":["837:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1488,"src":"837:18:9"},"id":1441,"nodeType":"InheritanceSpecifier","src":"837:18:9"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"206:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1476,"linearizedBaseContracts":[1476,1488,747],"name":"ERC165Upgradeable","nameLocation":"801:17:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1446,"nodeType":"Block","src":"913:7:9","statements":[]},"id":1447,"implemented":true,"kind":"function","modifiers":[{"id":1444,"kind":"modifierInvocation","modifierName":{"id":1443,"name":"onlyInitializing","nameLocations":["896:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"896:16:9"},"nodeType":"ModifierInvocation","src":"896:16:9"}],"name":"__ERC165_init","nameLocation":"871:13:9","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"884:2:9"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"913:0:9"},"scope":1476,"src":"862:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"987:7:9","statements":[]},"id":1453,"implemented":true,"kind":"function","modifiers":[{"id":1450,"kind":"modifierInvocation","modifierName":{"id":1449,"name":"onlyInitializing","nameLocations":["970:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":692,"src":"970:16:9"},"nodeType":"ModifierInvocation","src":"970:16:9"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"958:2:9"},"returnParameters":{"id":1451,"nodeType":"ParameterList","parameters":[],"src":"987:0:9"},"scope":1476,"src":"926:68:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1487],"body":{"id":1469,"nodeType":"Block","src":"1151:75:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1168:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1464,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1188:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1488_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$1488_$","typeString":"type(contract IERC165Upgradeable)"}],"id":1463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$1488","typeString":"type(contract IERC165Upgradeable)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1461,"id":1468,"nodeType":"Return","src":"1161:58:9"}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"999:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:9","nodeType":"FunctionDefinition","overrides":{"id":1458,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:9"},"parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:9","nodeType":"VariableDeclaration","scope":1470,"src":"1087:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1455,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:9"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"1145:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1459,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:9"},"scope":1476,"src":"1060:166:9","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1232:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1475,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:9","nodeType":"VariableDeclaration","scope":1476,"src":"1491:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1474,"length":{"hexValue":"3530","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1477,"src":"783:736:9","usedErrors":[]}],"src":"99:1421:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[1488]},"id":1489,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1478,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1488,"linearizedBaseContracts":[1488],"name":"IERC165Upgradeable","nameLocation":"415:18:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"440:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1487,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:10","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:10","nodeType":"VariableDeclaration","scope":1487,"src":"812:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1481,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:10"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"855:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1484,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:10"},"scope":1488,"src":"785:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1489,"src":"405:458:10","usedErrors":[]}],"src":"100:764:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[2354]},"id":2355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1490,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"128:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2354,"linearizedBaseContracts":[2354],"name":"MathUpgradeable","nameLocation":"210:15:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":1495,"members":[{"id":1492,"name":"Down","nameLocation":"256:4:11","nodeType":"EnumValue","src":"256:4:11"},{"id":1493,"name":"Up","nameLocation":"298:2:11","nodeType":"EnumValue","src":"298:2:11"},{"id":1494,"name":"Zero","nameLocation":"329:4:11","nodeType":"EnumValue","src":"329:4:11"}],"name":"Rounding","nameLocation":"237:8:11","nodeType":"EnumDefinition","src":"232:122:11"},{"body":{"id":1512,"nodeType":"Block","src":"491:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"508:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"512:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"520:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:11","trueExpression":{"id":1508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"516:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1504,"id":1511,"nodeType":"Return","src":"501:20:11"}]},"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"360:59:11","text":" @dev Returns the largest of two numbers."},"id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:11","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"a","nameLocation":"445:1:11","nodeType":"VariableDeclaration","scope":1513,"src":"437:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"b","nameLocation":"456:1:11","nodeType":"VariableDeclaration","scope":1513,"src":"448:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:11"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1513,"src":"482:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:11"},"scope":2354,"src":"424:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"666:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"683:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"687:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"695:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:11","trueExpression":{"id":1526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"691:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1522,"id":1529,"nodeType":"Return","src":"676:20:11"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"534:60:11","text":" @dev Returns the smallest of two numbers."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:11","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"a","nameLocation":"620:1:11","nodeType":"VariableDeclaration","scope":1531,"src":"612:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"b","nameLocation":"631:1:11","nodeType":"VariableDeclaration","scope":1531,"src":"623:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:11"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"657:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:11"},"scope":2354,"src":"599:104:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"887:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"942:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"946:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"956:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1540,"id":1552,"nodeType":"Return","src":"934:28:11"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"709:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:11","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"a","nameLocation":"841:1:11","nodeType":"VariableDeclaration","scope":1554,"src":"833:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"b","nameLocation":"852:1:11","nodeType":"VariableDeclaration","scope":1554,"src":"844:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:11"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1554,"src":"878:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:11"},"scope":2354,"src":"816:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"1239:123:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1327:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1341:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"1350:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:11","trueExpression":{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1563,"id":1577,"nodeType":"Return","src":"1320:35:11"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"975:188:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:11","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"a","nameLocation":"1193:1:11","nodeType":"VariableDeclaration","scope":1579,"src":"1185:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"b","nameLocation":"1204:1:11","nodeType":"VariableDeclaration","scope":1579,"src":"1196:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:11"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"1230:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:11"},"scope":2354,"src":"1168:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1701,"nodeType":"Block","src":"1776:4115:11","statements":[{"id":1700,"nodeType":"UncheckedBlock","src":"1786:4099:11","statements":[{"assignments":[1592],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:11","nodeType":"VariableDeclaration","scope":1700,"src":"2107:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"nodeType":"VariableDeclarationStatement","src":"2107:13:11"},{"assignments":[1595],"declarations":[{"constant":false,"id":1595,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:11","nodeType":"VariableDeclaration","scope":1700,"src":"2179:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1596,"nodeType":"VariableDeclarationStatement","src":"2179:13:11"},{"AST":{"nodeType":"YulBlock","src":"2259:157:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:11"},"nodeType":"YulFunctionCall","src":"2300:6:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:11"},"nodeType":"YulFunctionCall","src":"2287:20:11"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:11","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:11"},"nodeType":"YulFunctionCall","src":"2333:9:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:11"}]},{"nodeType":"YulAssignment","src":"2359:43:11","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:11"},"nodeType":"YulFunctionCall","src":"2372:14:11"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:11"},"nodeType":"YulFunctionCall","src":"2388:13:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:11"},"nodeType":"YulFunctionCall","src":"2368:34:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1592,"isOffset":false,"isSlot":false,"src":"2324:5:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"2380:5:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"2395:5:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"2359:5:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"2294:1:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"2337:1:11","valueSize":1},{"declaration":1584,"isOffset":false,"isSlot":false,"src":"2297:1:11","valueSize":1},{"declaration":1584,"isOffset":false,"isSlot":false,"src":"2340:1:11","valueSize":1}],"id":1597,"nodeType":"InlineAssembly","src":"2250:166:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2497:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"2493:368:11","trueBody":{"id":1605,"nodeType":"Block","src":"2509:352:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1601,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2827:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2835:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1590,"id":1604,"nodeType":"Return","src":"2820:26:11"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2971:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1609,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2985:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"2963:53:11"},{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:11","nodeType":"VariableDeclaration","scope":1700,"src":"3272:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1616,"nodeType":"VariableDeclarationStatement","src":"3272:17:11"},{"AST":{"nodeType":"YulBlock","src":"3312:291:11","statements":[{"nodeType":"YulAssignment","src":"3381:38:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:11"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:11"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:11"},"nodeType":"YulFunctionCall","src":"3394:25:11"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:11"}]},{"nodeType":"YulAssignment","src":"3501:41:11","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:11"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:11"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:11"},"nodeType":"YulFunctionCall","src":"3521:20:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:11"},"nodeType":"YulFunctionCall","src":"3510:32:11"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:11"}]},{"nodeType":"YulAssignment","src":"3559:30:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:11"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:11"},"nodeType":"YulFunctionCall","src":"3568:21:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1586,"isOffset":false,"isSlot":false,"src":"3407:11:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"3535:5:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"3559:5:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"3572:5:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"3501:5:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"3514:5:11","valueSize":1},{"declaration":1615,"isOffset":false,"isSlot":false,"src":"3381:9:11","valueSize":1},{"declaration":1615,"isOffset":false,"isSlot":false,"src":"3524:9:11","valueSize":1},{"declaration":1615,"isOffset":false,"isSlot":false,"src":"3579:9:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"3401:1:11","valueSize":1},{"declaration":1584,"isOffset":false,"isSlot":false,"src":"3404:1:11","valueSize":1}],"id":1617,"nodeType":"InlineAssembly","src":"3303:300:11"},{"assignments":[1619],"declarations":[{"constant":false,"id":1619,"mutability":"mutable","name":"twos","nameLocation":"3918:4:11","nodeType":"VariableDeclaration","scope":1700,"src":"3910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1627,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3925:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:11","subExpression":{"id":1621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3941:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:11"},{"AST":{"nodeType":"YulBlock","src":"3980:362:11","statements":[{"nodeType":"YulAssignment","src":"4045:37:11","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:11"},"nodeType":"YulFunctionCall","src":"4060:22:11"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:11"}]},{"nodeType":"YulAssignment","src":"4149:25:11","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:11"},"nodeType":"YulFunctionCall","src":"4158:16:11"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:11"}]},{"nodeType":"YulAssignment","src":"4289:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:11","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:11"},"nodeType":"YulFunctionCall","src":"4305:12:11"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:11"},"nodeType":"YulFunctionCall","src":"4301:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:11"},"nodeType":"YulFunctionCall","src":"4297:31:11"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1586,"isOffset":false,"isSlot":false,"src":"4045:11:11","valueSize":1},{"declaration":1586,"isOffset":false,"isSlot":false,"src":"4064:11:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"4149:5:11","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"4162:5:11","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"4077:4:11","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"4169:4:11","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"4289:4:11","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"4312:4:11","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"4319:4:11","valueSize":1}],"id":1628,"nodeType":"InlineAssembly","src":"3971:371:11"},{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4408:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4417:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1631,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4425:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"4408:21:11"},{"assignments":[1636],"declarations":[{"constant":false,"id":1636,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:11","nodeType":"VariableDeclaration","scope":1700,"src":"4747:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1643,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"4770:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:11"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5003:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5018:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5032:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"5003:36:11"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5072:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5087:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"5072:36:11"},{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5142:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5157:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1667,"nodeType":"ExpressionStatement","src":"5142:36:11"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1668,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5227:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5241:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"5212:36:11"},{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5297:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1679,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"5282:36:11"},{"expression":{"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1684,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5353:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"5368:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1687,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1691,"nodeType":"ExpressionStatement","src":"5353:36:11"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5823:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"5832:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1694,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"5823:24:11"},{"expression":{"id":1698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"5868:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1590,"id":1699,"nodeType":"Return","src":"5861:13:11"}]}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"1368:305:11","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:11","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"x","nameLocation":"1702:1:11","nodeType":"VariableDeclaration","scope":1702,"src":"1694:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"y","nameLocation":"1713:1:11","nodeType":"VariableDeclaration","scope":1702,"src":"1705:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:11","nodeType":"VariableDeclaration","scope":1702,"src":"1716:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:11"},"returnParameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"result","nameLocation":"1768:6:11","nodeType":"VariableDeclaration","scope":1702,"src":"1760:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:11"},"scope":2354,"src":"1678:4213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"6133:189:11","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"result","nameLocation":"6151:6:11","nodeType":"VariableDeclaration","scope":1745,"src":"6143:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1724,"initialValue":{"arguments":[{"id":1720,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6167:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1721,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6170:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1722,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6173:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1719,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1702,1746],"referencedDeclaration":1702,"src":"6160:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"6199:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1726,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6211:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1495_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"6211:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1730,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6233:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1731,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6236:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6239:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"6195:98:11","trueBody":{"id":1741,"nodeType":"Block","src":"6257:36:11","statements":[{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6271:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1740,"nodeType":"ExpressionStatement","src":"6271:11:11"}]}},{"expression":{"id":1743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"6309:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1716,"id":1744,"nodeType":"Return","src":"6302:13:11"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"5897:121:11","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:11","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"x","nameLocation":"6047:1:11","nodeType":"VariableDeclaration","scope":1746,"src":"6039:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"y","nameLocation":"6058:1:11","nodeType":"VariableDeclaration","scope":1746,"src":"6050:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:11","nodeType":"VariableDeclaration","scope":1746,"src":"6061:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:11","nodeType":"VariableDeclaration","scope":1746,"src":"6082:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1711,"nodeType":"UserDefinedTypeName","pathNode":{"id":1710,"name":"Rounding","nameLocations":["6082:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"6082:8:11"},"referencedDeclaration":1495,"src":"6082:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:11"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"6124:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:11"},"scope":2354,"src":"6023:299:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"6598:1585:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6612:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1760,"nodeType":"IfStatement","src":"6608:45:11","trueBody":{"id":1759,"nodeType":"Block","src":"6620:33:11","statements":[{"expression":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1753,"id":1758,"nodeType":"Return","src":"6634:8:11"}]}},{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"result","nameLocation":"7340:6:11","nodeType":"VariableDeclaration","scope":1857,"src":"7332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1765,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7360:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1764,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2026,2062],"referencedDeclaration":2026,"src":"7355:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:11"},{"id":1856,"nodeType":"UncheckedBlock","src":"7769:408:11","statements":[{"expression":{"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7793:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7803:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7812:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7816:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1782,"nodeType":"ExpressionStatement","src":"7793:35:11"},{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7842:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7852:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7861:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7865:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1793,"nodeType":"ExpressionStatement","src":"7842:35:11"},{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7891:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7901:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7910:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7914:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"7891:35:11"},{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7940:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7950:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7959:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7963:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"7940:35:11"},{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7989:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7999:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8008:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8012:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"7989:35:11"},{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8038:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8048:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8057:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8061:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"nodeType":"ExpressionStatement","src":"8038:35:11"},{"expression":{"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8087:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8097:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8106:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8110:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ExpressionStatement","src":"8087:35:11"},{"expression":{"arguments":[{"id":1850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8147:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"8155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8159:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8143:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1753,"id":1855,"nodeType":"Return","src":"8136:30:11"}]}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"6328:208:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:11","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"a","nameLocation":"6563:1:11","nodeType":"VariableDeclaration","scope":1858,"src":"6555:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:11"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"6589:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:11"},"scope":2354,"src":"6541:1642:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"8359:161:11","statements":[{"id":1892,"nodeType":"UncheckedBlock","src":"8369:145:11","statements":[{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"result","nameLocation":"8401:6:11","nodeType":"VariableDeclaration","scope":1892,"src":"8393:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"initialValue":{"arguments":[{"id":1872,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"8415:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1871,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1858,1894],"referencedDeclaration":1858,"src":"8410:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"8438:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"8448:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1877,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"8460:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1495_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"8460:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"8475:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"8484:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"8493:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:11","trueExpression":{"hexValue":"31","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1868,"id":1891,"nodeType":"Return","src":"8431:72:11"}]}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"8189:89:11","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:11","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"a","nameLocation":"8305:1:11","nodeType":"VariableDeclaration","scope":1894,"src":"8297:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:11","nodeType":"VariableDeclaration","scope":1894,"src":"8308:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":1863,"nodeType":"UserDefinedTypeName","pathNode":{"id":1862,"name":"Rounding","nameLocations":["8308:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"8308:8:11"},"referencedDeclaration":1495,"src":"8308:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:11"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"8350:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:11"},"scope":2354,"src":"8283:237:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"8705:922:11","statements":[{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"result","nameLocation":"8723:6:11","nodeType":"VariableDeclaration","scope":2025,"src":"8715:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1905,"initialValue":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:11"},{"id":2022,"nodeType":"UncheckedBlock","src":"8743:855:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8771:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"8767:99:11","trueBody":{"id":1919,"nodeType":"Block","src":"8789:77:11","statements":[{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8807:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1914,"nodeType":"ExpressionStatement","src":"8807:13:11"},{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"8838:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"nodeType":"ExpressionStatement","src":"8838:13:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"IfStatement","src":"8879:96:11","trueBody":{"id":1934,"nodeType":"Block","src":"8900:75:11","statements":[{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8918:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"8918:12:11"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"8948:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1933,"nodeType":"ExpressionStatement","src":"8948:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"8992:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"8988:96:11","trueBody":{"id":1949,"nodeType":"Block","src":"9009:75:11","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9027:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"9027:12:11"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"9057:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9101:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1965,"nodeType":"IfStatement","src":"9097:96:11","trueBody":{"id":1964,"nodeType":"Block","src":"9118:75:11","statements":[{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9136:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"9136:12:11"},{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9166:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"9166:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9210:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1980,"nodeType":"IfStatement","src":"9206:93:11","trueBody":{"id":1979,"nodeType":"Block","src":"9226:73:11","statements":[{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9244:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"9244:11:11"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9273:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"9273:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9316:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"9312:93:11","trueBody":{"id":1994,"nodeType":"Block","src":"9332:73:11","statements":[{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9350:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"9350:11:11"},{"expression":{"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9379:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1993,"nodeType":"ExpressionStatement","src":"9379:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9422:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2010,"nodeType":"IfStatement","src":"9418:93:11","trueBody":{"id":2009,"nodeType":"Block","src":"9438:73:11","statements":[{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"9456:11:11"},{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9485:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ExpressionStatement","src":"9485:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"9528:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"9524:64:11","trueBody":{"id":2020,"nodeType":"Block","src":"9544:44:11","statements":[{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9562:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"9562:11:11"}]}}]},{"expression":{"id":2023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"9614:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1901,"id":2024,"nodeType":"Return","src":"9607:13:11"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"8526:113:11","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:11","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"value","nameLocation":"8666:5:11","nodeType":"VariableDeclaration","scope":2026,"src":"8658:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:11"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"8696:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:11"},"scope":2354,"src":"8644:983:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"9860:165:11","statements":[{"id":2060,"nodeType":"UncheckedBlock","src":"9870:149:11","statements":[{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"result","nameLocation":"9902:6:11","nodeType":"VariableDeclaration","scope":2060,"src":"9894:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2042,"initialValue":{"arguments":[{"id":2040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9916:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2026,2062],"referencedDeclaration":2026,"src":"9911:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9943:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"9953:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2045,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9965:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1495_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"9965:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"9985:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:11","trueExpression":{"hexValue":"31","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2036,"id":2059,"nodeType":"Return","src":"9936:72:11"}]}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"9633:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:11","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"value","nameLocation":"9802:5:11","nodeType":"VariableDeclaration","scope":2062,"src":"9794:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:11","nodeType":"VariableDeclaration","scope":2062,"src":"9809:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2031,"nodeType":"UserDefinedTypeName","pathNode":{"id":2030,"name":"Rounding","nameLocations":["9809:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"9809:8:11"},"referencedDeclaration":1495,"src":"9809:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:11"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"9851:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:11"},"scope":2354,"src":"9780:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"10212:854:11","statements":[{"assignments":[2071],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"result","nameLocation":"10230:6:11","nodeType":"VariableDeclaration","scope":2190,"src":"10222:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"initialValue":{"hexValue":"30","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:11"},{"id":2187,"nodeType":"UncheckedBlock","src":"10250:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10278:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"10274:103:11","trueBody":{"id":2089,"nodeType":"Block","src":"10297:80:11","statements":[{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10315:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ExpressionStatement","src":"10315:17:11"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10350:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"10350:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10394:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2107,"nodeType":"IfStatement","src":"10390:103:11","trueBody":{"id":2106,"nodeType":"Block","src":"10413:80:11","statements":[{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10431:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"10431:17:11"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10466:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"10466:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10510:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2124,"nodeType":"IfStatement","src":"10506:103:11","trueBody":{"id":2123,"nodeType":"Block","src":"10529:80:11","statements":[{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10547:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"10547:17:11"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10582:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"10582:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10626:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2141,"nodeType":"IfStatement","src":"10622:100:11","trueBody":{"id":2140,"nodeType":"Block","src":"10644:78:11","statements":[{"expression":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10662:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2135,"nodeType":"ExpressionStatement","src":"10662:16:11"},{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10696:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2139,"nodeType":"ExpressionStatement","src":"10696:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10739:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"IfStatement","src":"10735:100:11","trueBody":{"id":2157,"nodeType":"Block","src":"10757:78:11","statements":[{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10775:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2152,"nodeType":"ExpressionStatement","src":"10775:16:11"},{"expression":{"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10809:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2156,"nodeType":"ExpressionStatement","src":"10809:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"10848:100:11","trueBody":{"id":2174,"nodeType":"Block","src":"10870:78:11","statements":[{"expression":{"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2169,"nodeType":"ExpressionStatement","src":"10888:16:11"},{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"10922:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"10922:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"10965:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2186,"nodeType":"IfStatement","src":"10961:66:11","trueBody":{"id":2185,"nodeType":"Block","src":"10983:44:11","statements":[{"expression":{"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"11001:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2184,"nodeType":"ExpressionStatement","src":"11001:11:11"}]}}]},{"expression":{"id":2188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"11053:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2069,"id":2189,"nodeType":"Return","src":"11046:13:11"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"10031:114:11","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:11","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"10173:5:11","nodeType":"VariableDeclaration","scope":2191,"src":"10165:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:11"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"10203:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:11"},"scope":2354,"src":"10150:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2226,"nodeType":"Block","src":"11301:167:11","statements":[{"id":2225,"nodeType":"UncheckedBlock","src":"11311:151:11","statements":[{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"result","nameLocation":"11343:6:11","nodeType":"VariableDeclaration","scope":2225,"src":"11335:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2207,"initialValue":{"arguments":[{"id":2205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11358:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2204,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2191,2227],"referencedDeclaration":2191,"src":"11352:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"11385:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"11395:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2210,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"11407:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1495_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"11407:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"11428:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"11437:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:11","trueExpression":{"hexValue":"31","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2201,"id":2224,"nodeType":"Return","src":"11378:73:11"}]}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"11072:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:11","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"11243:5:11","nodeType":"VariableDeclaration","scope":2227,"src":"11235:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:11","nodeType":"VariableDeclaration","scope":2227,"src":"11250:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2196,"nodeType":"UserDefinedTypeName","pathNode":{"id":2195,"name":"Rounding","nameLocations":["11250:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"11250:8:11"},"referencedDeclaration":1495,"src":"11250:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:11"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2227,"src":"11292:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:11"},"scope":2354,"src":"11220:248:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"11782:600:11","statements":[{"assignments":[2236],"declarations":[{"constant":false,"id":2236,"mutability":"mutable","name":"result","nameLocation":"11800:6:11","nodeType":"VariableDeclaration","scope":2313,"src":"11792:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2238,"initialValue":{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:11"},{"id":2310,"nodeType":"UncheckedBlock","src":"11820:533:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11848:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"nodeType":"IfStatement","src":"11844:98:11","trueBody":{"id":2252,"nodeType":"Block","src":"11866:76:11","statements":[{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11884:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"nodeType":"ExpressionStatement","src":"11884:13:11"},{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"11915:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"11915:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11959:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2268,"nodeType":"IfStatement","src":"11955:95:11","trueBody":{"id":2267,"nodeType":"Block","src":"11976:74:11","statements":[{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2262,"nodeType":"ExpressionStatement","src":"11994:12:11"},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12024:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ExpressionStatement","src":"12024:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12067:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2283,"nodeType":"IfStatement","src":"12063:95:11","trueBody":{"id":2282,"nodeType":"Block","src":"12084:74:11","statements":[{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12102:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2277,"nodeType":"ExpressionStatement","src":"12102:12:11"},{"expression":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12132:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"nodeType":"ExpressionStatement","src":"12132:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12175:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2298,"nodeType":"IfStatement","src":"12171:95:11","trueBody":{"id":2297,"nodeType":"Block","src":"12192:74:11","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12210:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"12210:12:11"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12240:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"12240:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"12283:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2309,"nodeType":"IfStatement","src":"12279:64:11","trueBody":{"id":2308,"nodeType":"Block","src":"12299:44:11","statements":[{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12317:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2307,"nodeType":"ExpressionStatement","src":"12317:11:11"}]}}]},{"expression":{"id":2311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"12369:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2234,"id":2312,"nodeType":"Return","src":"12362:13:11"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"11474:240:11","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:11","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"value","nameLocation":"11743:5:11","nodeType":"VariableDeclaration","scope":2314,"src":"11735:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:11"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"11773:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:11"},"scope":2354,"src":"11719:663:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"12619:174:11","statements":[{"id":2351,"nodeType":"UncheckedBlock","src":"12629:158:11","statements":[{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"result","nameLocation":"12661:6:11","nodeType":"VariableDeclaration","scope":2351,"src":"12653:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[{"id":2328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12677:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2314,2353],"referencedDeclaration":2314,"src":"12670:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"12704:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12714:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2333,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"12726:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1495_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:11","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1493,"src":"12726:11:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"12747:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12762:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:11","trueExpression":{"hexValue":"31","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2324,"id":2350,"nodeType":"Return","src":"12697:79:11"}]}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"12388:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:11","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"value","nameLocation":"12561:5:11","nodeType":"VariableDeclaration","scope":2353,"src":"12553:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:11","nodeType":"VariableDeclaration","scope":2353,"src":"12568:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"Rounding","nameLocations":["12568:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":1495,"src":"12568:8:11"},"referencedDeclaration":1495,"src":"12568:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1495","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:11"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"12610:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:11"},"scope":2354,"src":"12537:256:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2355,"src":"202:12593:11","usedErrors":[]}],"src":"103:12693:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[2459]},"id":2460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2356,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"134:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2459,"linearizedBaseContracts":[2459],"name":"SignedMathUpgradeable","nameLocation":"223:21:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2374,"nodeType":"Block","src":"386:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"403:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"407:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"415:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:12","trueExpression":{"id":2370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"411:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2366,"id":2373,"nodeType":"Return","src":"396:20:12"}]},"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"251:66:12","text":" @dev Returns the largest of two signed numbers."},"id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:12","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"a","nameLocation":"342:1:12","nodeType":"VariableDeclaration","scope":2375,"src":"335:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2359,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"b","nameLocation":"352:1:12","nodeType":"VariableDeclaration","scope":2375,"src":"345:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2361,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:12"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2375,"src":"378:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2364,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:12"},"scope":2459,"src":"322:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2392,"nodeType":"Block","src":"565:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"582:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"586:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"594:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:12","trueExpression":{"id":2388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"590:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2384,"id":2391,"nodeType":"Return","src":"575:20:12"}]},"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"429:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:12","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"a","nameLocation":"521:1:12","nodeType":"VariableDeclaration","scope":2393,"src":"514:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2377,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"b","nameLocation":"531:1:12","nodeType":"VariableDeclaration","scope":2393,"src":"524:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2379,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:12"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"557:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2382,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:12"},"scope":2459,"src":"501:101:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"807:162:12","statements":[{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"x","nameLocation":"876:1:12","nodeType":"VariableDeclaration","scope":2436,"src":"869:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2403,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2417,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"881:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"885:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"892:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"896:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"921:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2423,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"941:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:12","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2419,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:12","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"955:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"959:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2402,"id":2435,"nodeType":"Return","src":"914:48:12"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"608:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:12","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"a","nameLocation":"763:1:12","nodeType":"VariableDeclaration","scope":2437,"src":"756:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2395,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"b","nameLocation":"773:1:12","nodeType":"VariableDeclaration","scope":2437,"src":"766:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2397,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:12"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2437,"src":"799:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2400,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:12"},"scope":2459,"src":"739:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"1113:158:12","statements":[{"id":2456,"nodeType":"UncheckedBlock","src":"1123:142:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2447,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1238:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:12","subExpression":{"id":2451,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1252:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:12","trueExpression":{"id":2450,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1247:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:12","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2455,"nodeType":"Return","src":"1223:31:12"}]}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"975:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:12","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"n","nameLocation":"1078:1:12","nodeType":"VariableDeclaration","scope":2458,"src":"1071:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:12"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2458,"src":"1104:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:12"},"scope":2459,"src":"1058:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2460,"src":"215:1058:12","usedErrors":[]}],"src":"109:1165:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[3072]},"id":3073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2461,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"230:1098:13","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":3072,"linearizedBaseContracts":[3072],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":2470,"members":[{"constant":false,"id":2465,"mutability":"mutable","name":"_values","nameLocation":"1872:7:13","nodeType":"VariableDeclaration","scope":2470,"src":"1862:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2464,"nodeType":"ArrayTypeName","src":"1862:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:13","nodeType":"VariableDeclaration","scope":2470,"src":"2012:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2468,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:13","nodeType":"StructDefinition","scope":3072,"src":"1808:247:13","visibility":"public"},{"body":{"id":2511,"nodeType":"Block","src":"2294:335:13","statements":[{"condition":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:13","subExpression":{"arguments":[{"id":2482,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"2319:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2324:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2481,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2309:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2509,"nodeType":"Block","src":"2586:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2480,"id":2508,"nodeType":"Return","src":"2600:12:13"}]},"id":2510,"nodeType":"IfStatement","src":"2304:319:13","trueBody":{"id":2506,"nodeType":"Block","src":"2332:248:13","statements":[{"expression":{"arguments":[{"id":2491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2363:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2486,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"2346:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"2346:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:13","memberName":"push","nodeType":"MemberAccess","src":"2346:16:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"2346:23:13"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2494,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"2504:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"2504:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2498,"indexExpression":{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2517:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2499,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"2526:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2530:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"2526:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:13","memberName":"length","nodeType":"MemberAccess","src":"2526:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"2504:40:13"},{"expression":{"hexValue":"74727565","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2480,"id":2505,"nodeType":"Return","src":"2558:11:13"}]}}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"2061:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:13","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"set","nameLocation":"2251:3:13","nodeType":"VariableDeclaration","scope":2512,"src":"2239:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2473,"nodeType":"UserDefinedTypeName","pathNode":{"id":2472,"name":"Set","nameLocations":["2239:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"2239:3:13"},"referencedDeclaration":2470,"src":"2239:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"value","nameLocation":"2264:5:13","nodeType":"VariableDeclaration","scope":2512,"src":"2256:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:13"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"2288:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2478,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:13"},"scope":3072,"src":"2225:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2595,"nodeType":"Block","src":"2869:1316:13","statements":[{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:13","nodeType":"VariableDeclaration","scope":2595,"src":"2979:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2529,"initialValue":{"baseExpression":{"expression":{"id":2525,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3000:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"3000:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2528,"indexExpression":{"id":2527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"3013:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3034:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2593,"nodeType":"Block","src":"4142:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2522,"id":2592,"nodeType":"Return","src":"4156:12:13"}]},"id":2594,"nodeType":"IfStatement","src":"3030:1149:13","trueBody":{"id":2590,"nodeType":"Block","src":"3051:1085:13","statements":[{"assignments":[2534],"declarations":[{"constant":false,"id":2534,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:13","nodeType":"VariableDeclaration","scope":2590,"src":"3403:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2538,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3427:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:13"},{"assignments":[2540],"declarations":[{"constant":false,"id":2540,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:13","nodeType":"VariableDeclaration","scope":2590,"src":"3455:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2546,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2541,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3475:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"3475:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:13","memberName":"length","nodeType":"MemberAccess","src":"3475:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3516:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2548,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"3529:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2574,"nodeType":"IfStatement","src":"3512:398:13","trueBody":{"id":2573,"nodeType":"Block","src":"3544:366:13","statements":[{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:13","nodeType":"VariableDeclaration","scope":2573,"src":"3562:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2556,"initialValue":{"baseExpression":{"expression":{"id":2552,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3582:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"3582:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2555,"indexExpression":{"id":2554,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3594:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:13"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2557,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3704:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"3704:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2561,"indexExpression":{"id":2559,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"3716:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2562,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3733:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2564,"nodeType":"ExpressionStatement","src":"3704:38:13"},{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2565,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3816:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"3816:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2569,"indexExpression":{"id":2567,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3829:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2570,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3842:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ExpressionStatement","src":"3816:36:13"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2575,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"3988:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3992:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"3988:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:3:13","memberName":"pop","nodeType":"MemberAccess","src":"3988:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2581,"nodeType":"ExpressionStatement","src":"3988:17:13"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:13","subExpression":{"baseExpression":{"expression":{"id":2582,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4080:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4084:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"4080:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2585,"indexExpression":{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4093:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"4073:26:13"},{"expression":{"hexValue":"74727565","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2522,"id":2589,"nodeType":"Return","src":"4114:11:13"}]}}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"2635:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2596,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:13","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"set","nameLocation":"2826:3:13","nodeType":"VariableDeclaration","scope":2596,"src":"2814:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"Set","nameLocations":["2814:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"2814:3:13"},"referencedDeclaration":2470,"src":"2814:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"value","nameLocation":"2839:5:13","nodeType":"VariableDeclaration","scope":2596,"src":"2831:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:13"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2596,"src":"2863:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2520,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:13"},"scope":3072,"src":"2797:1388:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2614,"nodeType":"Block","src":"4345:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2607,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4362:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4366:8:13","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"4362:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2610,"indexExpression":{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"4375:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2606,"id":2613,"nodeType":"Return","src":"4355:31:13"}]},"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"4191:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:13","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"set","nameLocation":"4297:3:13","nodeType":"VariableDeclaration","scope":2615,"src":"4285:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2599,"nodeType":"UserDefinedTypeName","pathNode":{"id":2598,"name":"Set","nameLocations":["4285:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"4285:3:13"},"referencedDeclaration":2470,"src":"4285:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"value","nameLocation":"4310:5:13","nodeType":"VariableDeclaration","scope":2615,"src":"4302:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:13"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"4339:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:13"},"scope":3072,"src":"4266:127:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2628,"nodeType":"Block","src":"4539:42:13","statements":[{"expression":{"expression":{"expression":{"id":2624,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4556:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"4556:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:13","memberName":"length","nodeType":"MemberAccess","src":"4556:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2623,"id":2627,"nodeType":"Return","src":"4549:25:13"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"4399:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:13","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"set","nameLocation":"4503:3:13","nodeType":"VariableDeclaration","scope":2629,"src":"4491:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2618,"nodeType":"UserDefinedTypeName","pathNode":{"id":2617,"name":"Set","nameLocations":["4491:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"4491:3:13"},"referencedDeclaration":2470,"src":"4491:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:13"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"4530:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:13"},"scope":3072,"src":"4474:107:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2645,"nodeType":"Block","src":"4999:42:13","statements":[{"expression":{"baseExpression":{"expression":{"id":2640,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5016:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"5016:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2643,"indexExpression":{"id":2642,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"5028:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2639,"id":2644,"nodeType":"Return","src":"5009:25:13"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"4587:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:13","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"set","nameLocation":"4948:3:13","nodeType":"VariableDeclaration","scope":2646,"src":"4936:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2632,"nodeType":"UserDefinedTypeName","pathNode":{"id":2631,"name":"Set","nameLocations":["4936:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"4936:3:13"},"referencedDeclaration":2470,"src":"4936:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"index","nameLocation":"4961:5:13","nodeType":"VariableDeclaration","scope":2646,"src":"4953:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:13"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"4990:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:13"},"scope":3072,"src":"4923:118:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2659,"nodeType":"Block","src":"5655:35:13","statements":[{"expression":{"expression":{"id":2656,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"5672:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":2657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:13","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"5672:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2655,"id":2658,"nodeType":"Return","src":"5665:18:13"}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"5047:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:13","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"set","nameLocation":"5610:3:13","nodeType":"VariableDeclaration","scope":2660,"src":"5598:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2649,"nodeType":"UserDefinedTypeName","pathNode":{"id":2648,"name":"Set","nameLocations":["5598:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"5598:3:13"},"referencedDeclaration":2470,"src":"5598:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:13"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2660,"src":"5637:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2653,"nodeType":"ArrayTypeName","src":"5637:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:13"},"scope":3072,"src":"5581:109:13","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":2664,"members":[{"constant":false,"id":2663,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:13","nodeType":"VariableDeclaration","scope":2664,"src":"5743:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2662,"nodeType":"UserDefinedTypeName","pathNode":{"id":2661,"name":"Set","nameLocations":["5743:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"5743:3:13"},"referencedDeclaration":2470,"src":"5743:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:13","nodeType":"StructDefinition","scope":3072,"src":"5715:45:13","visibility":"public"},{"body":{"id":2681,"nodeType":"Block","src":"6006:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":2676,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"6028:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"6028:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"6040:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2675,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"6023:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2674,"id":2680,"nodeType":"Return","src":"6016:30:13"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"5766:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:13","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"set","nameLocation":"5962:3:13","nodeType":"VariableDeclaration","scope":2682,"src":"5943:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2667,"nodeType":"UserDefinedTypeName","pathNode":{"id":2666,"name":"Bytes32Set","nameLocations":["5943:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"5943:10:13"},"referencedDeclaration":2664,"src":"5943:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"value","nameLocation":"5975:5:13","nodeType":"VariableDeclaration","scope":2682,"src":"5967:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:13"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"6000:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2672,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:13"},"scope":3072,"src":"5930:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2699,"nodeType":"Block","src":"6300:50:13","statements":[{"expression":{"arguments":[{"expression":{"id":2694,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"6325:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"6325:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"6337:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2693,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"6317:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2692,"id":2698,"nodeType":"Return","src":"6310:33:13"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"6059:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:13","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"set","nameLocation":"6256:3:13","nodeType":"VariableDeclaration","scope":2700,"src":"6237:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2685,"nodeType":"UserDefinedTypeName","pathNode":{"id":2684,"name":"Bytes32Set","nameLocations":["6237:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"6237:10:13"},"referencedDeclaration":2664,"src":"6237:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"value","nameLocation":"6269:5:13","nodeType":"VariableDeclaration","scope":2700,"src":"6261:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:13"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"6294:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2690,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:13"},"scope":3072,"src":"6221:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2717,"nodeType":"Block","src":"6517:52:13","statements":[{"expression":{"arguments":[{"expression":{"id":2712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"6544:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"6544:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"6556:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2711,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"6534:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2710,"id":2716,"nodeType":"Return","src":"6527:35:13"}]},"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"6356:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:13","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"set","nameLocation":"6468:3:13","nodeType":"VariableDeclaration","scope":2718,"src":"6449:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2703,"nodeType":"UserDefinedTypeName","pathNode":{"id":2702,"name":"Bytes32Set","nameLocations":["6449:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"6449:10:13"},"referencedDeclaration":2664,"src":"6449:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"value","nameLocation":"6481:5:13","nodeType":"VariableDeclaration","scope":2718,"src":"6473:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:13"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"6511:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2708,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:13"},"scope":3072,"src":"6431:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2732,"nodeType":"Block","src":"6722:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2728,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6747:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"6747:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2727,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6739:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2726,"id":2731,"nodeType":"Return","src":"6732:26:13"}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"6575:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:13","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"set","nameLocation":"6685:3:13","nodeType":"VariableDeclaration","scope":2733,"src":"6666:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Bytes32Set","nameLocations":["6666:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"6666:10:13"},"referencedDeclaration":2664,"src":"6666:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:13"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"6713:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:13"},"scope":3072,"src":"6650:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2750,"nodeType":"Block","src":"7190:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":2745,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"7211:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"7211:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2747,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7223:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2744,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"7207:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2743,"id":2749,"nodeType":"Return","src":"7200:29:13"}]},"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"6771:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2751,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:13","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"set","nameLocation":"7138:3:13","nodeType":"VariableDeclaration","scope":2751,"src":"7119:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2736,"nodeType":"UserDefinedTypeName","pathNode":{"id":2735,"name":"Bytes32Set","nameLocations":["7119:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"7119:10:13"},"referencedDeclaration":2664,"src":"7119:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"index","nameLocation":"7151:5:13","nodeType":"VariableDeclaration","scope":2751,"src":"7143:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:13"},"returnParameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2751,"src":"7181:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:13"},"scope":3072,"src":"7107:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"7857:219:13","statements":[{"assignments":[2765],"declarations":[{"constant":false,"id":2765,"mutability":"mutable","name":"store","nameLocation":"7884:5:13","nodeType":"VariableDeclaration","scope":2780,"src":"7867:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2764,"nodeType":"ArrayTypeName","src":"7867:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2770,"initialValue":{"arguments":[{"expression":{"id":2767,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"7900:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":2768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2663,"src":"7900:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2766,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"7892:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:13"},{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"result","nameLocation":"7938:6:13","nodeType":"VariableDeclaration","scope":2780,"src":"7921:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2774,"nodeType":"ArrayTypeName","src":"7921:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2776,"nodeType":"VariableDeclarationStatement","src":"7921:23:13"},{"AST":{"nodeType":"YulBlock","src":"8007:39:13","statements":[{"nodeType":"YulAssignment","src":"8021:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2775,"isOffset":false,"isSlot":false,"src":"8021:6:13","valueSize":1},{"declaration":2765,"isOffset":false,"isSlot":false,"src":"8031:5:13","valueSize":1}],"id":2777,"nodeType":"InlineAssembly","src":"7998:48:13"},{"expression":{"id":2778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"8063:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2760,"id":2779,"nodeType":"Return","src":"8056:13:13"}]},"documentation":{"id":2752,"nodeType":"StructuredDocumentation","src":"7242:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:13","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"set","nameLocation":"7811:3:13","nodeType":"VariableDeclaration","scope":2781,"src":"7792:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"Bytes32Set","nameLocations":["7792:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"7792:10:13"},"referencedDeclaration":2664,"src":"7792:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:13"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"7839:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2758,"nodeType":"ArrayTypeName","src":"7839:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:13"},"scope":3072,"src":"7776:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":2785,"members":[{"constant":false,"id":2784,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:13","nodeType":"VariableDeclaration","scope":2785,"src":"8129:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2783,"nodeType":"UserDefinedTypeName","pathNode":{"id":2782,"name":"Set","nameLocations":["8129:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"8129:3:13"},"referencedDeclaration":2470,"src":"8129:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:13","nodeType":"StructDefinition","scope":3072,"src":"8101:45:13","visibility":"public"},{"body":{"id":2811,"nodeType":"Block","src":"8392:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":2797,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"8414:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"8414:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"8450:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2803,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:13","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:13","typeDescriptions":{}}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:13","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2796,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"8409:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2795,"id":2810,"nodeType":"Return","src":"8402:57:13"}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"8152:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:13","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"set","nameLocation":"8348:3:13","nodeType":"VariableDeclaration","scope":2812,"src":"8329:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"AddressSet","nameLocations":["8329:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"8329:10:13"},"referencedDeclaration":2785,"src":"8329:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"value","nameLocation":"8361:5:13","nodeType":"VariableDeclaration","scope":2812,"src":"8353:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2790,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:13"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"8386:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2793,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:13"},"scope":3072,"src":"8316:150:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2838,"nodeType":"Block","src":"8713:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":2824,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"8738:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"8738:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"8774:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2830,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:13","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:13","typeDescriptions":{}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:13","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2823,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8730:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2822,"id":2837,"nodeType":"Return","src":"8723:60:13"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"8472:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:13","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"set","nameLocation":"8669:3:13","nodeType":"VariableDeclaration","scope":2839,"src":"8650:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2815,"nodeType":"UserDefinedTypeName","pathNode":{"id":2814,"name":"AddressSet","nameLocations":["8650:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"8650:10:13"},"referencedDeclaration":2785,"src":"8650:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"value","nameLocation":"8682:5:13","nodeType":"VariableDeclaration","scope":2839,"src":"8674:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:13"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"8707:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2820,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:13"},"scope":3072,"src":"8634:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2865,"nodeType":"Block","src":"8957:79:13","statements":[{"expression":{"arguments":[{"expression":{"id":2851,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"8984:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"8984:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9020:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2857,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:13","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:13","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:13","typeDescriptions":{}}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2850,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"8974:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2849,"id":2864,"nodeType":"Return","src":"8967:62:13"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"8796:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:13","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"set","nameLocation":"8908:3:13","nodeType":"VariableDeclaration","scope":2866,"src":"8889:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2842,"nodeType":"UserDefinedTypeName","pathNode":{"id":2841,"name":"AddressSet","nameLocations":["8889:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"8889:10:13"},"referencedDeclaration":2785,"src":"8889:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"8921:5:13","nodeType":"VariableDeclaration","scope":2866,"src":"8913:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:13"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"8951:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2847,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:13"},"scope":3072,"src":"8871:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"9189:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2876,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"9214:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"9214:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2875,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"9206:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2874,"id":2879,"nodeType":"Return","src":"9199:26:13"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"9042:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2881,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:13","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"set","nameLocation":"9152:3:13","nodeType":"VariableDeclaration","scope":2881,"src":"9133:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"AddressSet","nameLocations":["9133:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"9133:10:13"},"referencedDeclaration":2785,"src":"9133:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:13"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2881,"src":"9180:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:13"},"scope":3072,"src":"9117:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"9657:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2899,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9702:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"9702:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2901,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"9714:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"9698:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:13","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2894,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:13","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:13","typeDescriptions":{}}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2891,"id":2906,"nodeType":"Return","src":"9667:56:13"}]},"documentation":{"id":2882,"nodeType":"StructuredDocumentation","src":"9238:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:13","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"set","nameLocation":"9605:3:13","nodeType":"VariableDeclaration","scope":2908,"src":"9586:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2884,"nodeType":"UserDefinedTypeName","pathNode":{"id":2883,"name":"AddressSet","nameLocations":["9586:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"9586:10:13"},"referencedDeclaration":2785,"src":"9586:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"index","nameLocation":"9618:5:13","nodeType":"VariableDeclaration","scope":2908,"src":"9610:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:13"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"9648:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:13"},"scope":3072,"src":"9574:156:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"10351:219:13","statements":[{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"store","nameLocation":"10378:5:13","nodeType":"VariableDeclaration","scope":2937,"src":"10361:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2921,"nodeType":"ArrayTypeName","src":"10361:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2927,"initialValue":{"arguments":[{"expression":{"id":2924,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"10394:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":2925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"10394:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2923,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10386:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:13"},{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"result","nameLocation":"10432:6:13","nodeType":"VariableDeclaration","scope":2937,"src":"10415:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2931,"nodeType":"ArrayTypeName","src":"10415:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2933,"nodeType":"VariableDeclarationStatement","src":"10415:23:13"},{"AST":{"nodeType":"YulBlock","src":"10501:39:13","statements":[{"nodeType":"YulAssignment","src":"10515:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2932,"isOffset":false,"isSlot":false,"src":"10515:6:13","valueSize":1},{"declaration":2922,"isOffset":false,"isSlot":false,"src":"10525:5:13","valueSize":1}],"id":2934,"nodeType":"InlineAssembly","src":"10492:48:13"},{"expression":{"id":2935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10557:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2917,"id":2936,"nodeType":"Return","src":"10550:13:13"}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"9736:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:13","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"set","nameLocation":"10305:3:13","nodeType":"VariableDeclaration","scope":2938,"src":"10286:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"AddressSet","nameLocations":["10286:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"10286:10:13"},"referencedDeclaration":2785,"src":"10286:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2785_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:13"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"10333:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2915,"nodeType":"ArrayTypeName","src":"10333:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:13"},"scope":3072,"src":"10270:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":2942,"members":[{"constant":false,"id":2941,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:13","nodeType":"VariableDeclaration","scope":2942,"src":"10617:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"Set","nameLocations":["10617:3:13"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"10617:3:13"},"referencedDeclaration":2470,"src":"10617:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:13","nodeType":"StructDefinition","scope":3072,"src":"10592:42:13","visibility":"public"},{"body":{"id":2962,"nodeType":"Block","src":"10877:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2954,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"10899:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"10899:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"10919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:13","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2953,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"10894:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2952,"id":2961,"nodeType":"Return","src":"10887:39:13"}]},"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"10640:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:13","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"set","nameLocation":"10833:3:13","nodeType":"VariableDeclaration","scope":2963,"src":"10817:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2945,"nodeType":"UserDefinedTypeName","pathNode":{"id":2944,"name":"UintSet","nameLocations":["10817:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"10817:7:13"},"referencedDeclaration":2942,"src":"10817:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"value","nameLocation":"10846:5:13","nodeType":"VariableDeclaration","scope":2963,"src":"10838:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:13"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"10871:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2950,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:13"},"scope":3072,"src":"10804:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"11177:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":2975,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"11202:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"11202:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"11222:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:13","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2974,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11194:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2973,"id":2982,"nodeType":"Return","src":"11187:42:13"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"10939:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:13","nodeType":"FunctionDefinition","parameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"set","nameLocation":"11133:3:13","nodeType":"VariableDeclaration","scope":2984,"src":"11117:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2966,"nodeType":"UserDefinedTypeName","pathNode":{"id":2965,"name":"UintSet","nameLocations":["11117:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"11117:7:13"},"referencedDeclaration":2942,"src":"11117:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"value","nameLocation":"11146:5:13","nodeType":"VariableDeclaration","scope":2984,"src":"11138:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:13"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"11171:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2971,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:13"},"scope":3072,"src":"11101:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3004,"nodeType":"Block","src":"11400:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":2996,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"11427:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"11427:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"11447:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:13","typeDescriptions":{}}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2995,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"11417:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2994,"id":3003,"nodeType":"Return","src":"11410:44:13"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"11242:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:13","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"set","nameLocation":"11351:3:13","nodeType":"VariableDeclaration","scope":3005,"src":"11335:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2987,"nodeType":"UserDefinedTypeName","pathNode":{"id":2986,"name":"UintSet","nameLocations":["11335:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"11335:7:13"},"referencedDeclaration":2942,"src":"11335:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"value","nameLocation":"11364:5:13","nodeType":"VariableDeclaration","scope":3005,"src":"11356:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:13"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3005,"src":"11394:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2992,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:13"},"scope":3072,"src":"11317:144:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3019,"nodeType":"Block","src":"11611:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":3015,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11636:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"11636:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3014,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"11628:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3013,"id":3018,"nodeType":"Return","src":"11621:26:13"}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"11467:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":3020,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:13","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"set","nameLocation":"11574:3:13","nodeType":"VariableDeclaration","scope":3020,"src":"11558:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3008,"nodeType":"UserDefinedTypeName","pathNode":{"id":3007,"name":"UintSet","nameLocations":["11558:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"11558:7:13"},"referencedDeclaration":2942,"src":"11558:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:13"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3020,"src":"11602:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:13"},"scope":3072,"src":"11542:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3040,"nodeType":"Block","src":"12076:55:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3034,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"12105:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"12105:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3036,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"12117:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3033,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12101:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:13","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3030,"id":3039,"nodeType":"Return","src":"12086:38:13"}]},"documentation":{"id":3021,"nodeType":"StructuredDocumentation","src":"11660:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:13","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"set","nameLocation":"12024:3:13","nodeType":"VariableDeclaration","scope":3041,"src":"12008:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3023,"nodeType":"UserDefinedTypeName","pathNode":{"id":3022,"name":"UintSet","nameLocations":["12008:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"12008:7:13"},"referencedDeclaration":2942,"src":"12008:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"index","nameLocation":"12037:5:13","nodeType":"VariableDeclaration","scope":3041,"src":"12029:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:13"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"12067:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:13"},"scope":3072,"src":"11996:135:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3070,"nodeType":"Block","src":"12749:219:13","statements":[{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"store","nameLocation":"12776:5:13","nodeType":"VariableDeclaration","scope":3070,"src":"12759:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3054,"nodeType":"ArrayTypeName","src":"12759:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3060,"initialValue":{"arguments":[{"expression":{"id":3057,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12792:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:13","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"12792:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2470_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3056,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12784:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2470_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:13"},{"assignments":[3065],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"result","nameLocation":"12830:6:13","nodeType":"VariableDeclaration","scope":3070,"src":"12813:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3064,"nodeType":"ArrayTypeName","src":"12813:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3066,"nodeType":"VariableDeclarationStatement","src":"12813:23:13"},{"AST":{"nodeType":"YulBlock","src":"12899:39:13","statements":[{"nodeType":"YulAssignment","src":"12913:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3065,"isOffset":false,"isSlot":false,"src":"12913:6:13","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"12923:5:13","valueSize":1}],"id":3067,"nodeType":"InlineAssembly","src":"12890:48:13"},{"expression":{"id":3068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"12955:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3050,"id":3069,"nodeType":"Return","src":"12948:13:13"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"12137:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:13","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"set","nameLocation":"12703:3:13","nodeType":"VariableDeclaration","scope":3071,"src":"12687:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3044,"nodeType":"UserDefinedTypeName","pathNode":{"id":3043,"name":"UintSet","nameLocations":["12687:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"12687:7:13"},"referencedDeclaration":2942,"src":"12687:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2942_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:13"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3071,"src":"12731:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ArrayTypeName","src":"12731:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:13"},"scope":3072,"src":"12671:297:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3073,"src":"1329:11641:13","usedErrors":[]}],"src":"205:12766:13"},"id":13},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3150]},"id":3151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3074,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"131:70:14","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3150,"linearizedBaseContracts":[3150],"name":"IERC20","nameLocation":"212:6:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"225:158:14","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3084,"name":"Transfer","nameLocation":"394:8:14","nodeType":"EventDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:14","nodeType":"VariableDeclaration","scope":3084,"src":"403:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3080,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:14","nodeType":"VariableDeclaration","scope":3084,"src":"425:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3082,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:14","nodeType":"VariableDeclaration","scope":3084,"src":"445:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:14"},"src":"388:72:14"},{"anonymous":false,"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"466:148:14","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3093,"name":"Approval","nameLocation":"625:8:14","nodeType":"EventDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:14","nodeType":"VariableDeclaration","scope":3093,"src":"634:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3089,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:14","nodeType":"VariableDeclaration","scope":3093,"src":"657:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3091,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:14","nodeType":"VariableDeclaration","scope":3093,"src":"682:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:14"},"src":"619:78:14"},{"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"703:66:14","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3099,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:14","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"794:2:14"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"820:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:14"},"scope":3150,"src":"774:55:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"835:72:14","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3107,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:14","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"account","nameLocation":"939:7:14","nodeType":"VariableDeclaration","scope":3107,"src":"931:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:14"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"971:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:14"},"scope":3150,"src":"912:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"986:202:14","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3117,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:14","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"to","nameLocation":"1219:2:14","nodeType":"VariableDeclaration","scope":3117,"src":"1211:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"amount","nameLocation":"1231:6:14","nodeType":"VariableDeclaration","scope":3117,"src":"1223:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:14"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"1257:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3114,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:14"},"scope":3150,"src":"1193:70:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"1269:264:14","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3127,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:14","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"owner","nameLocation":"1565:5:14","nodeType":"VariableDeclaration","scope":3127,"src":"1557:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"spender","nameLocation":"1580:7:14","nodeType":"VariableDeclaration","scope":3127,"src":"1572:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:14"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"1612:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:14"},"scope":3150,"src":"1538:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"1627:642:14","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3137,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:14","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"spender","nameLocation":"2299:7:14","nodeType":"VariableDeclaration","scope":3137,"src":"2291:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"amount","nameLocation":"2316:6:14","nodeType":"VariableDeclaration","scope":3137,"src":"2308:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:14"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"2342:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3134,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:14"},"scope":3150,"src":"2274:74:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"2354:287:14","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3149,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:14","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"from","nameLocation":"2676:4:14","nodeType":"VariableDeclaration","scope":3149,"src":"2668:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"to","nameLocation":"2690:2:14","nodeType":"VariableDeclaration","scope":3149,"src":"2682:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"amount","nameLocation":"2702:6:14","nodeType":"VariableDeclaration","scope":3149,"src":"2694:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:14"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"2728:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3146,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:14"},"scope":3150,"src":"2646:88:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3151,"src":"202:2534:14","usedErrors":[]}],"src":"106:2631:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3186]},"id":3187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"148:480:15","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":3186,"linearizedBaseContracts":[3186],"name":"IERC20Permit","nameLocation":"639:12:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"658:792:15","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":3171,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:15","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"owner","nameLocation":"1488:5:15","nodeType":"VariableDeclaration","scope":3171,"src":"1480:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"spender","nameLocation":"1511:7:15","nodeType":"VariableDeclaration","scope":3171,"src":"1503:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"value","nameLocation":"1536:5:15","nodeType":"VariableDeclaration","scope":3171,"src":"1528:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:15","nodeType":"VariableDeclaration","scope":3171,"src":"1551:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"v","nameLocation":"1583:1:15","nodeType":"VariableDeclaration","scope":3171,"src":"1577:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3163,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"r","nameLocation":"1602:1:15","nodeType":"VariableDeclaration","scope":3171,"src":"1594:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"s","nameLocation":"1621:1:15","nodeType":"VariableDeclaration","scope":3171,"src":"1613:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:15"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[],"src":"1637:0:15"},"scope":3186,"src":"1455:183:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"1644:294:15","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3179,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:15","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"owner","nameLocation":"1967:5:15","nodeType":"VariableDeclaration","scope":3179,"src":"1959:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:15"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3179,"src":"1997:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:15"},"scope":3186,"src":"1943:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"2012:128:15","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3185,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:15","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[],"src":"2223:2:15"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"2249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:15"},"scope":3186,"src":"2198:60:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3187,"src":"629:1631:15","usedErrors":[]}],"src":"123:2138:15"},"id":15},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[3892],"IERC20":[3150],"IERC20Permit":[3186],"SafeERC20":[3562]},"id":3563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3188,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3563,"sourceUnit":3151,"src":"140:23:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":3190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3563,"sourceUnit":3187,"src":"164:40:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":3191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3563,"sourceUnit":3893,"src":"205:36:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"243:457:16","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":3562,"linearizedBaseContracts":[3562],"name":"SafeERC20","nameLocation":"709:9:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3195,"libraryName":{"id":3193,"name":"Address","nameLocations":["731:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3892,"src":"731:7:16"},"nodeType":"UsingForDirective","src":"725:26:16","typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":3218,"nodeType":"Block","src":"1013:103:16","statements":[{"expression":{"arguments":[{"id":3207,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"1043:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3210,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"1073:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"1073:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"1098:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"1102:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3208,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3206,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1023:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"1023:86:16"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"757:179:16","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:16","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"token","nameLocation":"970:5:16","nodeType":"VariableDeclaration","scope":3219,"src":"963:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3198,"nodeType":"UserDefinedTypeName","pathNode":{"id":3197,"name":"IERC20","nameLocations":["963:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"963:6:16"},"referencedDeclaration":3150,"src":"963:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"to","nameLocation":"985:2:16","nodeType":"VariableDeclaration","scope":3219,"src":"977:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"value","nameLocation":"997:5:16","nodeType":"VariableDeclaration","scope":3219,"src":"989:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:16"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[],"src":"1013:0:16"},"scope":3562,"src":"941:175:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"1445:113:16","statements":[{"expression":{"arguments":[{"id":3233,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1475:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3236,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1505:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3149,"src":"1505:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3239,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"1534:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"1540:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"1544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3232,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1455:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3244,"nodeType":"ExpressionStatement","src":"1455:96:16"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"1122:228:16","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:16","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"token","nameLocation":"1388:5:16","nodeType":"VariableDeclaration","scope":3246,"src":"1381:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3222,"nodeType":"UserDefinedTypeName","pathNode":{"id":3221,"name":"IERC20","nameLocations":["1381:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"1381:6:16"},"referencedDeclaration":3150,"src":"1381:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"from","nameLocation":"1403:4:16","nodeType":"VariableDeclaration","scope":3246,"src":"1395:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"to","nameLocation":"1417:2:16","nodeType":"VariableDeclaration","scope":3246,"src":"1409:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"value","nameLocation":"1429:5:16","nodeType":"VariableDeclaration","scope":3246,"src":"1421:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:16"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[],"src":"1445:0:16"},"scope":3562,"src":"1355:203:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"1894:497:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"2143:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}],"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3264,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:16","typeDescriptions":{}}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3268,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"2190:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3262,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2159:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"2159:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":3257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3276,"nodeType":"ExpressionStatement","src":"2121:163:16"},{"expression":{"arguments":[{"id":3278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2314:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3281,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2344:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"2344:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3284,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"2368:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"2377:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3279,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3277,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2294:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"ExpressionStatement","src":"2294:90:16"}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"1564:249:16","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:16","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"token","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":3290,"src":"1839:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3249,"nodeType":"UserDefinedTypeName","pathNode":{"id":3248,"name":"IERC20","nameLocations":["1839:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"1839:6:16"},"referencedDeclaration":3150,"src":"1839:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"spender","nameLocation":"1861:7:16","nodeType":"VariableDeclaration","scope":3290,"src":"1853:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3254,"mutability":"mutable","name":"value","nameLocation":"1878:5:16","nodeType":"VariableDeclaration","scope":3290,"src":"1870:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:16"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"1894:0:16"},"scope":3562,"src":"1818:573:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3326,"nodeType":"Block","src":"2668:194:16","statements":[{"assignments":[3302],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:16","nodeType":"VariableDeclaration","scope":3326,"src":"2678:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3311,"initialValue":{"arguments":[{"arguments":[{"id":3307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:16","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3309,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2732:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3303,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2701:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"2701:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:16"},{"expression":{"arguments":[{"id":3313,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2770:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"2800:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"2800:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3319,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"2824:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"2833:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"2848:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3312,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2750:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"ExpressionStatement","src":"2750:105:16"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"2397:180:16","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3327,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:16","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"token","nameLocation":"2620:5:16","nodeType":"VariableDeclaration","scope":3327,"src":"2613:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"IERC20","nameLocations":["2613:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"2613:6:16"},"referencedDeclaration":3150,"src":"2613:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"spender","nameLocation":"2635:7:16","nodeType":"VariableDeclaration","scope":3327,"src":"2627:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"value","nameLocation":"2652:5:16","nodeType":"VariableDeclaration","scope":3327,"src":"2644:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:16"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"2668:0:16"},"scope":3562,"src":"2582:280:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3371,"nodeType":"Block","src":"3139:321:16","statements":[{"id":3370,"nodeType":"UncheckedBlock","src":"3149:305:16","statements":[{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:16","nodeType":"VariableDeclaration","scope":3370,"src":"3173:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3348,"initialValue":{"arguments":[{"arguments":[{"id":3344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$3562","typeString":"library SafeERC20"}],"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:16","typeDescriptions":{}}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3227:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3340,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3196:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"3196:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3257:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"3273:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":3349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"ExpressionStatement","src":"3249:75:16"},{"expression":{"arguments":[{"id":3357,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3358:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3388:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"3388:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:16","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3412:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3421:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"3436:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3358,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3356,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"3338:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"ExpressionStatement","src":"3338:105:16"}]}]},"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"2868:180:16","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:16","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"token","nameLocation":"3091:5:16","nodeType":"VariableDeclaration","scope":3372,"src":"3084:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3330,"nodeType":"UserDefinedTypeName","pathNode":{"id":3329,"name":"IERC20","nameLocations":["3084:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"3084:6:16"},"referencedDeclaration":3150,"src":"3084:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"spender","nameLocation":"3106:7:16","nodeType":"VariableDeclaration","scope":3372,"src":"3098:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"value","nameLocation":"3123:5:16","nodeType":"VariableDeclaration","scope":3372,"src":"3115:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:16"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"3139:0:16"},"scope":3562,"src":"3053:407:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"3856:333:16","statements":[{"assignments":[3384],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:16","nodeType":"VariableDeclaration","scope":3418,"src":"3866:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3393,"initialValue":{"arguments":[{"expression":{"expression":{"id":3387,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3917:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"3917:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:16","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3390,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3941:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"3950:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3385,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:16"},{"condition":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:16","subExpression":{"arguments":[{"id":3395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3996:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"id":3396,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4003:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3394,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"3972:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"3967:216:16","trueBody":{"id":3416,"nodeType":"Block","src":"4018:165:16","statements":[{"expression":{"arguments":[{"id":3400,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"4052:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":3403,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"4082:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"4082:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:16","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3406,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4106:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3399,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4032:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"ExpressionStatement","src":"4032:86:16"},{"expression":{"arguments":[{"id":3412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"4152:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"id":3413,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"4159:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3411,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4132:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3415,"nodeType":"ExpressionStatement","src":"4132:40:16"}]}}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"3466:308:16","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:16","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"token","nameLocation":"3808:5:16","nodeType":"VariableDeclaration","scope":3419,"src":"3801:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3375,"nodeType":"UserDefinedTypeName","pathNode":{"id":3374,"name":"IERC20","nameLocations":["3801:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"3801:6:16"},"referencedDeclaration":3150,"src":"3801:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"spender","nameLocation":"3823:7:16","nodeType":"VariableDeclaration","scope":3419,"src":"3815:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3377,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"value","nameLocation":"3840:5:16","nodeType":"VariableDeclaration","scope":3419,"src":"3832:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:16"},"returnParameters":{"id":3382,"nodeType":"ParameterList","parameters":[],"src":"3856:0:16"},"scope":3562,"src":"3779:410:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3475,"nodeType":"Block","src":"4556:257:16","statements":[{"assignments":[3441],"declarations":[{"constant":false,"id":3441,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:16","nodeType":"VariableDeclaration","scope":3475,"src":"4566:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3446,"initialValue":{"arguments":[{"id":3444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"4601:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"4588:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3186","typeString":"contract IERC20Permit"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"4588:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:16"},{"expression":{"arguments":[{"id":3450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"4630:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3451,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"4637:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"4646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3453,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"4653:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3454,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"4663:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3455,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4666:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3456,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"4669:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3447,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"4617:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3186","typeString":"contract IERC20Permit"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:16","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":3171,"src":"4617:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"ExpressionStatement","src":"4617:54:16"},{"assignments":[3460],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:16","nodeType":"VariableDeclaration","scope":3475,"src":"4681:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3465,"initialValue":{"arguments":[{"id":3463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"4715:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3461,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"4702:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3186","typeString":"contract IERC20Permit"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"4702:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"4739:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"4753:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":3466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"ExpressionStatement","src":"4731:75:16"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"4195:141:16","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":3476,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:16","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"token","nameLocation":"4383:5:16","nodeType":"VariableDeclaration","scope":3476,"src":"4370:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3186","typeString":"contract IERC20Permit"},"typeName":{"id":3422,"nodeType":"UserDefinedTypeName","pathNode":{"id":3421,"name":"IERC20Permit","nameLocations":["4370:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3186,"src":"4370:12:16"},"referencedDeclaration":3186,"src":"4370:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$3186","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"owner","nameLocation":"4406:5:16","nodeType":"VariableDeclaration","scope":3476,"src":"4398:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3424,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"spender","nameLocation":"4429:7:16","nodeType":"VariableDeclaration","scope":3476,"src":"4421:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"value","nameLocation":"4454:5:16","nodeType":"VariableDeclaration","scope":3476,"src":"4446:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:16","nodeType":"VariableDeclaration","scope":3476,"src":"4469:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"v","nameLocation":"4501:1:16","nodeType":"VariableDeclaration","scope":3476,"src":"4495:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3432,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"r","nameLocation":"4520:1:16","nodeType":"VariableDeclaration","scope":3476,"src":"4512:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"s","nameLocation":"4539:1:16","nodeType":"VariableDeclaration","scope":3476,"src":"4531:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:16"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[],"src":"4556:0:16"},"scope":3562,"src":"4341:472:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"5266:572:16","statements":[{"assignments":[3486],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:16","nodeType":"VariableDeclaration","scope":3512,"src":"5615:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3485,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"id":3492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"5669:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":3489,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5649:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:16","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:16","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"5641:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3497,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5728:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:16","memberName":"length","nodeType":"MemberAccess","src":"5728:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3503,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5765:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3504,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:16","typeDescriptions":{}}}],"id":3506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:16","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":3496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"5720:111:16"}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"4819:372:16","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:16","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"token","nameLocation":"5232:5:16","nodeType":"VariableDeclaration","scope":3513,"src":"5225:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3479,"nodeType":"UserDefinedTypeName","pathNode":{"id":3478,"name":"IERC20","nameLocations":["5225:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"5225:6:16"},"referencedDeclaration":3150,"src":"5225:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"data","nameLocation":"5252:4:16","nodeType":"VariableDeclaration","scope":3513,"src":"5239:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3481,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:16"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[],"src":"5266:0:16"},"scope":3562,"src":"5196:642:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3560,"nodeType":"Block","src":"6428:505:16","statements":[{"assignments":[3525,3527],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"success","nameLocation":"6729:7:16","nodeType":"VariableDeclaration","scope":3560,"src":"6724:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3524,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:16","nodeType":"VariableDeclaration","scope":3560,"src":"6738:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3526,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3535,"initialValue":{"arguments":[{"id":3533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"6785:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3530,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"6773:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}],"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:16","typeDescriptions":{}}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:16","memberName":"call","nodeType":"MemberAccess","src":"6765:19:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:16"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"6819:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3537,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6831:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:16","memberName":"length","nodeType":"MemberAccess","src":"6831:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3543,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6868:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3544,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:16","typeDescriptions":{}}}],"id":3546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3541,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:16","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":3555,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"6919:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}],"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:16","typeDescriptions":{}}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3551,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"6892:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3892_$","typeString":"type(library Address)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:16","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3580,"src":"6892:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3523,"id":3559,"nodeType":"Return","src":"6800:126:16"}]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"5844:490:16","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:16","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"token","nameLocation":"6379:5:16","nodeType":"VariableDeclaration","scope":3561,"src":"6372:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":3516,"nodeType":"UserDefinedTypeName","pathNode":{"id":3515,"name":"IERC20","nameLocations":["6372:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"6372:6:16"},"referencedDeclaration":3150,"src":"6372:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"data","nameLocation":"6399:4:16","nodeType":"VariableDeclaration","scope":3561,"src":"6386:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3518,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:16"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3561,"src":"6422:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3521,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:16"},"scope":3562,"src":"6339:594:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3563,"src":"701:6234:16","usedErrors":[]}],"src":"115:6821:16"},"id":16},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3892]},"id":3893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3564,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"126:67:17","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3892,"linearizedBaseContracts":[3892],"name":"Address","nameLocation":"202:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3579,"nodeType":"Block","src":"1478:254:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3573,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1702:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:17","memberName":"code","nodeType":"MemberAccess","src":"1702:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:17","memberName":"length","nodeType":"MemberAccess","src":"1702:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3572,"id":3578,"nodeType":"Return","src":"1695:30:17"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"216:1191:17","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:17","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"account","nameLocation":"1440:7:17","nodeType":"VariableDeclaration","scope":3580,"src":"1432:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:17"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3580,"src":"1472:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3570,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:17"},"scope":3892,"src":"1412:320:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3613,"nodeType":"Block","src":"2718:241:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3591,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3892","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3892","typeString":"library Address"}],"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:17","typeDescriptions":{}}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:17","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2761:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"2728:73:17"},{"assignments":[3600,null],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"success","nameLocation":"2818:7:17","nodeType":"VariableDeclaration","scope":3613,"src":"2813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3599,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3607,"initialValue":{"arguments":[{"hexValue":"","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3601,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"2831:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:17","memberName":"call","nodeType":"MemberAccess","src":"2831:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3603,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2853:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:17"},{"expression":{"arguments":[{"id":3609,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"2882:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"ExpressionStatement","src":"2874:78:17"}]},"documentation":{"id":3581,"nodeType":"StructuredDocumentation","src":"1738:904:17","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:17","nodeType":"VariableDeclaration","scope":3614,"src":"2666:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"amount","nameLocation":"2701:6:17","nodeType":"VariableDeclaration","scope":3614,"src":"2693:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:17"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[],"src":"2718:0:17"},"scope":3892,"src":"2647:312:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3631,"nodeType":"Block","src":"3790:96:17","statements":[{"expression":{"arguments":[{"id":3625,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"3829:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3626,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"3837:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3624,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3672,3716],"referencedDeclaration":3716,"src":"3807:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3623,"id":3630,"nodeType":"Return","src":"3800:79:17"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"2965:731:17","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:17","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"target","nameLocation":"3731:6:17","nodeType":"VariableDeclaration","scope":3632,"src":"3723:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"data","nameLocation":"3752:4:17","nodeType":"VariableDeclaration","scope":3632,"src":"3739:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3618,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:17"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3632,"src":"3776:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3621,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:17"},"scope":3892,"src":"3701:185:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3651,"nodeType":"Block","src":"4255:76:17","statements":[{"expression":{"arguments":[{"id":3645,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4294:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3646,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"4302:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3648,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"4311:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3644,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3672,3716],"referencedDeclaration":3716,"src":"4272:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3643,"id":3650,"nodeType":"Return","src":"4265:59:17"}]},"documentation":{"id":3633,"nodeType":"StructuredDocumentation","src":"3892:211:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:17","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"target","nameLocation":"4147:6:17","nodeType":"VariableDeclaration","scope":3652,"src":"4139:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3634,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"data","nameLocation":"4176:4:17","nodeType":"VariableDeclaration","scope":3652,"src":"4163:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3636,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:17","nodeType":"VariableDeclaration","scope":3652,"src":"4190:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3638,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:17"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3652,"src":"4241:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3641,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:17"},"scope":3892,"src":"4108:223:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"4806:111:17","statements":[{"expression":{"arguments":[{"id":3665,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4845:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3666,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"4853:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"4859:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3664,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3672,3716],"referencedDeclaration":3716,"src":"4823:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3663,"id":3670,"nodeType":"Return","src":"4816:94:17"}]},"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"4337:351:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:17","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"target","nameLocation":"4732:6:17","nodeType":"VariableDeclaration","scope":3672,"src":"4724:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"data","nameLocation":"4753:4:17","nodeType":"VariableDeclaration","scope":3672,"src":"4740:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3656,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"value","nameLocation":"4767:5:17","nodeType":"VariableDeclaration","scope":3672,"src":"4759:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:17"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"4792:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3661,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:17"},"scope":3892,"src":"4693:224:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"5344:267:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3689,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3892","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3892","typeString":"library Address"}],"id":3688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3687,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:17","typeDescriptions":{}}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:17","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"5387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3696,"nodeType":"ExpressionStatement","src":"5354:81:17"},{"assignments":[3698,3700],"declarations":[{"constant":false,"id":3698,"mutability":"mutable","name":"success","nameLocation":"5451:7:17","nodeType":"VariableDeclaration","scope":3715,"src":"5446:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:17","nodeType":"VariableDeclaration","scope":3715,"src":"5460:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3699,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3707,"initialValue":{"arguments":[{"id":3705,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"5513:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"5487:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:17","memberName":"call","nodeType":"MemberAccess","src":"5487:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"5506:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:17"},{"expression":{"arguments":[{"id":3709,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"5562:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"5570:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3711,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"5579:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3712,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"5591:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3708,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"5535:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3685,"id":3714,"nodeType":"Return","src":"5528:76:17"}]},"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"4923:237:17","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:17","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"target","nameLocation":"5213:6:17","nodeType":"VariableDeclaration","scope":3716,"src":"5205:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3674,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"data","nameLocation":"5242:4:17","nodeType":"VariableDeclaration","scope":3716,"src":"5229:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3676,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"value","nameLocation":"5264:5:17","nodeType":"VariableDeclaration","scope":3716,"src":"5256:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:17","nodeType":"VariableDeclaration","scope":3716,"src":"5279:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3680,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:17"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"5330:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3683,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:17"},"scope":3892,"src":"5165:446:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"5888:97:17","statements":[{"expression":{"arguments":[{"id":3727,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"5924:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"5932:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3726,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3733,3762],"referencedDeclaration":3762,"src":"5905:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3725,"id":3731,"nodeType":"Return","src":"5898:80:17"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"5617:166:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:17","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"target","nameLocation":"5824:6:17","nodeType":"VariableDeclaration","scope":3733,"src":"5816:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"data","nameLocation":"5845:4:17","nodeType":"VariableDeclaration","scope":3733,"src":"5832:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3720,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:17"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"5874:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3723,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:17"},"scope":3892,"src":"5788:197:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"6327:168:17","statements":[{"assignments":[3746,3748],"declarations":[{"constant":false,"id":3746,"mutability":"mutable","name":"success","nameLocation":"6343:7:17","nodeType":"VariableDeclaration","scope":3761,"src":"6338:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3745,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:17","nodeType":"VariableDeclaration","scope":3761,"src":"6352:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3747,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3753,"initialValue":{"arguments":[{"id":3751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"6397:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3749,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"6379:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:17"},{"expression":{"arguments":[{"id":3755,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"6446:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"6454:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3757,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"6463:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3758,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"6475:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3754,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"6419:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3744,"id":3760,"nodeType":"Return","src":"6412:76:17"}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"5991:173:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:17","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"target","nameLocation":"6214:6:17","nodeType":"VariableDeclaration","scope":3762,"src":"6206:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3735,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3738,"mutability":"mutable","name":"data","nameLocation":"6243:4:17","nodeType":"VariableDeclaration","scope":3762,"src":"6230:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3737,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:17","nodeType":"VariableDeclaration","scope":3762,"src":"6257:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3739,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:17"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"6313:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3742,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:17"},"scope":3892,"src":"6169:326:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3778,"nodeType":"Block","src":"6771:101:17","statements":[{"expression":{"arguments":[{"id":3773,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"6809:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3774,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"6817:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3772,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3779,3808],"referencedDeclaration":3808,"src":"6788:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3771,"id":3777,"nodeType":"Return","src":"6781:84:17"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"6501:168:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3779,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:17","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"target","nameLocation":"6712:6:17","nodeType":"VariableDeclaration","scope":3779,"src":"6704:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"data","nameLocation":"6733:4:17","nodeType":"VariableDeclaration","scope":3779,"src":"6720:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3766,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:17"},"returnParameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3779,"src":"6757:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3769,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:17"},"scope":3892,"src":"6674:198:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"7213:170:17","statements":[{"assignments":[3792,3794],"declarations":[{"constant":false,"id":3792,"mutability":"mutable","name":"success","nameLocation":"7229:7:17","nodeType":"VariableDeclaration","scope":3807,"src":"7224:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3791,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:17","nodeType":"VariableDeclaration","scope":3807,"src":"7238:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3793,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3799,"initialValue":{"arguments":[{"id":3797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"7285:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3795,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"7265:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:17"},{"expression":{"arguments":[{"id":3801,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"7334:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3802,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"7342:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"7351:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3804,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"7363:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3800,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"7307:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3790,"id":3806,"nodeType":"Return","src":"7300:76:17"}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"6878:175:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:17","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"target","nameLocation":"7105:6:17","nodeType":"VariableDeclaration","scope":3808,"src":"7097:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"data","nameLocation":"7134:4:17","nodeType":"VariableDeclaration","scope":3808,"src":"7121:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3783,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:17","nodeType":"VariableDeclaration","scope":3808,"src":"7148:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3785,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:17"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3808,"src":"7199:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3788,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:17"},"scope":3892,"src":"7058:325:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"7865:434:17","statements":[{"condition":{"id":3822,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"7879:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3844,"nodeType":"Block","src":"8235:58:17","statements":[{"expression":{"arguments":[{"id":3840,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"8257:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3841,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"8269:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3839,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"8249:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"ExpressionStatement","src":"8249:33:17"}]},"id":3845,"nodeType":"IfStatement","src":"7875:418:17","trueBody":{"id":3838,"nodeType":"Block","src":"7888:341:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3823,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"7906:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:17","memberName":"length","nodeType":"MemberAccess","src":"7906:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3835,"nodeType":"IfStatement","src":"7902:286:17","trueBody":{"id":3834,"nodeType":"Block","src":"7930:258:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3829,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"8132:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3828,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"8121:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3833,"nodeType":"ExpressionStatement","src":"8113:60:17"}]}},{"expression":{"id":3836,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"8208:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3821,"id":3837,"nodeType":"Return","src":"8201:17:17"}]}}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"7389:277:17","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:17","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"target","nameLocation":"7724:6:17","nodeType":"VariableDeclaration","scope":3847,"src":"7716:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3810,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"success","nameLocation":"7745:7:17","nodeType":"VariableDeclaration","scope":3847,"src":"7740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3812,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:17","nodeType":"VariableDeclaration","scope":3847,"src":"7762:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3814,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:17","nodeType":"VariableDeclaration","scope":3847,"src":"7795:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3816,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:17"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"7851:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3819,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:17"},"scope":3892,"src":"7671:628:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"8680:135:17","statements":[{"condition":{"id":3859,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"8694:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3868,"nodeType":"Block","src":"8751:58:17","statements":[{"expression":{"arguments":[{"id":3864,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"8773:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3865,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"8785:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3863,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"8765:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"ExpressionStatement","src":"8765:33:17"}]},"id":3869,"nodeType":"IfStatement","src":"8690:119:17","trueBody":{"id":3862,"nodeType":"Block","src":"8703:42:17","statements":[{"expression":{"id":3860,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"8724:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3858,"id":3861,"nodeType":"Return","src":"8717:17:17"}]}}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"8305:210:17","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:17","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"success","nameLocation":"8560:7:17","nodeType":"VariableDeclaration","scope":3871,"src":"8555:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3849,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:17","nodeType":"VariableDeclaration","scope":3871,"src":"8577:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3851,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:17","nodeType":"VariableDeclaration","scope":3871,"src":"8610:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3853,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:17"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"8666:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3856,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:17"},"scope":3892,"src":"8520:295:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3890,"nodeType":"Block","src":"8904:457:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3878,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"8980:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:17","memberName":"length","nodeType":"MemberAccess","src":"8980:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3888,"nodeType":"Block","src":"9310:45:17","statements":[{"expression":{"arguments":[{"id":3885,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"9331:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3884,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"ExpressionStatement","src":"9324:20:17"}]},"id":3889,"nodeType":"IfStatement","src":"8976:379:17","trueBody":{"id":3883,"nodeType":"Block","src":"9003:301:17","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:17","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:17"},"nodeType":"YulFunctionCall","src":"9202:17:17"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:17","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:17"},"nodeType":"YulFunctionCall","src":"9243:19:17"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:17"},"nodeType":"YulFunctionCall","src":"9236:44:17"},"nodeType":"YulExpressionStatement","src":"9236:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3873,"isOffset":false,"isSlot":false,"src":"9208:10:17","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"9251:10:17","valueSize":1}],"id":3882,"nodeType":"InlineAssembly","src":"9152:142:17"}]}}]},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:17","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:17","nodeType":"VariableDeclaration","scope":3891,"src":"8838:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:17","nodeType":"VariableDeclaration","scope":3891,"src":"8863:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3874,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:17"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[],"src":"8904:0:17"},"scope":3892,"src":"8821:540:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3893,"src":"194:9169:17","usedErrors":[]}],"src":"101:9263:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4987],"SignedMath":[5092],"Strings":[4121]},"id":4122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3894,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4122,"sourceUnit":4988,"src":"126:25:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4122,"sourceUnit":5093,"src":"152:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"185:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":4121,"linearizedBaseContracts":[4121],"name":"Strings","nameLocation":"228:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3900,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:18","nodeType":"VariableDeclaration","scope":4121,"src":"242:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3898,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3903,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:18","nodeType":"VariableDeclaration","scope":4121,"src":"302:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3901,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3950,"nodeType":"Block","src":"518:625:18","statements":[{"id":3949,"nodeType":"UncheckedBlock","src":"528:609:18","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"length","nameLocation":"560:6:18","nodeType":"VariableDeclaration","scope":3949,"src":"552:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3919,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"580:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3913,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"569:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4987_$","typeString":"type(library Math)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4824,"src":"569:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:18"},{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"buffer","nameLocation":"618:6:18","nodeType":"VariableDeclaration","scope":3949,"src":"604:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3920,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3926,"initialValue":{"arguments":[{"id":3924,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"638:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3922,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:18"},{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"ptr","nameLocation":"667:3:18","nodeType":"VariableDeclaration","scope":3949,"src":"659:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3929,"nodeType":"VariableDeclarationStatement","src":"659:11:18"},{"AST":{"nodeType":"YulBlock","src":"740:67:18","statements":[{"nodeType":"YulAssignment","src":"758:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:18"},"nodeType":"YulFunctionCall","src":"777:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:18"},"nodeType":"YulFunctionCall","src":"765:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3921,"isOffset":false,"isSlot":false,"src":"769:6:18","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"785:6:18","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"758:3:18","valueSize":1}],"id":3930,"nodeType":"InlineAssembly","src":"731:76:18"},{"body":{"id":3945,"nodeType":"Block","src":"833:267:18","statements":[{"expression":{"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:18","subExpression":{"id":3932,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"851:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3934,"nodeType":"ExpressionStatement","src":"851:5:18"},{"AST":{"nodeType":"YulBlock","src":"934:84:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:18"},"nodeType":"YulFunctionCall","src":"974:14:18"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:18"},"nodeType":"YulFunctionCall","src":"969:30:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:18"},"nodeType":"YulFunctionCall","src":"956:44:18"},"nodeType":"YulExpressionStatement","src":"956:44:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3900,"isOffset":false,"isSlot":false,"src":"990:8:18","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"964:3:18","valueSize":1},{"declaration":3906,"isOffset":false,"isSlot":false,"src":"978:5:18","valueSize":1}],"id":3935,"nodeType":"InlineAssembly","src":"925:93:18"},{"expression":{"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"1035:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3939,"nodeType":"ExpressionStatement","src":"1035:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"1068:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"1064:21:18","trueBody":{"id":3943,"nodeType":"Break","src":"1080:5:18"}}]},"condition":{"hexValue":"74727565","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3946,"nodeType":"WhileStatement","src":"820:280:18"},{"expression":{"id":3947,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"1120:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3910,"id":3948,"nodeType":"Return","src":"1113:13:18"}]}]},"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"352:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:18","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"value","nameLocation":"473:5:18","nodeType":"VariableDeclaration","scope":3951,"src":"465:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:18"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"503:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3908,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:18"},"scope":4121,"src":"447:696:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"1313:103:18","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1354:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:18","trueExpression":{"hexValue":"2d","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1400:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3970,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"1385:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5092_$","typeString":"type(library SignedMath)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5091,"src":"1385:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3969,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3951,3979],"referencedDeclaration":3951,"src":"1376:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3961,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3959,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:18","typeDescriptions":{}}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3958,"id":3977,"nodeType":"Return","src":"1323:86:18"}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"1149:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:18","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"value","nameLocation":"1268:5:18","nodeType":"VariableDeclaration","scope":3979,"src":"1261:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3953,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:18"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3979,"src":"1298:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3956,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:18"},"scope":4121,"src":"1243:173:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"1595:100:18","statements":[{"id":3997,"nodeType":"UncheckedBlock","src":"1605:84:18","statements":[{"expression":{"arguments":[{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"1648:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"1667:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3989,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"1655:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4987_$","typeString":"type(library Math)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4947,"src":"1655:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3999,4075,4095],"referencedDeclaration":4075,"src":"1636:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3986,"id":3996,"nodeType":"Return","src":"1629:49:18"}]}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"1422:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:18","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"value","nameLocation":"1550:5:18","nodeType":"VariableDeclaration","scope":3999,"src":"1542:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:18"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"1580:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3984,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:18"},"scope":4121,"src":"1521:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4074,"nodeType":"Block","src":"1908:347:18","statements":[{"assignments":[4010],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:18","nodeType":"VariableDeclaration","scope":4074,"src":"1918:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4009,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4019,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4014,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"1954:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4011,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:18"},{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4020,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"1975:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4022,"indexExpression":{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4025,"nodeType":"ExpressionStatement","src":"1975:15:18"},{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4026,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"2000:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4028,"indexExpression":{"hexValue":"31","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4031,"nodeType":"ExpressionStatement","src":"2000:15:18"},{"body":{"id":4060,"nodeType":"Block","src":"2070:83:18","statements":[{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4046,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"2084:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4048,"indexExpression":{"id":4047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2091:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4049,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"2096:8:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4053,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2105:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4055,"nodeType":"ExpressionStatement","src":"2084:33:18"},{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2131:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"nodeType":"ExpressionStatement","src":"2131:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2058:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"initializationExpression":{"assignments":[4033],"declarations":[{"constant":false,"id":4033,"mutability":"mutable","name":"i","nameLocation":"2038:1:18","nodeType":"VariableDeclaration","scope":4061,"src":"2030:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4039,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4035,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"2046:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:18"},"loopExpression":{"expression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:18","subExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4045,"nodeType":"ExpressionStatement","src":"2065:3:18"},"nodeType":"ForStatement","src":"2025:128:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"2170:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"ExpressionStatement","src":"2162:55:18"},{"expression":{"arguments":[{"id":4071,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"2241:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4069,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:18","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4008,"id":4073,"nodeType":"Return","src":"2227:21:18"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"1701:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:18","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"value","nameLocation":"1847:5:18","nodeType":"VariableDeclaration","scope":4075,"src":"1839:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"length","nameLocation":"1862:6:18","nodeType":"VariableDeclaration","scope":4075,"src":"1854:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:18"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4075,"src":"1893:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4006,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:18"},"scope":4121,"src":"1818:437:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4094,"nodeType":"Block","src":"2480:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4088,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"2525:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4086,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:18","typeDescriptions":{}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4091,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"2533:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4083,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3999,4075,4095],"referencedDeclaration":4075,"src":"2497:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4082,"id":4093,"nodeType":"Return","src":"2490:59:18"}]},"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"2261:141:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4095,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:18","nodeType":"FunctionDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"addr","nameLocation":"2436:4:18","nodeType":"VariableDeclaration","scope":4095,"src":"2428:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:18"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4095,"src":"2465:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4080,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:18"},"scope":4121,"src":"2407:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"2711:66:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"2744:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:18","typeDescriptions":{}}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4105,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"2767:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4112,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:18","typeDescriptions":{}}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4111,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4104,"id":4118,"nodeType":"Return","src":"2721:49:18"}]},"documentation":{"id":4096,"nodeType":"StructuredDocumentation","src":"2562:66:18","text":" @dev Returns true if the two strings are equal."},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:18","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"a","nameLocation":"2662:1:18","nodeType":"VariableDeclaration","scope":4120,"src":"2648:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4097,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"b","nameLocation":"2679:1:18","nodeType":"VariableDeclaration","scope":4120,"src":"2665:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4099,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:18"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"2705:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4102,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:18"},"scope":4121,"src":"2633:144:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4122,"src":"220:2559:18","usedErrors":[]}],"src":"101:2679:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4987]},"id":4988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4123,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"128:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4987,"linearizedBaseContracts":[4987],"name":"Math","nameLocation":"210:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4128,"members":[{"id":4125,"name":"Down","nameLocation":"245:4:19","nodeType":"EnumValue","src":"245:4:19"},{"id":4126,"name":"Up","nameLocation":"287:2:19","nodeType":"EnumValue","src":"287:2:19"},{"id":4127,"name":"Zero","nameLocation":"318:4:19","nodeType":"EnumValue","src":"318:4:19"}],"name":"Rounding","nameLocation":"226:8:19","nodeType":"EnumDefinition","src":"221:122:19"},{"body":{"id":4145,"nodeType":"Block","src":"480:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"509:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:19","trueExpression":{"id":4141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4137,"id":4144,"nodeType":"Return","src":"490:20:19"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"349:59:19","text":" @dev Returns the largest of two numbers."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:19","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"a","nameLocation":"434:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"b","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":4987,"src":"413:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4163,"nodeType":"Block","src":"655:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"676:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"684:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:19","trueExpression":{"id":4159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4155,"id":4162,"nodeType":"Return","src":"665:20:19"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"523:60:19","text":" @dev Returns the smallest of two numbers."},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:19","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":4164,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":4164,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4164,"src":"646:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:19"},"scope":4987,"src":"588:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"876:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"935:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"941:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4173,"id":4185,"nodeType":"Return","src":"923:28:19"}]},"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"698:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:19","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"a","nameLocation":"830:1:19","nodeType":"VariableDeclaration","scope":4187,"src":"822:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"b","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":4187,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:19"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4187,"src":"867:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:19"},"scope":4987,"src":"805:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4211,"nodeType":"Block","src":"1228:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"1316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"1330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4205,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"1339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:19","trueExpression":{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4196,"id":4210,"nodeType":"Return","src":"1309:35:19"}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"964:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:19","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"a","nameLocation":"1182:1:19","nodeType":"VariableDeclaration","scope":4212,"src":"1174:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"b","nameLocation":"1193:1:19","nodeType":"VariableDeclaration","scope":4212,"src":"1185:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:19"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"1219:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:19"},"scope":4987,"src":"1157:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"1765:4115:19","statements":[{"id":4333,"nodeType":"UncheckedBlock","src":"1775:4099:19","statements":[{"assignments":[4225],"declarations":[{"constant":false,"id":4225,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:19","nodeType":"VariableDeclaration","scope":4333,"src":"2096:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4226,"nodeType":"VariableDeclarationStatement","src":"2096:13:19"},{"assignments":[4228],"declarations":[{"constant":false,"id":4228,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:19","nodeType":"VariableDeclaration","scope":4333,"src":"2168:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4229,"nodeType":"VariableDeclarationStatement","src":"2168:13:19"},{"AST":{"nodeType":"YulBlock","src":"2248:157:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:19"},"nodeType":"YulFunctionCall","src":"2289:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:19"},"nodeType":"YulFunctionCall","src":"2276:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:19","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:19"},"nodeType":"YulFunctionCall","src":"2322:9:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:19"}]},{"nodeType":"YulAssignment","src":"2348:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:19"},"nodeType":"YulFunctionCall","src":"2361:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:19"},"nodeType":"YulFunctionCall","src":"2377:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:19"},"nodeType":"YulFunctionCall","src":"2357:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4225,"isOffset":false,"isSlot":false,"src":"2313:5:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"2369:5:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"2384:5:19","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"2348:5:19","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"2283:1:19","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"2326:1:19","valueSize":1},{"declaration":4217,"isOffset":false,"isSlot":false,"src":"2286:1:19","valueSize":1},{"declaration":4217,"isOffset":false,"isSlot":false,"src":"2329:1:19","valueSize":1}],"id":4230,"nodeType":"InlineAssembly","src":"2239:166:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"2486:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"2482:368:19","trueBody":{"id":4238,"nodeType":"Block","src":"2498:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4234,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"2816:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4235,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"2824:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4223,"id":4237,"nodeType":"Return","src":"2809:26:19"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"2960:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4242,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"2974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"ExpressionStatement","src":"2952:53:19"},{"assignments":[4248],"declarations":[{"constant":false,"id":4248,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:19","nodeType":"VariableDeclaration","scope":4333,"src":"3261:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4249,"nodeType":"VariableDeclarationStatement","src":"3261:17:19"},{"AST":{"nodeType":"YulBlock","src":"3301:291:19","statements":[{"nodeType":"YulAssignment","src":"3370:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:19"},"nodeType":"YulFunctionCall","src":"3383:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:19"}]},{"nodeType":"YulAssignment","src":"3490:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:19"},"nodeType":"YulFunctionCall","src":"3510:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:19"},"nodeType":"YulFunctionCall","src":"3499:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:19"}]},{"nodeType":"YulAssignment","src":"3548:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:19"},"nodeType":"YulFunctionCall","src":"3557:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4219,"isOffset":false,"isSlot":false,"src":"3396:11:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"3524:5:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"3548:5:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"3561:5:19","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"3490:5:19","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"3503:5:19","valueSize":1},{"declaration":4248,"isOffset":false,"isSlot":false,"src":"3370:9:19","valueSize":1},{"declaration":4248,"isOffset":false,"isSlot":false,"src":"3513:9:19","valueSize":1},{"declaration":4248,"isOffset":false,"isSlot":false,"src":"3568:9:19","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"3390:1:19","valueSize":1},{"declaration":4217,"isOffset":false,"isSlot":false,"src":"3393:1:19","valueSize":1}],"id":4250,"nodeType":"InlineAssembly","src":"3292:300:19"},{"assignments":[4252],"declarations":[{"constant":false,"id":4252,"mutability":"mutable","name":"twos","nameLocation":"3907:4:19","nodeType":"VariableDeclaration","scope":4333,"src":"3899:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"3914:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:19","subExpression":{"id":4254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"3930:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:19"},{"AST":{"nodeType":"YulBlock","src":"3969:362:19","statements":[{"nodeType":"YulAssignment","src":"4034:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:19"},"nodeType":"YulFunctionCall","src":"4049:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:19"}]},{"nodeType":"YulAssignment","src":"4138:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:19"},"nodeType":"YulFunctionCall","src":"4147:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:19"}]},{"nodeType":"YulAssignment","src":"4278:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:19"},"nodeType":"YulFunctionCall","src":"4294:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:19"},"nodeType":"YulFunctionCall","src":"4290:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:19"},"nodeType":"YulFunctionCall","src":"4286:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4219,"isOffset":false,"isSlot":false,"src":"4034:11:19","valueSize":1},{"declaration":4219,"isOffset":false,"isSlot":false,"src":"4053:11:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"4138:5:19","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"4151:5:19","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"4066:4:19","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"4158:4:19","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"4278:4:19","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"4301:4:19","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"4308:4:19","valueSize":1}],"id":4261,"nodeType":"InlineAssembly","src":"3960:371:19"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"4406:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4264,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"4414:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"4397:21:19"},{"assignments":[4269],"declarations":[{"constant":false,"id":4269,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:19","nodeType":"VariableDeclaration","scope":4333,"src":"4736:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4276,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4271,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"4759:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:19"},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"4992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5007:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4280,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5021:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"4992:36:19"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5061:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5076:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4288,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5090:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"5061:36:19"},{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5131:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5146:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4296,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4300,"nodeType":"ExpressionStatement","src":"5131:36:19"},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5216:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"5201:36:19"},{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5286:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4312,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5300:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4316,"nodeType":"ExpressionStatement","src":"5271:36:19"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4317,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5342:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"5357:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4320,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"5342:36:19"},{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"5812:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"5821:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4327,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"5812:24:19"},{"expression":{"id":4331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"5857:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4223,"id":4332,"nodeType":"Return","src":"5850:13:19"}]}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"1357:305:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:19","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"x","nameLocation":"1691:1:19","nodeType":"VariableDeclaration","scope":4335,"src":"1683:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"y","nameLocation":"1702:1:19","nodeType":"VariableDeclaration","scope":4335,"src":"1694:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:19","nodeType":"VariableDeclaration","scope":4335,"src":"1705:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:19"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"result","nameLocation":"1757:6:19","nodeType":"VariableDeclaration","scope":4335,"src":"1749:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:19"},"scope":4987,"src":"1667:4213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"6122:189:19","statements":[{"assignments":[4351],"declarations":[{"constant":false,"id":4351,"mutability":"mutable","name":"result","nameLocation":"6140:6:19","nodeType":"VariableDeclaration","scope":4378,"src":"6132:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4357,"initialValue":{"arguments":[{"id":4353,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6156:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4354,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6159:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"6162:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4335,4379],"referencedDeclaration":4335,"src":"6149:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6188:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4359,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6200:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4128_$","typeString":"type(enum Math.Rounding)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"6200:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"src":"6188:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4363,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"6222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4364,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6225:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"6228:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"6184:98:19","trueBody":{"id":4374,"nodeType":"Block","src":"6246:36:19","statements":[{"expression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"6260:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4373,"nodeType":"ExpressionStatement","src":"6260:11:19"}]}},{"expression":{"id":4376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"6298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4377,"nodeType":"Return","src":"6291:13:19"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"5886:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:19","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"x","nameLocation":"6036:1:19","nodeType":"VariableDeclaration","scope":4379,"src":"6028:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4340,"mutability":"mutable","name":"y","nameLocation":"6047:1:19","nodeType":"VariableDeclaration","scope":4379,"src":"6039:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:19","nodeType":"VariableDeclaration","scope":4379,"src":"6050:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:19","nodeType":"VariableDeclaration","scope":4379,"src":"6071:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"typeName":{"id":4344,"nodeType":"UserDefinedTypeName","pathNode":{"id":4343,"name":"Rounding","nameLocations":["6071:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"6071:8:19"},"referencedDeclaration":4128,"src":"6071:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:19"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4379,"src":"6113:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:19"},"scope":4987,"src":"6012:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4490,"nodeType":"Block","src":"6587:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"6601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"6597:45:19","trueBody":{"id":4392,"nodeType":"Block","src":"6609:33:19","statements":[{"expression":{"hexValue":"30","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4386,"id":4391,"nodeType":"Return","src":"6623:8:19"}]}},{"assignments":[4395],"declarations":[{"constant":false,"id":4395,"mutability":"mutable","name":"result","nameLocation":"7329:6:19","nodeType":"VariableDeclaration","scope":4490,"src":"7321:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7349:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4659,4695],"referencedDeclaration":4659,"src":"7344:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:19"},{"id":4489,"nodeType":"UncheckedBlock","src":"7758:408:19","statements":[{"expression":{"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7782:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7792:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7805:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4415,"nodeType":"ExpressionStatement","src":"7782:35:19"},{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7831:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7841:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7850:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7854:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"7831:35:19"},{"expression":{"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7890:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7899:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7903:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4437,"nodeType":"ExpressionStatement","src":"7880:35:19"},{"expression":{"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7929:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7939:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7948:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7952:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4448,"nodeType":"ExpressionStatement","src":"7929:35:19"},{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"7988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"7997:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8001:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4459,"nodeType":"ExpressionStatement","src":"7978:35:19"},{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8027:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8037:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"8046:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8050:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"8027:35:19"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8076:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8086:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"8095:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8099:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"8076:35:19"},{"expression":{"arguments":[{"id":4483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8136:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"8144:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"8148:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4482,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"8132:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4386,"id":4488,"nodeType":"Return","src":"8125:30:19"}]}]},"documentation":{"id":4380,"nodeType":"StructuredDocumentation","src":"6317:208:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4491,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:19","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"a","nameLocation":"6552:1:19","nodeType":"VariableDeclaration","scope":4491,"src":"6544:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:19"},"returnParameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"6578:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:19"},"scope":4987,"src":"6530:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"8348:161:19","statements":[{"id":4525,"nodeType":"UncheckedBlock","src":"8358:145:19","statements":[{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"result","nameLocation":"8390:6:19","nodeType":"VariableDeclaration","scope":4525,"src":"8382:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[{"id":4505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"8404:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4491,4527],"referencedDeclaration":4491,"src":"8399:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"8427:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"8437:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4510,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"8449:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4128_$","typeString":"type(enum Math.Rounding)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"8449:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"src":"8437:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"8464:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"8473:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"8482:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:19","trueExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4501,"id":4524,"nodeType":"Return","src":"8420:72:19"}]}]},"documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"8178:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:19","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"a","nameLocation":"8294:1:19","nodeType":"VariableDeclaration","scope":4527,"src":"8286:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:19","nodeType":"VariableDeclaration","scope":4527,"src":"8297:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"typeName":{"id":4496,"nodeType":"UserDefinedTypeName","pathNode":{"id":4495,"name":"Rounding","nameLocations":["8297:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"8297:8:19"},"referencedDeclaration":4128,"src":"8297:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:19"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4527,"src":"8339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:19"},"scope":4987,"src":"8272:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4658,"nodeType":"Block","src":"8694:922:19","statements":[{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"result","nameLocation":"8712:6:19","nodeType":"VariableDeclaration","scope":4658,"src":"8704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4538,"initialValue":{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:19"},{"id":4655,"nodeType":"UncheckedBlock","src":"8732:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8760:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4553,"nodeType":"IfStatement","src":"8756:99:19","trueBody":{"id":4552,"nodeType":"Block","src":"8778:77:19","statements":[{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"8796:13:19"},{"expression":{"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"8827:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4551,"nodeType":"ExpressionStatement","src":"8827:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8872:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"8868:96:19","trueBody":{"id":4567,"nodeType":"Block","src":"8889:75:19","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"8907:12:19"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"8937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"8937:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"8981:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4583,"nodeType":"IfStatement","src":"8977:96:19","trueBody":{"id":4582,"nodeType":"Block","src":"8998:75:19","statements":[{"expression":{"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9016:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"nodeType":"ExpressionStatement","src":"9016:12:19"},{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9046:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4581,"nodeType":"ExpressionStatement","src":"9046:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9090:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4598,"nodeType":"IfStatement","src":"9086:96:19","trueBody":{"id":4597,"nodeType":"Block","src":"9107:75:19","statements":[{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9125:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"9125:12:19"},{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9155:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"9155:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4613,"nodeType":"IfStatement","src":"9195:93:19","trueBody":{"id":4612,"nodeType":"Block","src":"9215:73:19","statements":[{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9233:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"9233:11:19"},{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9262:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"9262:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9305:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"9301:93:19","trueBody":{"id":4627,"nodeType":"Block","src":"9321:73:19","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9339:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ExpressionStatement","src":"9339:11:19"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9368:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"9368:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9411:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4643,"nodeType":"IfStatement","src":"9407:93:19","trueBody":{"id":4642,"nodeType":"Block","src":"9427:73:19","statements":[{"expression":{"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4637,"nodeType":"ExpressionStatement","src":"9445:11:19"},{"expression":{"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9474:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4641,"nodeType":"ExpressionStatement","src":"9474:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"9517:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4654,"nodeType":"IfStatement","src":"9513:64:19","trueBody":{"id":4653,"nodeType":"Block","src":"9533:44:19","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"9551:11:19"}]}}]},{"expression":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"9603:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4534,"id":4657,"nodeType":"Return","src":"9596:13:19"}]},"documentation":{"id":4528,"nodeType":"StructuredDocumentation","src":"8515:113:19","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4659,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:19","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"value","nameLocation":"8655:5:19","nodeType":"VariableDeclaration","scope":4659,"src":"8647:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:19"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4659,"src":"8685:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:19"},"scope":4987,"src":"8633:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4694,"nodeType":"Block","src":"9849:165:19","statements":[{"id":4693,"nodeType":"UncheckedBlock","src":"9859:149:19","statements":[{"assignments":[4671],"declarations":[{"constant":false,"id":4671,"mutability":"mutable","name":"result","nameLocation":"9891:6:19","nodeType":"VariableDeclaration","scope":4693,"src":"9883:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4675,"initialValue":{"arguments":[{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"9905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4672,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4659,4695],"referencedDeclaration":4659,"src":"9900:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"9932:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"9942:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4678,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"9954:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4128_$","typeString":"type(enum Math.Rounding)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"9954:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"src":"9942:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"9974:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"9983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:19","trueExpression":{"hexValue":"31","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4669,"id":4692,"nodeType":"Return","src":"9925:72:19"}]}]},"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"9622:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4695,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:19","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"value","nameLocation":"9791:5:19","nodeType":"VariableDeclaration","scope":4695,"src":"9783:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:19","nodeType":"VariableDeclaration","scope":4695,"src":"9798:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"typeName":{"id":4664,"nodeType":"UserDefinedTypeName","pathNode":{"id":4663,"name":"Rounding","nameLocations":["9798:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"9798:8:19"},"referencedDeclaration":4128,"src":"9798:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:19"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4695,"src":"9840:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:19"},"scope":4987,"src":"9769:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4823,"nodeType":"Block","src":"10201:854:19","statements":[{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"result","nameLocation":"10219:6:19","nodeType":"VariableDeclaration","scope":4823,"src":"10211:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:19"},{"id":4820,"nodeType":"UncheckedBlock","src":"10239:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4723,"nodeType":"IfStatement","src":"10263:103:19","trueBody":{"id":4722,"nodeType":"Block","src":"10286:80:19","statements":[{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10304:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"nodeType":"ExpressionStatement","src":"10304:17:19"},{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10339:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"10339:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10383:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4740,"nodeType":"IfStatement","src":"10379:103:19","trueBody":{"id":4739,"nodeType":"Block","src":"10402:80:19","statements":[{"expression":{"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10420:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4734,"nodeType":"ExpressionStatement","src":"10420:17:19"},{"expression":{"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10455:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4738,"nodeType":"ExpressionStatement","src":"10455:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10499:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4757,"nodeType":"IfStatement","src":"10495:103:19","trueBody":{"id":4756,"nodeType":"Block","src":"10518:80:19","statements":[{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10536:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4751,"nodeType":"ExpressionStatement","src":"10536:17:19"},{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10571:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4755,"nodeType":"ExpressionStatement","src":"10571:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10615:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"10611:100:19","trueBody":{"id":4773,"nodeType":"Block","src":"10633:78:19","statements":[{"expression":{"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10651:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4768,"nodeType":"ExpressionStatement","src":"10651:16:19"},{"expression":{"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4772,"nodeType":"ExpressionStatement","src":"10685:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4791,"nodeType":"IfStatement","src":"10724:100:19","trueBody":{"id":4790,"nodeType":"Block","src":"10746:78:19","statements":[{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10764:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"10764:16:19"},{"expression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10798:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4789,"nodeType":"ExpressionStatement","src":"10798:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10841:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4808,"nodeType":"IfStatement","src":"10837:100:19","trueBody":{"id":4807,"nodeType":"Block","src":"10859:78:19","statements":[{"expression":{"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10877:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4802,"nodeType":"ExpressionStatement","src":"10877:16:19"},{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"10911:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"10954:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4819,"nodeType":"IfStatement","src":"10950:66:19","trueBody":{"id":4818,"nodeType":"Block","src":"10972:44:19","statements":[{"expression":{"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10990:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4817,"nodeType":"ExpressionStatement","src":"10990:11:19"}]}}]},{"expression":{"id":4821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"11042:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4702,"id":4822,"nodeType":"Return","src":"11035:13:19"}]},"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"10020:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4824,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:19","nodeType":"FunctionDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"value","nameLocation":"10162:5:19","nodeType":"VariableDeclaration","scope":4824,"src":"10154:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:19"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"10192:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:19"},"scope":4987,"src":"10139:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"11290:167:19","statements":[{"id":4858,"nodeType":"UncheckedBlock","src":"11300:151:19","statements":[{"assignments":[4836],"declarations":[{"constant":false,"id":4836,"mutability":"mutable","name":"result","nameLocation":"11332:6:19","nodeType":"VariableDeclaration","scope":4858,"src":"11324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4840,"initialValue":{"arguments":[{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"11347:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4837,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4824,4860],"referencedDeclaration":4824,"src":"11341:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"11374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"11384:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4843,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"11396:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4128_$","typeString":"type(enum Math.Rounding)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"11396:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"src":"11384:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"11417:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"11426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:19","trueExpression":{"hexValue":"31","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4834,"id":4857,"nodeType":"Return","src":"11367:73:19"}]}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"11061:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:19","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"value","nameLocation":"11232:5:19","nodeType":"VariableDeclaration","scope":4860,"src":"11224:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:19","nodeType":"VariableDeclaration","scope":4860,"src":"11239:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"typeName":{"id":4829,"nodeType":"UserDefinedTypeName","pathNode":{"id":4828,"name":"Rounding","nameLocations":["11239:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"11239:8:19"},"referencedDeclaration":4128,"src":"11239:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:19"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"11281:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:19"},"scope":4987,"src":"11209:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4946,"nodeType":"Block","src":"11771:600:19","statements":[{"assignments":[4869],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"result","nameLocation":"11789:6:19","nodeType":"VariableDeclaration","scope":4946,"src":"11781:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4871,"initialValue":{"hexValue":"30","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:19"},{"id":4943,"nodeType":"UncheckedBlock","src":"11809:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11837:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4886,"nodeType":"IfStatement","src":"11833:98:19","trueBody":{"id":4885,"nodeType":"Block","src":"11855:76:19","statements":[{"expression":{"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4880,"nodeType":"ExpressionStatement","src":"11873:13:19"},{"expression":{"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"11904:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4884,"nodeType":"ExpressionStatement","src":"11904:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4901,"nodeType":"IfStatement","src":"11944:95:19","trueBody":{"id":4900,"nodeType":"Block","src":"11965:74:19","statements":[{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4895,"nodeType":"ExpressionStatement","src":"11983:12:19"},{"expression":{"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12013:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4899,"nodeType":"ExpressionStatement","src":"12013:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"12056:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"12052:95:19","trueBody":{"id":4915,"nodeType":"Block","src":"12073:74:19","statements":[{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"12091:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"12091:12:19"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12121:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"12121:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"12164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"12160:95:19","trueBody":{"id":4930,"nodeType":"Block","src":"12181:74:19","statements":[{"expression":{"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"12199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4925,"nodeType":"ExpressionStatement","src":"12199:12:19"},{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12229:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4929,"nodeType":"ExpressionStatement","src":"12229:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"12272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"12268:64:19","trueBody":{"id":4941,"nodeType":"Block","src":"12288:44:19","statements":[{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12306:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"12306:11:19"}]}}]},{"expression":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12358:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4867,"id":4945,"nodeType":"Return","src":"12351:13:19"}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"11463:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4947,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:19","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"value","nameLocation":"11732:5:19","nodeType":"VariableDeclaration","scope":4947,"src":"11724:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:19"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4947,"src":"11762:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:19"},"scope":4987,"src":"11708:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4985,"nodeType":"Block","src":"12608:174:19","statements":[{"id":4984,"nodeType":"UncheckedBlock","src":"12618:158:19","statements":[{"assignments":[4959],"declarations":[{"constant":false,"id":4959,"mutability":"mutable","name":"result","nameLocation":"12650:6:19","nodeType":"VariableDeclaration","scope":4984,"src":"12642:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4963,"initialValue":{"arguments":[{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"12666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4947,4986],"referencedDeclaration":4947,"src":"12659:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"12693:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"12703:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4966,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"12715:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4128_$","typeString":"type(enum Math.Rounding)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:19","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"12715:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"src":"12703:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"12736:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"12751:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:19","trueExpression":{"hexValue":"31","id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4957,"id":4983,"nodeType":"Return","src":"12686:79:19"}]}]},"documentation":{"id":4948,"nodeType":"StructuredDocumentation","src":"12377:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4986,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:19","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"value","nameLocation":"12550:5:19","nodeType":"VariableDeclaration","scope":4986,"src":"12542:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4953,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:19","nodeType":"VariableDeclaration","scope":4986,"src":"12557:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"},"typeName":{"id":4952,"nodeType":"UserDefinedTypeName","pathNode":{"id":4951,"name":"Rounding","nameLocations":["12557:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"12557:8:19"},"referencedDeclaration":4128,"src":"12557:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4128","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:19"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4986,"src":"12599:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:19"},"scope":4987,"src":"12526:256:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4988,"src":"202:12582:19","usedErrors":[]}],"src":"103:12682:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5092]},"id":5093,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4989,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"134:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5092,"linearizedBaseContracts":[5092],"name":"SignedMath","nameLocation":"223:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":5007,"nodeType":"Block","src":"375:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"392:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"396:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"404:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:20","trueExpression":{"id":5003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"400:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4999,"id":5006,"nodeType":"Return","src":"385:20:20"}]},"documentation":{"id":4991,"nodeType":"StructuredDocumentation","src":"240:66:20","text":" @dev Returns the largest of two signed numbers."},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:20","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"a","nameLocation":"331:1:20","nodeType":"VariableDeclaration","scope":5008,"src":"324:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4992,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"b","nameLocation":"341:1:20","nodeType":"VariableDeclaration","scope":5008,"src":"334:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4994,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:20"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5008,"src":"367:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4997,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:20"},"scope":5092,"src":"311:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"554:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"571:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"575:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"583:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:20","trueExpression":{"id":5021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"579:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5017,"id":5024,"nodeType":"Return","src":"564:20:20"}]},"documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"418:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:20","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"a","nameLocation":"510:1:20","nodeType":"VariableDeclaration","scope":5026,"src":"503:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5010,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"b","nameLocation":"520:1:20","nodeType":"VariableDeclaration","scope":5026,"src":"513:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5012,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:20"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"546:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5015,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:20"},"scope":5092,"src":"490:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5069,"nodeType":"Block","src":"796:162:20","statements":[{"assignments":[5037],"declarations":[{"constant":false,"id":5037,"mutability":"mutable","name":"x","nameLocation":"865:1:20","nodeType":"VariableDeclaration","scope":5069,"src":"858:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5036,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5050,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"870:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"874:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5041,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"881:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"885:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"910:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5056,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"930:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:20","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5052,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:20","typeDescriptions":{}}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"944:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"948:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5035,"id":5068,"nodeType":"Return","src":"903:48:20"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"597:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:20","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"a","nameLocation":"752:1:20","nodeType":"VariableDeclaration","scope":5070,"src":"745:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5028,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"b","nameLocation":"762:1:20","nodeType":"VariableDeclaration","scope":5070,"src":"755:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5030,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:20"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5070,"src":"788:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5033,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:20"},"scope":5092,"src":"728:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5090,"nodeType":"Block","src":"1102:158:20","statements":[{"id":5089,"nodeType":"UncheckedBlock","src":"1112:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1227:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:20","subExpression":{"id":5084,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1241:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:20","trueExpression":{"id":5083,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"1236:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:20","typeDescriptions":{}}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5077,"id":5088,"nodeType":"Return","src":"1212:31:20"}]}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"964:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5091,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:20","nodeType":"FunctionDefinition","parameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"n","nameLocation":"1067:1:20","nodeType":"VariableDeclaration","scope":5091,"src":"1060:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5072,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:20"},"returnParameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5091,"src":"1093:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:20"},"scope":5092,"src":"1047:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5093,"src":"215:1047:20","usedErrors":[]}],"src":"109:1154:20"},"id":20},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[5106]},"id":5107,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5094,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":5095,"nodeType":"StructuredDocumentation","src":"71:144:21","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":5106,"linearizedBaseContracts":[5106],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"254:898:21","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":5105,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:21","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:21","nodeType":"VariableDeclaration","scope":5105,"src":"1197:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5097,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5100,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:21","nodeType":"VariableDeclaration","scope":5105,"src":"1226:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5102,"mutability":"mutable","name":"data","nameLocation":"1270:4:21","nodeType":"VariableDeclaration","scope":5105,"src":"1255:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5101,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:21"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[],"src":"1289:0:21"},"scope":5106,"src":"1157:133:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5107,"src":"215:1077:21","usedErrors":[]}],"src":"45:1248:21"},"id":21},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[5206],"IUniswapV3SwapCallback":[5106]},"id":5207,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5108,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:22"},{"id":5109,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:22"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":5110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5207,"sourceUnit":5107,"src":"91:83:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5112,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:22"],"nodeType":"IdentifierPath","referencedDeclaration":5106,"src":"305:22:22"},"id":5113,"nodeType":"InheritanceSpecifier","src":"305:22:22"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"176:104:22","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":5206,"linearizedBaseContracts":[5206,5106],"name":"ISwapRouter","nameLocation":"290:11:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":5130,"members":[{"constant":false,"id":5115,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:22","nodeType":"VariableDeclaration","scope":5130,"src":"374:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5114,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:22","nodeType":"VariableDeclaration","scope":5130,"src":"399:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5116,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5119,"mutability":"mutable","name":"fee","nameLocation":"432:3:22","nodeType":"VariableDeclaration","scope":5130,"src":"425:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5118,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5121,"mutability":"mutable","name":"recipient","nameLocation":"453:9:22","nodeType":"VariableDeclaration","scope":5130,"src":"445:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5120,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"deadline","nameLocation":"480:8:22","nodeType":"VariableDeclaration","scope":5130,"src":"472:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:22","nodeType":"VariableDeclaration","scope":5130,"src":"498:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5127,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:22","nodeType":"VariableDeclaration","scope":5130,"src":"524:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:22","nodeType":"VariableDeclaration","scope":5130,"src":"558:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5128,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:22","nodeType":"StructDefinition","scope":5206,"src":"334:256:22","visibility":"public"},{"documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"596:250:22","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":5139,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:22","nodeType":"FunctionDefinition","parameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"params","nameLocation":"909:6:22","nodeType":"VariableDeclaration","scope":5139,"src":"877:38:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$5130_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":5133,"nodeType":"UserDefinedTypeName","pathNode":{"id":5132,"name":"ExactInputSingleParams","nameLocations":["877:22:22"],"nodeType":"IdentifierPath","referencedDeclaration":5130,"src":"877:22:22"},"referencedDeclaration":5130,"src":"877:22:22","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$5130_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:22"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:22","nodeType":"VariableDeclaration","scope":5139,"src":"943:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:22"},"scope":5206,"src":"851:111:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":5150,"members":[{"constant":false,"id":5141,"mutability":"mutable","name":"path","nameLocation":"1008:4:22","nodeType":"VariableDeclaration","scope":5150,"src":"1002:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5140,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5143,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:22","nodeType":"VariableDeclaration","scope":5150,"src":"1022:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5142,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:22","nodeType":"VariableDeclaration","scope":5150,"src":"1049:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:22","nodeType":"VariableDeclaration","scope":5150,"src":"1075:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:22","nodeType":"VariableDeclaration","scope":5150,"src":"1101:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:22","nodeType":"StructDefinition","scope":5206,"src":"968:164:22","visibility":"public"},{"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"1138:273:22","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":5159,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:22","nodeType":"FunctionDefinition","parameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"params","nameLocation":"1462:6:22","nodeType":"VariableDeclaration","scope":5159,"src":"1436:32:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":5153,"nodeType":"UserDefinedTypeName","pathNode":{"id":5152,"name":"ExactInputParams","nameLocations":["1436:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":5150,"src":"1436:16:22"},"referencedDeclaration":5150,"src":"1436:16:22","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:22"},"returnParameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:22","nodeType":"VariableDeclaration","scope":5159,"src":"1496:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:22"},"scope":5206,"src":"1416:99:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":5176,"members":[{"constant":false,"id":5161,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:22","nodeType":"VariableDeclaration","scope":5176,"src":"1562:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5160,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:22","nodeType":"VariableDeclaration","scope":5176,"src":"1587:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5162,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5165,"mutability":"mutable","name":"fee","nameLocation":"1620:3:22","nodeType":"VariableDeclaration","scope":5176,"src":"1613:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5164,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5167,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:22","nodeType":"VariableDeclaration","scope":5176,"src":"1633:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5166,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5169,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:22","nodeType":"VariableDeclaration","scope":5176,"src":"1660:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5171,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:22","nodeType":"VariableDeclaration","scope":5176,"src":"1686:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:22","nodeType":"VariableDeclaration","scope":5176,"src":"1713:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5175,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:22","nodeType":"VariableDeclaration","scope":5176,"src":"1746:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5174,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:22","nodeType":"StructDefinition","scope":5206,"src":"1521:257:22","visibility":"public"},{"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"1784:250:22","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":5185,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:22","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"params","nameLocation":"2099:6:22","nodeType":"VariableDeclaration","scope":5185,"src":"2066:39:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$5176_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":5179,"nodeType":"UserDefinedTypeName","pathNode":{"id":5178,"name":"ExactOutputSingleParams","nameLocations":["2066:23:22"],"nodeType":"IdentifierPath","referencedDeclaration":5176,"src":"2066:23:22"},"referencedDeclaration":5176,"src":"2066:23:22","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$5176_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:22"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:22","nodeType":"VariableDeclaration","scope":5185,"src":"2133:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:22"},"scope":5206,"src":"2039:112:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":5196,"members":[{"constant":false,"id":5187,"mutability":"mutable","name":"path","nameLocation":"2198:4:22","nodeType":"VariableDeclaration","scope":5196,"src":"2192:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5186,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5189,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:22","nodeType":"VariableDeclaration","scope":5196,"src":"2212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5188,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:22","nodeType":"VariableDeclaration","scope":5196,"src":"2239:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:22","nodeType":"VariableDeclaration","scope":5196,"src":"2265:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5195,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:22","nodeType":"VariableDeclaration","scope":5196,"src":"2292:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:22","nodeType":"StructDefinition","scope":5206,"src":"2157:165:22","visibility":"public"},{"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"2328:284:22","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":5205,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:22","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"params","nameLocation":"2665:6:22","nodeType":"VariableDeclaration","scope":5205,"src":"2638:33:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$5196_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":5199,"nodeType":"UserDefinedTypeName","pathNode":{"id":5198,"name":"ExactOutputParams","nameLocations":["2638:17:22"],"nodeType":"IdentifierPath","referencedDeclaration":5196,"src":"2638:17:22"},"referencedDeclaration":5196,"src":"2638:17:22","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$5196_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:22"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:22","nodeType":"VariableDeclaration","scope":5205,"src":"2699:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:22"},"scope":5206,"src":"2617:100:22","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5207,"src":"280:2439:22","usedErrors":[]}],"src":"45:2675:22"},"id":22},"contracts/ColateralContract.sol":{"ast":{"absolutePath":"contracts/ColateralContract.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[144],"AccessControlUpgradeable":[480],"Address":[3892],"AddressUpgradeable":[1161],"ColateralContract":[5976],"ContextUpgradeable":[1203],"ERC165Upgradeable":[1476],"EnumerableSetUpgradeable":[3072],"IAccessControlEnumerableUpgradeable":[505],"IAccessControlUpgradeable":[578],"IColateralContract":[6131],"IERC165Upgradeable":[1488],"IERC20":[3150],"IERC20Permit":[3186],"ISwapRouter":[5206],"IUniswapV3SwapCallback":[5106],"Initializable":[747],"Math":[4987],"MathUpgradeable":[2354],"ReentrancyGuardUpgradeable":[831],"SafeERC20":[3562],"SignedMath":[5092],"SignedMathUpgradeable":[2459],"Strings":[4121],"StringsUpgradeable":[1432]},"id":5977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":4122,"src":"33:51:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":3151,"src":"86:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":5210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":3563,"src":"144:65:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":5211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":832,"src":"211:85:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol","id":5212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":145,"src":"298:91:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":5213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":5207,"src":"391:68:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IColateralContract.sol","file":"./IColateralContract.sol","id":5214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5977,"sourceUnit":6132,"src":"461:34:23","symbolAliases":[],"unitAlias":""},{"id":5215,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"499:23:23"},{"abstract":false,"baseContracts":[{"baseName":{"id":5216,"name":"IColateralContract","nameLocations":["559:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":6131,"src":"559:18:23"},"id":5217,"nodeType":"InheritanceSpecifier","src":"559:18:23"},{"baseName":{"id":5218,"name":"AccessControlEnumerableUpgradeable","nameLocations":["582:34:23"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"582:34:23"},"id":5219,"nodeType":"InheritanceSpecifier","src":"582:34:23"},{"baseName":{"id":5220,"name":"ReentrancyGuardUpgradeable","nameLocations":["621:26:23"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"621:26:23"},"id":5221,"nodeType":"InheritanceSpecifier","src":"621:26:23"}],"canonicalName":"ColateralContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5976,"linearizedBaseContracts":[5976,831,144,480,1476,1488,505,578,1203,747,6131],"name":"ColateralContract","nameLocation":"535:17:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5224,"libraryName":{"id":5222,"name":"Strings","nameLocations":["660:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":4121,"src":"660:7:23"},"nodeType":"UsingForDirective","src":"654:26:23","typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"e5df800a","id":5229,"mutability":"constant","name":"ACONCAGUA_ROLE","nameLocation":"727:14:23","nodeType":"VariableDeclaration","scope":5976,"src":"703:63:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"703:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41434f4e4341475541","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"754:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_faad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2","typeString":"literal_string \"ACONCAGUA\""},"value":"ACONCAGUA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_faad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2","typeString":"literal_string \"ACONCAGUA\""}],"id":5226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"744:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"744:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cc815d","id":5234,"mutability":"constant","name":"LENDER_LIQ_ROLE","nameLocation":"823:15:23","nodeType":"VariableDeclaration","scope":5976,"src":"799:65:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"799:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4c454e4445525f4c4951","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"851:12:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6","typeString":"literal_string \"LENDER_LIQ\""},"value":"LENDER_LIQ"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6","typeString":"literal_string \"LENDER_LIQ\""}],"id":5231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"841:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"841:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"71372544","id":5239,"mutability":"constant","name":"RESCUER_ROLE","nameLocation":"912:12:23","nodeType":"VariableDeclaration","scope":5976,"src":"888:59:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"52455343554552","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"937:9:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707","typeString":"literal_string \"RESCUER\""},"value":"RESCUER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707","typeString":"literal_string \"RESCUER\""}],"id":5236,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"927:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"927:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":5244,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"993:11:23","nodeType":"VariableDeclaration","scope":5976,"src":"969:57:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"969:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"504155534552","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1017:8:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c","typeString":"literal_string \"PAUSER\""},"value":"PAUSER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c","typeString":"literal_string \"PAUSER\""}],"id":5241,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1007:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1007:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"df668eca","id":5249,"mutability":"constant","name":"SWAPPER_ROLE","nameLocation":"1071:12:23","nodeType":"VariableDeclaration","scope":5976,"src":"1047:59:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1047:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"53574150504552","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1096:9:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6","typeString":"literal_string \"SWAPPER\""},"value":"SWAPPER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6","typeString":"literal_string \"SWAPPER\""}],"id":5246,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1086:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"global":false,"id":5253,"libraryName":{"id":5250,"name":"EnumerableSetUpgradeable","nameLocations":["1119:24:23"],"nodeType":"IdentifierPath","referencedDeclaration":3072,"src":"1119:24:23"},"nodeType":"UsingForDirective","src":"1113:71:23","typeName":{"id":5252,"nodeType":"UserDefinedTypeName","pathNode":{"id":5251,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["1148:24:23","1173:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"1148:35:23"},"referencedDeclaration":2664,"src":"1148:35:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}}},{"constant":false,"id":5256,"mutability":"mutable","name":"_rolesSet","nameLocation":"1232:9:23","nodeType":"VariableDeclaration","scope":5976,"src":"1188:53:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":5255,"nodeType":"UserDefinedTypeName","pathNode":{"id":5254,"name":"EnumerableSetUpgradeable.Bytes32Set","nameLocations":["1188:24:23","1213:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"1188:35:23"},"referencedDeclaration":2664,"src":"1188:35:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"private"},{"constant":true,"functionSelector":"89a30271","id":5259,"mutability":"constant","name":"USDC","nameLocation":"1294:4:23","nodeType":"VariableDeclaration","scope":5976,"src":"1271:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"1271:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"55534443","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1301:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},"visibility":"public"},{"constant":true,"functionSelector":"c54e44eb","id":5262,"mutability":"constant","name":"USDT","nameLocation":"1335:4:23","nodeType":"VariableDeclaration","scope":5976,"src":"1312:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5260,"name":"string","nodeType":"ElementaryTypeName","src":"1312:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"55534454","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1342:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"},"visibility":"public"},{"constant":true,"functionSelector":"a9da3cf2","id":5265,"mutability":"constant","name":"USDM","nameLocation":"1376:4:23","nodeType":"VariableDeclaration","scope":5976,"src":"1353:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5263,"name":"string","nodeType":"ElementaryTypeName","src":"1353:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5553444d","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1383:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9","typeString":"literal_string \"USDM\""},"value":"USDM"},"visibility":"public"},{"constant":true,"functionSelector":"4dede3de","id":5268,"mutability":"constant","name":"WBTC","nameLocation":"1417:4:23","nodeType":"VariableDeclaration","scope":5976,"src":"1394:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5266,"name":"string","nodeType":"ElementaryTypeName","src":"1394:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"57425443","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1424:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73","typeString":"literal_string \"WBTC\""},"value":"WBTC"},"visibility":"public"},{"constant":false,"functionSelector":"6e30199f","id":5272,"mutability":"mutable","name":"tokenAddress","nameLocation":"1498:12:23","nodeType":"VariableDeclaration","scope":5976,"src":"1464:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":5271,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5269,"name":"string","nodeType":"ElementaryTypeName","src":"1472:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1464:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5270,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"15ac7358","id":5274,"mutability":"mutable","name":"rescueWalletAddress","nameLocation":"1532:19:23","nodeType":"VariableDeclaration","scope":5976,"src":"1517:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5273,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b14ec101","id":5276,"mutability":"mutable","name":"withdrawWalletAddress","nameLocation":"1571:21:23","nodeType":"VariableDeclaration","scope":5976,"src":"1556:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5275,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":5279,"mutability":"mutable","name":"swapRouter","nameLocation":"1620:10:23","nodeType":"VariableDeclaration","scope":5976,"src":"1599:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"},"typeName":{"id":5278,"nodeType":"UserDefinedTypeName","pathNode":{"id":5277,"name":"ISwapRouter","nameLocations":["1599:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":5206,"src":"1599:11:23"},"referencedDeclaration":5206,"src":"1599:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}},"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"1651:35:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5282,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1658:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5284,"nodeType":"ExpressionStatement","src":"1658:22:23"}]},"id":5286,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5280,"nodeType":"ParameterList","parameters":[],"src":"1648:2:23"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[],"src":"1651:0:23"},"scope":5976,"src":"1637:49:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5555,"nodeType":"Block","src":"2092:2100:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5316,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"2115:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5318,"indexExpression":{"hexValue":"30","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2126:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2115:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2132:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:23","typeDescriptions":{}}},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2132:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2115:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5324,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"2146:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5326,"indexExpression":{"hexValue":"31","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2146:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2163:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5327,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:23","typeDescriptions":{}}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2146:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2115:58:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5333,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"2177:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5335,"indexExpression":{"hexValue":"32","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2188:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2177:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2194:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5336,"name":"address","nodeType":"ElementaryTypeName","src":"2194:7:23","typeDescriptions":{}}},"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2177:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2115:89:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e41646472","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e","typeString":"literal_string \"AdminAddr\""},"value":"AdminAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e","typeString":"literal_string \"AdminAddr\""}],"id":5315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2099:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2099:132:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5344,"nodeType":"ExpressionStatement","src":"2099:132:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"2246:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5347,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:23","typeDescriptions":{}}},"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2246:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657363756541646472","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2282:12:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd","typeString":"literal_string \"RescueAddr\""},"value":"RescueAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd","typeString":"literal_string \"RescueAddr\""}],"id":5345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2238:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"ExpressionStatement","src":"2238:57:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"2310:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2344:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2336:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5357,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:23","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2336:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2310:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617741646472","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2348:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c","typeString":"literal_string \"WithdrawAddr\""},"value":"WithdrawAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c","typeString":"literal_string \"WithdrawAddr\""}],"id":5355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2302:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5364,"nodeType":"ExpressionStatement","src":"2302:61:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"2378:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2405:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2397:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5367,"name":"address","nodeType":"ElementaryTypeName","src":"2397:7:23","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46697273744c656e6465724c697141646472","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2409:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85","typeString":"literal_string \"FirstLenderLiqAddr\""},"value":"FirstLenderLiqAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85","typeString":"literal_string \"FirstLenderLiqAddr\""}],"id":5365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2370:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5374,"nodeType":"ExpressionStatement","src":"2370:60:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"2445:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2473:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2465:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5377,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:23","typeDescriptions":{}}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2465:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2445:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365636f6e644c656e6465724c697141646472","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2477:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e","typeString":"literal_string \"SecondLenderLiqAddr\""},"value":"SecondLenderLiqAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e","typeString":"literal_string \"SecondLenderLiqAddr\""}],"id":5375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2437:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2437:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"ExpressionStatement","src":"2437:62:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"_swapRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"2514:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2536:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5387,"name":"address","nodeType":"ElementaryTypeName","src":"2536:7:23","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2514:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170526f7574657241646472","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2548:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290","typeString":"literal_string \"SwapRouterAddr\""},"value":"SwapRouterAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290","typeString":"literal_string \"SwapRouterAddr\""}],"id":5385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2506:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2506:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5394,"nodeType":"ExpressionStatement","src":"2506:59:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"_swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"2580:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2600:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5397,"name":"address","nodeType":"ElementaryTypeName","src":"2592:7:23","typeDescriptions":{}}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2580:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5377617070657241646472","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2604:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942","typeString":"literal_string \"SwapperAddr\""},"value":"SwapperAddr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942","typeString":"literal_string \"SwapperAddr\""}],"id":5395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2572:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2572:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5404,"nodeType":"ExpressionStatement","src":"2572:46:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5405,"name":"__AccessControl_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2627:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5407,"nodeType":"ExpressionStatement","src":"2627:32:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5408,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2666:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2666:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5410,"nodeType":"ExpressionStatement","src":"2666:34:23"},{"expression":{"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5411,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"2707:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5413,"indexExpression":{"id":5412,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"2720:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2707:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5414,"name":"_usdcTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"2728:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2707:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5416,"nodeType":"ExpressionStatement","src":"2707:38:23"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5417,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"2752:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5419,"indexExpression":{"id":5418,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"2765:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2752:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5420,"name":"_usdtTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"2773:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2752:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5422,"nodeType":"ExpressionStatement","src":"2752:38:23"},{"expression":{"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5423,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"2797:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5425,"indexExpression":{"id":5424,"name":"USDM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"2810:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2797:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5426,"name":"_usdmTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"2818:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2797:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5428,"nodeType":"ExpressionStatement","src":"2797:38:23"},{"expression":{"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5429,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"2842:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5431,"indexExpression":{"id":5430,"name":"WBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2855:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2842:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5432,"name":"_wbtcTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"2863:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2842:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5434,"nodeType":"ExpressionStatement","src":"2842:38:23"},{"expression":{"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5435,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"2889:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5436,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"2913:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2889:46:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5438,"nodeType":"ExpressionStatement","src":"2889:46:23"},{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5439,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"2942:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5440,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"2964:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2942:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5442,"nodeType":"ExpressionStatement","src":"2942:42:23"},{"expression":{"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"2993:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5445,"name":"_swapRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"3018:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5444,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3006:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$5206_$","typeString":"type(contract ISwapRouter)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3006:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}},"src":"2993:44:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}},"id":5448,"nodeType":"ExpressionStatement","src":"2993:44:23"},{"expression":{"arguments":[{"id":5452,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3117:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5449,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"3103:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3113:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3103:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2664_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3103:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"ExpressionStatement","src":"3103:29:23"},{"expression":{"arguments":[{"id":5458,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3153:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5455,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"3139:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3149:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3139:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2664_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5460,"nodeType":"ExpressionStatement","src":"3139:30:23"},{"expression":{"arguments":[{"id":5464,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3190:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5461,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"3176:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3186:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3176:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2664_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3176:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5466,"nodeType":"ExpressionStatement","src":"3176:27:23"},{"expression":{"arguments":[{"id":5470,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3224:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5467,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"3210:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3220:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"3210:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2664_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3210:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5472,"nodeType":"ExpressionStatement","src":"3210:27:23"},{"expression":{"arguments":[{"id":5474,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3257:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5475,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3273:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5477,"indexExpression":{"hexValue":"30","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3273:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5473,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3246:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5479,"nodeType":"ExpressionStatement","src":"3246:41:23"},{"expression":{"arguments":[{"id":5481,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3305:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5482,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3321:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5484,"indexExpression":{"hexValue":"31","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3321:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5480,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3294:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3294:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5486,"nodeType":"ExpressionStatement","src":"3294:41:23"},{"expression":{"arguments":[{"id":5488,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3353:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5489,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"3369:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},"id":5491,"indexExpression":{"hexValue":"32","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3369:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5487,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3342:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5493,"nodeType":"ExpressionStatement","src":"3342:41:23"},{"expression":{"arguments":[{"id":5495,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3401:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5496,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"3418:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5494,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3390:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3390:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5498,"nodeType":"ExpressionStatement","src":"3390:44:23"},{"expression":{"arguments":[{"id":5500,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3452:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5501,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"3469:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5499,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3441:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5503,"nodeType":"ExpressionStatement","src":"3441:45:23"},{"expression":{"arguments":[{"id":5505,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3504:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5506,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"3518:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5504,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3493:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3493:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5508,"nodeType":"ExpressionStatement","src":"3493:41:23"},{"expression":{"arguments":[{"id":5510,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3552:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5511,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"3566:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5509,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3541:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5513,"nodeType":"ExpressionStatement","src":"3541:42:23"},{"expression":{"arguments":[{"id":5515,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3601:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5516,"name":"_swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"3615:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5514,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[114],"referencedDeclaration":114,"src":"3590:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"ExpressionStatement","src":"3590:34:23"},{"expression":{"arguments":[{"id":5520,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3647:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5521,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3663:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5519,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3633:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5523,"nodeType":"ExpressionStatement","src":"3633:45:23"},{"expression":{"arguments":[{"id":5525,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3699:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5526,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"3716:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5524,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3685:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3685:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5528,"nodeType":"ExpressionStatement","src":"3685:47:23"},{"expression":{"arguments":[{"id":5530,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3753:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5531,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3767:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5529,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3739:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5533,"nodeType":"ExpressionStatement","src":"3739:41:23"},{"expression":{"arguments":[{"id":5535,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3801:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5536,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"3815:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5534,"name":"_setRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3787:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32)"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3787:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5538,"nodeType":"ExpressionStatement","src":"3787:43:23"},{"eventCall":{"arguments":[{"expression":{"id":5540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3893:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3897:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3893:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5542,"name":"_usdcTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"3912:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5543,"name":"_usdtTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"3938:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5544,"name":"_usdmTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"3964:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5545,"name":"_wbtcTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"3990:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5546,"name":"_aconcagua","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"4016:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"}},{"id":5547,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"4035:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5548,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"4064:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5549,"name":"_firstLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"4095:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5550,"name":"_secondLenderLiq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"4119:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5551,"name":"_swapRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"4144:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5552,"name":"_swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"4171:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5539,"name":"Initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3874:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,address,address,address[3] memory,address,address,address,address,address,address)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:312:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5554,"nodeType":"EmitStatement","src":"3869:317:23"}]},"functionSelector":"334347b7","id":5556,"implemented":true,"kind":"function","modifiers":[{"id":5313,"kind":"modifierInvocation","modifierName":{"id":5312,"name":"initializer","nameLocations":["2080:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":649,"src":"2080:11:23"},"nodeType":"ModifierInvocation","src":"2080:11:23"}],"name":"initialize","nameLocation":"1701:10:23","nodeType":"FunctionDefinition","parameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"_usdcTokenAddress","nameLocation":"1726:17:23","nodeType":"VariableDeclaration","scope":5556,"src":"1718:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"_usdtTokenAddress","nameLocation":"1758:17:23","nodeType":"VariableDeclaration","scope":5556,"src":"1750:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5289,"name":"address","nodeType":"ElementaryTypeName","src":"1750:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"_usdmTokenAddress","nameLocation":"1790:17:23","nodeType":"VariableDeclaration","scope":5556,"src":"1782:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5291,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5294,"mutability":"mutable","name":"_wbtcTokenAddress","nameLocation":"1822:17:23","nodeType":"VariableDeclaration","scope":5556,"src":"1814:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5293,"name":"address","nodeType":"ElementaryTypeName","src":"1814:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"_aconcagua","nameLocation":"1866:10:23","nodeType":"VariableDeclaration","scope":5556,"src":"1846:30:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_calldata_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":5295,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5297,"length":{"hexValue":"33","id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1846:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"},{"constant":false,"id":5300,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"1891:20:23","nodeType":"VariableDeclaration","scope":5556,"src":"1883:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5299,"name":"address","nodeType":"ElementaryTypeName","src":"1883:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5302,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"1926:22:23","nodeType":"VariableDeclaration","scope":5556,"src":"1918:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5301,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"_firstLenderLiq","nameLocation":"1963:15:23","nodeType":"VariableDeclaration","scope":5556,"src":"1955:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5303,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"_secondLenderLiq","nameLocation":"1993:16:23","nodeType":"VariableDeclaration","scope":5556,"src":"1985:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5305,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"_swapRouterAddress","nameLocation":"2024:18:23","nodeType":"VariableDeclaration","scope":5556,"src":"2016:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5307,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"_swapper","nameLocation":"2057:8:23","nodeType":"VariableDeclaration","scope":5556,"src":"2049:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5309,"name":"address","nodeType":"ElementaryTypeName","src":"2049:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1711:359:23"},"returnParameters":{"id":5314,"nodeType":"ParameterList","parameters":[],"src":"2092:0:23"},"scope":5976,"src":"1692:2500:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6074],"body":{"id":5564,"nodeType":"Block","src":"4278:27:23","statements":[{"expression":{"hexValue":"312e312e30","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4292:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546","typeString":"literal_string \"1.1.0\""},"value":"1.1.0"},"functionReturnParameters":5561,"id":5563,"nodeType":"Return","src":"4285:14:23"}]},"functionSelector":"54fd4d50","id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"4221:7:23","nodeType":"FunctionDefinition","overrides":{"id":5558,"nodeType":"OverrideSpecifier","overrides":[],"src":"4245:8:23"},"parameters":{"id":5557,"nodeType":"ParameterList","parameters":[],"src":"4228:2:23"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5565,"src":"4263:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5559,"name":"string","nodeType":"ElementaryTypeName","src":"4263:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4262:15:23"},"scope":5976,"src":"4212:93:23","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[6079],"body":{"id":5588,"nodeType":"Block","src":"4430:130:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"4445:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4479:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4471:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5576,"name":"address","nodeType":"ElementaryTypeName","src":"4471:7:23","typeDescriptions":{}}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4445:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57697468647261773041646472","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4485:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f","typeString":"literal_string \"Withdraw0Addr\""},"value":"Withdraw0Addr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f","typeString":"literal_string \"Withdraw0Addr\""}],"id":5574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4437:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4437:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5583,"nodeType":"ExpressionStatement","src":"4437:64:23"},{"expression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"4508:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5585,"name":"_withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"4532:22:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4508:46:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5587,"nodeType":"ExpressionStatement","src":"4508:46:23"}]},"functionSelector":"212f6039","id":5589,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5571,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"4414:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5572,"kind":"modifierInvocation","modifierName":{"id":5570,"name":"onlyRole","nameLocations":["4405:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"4405:8:23"},"nodeType":"ModifierInvocation","src":"4405:24:23"}],"name":"setWithdrawWalletAddress","nameLocation":"4320:24:23","nodeType":"FunctionDefinition","overrides":{"id":5569,"nodeType":"OverrideSpecifier","overrides":[],"src":"4396:8:23"},"parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"4359:22:23","nodeType":"VariableDeclaration","scope":5589,"src":"4351:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5566,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4344:42:23"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[],"src":"4430:0:23"},"scope":5976,"src":"4311:249:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6084],"body":{"id":5612,"nodeType":"Block","src":"4681:122:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5599,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"4696:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4728:3:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4720:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5600,"name":"address","nodeType":"ElementaryTypeName","src":"4720:7:23","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265736375653041646472","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4734:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839","typeString":"literal_string \"Rescue0Addr\""},"value":"Rescue0Addr"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839","typeString":"literal_string \"Rescue0Addr\""}],"id":5598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5607,"nodeType":"ExpressionStatement","src":"4688:60:23"},{"expression":{"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5608,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"4755:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5609,"name":"_rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"4777:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4755:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5611,"nodeType":"ExpressionStatement","src":"4755:42:23"}]},"functionSelector":"d00411c9","id":5613,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5595,"name":"ACONCAGUA_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"4665:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5596,"kind":"modifierInvocation","modifierName":{"id":5594,"name":"onlyRole","nameLocations":["4656:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"4656:8:23"},"nodeType":"ModifierInvocation","src":"4656:24:23"}],"name":"setRescueWalletAddress","nameLocation":"4575:22:23","nodeType":"FunctionDefinition","overrides":{"id":5593,"nodeType":"OverrideSpecifier","overrides":[],"src":"4647:8:23"},"parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"4612:20:23","nodeType":"VariableDeclaration","scope":5613,"src":"4604:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5590,"name":"address","nodeType":"ElementaryTypeName","src":"4604:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4597:40:23"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[],"src":"4681:0:23"},"scope":5976,"src":"4566:237:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6130],"body":{"id":5792,"nodeType":"Block","src":"4920:1350:23","statements":[{"body":{"id":5790,"nodeType":"Block","src":"4976:1289:23","statements":[{"assignments":[5637],"declarations":[{"constant":false,"id":5637,"mutability":"mutable","name":"swapParams","nameLocation":"5005:10:23","nodeType":"VariableDeclaration","scope":5790,"src":"4985:30:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams"},"typeName":{"id":5636,"nodeType":"UserDefinedTypeName","pathNode":{"id":5635,"name":"SwapParams","nameLocations":["4985:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":6069,"src":"4985:10:23"},"referencedDeclaration":6069,"src":"4985:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_storage_ptr","typeString":"struct IColateralContract.SwapParams"}},"visibility":"internal"}],"id":5641,"initialValue":{"baseExpression":{"id":5638,"name":"swapsParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"5018:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata[] calldata"}},"id":5640,"indexExpression":{"id":5639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"5030:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5018:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"nodeType":"VariableDeclarationStatement","src":"4985:47:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5643,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5079:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5090:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5079:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5097:9:23","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":5143,"src":"5079:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5648,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5118:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}],"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5110:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5646,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:23","typeDescriptions":{}}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5110:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5079:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220726563697069656e74","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5125:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7","typeString":"literal_string \"Err recipient\""},"value":"Err recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7","typeString":"literal_string \"Err recipient\""}],"id":5642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5071:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5653,"nodeType":"ExpressionStatement","src":"5071:70:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5655,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5158:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5169:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5158:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:16:23","memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":5149,"src":"5158:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5195:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5158:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220536c697070","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5198:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b","typeString":"literal_string \"Err Slipp\""},"value":"Err Slipp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b","typeString":"literal_string \"Err Slipp\""}],"id":5654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5150:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5150:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5662,"nodeType":"ExpressionStatement","src":"5150:60:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5664,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5237:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5248:8:23","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6068,"src":"5237:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":5666,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"5260:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5668,"indexExpression":{"hexValue":"55534443","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5273:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5260:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5237:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5670,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5284:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5295:8:23","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6068,"src":"5284:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":5672,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"5307:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5674,"indexExpression":{"hexValue":"55534454","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5320:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","typeString":"literal_string \"USDT\""},"value":"USDT"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5307:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5284:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5237:90:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5677,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5331:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5342:8:23","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6068,"src":"5331:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":5679,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"5354:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5681,"indexExpression":{"hexValue":"5553444d","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5367:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9","typeString":"literal_string \"USDM\""},"value":"USDM"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5354:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5331:43:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5237:137:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220546f6b656e4f7574","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5385:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6","typeString":"literal_string \"Err TokenOut\""},"value":"Err TokenOut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6","typeString":"literal_string \"Err TokenOut\""}],"id":5663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5219:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:189:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"ExpressionStatement","src":"5219:189:23"},{"assignments":[5689],"declarations":[{"constant":false,"id":5689,"mutability":"mutable","name":"token","nameLocation":"5465:5:23","nodeType":"VariableDeclaration","scope":5790,"src":"5458:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":5688,"nodeType":"UserDefinedTypeName","pathNode":{"id":5687,"name":"IERC20","nameLocations":["5458:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"5458:6:23"},"referencedDeclaration":3150,"src":"5458:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"}],"id":5697,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":5693,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5488:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5499:7:23","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"5488:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5480:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5691,"name":"address","nodeType":"ElementaryTypeName","src":"5480:7:23","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5690,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"5473:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3150_$","typeString":"type(contract IERC20)"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"5458:50:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5699,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5535:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5546:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5535:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5553:8:23","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5147,"src":"5535:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5564:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5535:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":5704,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5580:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5591:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5580:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5598:8:23","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5147,"src":"5580:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"arguments":[{"id":5711,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5634:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}],"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5626:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5709,"name":"address","nodeType":"ElementaryTypeName","src":"5626:7:23","typeDescriptions":{}}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5626:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5707,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"5610:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5616:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"5610:15:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:60:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5535:105:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220416d6f756e74496e","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5651:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115","typeString":"literal_string \"Err AmountIn\""},"value":"Err AmountIn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115","typeString":"literal_string \"Err AmountIn\""}],"id":5698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:157:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5718,"nodeType":"ExpressionStatement","src":"5517:157:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5724,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"5713:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}],"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5705:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5722,"name":"address","nodeType":"ElementaryTypeName","src":"5705:7:23","typeDescriptions":{}}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5705:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5726,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5726:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5737:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5726:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5744:8:23","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5147,"src":"5726:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"5691:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5697:7:23","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"5691:13:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220417070726f76616c","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5755:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944","typeString":"literal_string \"Err Approval\""},"value":"Err Approval"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944","typeString":"literal_string \"Err Approval\""}],"id":5719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5683:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5683:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5732,"nodeType":"ExpressionStatement","src":"5683:87:23"},{"clauses":[{"block":{"id":5764,"nodeType":"Block","src":"5898:184:23","statements":[{"eventCall":{"arguments":[{"expression":{"id":5742,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5919:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5930:7:23","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"5919:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5744,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5939:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5950:8:23","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":6068,"src":"5939:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":5746,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5960:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5960:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5978:8:23","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5147,"src":"5960:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5749,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"5988:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5741,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"5914:4:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5914:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5751,"nodeType":"EmitStatement","src":"5909:89:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5757,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"6039:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}],"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6031:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5755,"name":"address","nodeType":"ElementaryTypeName","src":"6031:7:23","typeDescriptions":{}}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6031:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6052:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5753,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"6017:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6023:7:23","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"6017:13:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220417070726f76616c30","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6056:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","typeString":"literal_string \"Err Approval0\""},"value":"Err Approval0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","typeString":"literal_string \"Err Approval0\""}],"id":5752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6009:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5763,"nodeType":"ExpressionStatement","src":"6009:63:23"}]},"errorName":"","id":5765,"nodeType":"TryCatchClause","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"amountOut","nameLocation":"5887:9:23","nodeType":"VariableDeclaration","scope":5765,"src":"5879:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"5879:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5878:19:23"},"src":"5870:212:23"},{"block":{"id":5787,"nodeType":"Block","src":"6119:139:23","statements":[{"eventCall":{"arguments":[{"expression":{"id":5770,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"6145:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6156:7:23","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"6145:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5772,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"6165:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5769,"name":"SwapError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"6135:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5774,"nodeType":"EmitStatement","src":"6130:44:23"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5780,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"6215:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}],"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6207:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5778,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:23","typeDescriptions":{}}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6207:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6228:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5776,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"6193:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6199:7:23","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"6193:13:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45727220417070726f76616c30","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6232:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","typeString":"literal_string \"Err Approval0\""},"value":"Err Approval0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","typeString":"literal_string \"Err Approval0\""}],"id":5775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6185:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5786,"nodeType":"ExpressionStatement","src":"6185:63:23"}]},"errorName":"Error","id":5788,"nodeType":"TryCatchClause","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"errorMsg","nameLocation":"6109:8:23","nodeType":"VariableDeclaration","scope":5788,"src":"6095:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5766,"name":"string","nodeType":"ElementaryTypeName","src":"6095:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6094:24:23"},"src":"6083:175:23"}],"externalCall":{"arguments":[{"expression":{"id":5735,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"5851:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5862:6:23","memberName":"params","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5851:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputParams_$5150_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams calldata"}],"expression":{"id":5733,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"5829:10:23","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$5206","typeString":"contract ISwapRouter"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5840:10:23","memberName":"exactInput","nodeType":"MemberAccess","referencedDeclaration":5159,"src":"5829:21:23","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputParams_$5150_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:40:23","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"TryStatement","src":"5825:433:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"4947:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5629,"name":"swapsParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"4951:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract.SwapParams calldata[] calldata"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4963:6:23","memberName":"length","nodeType":"MemberAccess","src":"4951:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4947:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5791,"initializationExpression":{"assignments":[5625],"declarations":[{"constant":false,"id":5625,"mutability":"mutable","name":"i","nameLocation":"4940:1:23","nodeType":"VariableDeclaration","scope":5791,"src":"4932:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4932:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5627,"initialValue":{"hexValue":"30","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4944:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4932:13:23"},"loopExpression":{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4971:3:23","subExpression":{"id":5632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"4971:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"4971:3:23"},"nodeType":"ForStatement","src":"4927:1338:23"}]},"functionSelector":"2ffe9942","id":5793,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5621,"name":"SWAPPER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"4906:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5622,"kind":"modifierInvocation","modifierName":{"id":5620,"name":"onlyRole","nameLocations":["4897:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"4897:8:23"},"nodeType":"ModifierInvocation","src":"4897:22:23"}],"name":"swapExactInputs","nameLocation":"4818:15:23","nodeType":"FunctionDefinition","overrides":{"id":5619,"nodeType":"OverrideSpecifier","overrides":[],"src":"4888:8:23"},"parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"swapsParams","nameLocation":"4862:11:23","nodeType":"VariableDeclaration","scope":5793,"src":"4840:33:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract.SwapParams[]"},"typeName":{"baseType":{"id":5615,"nodeType":"UserDefinedTypeName","pathNode":{"id":5614,"name":"SwapParams","nameLocations":["4840:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":6069,"src":"4840:10:23"},"referencedDeclaration":6069,"src":"4840:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_storage_ptr","typeString":"struct IColateralContract.SwapParams"}},"id":5616,"nodeType":"ArrayTypeName","src":"4840:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_storage_$dyn_storage_ptr","typeString":"struct IColateralContract.SwapParams[]"}},"visibility":"internal"}],"src":"4833:45:23"},"returnParameters":{"id":5623,"nodeType":"ParameterList","parameters":[],"src":"4920:0:23"},"scope":5976,"src":"4809:1461:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6091],"body":{"id":5824,"nodeType":"Block","src":"6413:247:23","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":5810,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"6528:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5812,"indexExpression":{"id":5811,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"6541:12:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6528:26:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5809,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"6521:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3150_$","typeString":"type(contract IERC20)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6521:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"id":5814,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"6557:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5815,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"6580:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5806,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6498:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$3562_$","typeString":"type(library SafeERC20)"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6508:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3219,"src":"6498:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:90:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5817,"nodeType":"ExpressionStatement","src":"6498:90:23"},{"eventCall":{"arguments":[{"id":5819,"name":"withdrawWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"6609:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5820,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"6632:12:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5821,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"6646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5818,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"6600:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5823,"nodeType":"EmitStatement","src":"6595:59:23"}]},"functionSelector":"dc048cf2","id":5825,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5801,"name":"LENDER_LIQ_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"6383:15:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5802,"kind":"modifierInvocation","modifierName":{"id":5800,"name":"onlyRole","nameLocations":["6374:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"6374:8:23"},"nodeType":"ModifierInvocation","src":"6374:25:23"},{"id":5804,"kind":"modifierInvocation","modifierName":{"id":5803,"name":"nonReentrant","nameLocations":["6400:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"6400:12:23"},"nodeType":"ModifierInvocation","src":"6400:12:23"}],"name":"withdraw","nameLocation":"6285:8:23","nodeType":"FunctionDefinition","overrides":{"id":5799,"nodeType":"OverrideSpecifier","overrides":[],"src":"6365:8:23"},"parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"_amount","nameLocation":"6308:7:23","nodeType":"VariableDeclaration","scope":5825,"src":"6300:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"6300:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"6338:12:23","nodeType":"VariableDeclaration","scope":5825,"src":"6322:28:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5796,"name":"string","nodeType":"ElementaryTypeName","src":"6322:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6293:62:23"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[],"src":"6413:0:23"},"scope":5976,"src":"6276:384:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6098],"body":{"id":5850,"nodeType":"Block","src":"6752:153:23","statements":[{"assignments":[5835],"declarations":[{"constant":false,"id":5835,"mutability":"mutable","name":"token","nameLocation":"6813:5:23","nodeType":"VariableDeclaration","scope":5850,"src":"6806:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},"typeName":{"id":5834,"nodeType":"UserDefinedTypeName","pathNode":{"id":5833,"name":"IERC20","nameLocations":["6806:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"6806:6:23"},"referencedDeclaration":3150,"src":"6806:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"visibility":"internal"}],"id":5841,"initialValue":{"arguments":[{"baseExpression":{"id":5837,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"6828:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5839,"indexExpression":{"id":5838,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"6841:12:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6828:26:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5836,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"6821:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3150_$","typeString":"type(contract IERC20)"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6821:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"6806:49:23"},{"expression":{"arguments":[{"arguments":[{"id":5846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6893:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}],"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6885:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5844,"name":"address","nodeType":"ElementaryTypeName","src":"6885:7:23","typeDescriptions":{}}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6885:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5842,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"6869:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6875:9:23","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"6869:15:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6869:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5832,"id":5849,"nodeType":"Return","src":"6862:37:23"}]},"functionSelector":"35ee5f87","id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"6675:9:23","nodeType":"FunctionDefinition","overrides":{"id":5829,"nodeType":"OverrideSpecifier","overrides":[],"src":"6725:8:23"},"parameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"6699:12:23","nodeType":"VariableDeclaration","scope":5851,"src":"6685:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5826,"name":"string","nodeType":"ElementaryTypeName","src":"6685:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6684:28:23"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"6743:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6743:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6742:9:23"},"scope":5976,"src":"6666:239:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[6111],"body":{"id":5913,"nodeType":"Block","src":"6984:267:23","statements":[{"assignments":[5862],"declarations":[{"constant":false,"id":5862,"mutability":"mutable","name":"balances","nameLocation":"7008:8:23","nodeType":"VariableDeclaration","scope":5913,"src":"6991:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"6991:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ArrayTypeName","src":"6991:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5868,"initialValue":{"arguments":[{"hexValue":"35","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7019:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5864,"nodeType":"ArrayTypeName","src":"7023:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6991:44:23"},{"expression":{"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5869,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7042:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5871,"indexExpression":{"hexValue":"30","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7051:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7042:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":5874,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7064:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ColateralContract_$5976","typeString":"contract ColateralContract"}],"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7056:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5872,"name":"address","nodeType":"ElementaryTypeName","src":"7056:7:23","typeDescriptions":{}}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7056:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7070:7:23","memberName":"balance","nodeType":"MemberAccess","src":"7056:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5878,"nodeType":"ExpressionStatement","src":"7042:35:23"},{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5879,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7084:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5881,"indexExpression":{"hexValue":"31","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7093:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7084:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5883,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"7108:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5882,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"7098:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) view returns (uint256)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7098:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7084:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5886,"nodeType":"ExpressionStatement","src":"7084:29:23"},{"expression":{"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5887,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7120:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5889,"indexExpression":{"hexValue":"32","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7129:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7120:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5891,"name":"USDT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"7144:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5890,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"7134:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) view returns (uint256)"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7134:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7120:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5894,"nodeType":"ExpressionStatement","src":"7120:29:23"},{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5895,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7156:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5897,"indexExpression":{"hexValue":"33","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7165:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7156:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5899,"name":"USDM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"7180:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5898,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"7170:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) view returns (uint256)"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7170:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7156:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5902,"nodeType":"ExpressionStatement","src":"7156:29:23"},{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5903,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7192:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5905,"indexExpression":{"hexValue":"34","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7201:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7192:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5907,"name":"WBTC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"7216:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5906,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"7206:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory) view returns (uint256)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7206:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7192:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5910,"nodeType":"ExpressionStatement","src":"7192:29:23"},{"expression":{"id":5911,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"7237:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5857,"id":5912,"nodeType":"Return","src":"7230:15:23"}]},"functionSelector":"00113e08","id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"getBalances","nameLocation":"6920:11:23","nodeType":"FunctionDefinition","overrides":{"id":5853,"nodeType":"OverrideSpecifier","overrides":[],"src":"6948:8:23"},"parameters":{"id":5852,"nodeType":"ParameterList","parameters":[],"src":"6931:2:23"},"returnParameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5914,"src":"6966:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"6966:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5855,"nodeType":"ArrayTypeName","src":"6966:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6965:18:23"},"scope":5976,"src":"6911:340:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6105],"body":{"id":5947,"nodeType":"Block","src":"7389:253:23","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":5931,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"7502:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":5933,"indexExpression":{"id":5932,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"7515:12:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7502:26:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5930,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"7495:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3150_$","typeString":"type(contract IERC20)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7495:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"}},{"id":5935,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"7531:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5936,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"7552:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3150","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5927,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"7472:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$3562_$","typeString":"type(library SafeERC20)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7482:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3219,"src":"7472:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3150_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7472:88:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"ExpressionStatement","src":"7472:88:23"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5940,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"7579:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7579:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5942,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"7593:12:23","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":5943,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"7607:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5944,"name":"rescueWalletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"7616:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5939,"name":"Rescue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"7572:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,string memory,uint256,address)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"EmitStatement","src":"7567:69:23"}]},"functionSelector":"0828c404","id":5948,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5922,"name":"RESCUER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"7362:12:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5923,"kind":"modifierInvocation","modifierName":{"id":5921,"name":"onlyRole","nameLocations":["7353:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":198,"src":"7353:8:23"},"nodeType":"ModifierInvocation","src":"7353:22:23"},{"id":5925,"kind":"modifierInvocation","modifierName":{"id":5924,"name":"nonReentrant","nameLocations":["7376:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"7376:12:23"},"nodeType":"ModifierInvocation","src":"7376:12:23"}],"name":"rescue","nameLocation":"7266:6:23","nodeType":"FunctionDefinition","overrides":{"id":5920,"nodeType":"OverrideSpecifier","overrides":[],"src":"7344:8:23"},"parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"_amount","nameLocation":"7287:7:23","nodeType":"VariableDeclaration","scope":5948,"src":"7279:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"7279:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5918,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"7317:12:23","nodeType":"VariableDeclaration","scope":5948,"src":"7301:28:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5917,"name":"string","nodeType":"ElementaryTypeName","src":"7301:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7272:62:23"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[],"src":"7389:0:23"},"scope":5976,"src":"7257:385:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6116],"body":{"id":5959,"nodeType":"Block","src":"7859:38:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5955,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"7873:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7883:6:23","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2733,"src":"7873:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2664_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer) view returns (uint256)"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7873:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5954,"id":5958,"nodeType":"Return","src":"7866:25:23"}]},"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"7648:134:23","text":" @dev Returns the number `roles`. Can be used\n together with {getRoleByIndex} to enumerate all bearers of a role."},"functionSelector":"83d33319","id":5960,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleCount","nameLocation":"7795:12:23","nodeType":"FunctionDefinition","overrides":{"id":5951,"nodeType":"OverrideSpecifier","overrides":[],"src":"7832:8:23"},"parameters":{"id":5950,"nodeType":"ParameterList","parameters":[],"src":"7807:2:23"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5960,"src":"7850:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"7850:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7849:9:23"},"scope":5976,"src":"7786:111:23","stateMutability":"view","virtual":true,"visibility":"external"},{"baseFunctions":[6123],"body":{"id":5974,"nodeType":"Block","src":"8518:39:23","statements":[{"expression":{"arguments":[{"id":5971,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"8545:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5969,"name":"_rolesSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"8532:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2664_storage","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage ref"}},"id":5970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8542:2:23","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2751,"src":"8532:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2664_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$2664_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8532:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5968,"id":5973,"nodeType":"Return","src":"8525:26:23"}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"7903:526:23","text":" @dev Returns one of the `roles`. `index` must be a\n value between 0 and {getRoleCount}, non-inclusive.\n Role are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"25acc985","id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleByIndex","nameLocation":"8442:14:23","nodeType":"FunctionDefinition","overrides":{"id":5965,"nodeType":"OverrideSpecifier","overrides":[],"src":"8491:8:23"},"parameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"index","nameLocation":"8462:5:23","nodeType":"VariableDeclaration","scope":5975,"src":"8457:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint","nodeType":"ElementaryTypeName","src":"8457:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8456:12:23"},"returnParameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"8509:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8509:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8508:9:23"},"scope":5976,"src":"8433:124:23","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":5977,"src":"526:8034:23","usedErrors":[]}],"src":"33:8529:23"},"id":23},"contracts/IColateralContract.sol":{"ast":{"absolutePath":"contracts/IColateralContract.sol","exportedSymbols":{"IColateralContract":[6131],"ISwapRouter":[5206],"IUniswapV3SwapCallback":[5106]},"id":6132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":5978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6132,"sourceUnit":5207,"src":"33:68:24","symbolAliases":[],"unitAlias":""},{"id":5979,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"105:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IColateralContract","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6131,"linearizedBaseContracts":[6131],"name":"IColateralContract","nameLocation":"142:18:24","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"b01aaefdfa9c6d0ab739180ad32400c96c77b263f5e065d3af1002f36219cfeb","id":6007,"name":"Initialize","nameLocation":"230:10:24","nodeType":"EventDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"255:6:24","nodeType":"VariableDeclaration","scope":6007,"src":"247:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5980,"name":"address","nodeType":"ElementaryTypeName","src":"247:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5983,"indexed":false,"mutability":"mutable","name":"usdcTokenAddress","nameLocation":"276:16:24","nodeType":"VariableDeclaration","scope":6007,"src":"268:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5982,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5985,"indexed":false,"mutability":"mutable","name":"usdtTokenAddress","nameLocation":"307:16:24","nodeType":"VariableDeclaration","scope":6007,"src":"299:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5984,"name":"address","nodeType":"ElementaryTypeName","src":"299:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5987,"indexed":false,"mutability":"mutable","name":"usdmTokenAddress","nameLocation":"338:16:24","nodeType":"VariableDeclaration","scope":6007,"src":"330:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5986,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5989,"indexed":false,"mutability":"mutable","name":"wbtcTokenAddress","nameLocation":"369:16:24","nodeType":"VariableDeclaration","scope":6007,"src":"361:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5988,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5993,"indexed":false,"mutability":"mutable","name":"admins","nameLocation":"403:6:24","nodeType":"VariableDeclaration","scope":6007,"src":"392:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_memory_ptr","typeString":"address[3]"},"typeName":{"baseType":{"id":5990,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5992,"length":{"hexValue":"33","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"400:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"392:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$3_storage_ptr","typeString":"address[3]"}},"visibility":"internal"},{"constant":false,"id":5995,"indexed":false,"mutability":"mutable","name":"rescueWalletAddress","nameLocation":"424:19:24","nodeType":"VariableDeclaration","scope":6007,"src":"416:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5994,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5997,"indexed":false,"mutability":"mutable","name":"withdrawWalletAddress","nameLocation":"458:21:24","nodeType":"VariableDeclaration","scope":6007,"src":"450:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5996,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5999,"indexed":false,"mutability":"mutable","name":"firstlenderLiq","nameLocation":"494:14:24","nodeType":"VariableDeclaration","scope":6007,"src":"486:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5998,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6001,"indexed":false,"mutability":"mutable","name":"secondLenderLiq","nameLocation":"523:15:24","nodeType":"VariableDeclaration","scope":6007,"src":"515:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6003,"indexed":false,"mutability":"mutable","name":"swapRouterAddress","nameLocation":"553:17:24","nodeType":"VariableDeclaration","scope":6007,"src":"545:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6002,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6005,"indexed":false,"mutability":"mutable","name":"swapper","nameLocation":"585:7:24","nodeType":"VariableDeclaration","scope":6007,"src":"577:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6004,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"240:357:24"},"src":"224:374:24"},{"anonymous":false,"eventSelector":"3cd72d6f5ed03c1310376e5a3951d7ee3a4813b66f9be0333ab32cf0d25cb501","id":6017,"name":"TokenAddressChange","nameLocation":"652:18:24","nodeType":"EventDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"685:6:24","nodeType":"VariableDeclaration","scope":6017,"src":"677:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6008,"name":"address","nodeType":"ElementaryTypeName","src":"677:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6011,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"705:5:24","nodeType":"VariableDeclaration","scope":6017,"src":"698:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6010,"name":"string","nodeType":"ElementaryTypeName","src":"698:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6013,"indexed":false,"mutability":"mutable","name":"oldTokenAddress","nameLocation":"725:15:24","nodeType":"VariableDeclaration","scope":6017,"src":"717:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6015,"indexed":false,"mutability":"mutable","name":"newTokenAddress","nameLocation":"755:15:24","nodeType":"VariableDeclaration","scope":6017,"src":"747:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6014,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"670:105:24"},"src":"646:130:24"},{"anonymous":false,"eventSelector":"0f2e8bfc06e6af8616ccee187022bf26cdb3a9e3d68cb7b17a2428a859cfc825","id":6027,"name":"WithdrawalLimitChange","nameLocation":"833:21:24","nodeType":"EventDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"869:6:24","nodeType":"VariableDeclaration","scope":6027,"src":"861:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6018,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6021,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"889:5:24","nodeType":"VariableDeclaration","scope":6027,"src":"882:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6020,"name":"string","nodeType":"ElementaryTypeName","src":"882:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6023,"indexed":false,"mutability":"mutable","name":"oldWithdrawalLimit","nameLocation":"909:18:24","nodeType":"VariableDeclaration","scope":6027,"src":"901:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"indexed":false,"mutability":"mutable","name":"newWithdrawalLimit","nameLocation":"942:18:24","nodeType":"VariableDeclaration","scope":6027,"src":"934:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"934:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:111:24"},"src":"827:139:24"},{"anonymous":false,"eventSelector":"901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef","id":6035,"name":"Withdraw","nameLocation":"1004:8:24","nodeType":"EventDefinition","parameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1021:6:24","nodeType":"VariableDeclaration","scope":6035,"src":"1013:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6028,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6031,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1036:5:24","nodeType":"VariableDeclaration","scope":6035,"src":"1029:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6030,"name":"string","nodeType":"ElementaryTypeName","src":"1029:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6033,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1051:6:24","nodeType":"VariableDeclaration","scope":6035,"src":"1043:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1012:46:24"},"src":"998:61:24"},{"anonymous":false,"eventSelector":"22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa","id":6045,"name":"Rescue","nameLocation":"1095:6:24","nodeType":"EventDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1110:6:24","nodeType":"VariableDeclaration","scope":6045,"src":"1102:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6036,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6039,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1125:5:24","nodeType":"VariableDeclaration","scope":6045,"src":"1118:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6038,"name":"string","nodeType":"ElementaryTypeName","src":"1118:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6041,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1140:6:24","nodeType":"VariableDeclaration","scope":6045,"src":"1132:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1132:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6043,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1156:2:24","nodeType":"VariableDeclaration","scope":6045,"src":"1148:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6042,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:58:24"},"src":"1089:71:24"},{"anonymous":false,"eventSelector":"fa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe235","id":6055,"name":"Swap","nameLocation":"1202:4:24","nodeType":"EventDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"1215:7:24","nodeType":"VariableDeclaration","scope":6055,"src":"1207:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6049,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"1232:8:24","nodeType":"VariableDeclaration","scope":6055,"src":"1224:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6048,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6051,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1250:8:24","nodeType":"VariableDeclaration","scope":6055,"src":"1242:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1242:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6053,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1268:9:24","nodeType":"VariableDeclaration","scope":6055,"src":"1260:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:72:24"},"src":"1196:83:24"},{"anonymous":false,"eventSelector":"48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb91","id":6061,"name":"SwapError","nameLocation":"1319:9:24","nodeType":"EventDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"1337:7:24","nodeType":"VariableDeclaration","scope":6061,"src":"1329:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6059,"indexed":false,"mutability":"mutable","name":"msg","nameLocation":"1353:3:24","nodeType":"VariableDeclaration","scope":6061,"src":"1346:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6058,"name":"string","nodeType":"ElementaryTypeName","src":"1346:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1328:29:24"},"src":"1313:45:24"},{"canonicalName":"IColateralContract.SwapParams","id":6069,"members":[{"constant":false,"id":6064,"mutability":"mutable","name":"params","nameLocation":"1418:6:24","nodeType":"VariableDeclaration","scope":6069,"src":"1389:35:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":6063,"nodeType":"UserDefinedTypeName","pathNode":{"id":6062,"name":"ISwapRouter.ExactInputParams","nameLocations":["1389:11:24","1401:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":5150,"src":"1389:28:24"},"referencedDeclaration":5150,"src":"1389:28:24","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$5150_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"},{"constant":false,"id":6066,"mutability":"mutable","name":"tokenIn","nameLocation":"1439:7:24","nodeType":"VariableDeclaration","scope":6069,"src":"1431:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6065,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"tokenOut","nameLocation":"1461:8:24","nodeType":"VariableDeclaration","scope":6069,"src":"1453:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6067,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SwapParams","nameLocation":"1371:10:24","nodeType":"StructDefinition","scope":6131,"src":"1364:111:24","visibility":"public"},{"functionSelector":"54fd4d50","id":6074,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"1490:7:24","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[],"src":"1497:2:24"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6074,"src":"1523:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6071,"name":"string","nodeType":"ElementaryTypeName","src":"1523:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1522:15:24"},"scope":6131,"src":"1481:57:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"212f6039","id":6079,"implemented":false,"kind":"function","modifiers":[],"name":"setWithdrawWalletAddress","nameLocation":"1553:24:24","nodeType":"FunctionDefinition","parameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"_withdrawWalletAddress","nameLocation":"1586:22:24","nodeType":"VariableDeclaration","scope":6079,"src":"1578:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6075,"name":"address","nodeType":"ElementaryTypeName","src":"1578:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1577:32:24"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[],"src":"1618:0:24"},"scope":6131,"src":"1544:75:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d00411c9","id":6084,"implemented":false,"kind":"function","modifiers":[],"name":"setRescueWalletAddress","nameLocation":"1634:22:24","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"_rescueWalletAddress","nameLocation":"1665:20:24","nodeType":"VariableDeclaration","scope":6084,"src":"1657:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6080,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:30:24"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[],"src":"1695:0:24"},"scope":6131,"src":"1625:71:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc048cf2","id":6091,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1711:8:24","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"_amount","nameLocation":"1728:7:24","nodeType":"VariableDeclaration","scope":6091,"src":"1720:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6088,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1753:12:24","nodeType":"VariableDeclaration","scope":6091,"src":"1737:28:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6087,"name":"string","nodeType":"ElementaryTypeName","src":"1737:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1719:47:24"},"returnParameters":{"id":6090,"nodeType":"ParameterList","parameters":[],"src":"1775:0:24"},"scope":6131,"src":"1702:74:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35ee5f87","id":6098,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1791:9:24","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1815:12:24","nodeType":"VariableDeclaration","scope":6098,"src":"1801:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6092,"name":"string","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1800:28:24"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6098,"src":"1852:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:9:24"},"scope":6131,"src":"1782:79:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0828c404","id":6105,"implemented":false,"kind":"function","modifiers":[],"name":"rescue","nameLocation":"1876:6:24","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"_amount","nameLocation":"1891:7:24","nodeType":"VariableDeclaration","scope":6105,"src":"1883:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6102,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"1916:12:24","nodeType":"VariableDeclaration","scope":6105,"src":"1900:28:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6101,"name":"string","nodeType":"ElementaryTypeName","src":"1900:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1882:47:24"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[],"src":"1938:0:24"},"scope":6131,"src":"1867:72:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00113e08","id":6111,"implemented":false,"kind":"function","modifiers":[],"name":"getBalances","nameLocation":"1954:11:24","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[],"src":"1965:2:24"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6111,"src":"1991:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6108,"nodeType":"ArrayTypeName","src":"1991:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1990:18:24"},"scope":6131,"src":"1945:64:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"83d33319","id":6116,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleCount","nameLocation":"2024:12:24","nodeType":"FunctionDefinition","parameters":{"id":6112,"nodeType":"ParameterList","parameters":[],"src":"2036:2:24"},"returnParameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6116,"src":"2062:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:9:24"},"scope":6131,"src":"2015:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"25acc985","id":6123,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleByIndex","nameLocation":"2086:14:24","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"index","nameLocation":"2106:5:24","nodeType":"VariableDeclaration","scope":6123,"src":"2101:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint","nodeType":"ElementaryTypeName","src":"2101:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2100:12:24"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6123,"src":"2136:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2136:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2135:9:24"},"scope":6131,"src":"2077:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2ffe9942","id":6130,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactInputs","nameLocation":"2160:15:24","nodeType":"FunctionDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"swapsParams","nameLocation":"2198:11:24","nodeType":"VariableDeclaration","scope":6130,"src":"2176:33:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IColateralContract.SwapParams[]"},"typeName":{"baseType":{"id":6125,"nodeType":"UserDefinedTypeName","pathNode":{"id":6124,"name":"SwapParams","nameLocations":["2176:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":6069,"src":"2176:10:24"},"referencedDeclaration":6069,"src":"2176:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$6069_storage_ptr","typeString":"struct IColateralContract.SwapParams"}},"id":6126,"nodeType":"ArrayTypeName","src":"2176:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapParams_$6069_storage_$dyn_storage_ptr","typeString":"struct IColateralContract.SwapParams[]"}},"visibility":"internal"}],"src":"2175:35:24"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[],"src":"2219:0:24"},"scope":6131,"src":"2151:69:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6132,"src":"132:2091:24","usedErrors":[]}],"src":"33:2192:24"},"id":24}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol":{"IAccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":\"IAccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016688518c2e1cd278a1ffbfa2b8d9880d79d793cd012b92477f9361afdd10b4164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH9 0x8518C2E1CD278A1FFB STATICCALL 0x2B DUP14 SWAP9 DUP1 0xD7 SWAP14 PUSH26 0x3CD012B92477F9361AFDD10B4164736F6C634300081200330000 ","sourceMap":"1329:11641:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016688518c2e1cd278a1ffbfa2b8d9880d79d793cd012b92477f9361afdd10b4164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH9 0x8518C2E1CD278A1FFB STATICCALL 0x2B DUP14 SWAP9 DUP1 0xD7 SWAP14 PUSH26 0x3CD012B92477F9361AFDD10B4164736F6C634300081200330000 ","sourceMap":"1329:11641:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ","sourceMap":"701:6234:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200406ab4a7d6b68dbe9045a16bb430d584a65da6f266f01b470d5b0597162ea7864736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MOD 0xAB 0x4A PUSH30 0x6B68DBE9045A16BB430D584A65DA6F266F01B470D5B0597162EA7864736F PUSH13 0x63430008120033000000000000 ","sourceMap":"701:6234:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ","sourceMap":"202:12582:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ","sourceMap":"215:1047:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/ColateralContract.sol":{"ColateralContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"usdcTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"usdtTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"usdmTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"wbtcTokenAddress","type":"address"},{"indexed":false,"internalType":"address[3]","name":"admins","type":"address[3]"},{"indexed":false,"internalType":"address","name":"rescueWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"firstlenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"secondLenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"swapRouterAddress","type":"address"},{"indexed":false,"internalType":"address","name":"swapper","type":"address"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Rescue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"SwapError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"address","name":"oldTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newTokenAddress","type":"address"}],"name":"TokenAddressChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"oldWithdrawalLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newWithdrawalLimit","type":"uint256"}],"name":"WithdrawalLimitChange","type":"event"},{"inputs":[],"name":"ACONCAGUA_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LENDER_LIQ_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESCUER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAPPER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDM","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDT","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WBTC","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleByIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRoleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdcTokenAddress","type":"address"},{"internalType":"address","name":"_usdtTokenAddress","type":"address"},{"internalType":"address","name":"_usdmTokenAddress","type":"address"},{"internalType":"address","name":"_wbtcTokenAddress","type":"address"},{"internalType":"address[3]","name":"_aconcagua","type":"address[3]"},{"internalType":"address","name":"_rescueWalletAddress","type":"address"},{"internalType":"address","name":"_withdrawWalletAddress","type":"address"},{"internalType":"address","name":"_firstLenderLiq","type":"address"},{"internalType":"address","name":"_secondLenderLiq","type":"address"},{"internalType":"address","name":"_swapRouterAddress","type":"address"},{"internalType":"address","name":"_swapper","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rescueWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rescueWalletAddress","type":"address"}],"name":"setRescueWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawWalletAddress","type":"address"}],"name":"setWithdrawWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"}],"internalType":"struct IColateralContract.SwapParams[]","name":"swapsParams","type":"tuple[]"}],"name":"swapExactInputs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawWalletAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5286":{"entryPoint":null,"id":5286,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_728":{"entryPoint":40,"id":728,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:25","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:25"},"nodeType":"YulFunctionCall","src":"113:19:25"},"nodeType":"YulExpressionStatement","src":"113:19:25"},{"nodeType":"YulAssignment","src":"141:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:25"},"nodeType":"YulFunctionCall","src":"156:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:25","type":""}],"src":"7:169:25"},{"body":{"nodeType":"YulBlock","src":"288:120:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:25"},"nodeType":"YulFunctionCall","src":"306:14:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:25","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:25"},"nodeType":"YulFunctionCall","src":"299:58:25"},"nodeType":"YulExpressionStatement","src":"299:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:25"},"nodeType":"YulFunctionCall","src":"374:15:25"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:25","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:25"},"nodeType":"YulFunctionCall","src":"367:34:25"},"nodeType":"YulExpressionStatement","src":"367:34:25"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:25","type":""}],"src":"182:226:25"},{"body":{"nodeType":"YulBlock","src":"560:220:25","statements":[{"nodeType":"YulAssignment","src":"570:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:25","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:25"},"nodeType":"YulFunctionCall","src":"577:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:25"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:25"},"nodeType":"YulFunctionCall","src":"653:93:25"},"nodeType":"YulExpressionStatement","src":"653:93:25"},{"nodeType":"YulAssignment","src":"755:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:25"},"nodeType":"YulFunctionCall","src":"762:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:25"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:25","type":""}],"src":"414:366:25"},{"body":{"nodeType":"YulBlock","src":"957:248:25","statements":[{"nodeType":"YulAssignment","src":"967:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:25"},"nodeType":"YulFunctionCall","src":"975:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:25"},"nodeType":"YulFunctionCall","src":"1010:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:25"},"nodeType":"YulFunctionCall","src":"1029:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:25"},"nodeType":"YulFunctionCall","src":"1003:47:25"},"nodeType":"YulExpressionStatement","src":"1003:47:25"},{"nodeType":"YulAssignment","src":"1059:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:25"},"nodeType":"YulFunctionCall","src":"1067:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:25","type":""}],"src":"786:419:25"},{"body":{"nodeType":"YulBlock","src":"1254:43:25","statements":[{"nodeType":"YulAssignment","src":"1264:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:25"},"nodeType":"YulFunctionCall","src":"1275:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:25","type":""}],"src":"1211:86:25"},{"body":{"nodeType":"YulBlock","src":"1364:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:25"},"nodeType":"YulFunctionCall","src":"1386:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:25"},"nodeType":"YulFunctionCall","src":"1374:35:25"},"nodeType":"YulExpressionStatement","src":"1374:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:25","type":""}],"src":"1303:112:25"},{"body":{"nodeType":"YulBlock","src":"1515:120:25","statements":[{"nodeType":"YulAssignment","src":"1525:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:25"},"nodeType":"YulFunctionCall","src":"1533:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:25"},"nodeType":"YulFunctionCall","src":"1610:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:25"},"nodeType":"YulFunctionCall","src":"1561:67:25"},"nodeType":"YulExpressionStatement","src":"1561:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:25","type":""}],"src":"1421:214:25"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b61522d80620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063713725441161010f578063c54e44eb116100a2578063dc048cf211610071578063dc048cf2146105bc578063df668eca146105d8578063e5df800a146105f6578063e63ab1e914610614576101ef565b8063c54e44eb14610536578063ca15c87314610554578063d00411c914610584578063d547741f146105a0576101ef565b806391d14854116100de57806391d14854146104ac578063a217fddf146104dc578063a9da3cf2146104fa578063b14ec10114610518576101ef565b8063713725441461042257806383d333191461044057806389a302711461045e5780639010d07c1461047c576101ef565b80632ffe99421161018757806336568abe1161015657806336568abe1461039a5780634dede3de146103b657806354fd4d50146103d45780636e30199f146103f2576101ef565b80632ffe99421461031457806332cc815d14610330578063334347b71461034e57806335ee5f871461036a576101ef565b8063212f6039116101c3578063212f60391461027c578063248a9ca31461029857806325acc985146102c85780632f2ff15d146102f8576101ef565b8062113e08146101f457806301ffc9a7146102125780630828c4041461024257806315ac73581461025e575b600080fd5b6101fc610632565b6040516102099190613430565b60405180910390f35b61022c600480360381019061022791906134be565b610822565b6040516102399190613506565b60405180910390f35b61025c600480360381019061025791906135b2565b61089c565b005b6102666109b1565b6040516102739190613653565b60405180910390f35b6102966004803603810190610291919061369a565b6109d7565b005b6102b260048036038101906102ad91906136fd565b610ab5565b6040516102bf9190613739565b60405180910390f35b6102e260048036038101906102dd9190613754565b610ad5565b6040516102ef9190613739565b60405180910390f35b610312600480360381019061030d9190613781565b610af2565b005b61032e60048036038101906103299190613817565b610b13565b005b61033861139b565b6040516103459190613739565b60405180910390f35b61036860048036038101906103639190613886565b6113bf565b005b610384600480360381019061037f9190613abd565b611fb3565b6040516103919190613b15565b60405180910390f35b6103b460048036038101906103af9190613781565b612079565b005b6103be6120fc565b6040516103cb9190613baf565b60405180910390f35b6103dc612135565b6040516103e99190613baf565b60405180910390f35b61040c60048036038101906104079190613abd565b612172565b6040516104199190613653565b60405180910390f35b61042a6121bb565b6040516104379190613739565b60405180910390f35b6104486121df565b6040516104559190613b15565b60405180910390f35b6104666121f0565b6040516104739190613baf565b60405180910390f35b61049660048036038101906104919190613bd1565b612229565b6040516104a39190613653565b60405180910390f35b6104c660048036038101906104c19190613781565b612258565b6040516104d39190613506565b60405180910390f35b6104e46122c3565b6040516104f19190613739565b60405180910390f35b6105026122ca565b60405161050f9190613baf565b60405180910390f35b610520612303565b60405161052d9190613653565b60405180910390f35b61053e612329565b60405161054b9190613baf565b60405180910390f35b61056e600480360381019061056991906136fd565b612362565b60405161057b9190613b15565b60405180910390f35b61059e6004803603810190610599919061369a565b612386565b005b6105ba60048036038101906105b59190613781565b612464565b005b6105d660048036038101906105d191906135b2565b612485565b005b6105e0612591565b6040516105ed9190613739565b60405180910390f35b6105fe6125b5565b60405161060b9190613739565b60405180910390f35b61061c6125d9565b6040516106299190613739565b60405180910390f35b60606000600567ffffffffffffffff81111561065157610650613992565b5b60405190808252806020026020018201604052801561067f5781602001602082028036833780820191505090505b509050478160008151811061069757610696613c11565b5b6020026020010181815250506106e16040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250611fb3565b816001815181106106f5576106f4613c11565b5b60200260200101818152505061073f6040518060400160405280600481526020017f5553445400000000000000000000000000000000000000000000000000000000815250611fb3565b8160028151811061075357610752613c11565b5b60200260200101818152505061079d6040518060400160405280600481526020017f5553444d00000000000000000000000000000000000000000000000000000000815250611fb3565b816003815181106107b1576107b0613c11565b5b6020026020010181815250506107fb6040518060400160405280600481526020017f5742544300000000000000000000000000000000000000000000000000000000815250611fb3565b8160048151811061080f5761080e613c11565b5b6020026020010181815250508091505090565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108955750610894826125fd565b5b9050919050565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f236727076108c681612677565b6108ce61268b565b61093b60fd84846040516108e3929190613c70565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866126da565b7f22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa610964612760565b84848760fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161099b959493929190613cb6565b60405180910390a16109ab612768565b50505050565b60fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2610a0181612677565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6790613d50565b60405180910390fd5b8160ff60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600060656000838152602001908152602001600020600101549050919050565b6000610aeb8260fb61277290919063ffffffff16565b9050919050565b610afb82610ab5565b610b0481612677565b610b0e8383612789565b505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6610b3d81612677565b60005b838390508110156113955736848483818110610b5f57610b5e613c11565b5b9050602002810190610b719190613d75565b90503073ffffffffffffffffffffffffffffffffffffffff16818060000190610b9a9190613d9d565b6020016020810190610bac919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990613e11565b60405180910390fd5b6000818060000190610c149190613d9d565b6080013511610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90613e7d565b60405180910390fd5b60fd604051610c6690613ee9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610cbe919061369a565b73ffffffffffffffffffffffffffffffffffffffff161480610d59575060fd604051610ce990613f4a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610d41919061369a565b73ffffffffffffffffffffffffffffffffffffffff16145b80610ddd575060fd604051610d6d90613fab565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610dc5919061369a565b73ffffffffffffffffffffffffffffffffffffffff16145b610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e139061400c565b60405180910390fd5b6000816020016020810190610e31919061369a565b90506000828060000190610e459190613d9d565b60600135118015610ee257508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e8a9190613653565b602060405180830381865afa158015610ea7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecb9190614041565b828060000190610edb9190613d9d565b6060013511155b610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f18906140ba565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848060000190610f719190613d9d565b606001356040518363ffffffff1660e01b8152600401610f929291906140da565b6020604051808303816000875af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd5919061412f565b611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100b906141a8565b60405180910390fd5b61010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d598380600001906110639190613d9d565b6040518263ffffffff1660e01b815260040161107f9190614355565b6020604051808303816000875af19250505080156110bb57506040513d601f19601f820116820180604052508101906110b89190614041565b60015b611229576110c7614384565b806308c379a00361121857506110db6143a6565b806110e6575061121a565b7f48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb9183602001602081019061111a919061369a565b82604051611129929190614436565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b81526004016111909291906144ab565b6020604051808303816000875af11580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d3919061412f565b611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120990614520565b60405180910390fd5b50611224565b505b3d6000803e3d6000fd5b611380565b7ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe23583602001602081019061125d919061369a565b846040016020810190611270919061369a565b8580600001906112809190613d9d565b60600135846040516112959493929190614540565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b81526004016112fc9291906144ab565b6020604051808303816000875af115801561131b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133f919061412f565b61137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137590614520565b60405180910390fd5b505b5050808061138d906145b4565b915050610b40565b50505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a681565b60008060019054906101000a900460ff161590508080156113f05750600160008054906101000a900460ff1660ff16105b8061141d57506113ff306127bd565b15801561141c5750600160008054906101000a900460ff1660ff16145b5b61145c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114539061466e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611499576001600060016101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff16886000600381106114c5576114c4613c11565b5b6020020160208101906114d8919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614158061154e5750600073ffffffffffffffffffffffffffffffffffffffff168860016003811061152257611521613c11565b5b602002016020810190611535919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614155b806115ac5750600073ffffffffffffffffffffffffffffffffffffffff16886002600381106115805761157f613c11565b5b602002016020810190611593919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614155b6115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e2906146da565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160361165a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165190614746565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036116c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c0906147b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f9061481e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179e9061488a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180d906148f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187c90614962565b60405180910390fd5b61188d6127e0565b611895612831565b8b60fd6040518060400160405280600481526020017f55534443000000000000000000000000000000000000000000000000000000008152506040516118db91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a60fd6040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525060405161196d91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960fd6040518060400160405280600481526020017f5553444d000000000000000000000000000000000000000000000000000000008152506040516119ff91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860fd6040518060400160405280600481526020017f5742544300000000000000000000000000000000000000000000000000000000815250604051611a9191906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560ff60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660fe60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261010060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd57ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e260fb61288a90919063ffffffff16565b50611c0a7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a660fb61288a90919063ffffffff16565b50611c3f7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270760fb61288a90919063ffffffff16565b50611c747fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc660fb61288a90919063ffffffff16565b50611cc57ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600060038110611cad57611cac613c11565b5b602002016020810190611cc0919061369a565b612789565b611d157ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600160038110611cfd57611cfc613c11565b5b602002016020810190611d10919061369a565b612789565b611d657ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600260038110611d4d57611d4c613c11565b5b602002016020810190611d60919061369a565b612789565b611d8f7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a686612789565b611db97ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a685612789565b611de37fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270786612789565b611e0d7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270785612789565b611e377fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc683612789565b611e617ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2806128a1565b611e8b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6806128a1565b611eb57fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707806128a1565b611eff7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc67ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e26128a1565b7fb01aaefdfa9c6d0ab739180ad32400c96c77b263f5e065d3af1002f36219cfeb338d8d8d8d8d8d8d8d8d8d8d604051611f449c9b9a99989796959493929190614a6e565b60405180910390a18015611fa55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611f9c9190614b72565b60405180910390a15b505050505050505050505050565b60008060fd83604051611fc691906149b3565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016120309190613653565b602060405180830381865afa15801561204d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120719190614041565b915050919050565b612081612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146120ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e590614bff565b60405180910390fd5b6120f882826128fd565b5050565b6040518060400160405280600481526020017f574254430000000000000000000000000000000000000000000000000000000081525081565b60606040518060400160405280600581526020017f312e312e30000000000000000000000000000000000000000000000000000000815250905090565b60fd818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270781565b60006121eb60fb612931565b905090565b6040518060400160405280600481526020017f555344430000000000000000000000000000000000000000000000000000000081525081565b6000612250826097600086815260200190815260200160002061294690919063ffffffff16565b905092915050565b60006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6040518060400160405280600481526020017f5553444d0000000000000000000000000000000000000000000000000000000081525081565b60ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081565b600061237f60976000848152602001908152602001600020612960565b9050919050565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e26123b081612677565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361241f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241690614c6b565b60405180910390fd5b8160fe60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61246d82610ab5565b61247681612677565b61248083836128fd565b505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a66124af81612677565b6124b761268b565b61252460fd84846040516124cc929190613c70565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866126da565b7f901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef60ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684848760405161257b9493929190614c8b565b60405180910390a161258b612768565b50505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e281565b7f539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c81565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612670575061266f82612975565b5b9050919050565b61268881612683612760565b6129df565b50565b600260c954036126d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c790614d17565b60405180910390fd5b600260c981905550565b61275b8363a9059cbb60e01b84846040516024016126f99291906140da565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a64565b505050565b600033905090565b600160c981905550565b60006127818360000183612b2c565b905092915050565b6127938282612b57565b6127b88160976000858152602001908152602001600020612c3890919063ffffffff16565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661282f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161282690614da9565b60405180910390fd5b565b600060019054906101000a900460ff16612880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287790614da9565b60405180910390fd5b600160c981905550565b60006128998360000183612c68565b905092915050565b60006128ac83610ab5565b90508160656000858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b6129078282612cd8565b61292c8160976000858152602001908152602001600020612dba90919063ffffffff16565b505050565b600061293f82600001612dea565b9050919050565b60006129558360000183612b2c565b60001c905092915050565b600061296e82600001612dea565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6129e98282612258565b612a60576129f681612dfb565b612a048360001c6020612e28565b604051602001612a15929190614e61565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a579190613baf565b60405180910390fd5b5050565b6000612ac6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166130649092919063ffffffff16565b9050600081511480612ae8575080806020019051810190612ae7919061412f565b5b612b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b1e90614f0d565b60405180910390fd5b505050565b6000826000018281548110612b4457612b43613c11565b5b9060005260206000200154905092915050565b612b618282612258565b612c345760016065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612bd9612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000612c60836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612c68565b905092915050565b6000612c74838361307c565b612ccd578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612cd2565b600090505b92915050565b612ce28282612258565b15612db65760006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612d5b612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000612de2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61309f565b905092915050565b600081600001805490509050919050565b6060612e218273ffffffffffffffffffffffffffffffffffffffff16601460ff16612e28565b9050919050565b606060006002836002612e3b9190614f2d565b612e459190614f6f565b67ffffffffffffffff811115612e5e57612e5d613992565b5b6040519080825280601f01601f191660200182016040528015612e905781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612ec857612ec7613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612f2c57612f2b613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612f6c9190614f2d565b612f769190614f6f565b90505b6001811115613016577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612fb857612fb7613c11565b5b1a60f81b828281518110612fcf57612fce613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061300f90614fa3565b9050612f79565b506000841461305a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305190615018565b60405180910390fd5b8091505092915050565b606061307384846000856131b3565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146131a75760006001826130d19190615038565b90506000600186600001805490506130e99190615038565b905081811461315857600086600001828154811061310a57613109613c11565b5b906000526020600020015490508087600001848154811061312e5761312d613c11565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061316c5761316b61506c565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506131ad565b60009150505b92915050565b6060824710156131f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131ef9061510d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516132219190615174565b60006040518083038185875af1925050503d806000811461325e576040519150601f19603f3d011682016040523d82523d6000602084013e613263565b606091505b509150915061327487838387613280565b92505050949350505050565b606083156132e25760008351036132da5761329a856132f5565b6132d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132d0906151d7565b60405180910390fd5b5b8290506132ed565b6132ec8383613318565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561332b5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161335f9190613baf565b60405180910390fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6133a781613394565b82525050565b60006133b9838361339e565b60208301905092915050565b6000602082019050919050565b60006133dd82613368565b6133e78185613373565b93506133f283613384565b8060005b8381101561342357815161340a88826133ad565b9750613415836133c5565b9250506001810190506133f6565b5085935050505092915050565b6000602082019050818103600083015261344a81846133d2565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61349b81613466565b81146134a657600080fd5b50565b6000813590506134b881613492565b92915050565b6000602082840312156134d4576134d361345c565b5b60006134e2848285016134a9565b91505092915050565b60008115159050919050565b613500816134eb565b82525050565b600060208201905061351b60008301846134f7565b92915050565b61352a81613394565b811461353557600080fd5b50565b60008135905061354781613521565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126135725761357161354d565b5b8235905067ffffffffffffffff81111561358f5761358e613552565b5b6020830191508360018202830111156135ab576135aa613557565b5b9250929050565b6000806000604084860312156135cb576135ca61345c565b5b60006135d986828701613538565b935050602084013567ffffffffffffffff8111156135fa576135f9613461565b5b6136068682870161355c565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061363d82613612565b9050919050565b61364d81613632565b82525050565b60006020820190506136686000830184613644565b92915050565b61367781613632565b811461368257600080fd5b50565b6000813590506136948161366e565b92915050565b6000602082840312156136b0576136af61345c565b5b60006136be84828501613685565b91505092915050565b6000819050919050565b6136da816136c7565b81146136e557600080fd5b50565b6000813590506136f7816136d1565b92915050565b6000602082840312156137135761371261345c565b5b6000613721848285016136e8565b91505092915050565b613733816136c7565b82525050565b600060208201905061374e600083018461372a565b92915050565b60006020828403121561376a5761376961345c565b5b600061377884828501613538565b91505092915050565b600080604083850312156137985761379761345c565b5b60006137a6858286016136e8565b92505060206137b785828601613685565b9150509250929050565b60008083601f8401126137d7576137d661354d565b5b8235905067ffffffffffffffff8111156137f4576137f3613552565b5b6020830191508360208202830111156138105761380f613557565b5b9250929050565b6000806020838503121561382e5761382d61345c565b5b600083013567ffffffffffffffff81111561384c5761384b613461565b5b613858858286016137c1565b92509250509250929050565b6000819050826020600302820111156138805761387f613557565b5b92915050565b60008060008060008060008060008060006101a08c8e0312156138ac576138ab61345c565b5b60006138ba8e828f01613685565b9b505060206138cb8e828f01613685565b9a505060406138dc8e828f01613685565b99505060606138ed8e828f01613685565b98505060806138fe8e828f01613864565b97505060e061390f8e828f01613685565b9650506101006139218e828f01613685565b9550506101206139338e828f01613685565b9450506101406139458e828f01613685565b9350506101606139578e828f01613685565b9250506101806139698e828f01613685565b9150509295989b509295989b9093969950565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139ca82613981565b810181811067ffffffffffffffff821117156139e9576139e8613992565b5b80604052505050565b60006139fc613452565b9050613a0882826139c1565b919050565b600067ffffffffffffffff821115613a2857613a27613992565b5b613a3182613981565b9050602081019050919050565b82818337600083830152505050565b6000613a60613a5b84613a0d565b6139f2565b905082815260208101848484011115613a7c57613a7b61397c565b5b613a87848285613a3e565b509392505050565b600082601f830112613aa457613aa361354d565b5b8135613ab4848260208601613a4d565b91505092915050565b600060208284031215613ad357613ad261345c565b5b600082013567ffffffffffffffff811115613af157613af0613461565b5b613afd84828501613a8f565b91505092915050565b613b0f81613394565b82525050565b6000602082019050613b2a6000830184613b06565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613b6a578082015181840152602081019050613b4f565b60008484015250505050565b6000613b8182613b30565b613b8b8185613b3b565b9350613b9b818560208601613b4c565b613ba481613981565b840191505092915050565b60006020820190508181036000830152613bc98184613b76565b905092915050565b60008060408385031215613be857613be761345c565b5b6000613bf6858286016136e8565b9250506020613c0785828601613538565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b6000613c578385613c40565b9350613c64838584613a3e565b82840190509392505050565b6000613c7d828486613c4b565b91508190509392505050565b6000613c958385613b3b565b9350613ca2838584613a3e565b613cab83613981565b840190509392505050565b6000608082019050613ccb6000830188613644565b8181036020830152613cde818688613c89565b9050613ced6040830185613b06565b613cfa6060830184613644565b9695505050505050565b7f5769746864726177304164647200000000000000000000000000000000000000600082015250565b6000613d3a600d83613b3b565b9150613d4582613d04565b602082019050919050565b60006020820190508181036000830152613d6981613d2d565b9050919050565b600080fd5b600082356001606003833603038112613d9157613d90613d70565b5b80830191505092915050565b60008235600160a003833603038112613db957613db8613d70565b5b80830191505092915050565b7f45727220726563697069656e7400000000000000000000000000000000000000600082015250565b6000613dfb600d83613b3b565b9150613e0682613dc5565b602082019050919050565b60006020820190508181036000830152613e2a81613dee565b9050919050565b7f45727220536c6970700000000000000000000000000000000000000000000000600082015250565b6000613e67600983613b3b565b9150613e7282613e31565b602082019050919050565b60006020820190508181036000830152613e9681613e5a565b9050919050565b7f5553444300000000000000000000000000000000000000000000000000000000600082015250565b6000613ed3600483613c40565b9150613ede82613e9d565b600482019050919050565b6000613ef482613ec6565b9150819050919050565b7f5553445400000000000000000000000000000000000000000000000000000000600082015250565b6000613f34600483613c40565b9150613f3f82613efe565b600482019050919050565b6000613f5582613f27565b9150819050919050565b7f5553444d00000000000000000000000000000000000000000000000000000000600082015250565b6000613f95600483613c40565b9150613fa082613f5f565b600482019050919050565b6000613fb682613f88565b9150819050919050565b7f45727220546f6b656e4f75740000000000000000000000000000000000000000600082015250565b6000613ff6600c83613b3b565b915061400182613fc0565b602082019050919050565b6000602082019050818103600083015261402581613fe9565b9050919050565b60008151905061403b81613521565b92915050565b6000602082840312156140575761405661345c565b5b60006140658482850161402c565b91505092915050565b7f45727220416d6f756e74496e0000000000000000000000000000000000000000600082015250565b60006140a4600c83613b3b565b91506140af8261406e565b602082019050919050565b600060208201905081810360008301526140d381614097565b9050919050565b60006040820190506140ef6000830185613644565b6140fc6020830184613b06565b9392505050565b61410c816134eb565b811461411757600080fd5b50565b60008151905061412981614103565b92915050565b6000602082840312156141455761414461345c565b5b60006141538482850161411a565b91505092915050565b7f45727220417070726f76616c0000000000000000000000000000000000000000600082015250565b6000614192600c83613b3b565b915061419d8261415c565b602082019050919050565b600060208201905081810360008301526141c181614185565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126141f4576141f36141d2565b5b83810192508235915060208301925067ffffffffffffffff82111561421c5761421b6141c8565b5b600182023603831315614232576142316141cd565b5b509250929050565b600082825260208201905092915050565b6000614257838561423a565b9350614264838584613a3e565b61426d83613981565b840190509392505050565b60006142876020840184613685565b905092915050565b61429881613632565b82525050565b60006142ad6020840184613538565b905092915050565b600060a083016142c860008401846141d7565b85830360008701526142db83828461424b565b925050506142ec6020840184614278565b6142f9602086018261428f565b50614307604084018461429e565b614314604086018261339e565b50614322606084018461429e565b61432f606086018261339e565b5061433d608084018461429e565b61434a608086018261339e565b508091505092915050565b6000602082019050818103600083015261436f81846142b5565b905092915050565b60008160e01c9050919050565b600060033d11156143a35760046000803e6143a0600051614377565b90505b90565b600060443d10614433576143b8613452565b60043d036004823e80513d602482011167ffffffffffffffff821117156143e0575050614433565b808201805167ffffffffffffffff8111156143fe5750505050614433565b80602083010160043d03850181111561441b575050505050614433565b61442a826020018501866139c1565b82955050505050505b90565b600060408201905061444b6000830185613644565b818103602083015261445d8184613b76565b90509392505050565b6000819050919050565b6000819050919050565b600061449561449061448b84614466565b614470565b613394565b9050919050565b6144a58161447a565b82525050565b60006040820190506144c06000830185613644565b6144cd602083018461449c565b9392505050565b7f45727220417070726f76616c3000000000000000000000000000000000000000600082015250565b600061450a600d83613b3b565b9150614515826144d4565b602082019050919050565b60006020820190508181036000830152614539816144fd565b9050919050565b60006080820190506145556000830187613644565b6145626020830186613644565b61456f6040830185613b06565b61457c6060830184613b06565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006145bf82613394565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145f1576145f0614585565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614658602e83613b3b565b9150614663826145fc565b604082019050919050565b600060208201905081810360008301526146878161464b565b9050919050565b7f41646d696e416464720000000000000000000000000000000000000000000000600082015250565b60006146c4600983613b3b565b91506146cf8261468e565b602082019050919050565b600060208201905081810360008301526146f3816146b7565b9050919050565b7f5265736375654164647200000000000000000000000000000000000000000000600082015250565b6000614730600a83613b3b565b915061473b826146fa565b602082019050919050565b6000602082019050818103600083015261475f81614723565b9050919050565b7f5769746864726177416464720000000000000000000000000000000000000000600082015250565b600061479c600c83613b3b565b91506147a782614766565b602082019050919050565b600060208201905081810360008301526147cb8161478f565b9050919050565b7f46697273744c656e6465724c6971416464720000000000000000000000000000600082015250565b6000614808601283613b3b565b9150614813826147d2565b602082019050919050565b60006020820190508181036000830152614837816147fb565b9050919050565b7f5365636f6e644c656e6465724c69714164647200000000000000000000000000600082015250565b6000614874601383613b3b565b915061487f8261483e565b602082019050919050565b600060208201905081810360008301526148a381614867565b9050919050565b7f53776170526f7574657241646472000000000000000000000000000000000000600082015250565b60006148e0600e83613b3b565b91506148eb826148aa565b602082019050919050565b6000602082019050818103600083015261490f816148d3565b9050919050565b7f5377617070657241646472000000000000000000000000000000000000000000600082015250565b600061494c600b83613b3b565b915061495782614916565b602082019050919050565b6000602082019050818103600083015261497b8161493f565b9050919050565b600061498d82613b30565b6149978185613c40565b93506149a7818560208601613b4c565b80840191505092915050565b60006149bf8284614982565b915081905092915050565b600060039050919050565b600081905092915050565b6000819050919050565b60006149f6838361428f565b60208301905092915050565b6000602082019050919050565b614a18816149ca565b614a2281846149d5565b9250614a2d826149e0565b8060005b83811015614a6657614a438284614278565b614a4d87826149ea565b9650614a5883614a02565b925050600181019050614a31565b505050505050565b60006101c082019050614a84600083018f613644565b614a91602083018e613644565b614a9e604083018d613644565b614aab606083018c613644565b614ab8608083018b613644565b614ac560a083018a614a0f565b614ad3610100830189613644565b614ae1610120830188613644565b614aef610140830187613644565b614afd610160830186613644565b614b0b610180830185613644565b614b196101a0830184613644565b9d9c50505050505050505050505050565b6000819050919050565b600060ff82169050919050565b6000614b5c614b57614b5284614b2a565b614470565b614b34565b9050919050565b614b6c81614b41565b82525050565b6000602082019050614b876000830184614b63565b92915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000614be9602f83613b3b565b9150614bf482614b8d565b604082019050919050565b60006020820190508181036000830152614c1881614bdc565b9050919050565b7f5265736375653041646472000000000000000000000000000000000000000000600082015250565b6000614c55600b83613b3b565b9150614c6082614c1f565b602082019050919050565b60006020820190508181036000830152614c8481614c48565b9050919050565b6000606082019050614ca06000830187613644565b8181036020830152614cb3818587613c89565b9050614cc26040830184613b06565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000614d01601f83613b3b565b9150614d0c82614ccb565b602082019050919050565b60006020820190508181036000830152614d3081614cf4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614d93602b83613b3b565b9150614d9e82614d37565b604082019050919050565b60006020820190508181036000830152614dc281614d86565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000614dff601783613c40565b9150614e0a82614dc9565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000614e4b601183613c40565b9150614e5682614e15565b601182019050919050565b6000614e6c82614df2565b9150614e788285614982565b9150614e8382614e3e565b9150614e8f8284614982565b91508190509392505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000614ef7602a83613b3b565b9150614f0282614e9b565b604082019050919050565b60006020820190508181036000830152614f2681614eea565b9050919050565b6000614f3882613394565b9150614f4383613394565b9250828202614f5181613394565b91508282048414831517614f6857614f67614585565b5b5092915050565b6000614f7a82613394565b9150614f8583613394565b9250828201905080821115614f9d57614f9c614585565b5b92915050565b6000614fae82613394565b915060008203614fc157614fc0614585565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000615002602083613b3b565b915061500d82614fcc565b602082019050919050565b6000602082019050818103600083015261503181614ff5565b9050919050565b600061504382613394565b915061504e83613394565b925082820390508181111561506657615065614585565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006150f7602683613b3b565b91506151028261509b565b604082019050919050565b60006020820190508181036000830152615126816150ea565b9050919050565b600081519050919050565b600081905092915050565b600061514e8261512d565b6151588185615138565b9350615168818560208601613b4c565b80840191505092915050565b60006151808284615143565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006151c1601d83613b3b565b91506151cc8261518b565b602082019050919050565b600060208201905081810360008301526151f0816151b4565b905091905056fea26469706673582212205dfb7b2b48ea003057b5d2e7b38e7ebda5a84422067610a49ebca50c2ea236f764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x522D DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71372544 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC54E44EB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDC048CF2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDC048CF2 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDF668ECA EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xE5DF800A EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x614 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xD00411C9 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A0 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA9DA3CF2 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xB14EC101 EQ PUSH2 0x518 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x71372544 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x83D33319 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x47C JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2FFE9942 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x4DEDE3DE EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x6E30199F EQ PUSH2 0x3F2 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2FFE9942 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x32CC815D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x334347B7 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x35EE5F87 EQ PUSH2 0x36A JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x212F6039 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x212F6039 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x25ACC985 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F8 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x828C404 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x15AC7358 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x34BE JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x3817 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x338 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3886 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x20FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53E PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2464 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH2 0x2485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E0 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH2 0x25B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP SELFBALANCE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6E1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6F5 JUMPI PUSH2 0x6F4 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x73F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x79D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x7B1 JUMPI PUSH2 0x7B0 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x7FB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x895 JUMPI POP PUSH2 0x894 DUP3 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH2 0x8C6 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x8CE PUSH2 0x268B JUMP JUMPDEST PUSH2 0x93B PUSH1 0xFD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C70 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x26DA JUMP JUMPDEST PUSH32 0x22CB89E6358014BB27F5658E2B820189F8F4C9E3F7165ECF266EDC53BE12D9FA PUSH2 0x964 PUSH2 0x2760 JUMP JUMPDEST DUP5 DUP5 DUP8 PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x99B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9AB PUSH2 0x2768 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0xA01 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP1 PUSH2 0x3D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH1 0xFB PUSH2 0x2772 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFB DUP3 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0xB0E DUP4 DUP4 PUSH2 0x2789 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0xB3D DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1395 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xB5F JUMPI PUSH2 0xB5E PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x3D75 JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF9 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD GT PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP1 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD59 JUMPI POP PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP1 PUSH2 0x3F4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD41 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xDDD JUMPI POP PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP1 PUSH2 0x3FAB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x400C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0xEE2 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT ISZERO JUMPDEST PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x40BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP3 SWAP2 SWAP1 PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100B SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10BB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B8 SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1229 JUMPI PUSH2 0x10C7 PUSH2 0x4384 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1218 JUMPI POP PUSH2 0x10DB PUSH2 0x43A6 JUMP JUMPDEST DUP1 PUSH2 0x10E6 JUMPI POP PUSH2 0x121A JUMP JUMPDEST PUSH32 0x48DBF1F65DC9FB918DCF47A87D0D7DBFE9CD78BCFAEA409049EE36785201CB91 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1129 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP3 SWAP2 SWAP1 PUSH2 0x44AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x1212 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1209 SWAP1 PUSH2 0x4520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1224 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1380 JUMP JUMPDEST PUSH32 0xFA2DDA1CC1B86E41239702756B13EFFBC1A092B5C57E3AD320FBE4F3B13FE235 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FC SWAP3 SWAP2 SWAP1 PUSH2 0x44AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x137E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP1 PUSH2 0x4520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x138D SWAP1 PUSH2 0x45B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB40 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x13F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x141D JUMPI POP PUSH2 0x13FF ADDRESS PUSH2 0x27BD JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x141C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1453 SWAP1 PUSH2 0x466E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1499 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x154E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 PUSH2 0x15AC JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E2 SWAP1 PUSH2 0x46DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172F SWAP1 PUSH2 0x481E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179E SWAP1 PUSH2 0x488A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1816 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180D SWAP1 PUSH2 0x48F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP1 PUSH2 0x4962 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x188D PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0x1895 PUSH2 0x2831 JUMP JUMPDEST DUP12 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x196D SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xFF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xFE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0x100 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1BD5 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C0A PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C3F PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C74 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1CC5 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D15 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D65 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D60 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D8F PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1DB9 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1DE3 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0D PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E37 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP4 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E61 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1E8B PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1EB5 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1EFF PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x28A1 JUMP JUMPDEST PUSH32 0xB01AAEFDFA9C6D0AB739180AD32400C96C77B263F5E065D3AF1002F36219CFEB CALLER DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1F44 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 ISZERO PUSH2 0x1FA5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F9C SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFD DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FC6 SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2030 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x204D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2071 SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E5 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F8 DUP3 DUP3 PUSH2 0x28FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E312E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFD DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EB PUSH1 0xFB PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2250 DUP3 PUSH1 0x97 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2946 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x23B0 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x241F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2416 SWAP1 PUSH2 0x4C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x246D DUP3 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x2476 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x2480 DUP4 DUP4 PUSH2 0x28FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH2 0x24AF DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x24B7 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x2524 PUSH1 0xFD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24CC SWAP3 SWAP2 SWAP1 PUSH2 0x3C70 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x26DA JUMP JUMPDEST PUSH32 0x901C03DA5D88EB3D62AB4617E7B7D17D86DB16356823A7971127D5181A842FEF PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x257B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x258B PUSH2 0x2768 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP2 JUMP JUMPDEST PUSH32 0x539440820030C4994DB4E31B6B800DEAFD503688728F932ADDFE7A410515C14C DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2670 JUMPI POP PUSH2 0x266F DUP3 PUSH2 0x2975 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2688 DUP2 PUSH2 0x2683 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x29DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x26D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C7 SWAP1 PUSH2 0x4D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x275B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26F9 SWAP3 SWAP2 SWAP1 PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A64 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2781 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B2C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2793 DUP3 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2C38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x282F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2826 SWAP1 PUSH2 0x4DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2880 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2877 SWAP1 PUSH2 0x4DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AC DUP4 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x2907 DUP3 DUP3 PUSH2 0x2CD8 JUMP JUMPDEST PUSH2 0x292C DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2DBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293F DUP3 PUSH1 0x0 ADD PUSH2 0x2DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2955 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH1 0x0 ADD PUSH2 0x2DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E9 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2A60 JUMPI PUSH2 0x29F6 DUP2 PUSH2 0x2DFB JUMP JUMPDEST PUSH2 0x2A04 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A15 SWAP3 SWAP2 SWAP1 PUSH2 0x4E61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A57 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3064 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2AE8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2AE7 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST JUMPDEST PUSH2 0x2B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1E SWAP1 PUSH2 0x4F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B61 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2C34 JUMPI PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2BD9 PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP4 DUP4 PUSH2 0x307C JUMP JUMPDEST PUSH2 0x2CCD JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CE2 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST ISZERO PUSH2 0x2DB6 JUMPI PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2D5B PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x309F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E21 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2E3B SWAP2 SWAP1 PUSH2 0x4F2D JUMP JUMPDEST PUSH2 0x2E45 SWAP2 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5E JUMPI PUSH2 0x2E5D PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E90 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2EC8 JUMPI PUSH2 0x2EC7 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2F2C JUMPI PUSH2 0x2F2B PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2F6C SWAP2 SWAP1 PUSH2 0x4F2D JUMP JUMPDEST PUSH2 0x2F76 SWAP2 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3016 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2FB8 JUMPI PUSH2 0x2FB7 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FCF JUMPI PUSH2 0x2FCE PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x300F SWAP1 PUSH2 0x4FA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F79 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x305A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3051 SWAP1 PUSH2 0x5018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3073 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31B3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x31A7 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x30D1 SWAP2 SWAP1 PUSH2 0x5038 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x30E9 SWAP2 SWAP1 PUSH2 0x5038 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3158 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x310A JUMPI PUSH2 0x3109 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x316C JUMPI PUSH2 0x316B PUSH2 0x506C JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x31F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31EF SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3221 SWAP2 SWAP1 PUSH2 0x5174 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x325E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3263 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3274 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3280 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x32E2 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x32DA JUMPI PUSH2 0x329A DUP6 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x32D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D0 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x32EC DUP4 DUP4 PUSH2 0x3318 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x332B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335F SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A7 DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B9 DUP4 DUP4 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DD DUP3 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x33E7 DUP2 DUP6 PUSH2 0x3373 JUMP JUMPDEST SWAP4 POP PUSH2 0x33F2 DUP4 PUSH2 0x3384 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3423 JUMPI DUP2 MLOAD PUSH2 0x340A DUP9 DUP3 PUSH2 0x33AD JUMP JUMPDEST SWAP8 POP PUSH2 0x3415 DUP4 PUSH2 0x33C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x344A DUP2 DUP5 PUSH2 0x33D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349B DUP2 PUSH2 0x3466 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B8 DUP2 PUSH2 0x3492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D4 JUMPI PUSH2 0x34D3 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E2 DUP5 DUP3 DUP6 ADD PUSH2 0x34A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3500 DUP2 PUSH2 0x34EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x352A DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP2 EQ PUSH2 0x3535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3547 DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3572 JUMPI PUSH2 0x3571 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x358F JUMPI PUSH2 0x358E PUSH2 0x3552 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x35AB JUMPI PUSH2 0x35AA PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35CB JUMPI PUSH2 0x35CA PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D9 DUP7 DUP3 DUP8 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35FA JUMPI PUSH2 0x35F9 PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3606 DUP7 DUP3 DUP8 ADD PUSH2 0x355C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363D DUP3 PUSH2 0x3612 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364D DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3677 DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP2 EQ PUSH2 0x3682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3694 DUP2 PUSH2 0x366E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36B0 JUMPI PUSH2 0x36AF PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36BE DUP5 DUP3 DUP6 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36DA DUP2 PUSH2 0x36C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F7 DUP2 PUSH2 0x36D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3712 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3721 DUP5 DUP3 DUP6 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3733 DUP2 PUSH2 0x36C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x374E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x372A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376A JUMPI PUSH2 0x3769 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3778 DUP5 DUP3 DUP6 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3798 JUMPI PUSH2 0x3797 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A6 DUP6 DUP3 DUP7 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37B7 DUP6 DUP3 DUP7 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x37D7 JUMPI PUSH2 0x37D6 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F4 JUMPI PUSH2 0x37F3 PUSH2 0x3552 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3810 JUMPI PUSH2 0x380F PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x382E JUMPI PUSH2 0x382D PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384C JUMPI PUSH2 0x384B PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3858 DUP6 DUP3 DUP7 ADD PUSH2 0x37C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x3880 JUMPI PUSH2 0x387F PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x38AC JUMPI PUSH2 0x38AB PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BA DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x38CB DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x38DC DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x38ED DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x38FE DUP15 DUP3 DUP16 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xE0 PUSH2 0x390F DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x100 PUSH2 0x3921 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x120 PUSH2 0x3933 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x140 PUSH2 0x3945 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x160 PUSH2 0x3957 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x180 PUSH2 0x3969 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x39CA DUP3 PUSH2 0x3981 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x39E9 JUMPI PUSH2 0x39E8 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FC PUSH2 0x3452 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A08 DUP3 DUP3 PUSH2 0x39C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A28 JUMPI PUSH2 0x3A27 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH2 0x3A31 DUP3 PUSH2 0x3981 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A60 PUSH2 0x3A5B DUP5 PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x39F2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A7C JUMPI PUSH2 0x3A7B PUSH2 0x397C JUMP JUMPDEST JUMPDEST PUSH2 0x3A87 DUP5 DUP3 DUP6 PUSH2 0x3A3E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AA4 JUMPI PUSH2 0x3AA3 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AB4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AD3 JUMPI PUSH2 0x3AD2 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AF1 JUMPI PUSH2 0x3AF0 PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3AFD DUP5 DUP3 DUP6 ADD PUSH2 0x3A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0F DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B81 DUP3 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x3B8B DUP2 DUP6 PUSH2 0x3B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST PUSH2 0x3BA4 DUP2 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC9 DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BE8 JUMPI PUSH2 0x3BE7 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BF6 DUP6 DUP3 DUP7 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C07 DUP6 DUP3 DUP7 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C57 DUP4 DUP6 PUSH2 0x3C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C64 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7D DUP3 DUP5 DUP7 PUSH2 0x3C4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C95 DUP4 DUP6 PUSH2 0x3B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CA2 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST PUSH2 0x3CAB DUP4 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CCB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CDE DUP2 DUP7 DUP9 PUSH2 0x3C89 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3B06 JUMP JUMPDEST PUSH2 0x3CFA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177304164647200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3A PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D45 DUP3 PUSH2 0x3D04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D69 DUP2 PUSH2 0x3D2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3D91 JUMPI PUSH2 0x3D90 PUSH2 0x3D70 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3DB9 JUMPI PUSH2 0x3DB8 PUSH2 0x3D70 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220726563697069656E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DFB PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E06 DUP3 PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E2A DUP2 PUSH2 0x3DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727220536C6970700000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E67 PUSH1 0x9 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E72 DUP3 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E96 DUP2 PUSH2 0x3E5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED3 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDE DUP3 PUSH2 0x3E9D JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP3 PUSH2 0x3EC6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F34 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3F DUP3 PUSH2 0x3EFE JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F55 DUP3 PUSH2 0x3F27 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP3 PUSH2 0x3F5F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB6 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727220546F6B656E4F75740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF6 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4001 DUP3 PUSH2 0x3FC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4025 DUP2 PUSH2 0x3FE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x403B DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4057 JUMPI PUSH2 0x4056 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP5 DUP3 DUP6 ADD PUSH2 0x402C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220416D6F756E74496E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A4 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x40AF DUP3 PUSH2 0x406E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40D3 DUP2 PUSH2 0x4097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x40FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x410C DUP2 PUSH2 0x34EB JUMP JUMPDEST DUP2 EQ PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4129 DUP2 PUSH2 0x4103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4145 JUMPI PUSH2 0x4144 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4153 DUP5 DUP3 DUP6 ADD PUSH2 0x411A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220417070726F76616C0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4192 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x419D DUP3 PUSH2 0x415C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41C1 DUP2 PUSH2 0x4185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x41F4 JUMPI PUSH2 0x41F3 PUSH2 0x41D2 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x421C JUMPI PUSH2 0x421B PUSH2 0x41C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4232 JUMPI PUSH2 0x4231 PUSH2 0x41CD JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 DUP4 DUP6 PUSH2 0x423A JUMP JUMPDEST SWAP4 POP PUSH2 0x4264 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST PUSH2 0x426D DUP4 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4287 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3685 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4298 DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3538 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH2 0x42C8 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x41D7 JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x0 DUP8 ADD MSTORE PUSH2 0x42DB DUP4 DUP3 DUP5 PUSH2 0x424B JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x42EC PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4278 JUMP JUMPDEST PUSH2 0x42F9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x428F JUMP JUMPDEST POP PUSH2 0x4307 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x4314 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP PUSH2 0x4322 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x432F PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP PUSH2 0x433D PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x434A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x436F DUP2 DUP5 PUSH2 0x42B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x43A3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x43A0 PUSH1 0x0 MLOAD PUSH2 0x4377 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x4433 JUMPI PUSH2 0x43B8 PUSH2 0x3452 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43E0 JUMPI POP POP PUSH2 0x4433 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43FE JUMPI POP POP POP POP PUSH2 0x4433 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x441B JUMPI POP POP POP POP POP PUSH2 0x4433 JUMP JUMPDEST PUSH2 0x442A DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x39C1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x444B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x445D DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4495 PUSH2 0x4490 PUSH2 0x448B DUP5 PUSH2 0x4466 JUMP JUMPDEST PUSH2 0x4470 JUMP JUMPDEST PUSH2 0x3394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44A5 DUP2 PUSH2 0x447A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x44CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x449C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45727220417070726F76616C3000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450A PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4515 DUP3 PUSH2 0x44D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4539 DUP2 PUSH2 0x44FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4555 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4562 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x456F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3B06 JUMP JUMPDEST PUSH2 0x457C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45BF DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x45F1 JUMPI PUSH2 0x45F0 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4658 PUSH1 0x2E DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4663 DUP3 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4687 DUP2 PUSH2 0x464B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646D696E416464720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C4 PUSH1 0x9 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x46CF DUP3 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F3 DUP2 PUSH2 0x46B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265736375654164647200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4730 PUSH1 0xA DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x473B DUP3 PUSH2 0x46FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x475F DUP2 PUSH2 0x4723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177416464720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479C PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x47A7 DUP3 PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47CB DUP2 PUSH2 0x478F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46697273744C656E6465724C6971416464720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4808 PUSH1 0x12 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4813 DUP3 PUSH2 0x47D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4837 DUP2 PUSH2 0x47FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365636F6E644C656E6465724C69714164647200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4874 PUSH1 0x13 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x487F DUP3 PUSH2 0x483E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48A3 DUP2 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53776170526F7574657241646472000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E0 PUSH1 0xE DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x48EB DUP3 PUSH2 0x48AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x490F DUP2 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5377617070657241646472000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494C PUSH1 0xB DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4957 DUP3 PUSH2 0x4916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x497B DUP2 PUSH2 0x493F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498D DUP3 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x4997 DUP2 DUP6 PUSH2 0x3C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x49A7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BF DUP3 DUP5 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49F6 DUP4 DUP4 PUSH2 0x428F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A18 DUP2 PUSH2 0x49CA JUMP JUMPDEST PUSH2 0x4A22 DUP2 DUP5 PUSH2 0x49D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x4A2D DUP3 PUSH2 0x49E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A66 JUMPI PUSH2 0x4A43 DUP3 DUP5 PUSH2 0x4278 JUMP JUMPDEST PUSH2 0x4A4D DUP8 DUP3 PUSH2 0x49EA JUMP JUMPDEST SWAP7 POP PUSH2 0x4A58 DUP4 PUSH2 0x4A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A31 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x4A84 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4A91 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4A9E PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AAB PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AB8 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AC5 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x4A0F JUMP JUMPDEST PUSH2 0x4AD3 PUSH2 0x100 DUP4 ADD DUP10 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AE1 PUSH2 0x120 DUP4 ADD DUP9 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AEF PUSH2 0x140 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AFD PUSH2 0x160 DUP4 ADD DUP7 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4B0B PUSH2 0x180 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4B19 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5C PUSH2 0x4B57 PUSH2 0x4B52 DUP5 PUSH2 0x4B2A JUMP JUMPDEST PUSH2 0x4470 JUMP JUMPDEST PUSH2 0x4B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6C DUP2 PUSH2 0x4B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE9 PUSH1 0x2F DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4BF4 DUP3 PUSH2 0x4B8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C18 DUP2 PUSH2 0x4BDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265736375653041646472000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C55 PUSH1 0xB DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4C60 DUP3 PUSH2 0x4C1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C84 DUP2 PUSH2 0x4C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CA0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4CB3 DUP2 DUP6 DUP8 PUSH2 0x3C89 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D01 PUSH1 0x1F DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0C DUP3 PUSH2 0x4CCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D30 DUP2 PUSH2 0x4CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D93 PUSH1 0x2B DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9E DUP3 PUSH2 0x4D37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DC2 DUP2 PUSH2 0x4D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DFF PUSH1 0x17 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E0A DUP3 PUSH2 0x4DC9 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4B PUSH1 0x11 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E56 DUP3 PUSH2 0x4E15 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6C DUP3 PUSH2 0x4DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E78 DUP3 DUP6 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E83 DUP3 PUSH2 0x4E3E JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8F DUP3 DUP5 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EF7 PUSH1 0x2A DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4F02 DUP3 PUSH2 0x4E9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F26 DUP2 PUSH2 0x4EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F38 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F43 DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4F51 DUP2 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4F68 JUMPI PUSH2 0x4F67 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7A DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F85 DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4F9D JUMPI PUSH2 0x4F9C PUSH2 0x4585 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAE DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x4FC1 JUMPI PUSH2 0x4FC0 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5002 PUSH1 0x20 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x500D DUP3 PUSH2 0x4FCC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5031 DUP2 PUSH2 0x4FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5043 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x504E DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5066 JUMPI PUSH2 0x5065 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 PUSH1 0x26 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x5102 DUP3 PUSH2 0x509B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5126 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514E DUP3 PUSH2 0x512D JUMP JUMPDEST PUSH2 0x5158 DUP2 DUP6 PUSH2 0x5138 JUMP JUMPDEST SWAP4 POP PUSH2 0x5168 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5180 DUP3 DUP5 PUSH2 0x5143 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C1 PUSH1 0x1D DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x51CC DUP3 PUSH2 0x518B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F0 DUP2 PUSH2 0x51B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xFB PUSH28 0x2B48EA003057B5D2E7B38E7EBDA5A84422067610A49EBCA50C2EA236 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"526:8034:23:-:0;;;1637:49;;;;;;;;;;1658:22;:20;;;:22;;:::i;:::-;526:8034;;5939:280:4;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:25:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;526:8034:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACONCAGUA_ROLE_5229":{"entryPoint":9653,"id":5229,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_187":{"entryPoint":8899,"id":187,"parameterSlots":0,"returnSlots":0},"@LENDER_LIQ_ROLE_5234":{"entryPoint":5019,"id":5234,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_5244":{"entryPoint":9689,"id":5244,"parameterSlots":0,"returnSlots":0},"@RESCUER_ROLE_5239":{"entryPoint":8635,"id":5239,"parameterSlots":0,"returnSlots":0},"@SWAPPER_ROLE_5249":{"entryPoint":9617,"id":5249,"parameterSlots":0,"returnSlots":0},"@USDC_5259":{"entryPoint":8688,"id":5259,"parameterSlots":0,"returnSlots":0},"@USDM_5265":{"entryPoint":8906,"id":5265,"parameterSlots":0,"returnSlots":0},"@USDT_5262":{"entryPoint":9001,"id":5262,"parameterSlots":0,"returnSlots":0},"@WBTC_5268":{"entryPoint":8444,"id":5268,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_unchained_172":{"entryPoint":10208,"id":172,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_780":{"entryPoint":10289,"id":780,"parameterSlots":0,"returnSlots":0},"@_add_2512":{"entryPoint":11368,"id":2512,"parameterSlots":2,"returnSlots":1},"@_at_2646":{"entryPoint":11052,"id":2646,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_3513":{"entryPoint":10852,"id":3513,"parameterSlots":2,"returnSlots":0},"@_checkRole_252":{"entryPoint":9847,"id":252,"parameterSlots":1,"returnSlots":0},"@_checkRole_291":{"entryPoint":10719,"id":291,"parameterSlots":2,"returnSlots":0},"@_contains_2615":{"entryPoint":12412,"id":2615,"parameterSlots":2,"returnSlots":1},"@_grantRole_114":{"entryPoint":10121,"id":114,"parameterSlots":2,"returnSlots":0},"@_grantRole_443":{"entryPoint":11095,"id":443,"parameterSlots":2,"returnSlots":0},"@_length_2629":{"entryPoint":11754,"id":2629,"parameterSlots":1,"returnSlots":1},"@_msgSender_1188":{"entryPoint":10080,"id":1188,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_814":{"entryPoint":10088,"id":814,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_806":{"entryPoint":9867,"id":806,"parameterSlots":0,"returnSlots":0},"@_remove_2596":{"entryPoint":12447,"id":2596,"parameterSlots":2,"returnSlots":1},"@_revert_3891":{"entryPoint":13080,"id":3891,"parameterSlots":2,"returnSlots":0},"@_revokeRole_138":{"entryPoint":10493,"id":138,"parameterSlots":2,"returnSlots":0},"@_revokeRole_474":{"entryPoint":11480,"id":474,"parameterSlots":2,"returnSlots":0},"@_setRoleAdmin_411":{"entryPoint":10401,"id":411,"parameterSlots":2,"returnSlots":0},"@add_2682":{"entryPoint":10378,"id":2682,"parameterSlots":2,"returnSlots":1},"@add_2812":{"entryPoint":11320,"id":2812,"parameterSlots":2,"returnSlots":1},"@at_2751":{"entryPoint":10098,"id":2751,"parameterSlots":2,"returnSlots":1},"@at_2908":{"entryPoint":10566,"id":2908,"parameterSlots":2,"returnSlots":1},"@balanceOf_5851":{"entryPoint":8115,"id":5851,"parameterSlots":1,"returnSlots":1},"@functionCallWithValue_3716":{"entryPoint":12723,"id":3716,"parameterSlots":4,"returnSlots":1},"@functionCall_3652":{"entryPoint":12388,"id":3652,"parameterSlots":3,"returnSlots":1},"@getBalances_5914":{"entryPoint":1586,"id":5914,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_306":{"entryPoint":2741,"id":306,"parameterSlots":1,"returnSlots":1},"@getRoleByIndex_5975":{"entryPoint":2773,"id":5975,"parameterSlots":1,"returnSlots":1},"@getRoleCount_5960":{"entryPoint":8671,"id":5960,"parameterSlots":0,"returnSlots":1},"@getRoleMemberCount_90":{"entryPoint":9058,"id":90,"parameterSlots":1,"returnSlots":1},"@getRoleMember_74":{"entryPoint":8745,"id":74,"parameterSlots":2,"returnSlots":1},"@grantRole_326":{"entryPoint":2802,"id":326,"parameterSlots":2,"returnSlots":0},"@hasRole_239":{"entryPoint":8792,"id":239,"parameterSlots":2,"returnSlots":1},"@initialize_5556":{"entryPoint":5055,"id":5556,"parameterSlots":11,"returnSlots":0},"@isContract_3580":{"entryPoint":13045,"id":3580,"parameterSlots":1,"returnSlots":1},"@isContract_849":{"entryPoint":10173,"id":849,"parameterSlots":1,"returnSlots":1},"@length_2733":{"entryPoint":10545,"id":2733,"parameterSlots":1,"returnSlots":1},"@length_2881":{"entryPoint":10592,"id":2881,"parameterSlots":1,"returnSlots":1},"@remove_2839":{"entryPoint":11706,"id":2839,"parameterSlots":2,"returnSlots":1},"@renounceRole_369":{"entryPoint":8313,"id":369,"parameterSlots":2,"returnSlots":0},"@rescueWalletAddress_5274":{"entryPoint":2481,"id":5274,"parameterSlots":0,"returnSlots":0},"@rescue_5948":{"entryPoint":2204,"id":5948,"parameterSlots":3,"returnSlots":0},"@revokeRole_346":{"entryPoint":9316,"id":346,"parameterSlots":2,"returnSlots":0},"@safeTransfer_3219":{"entryPoint":9946,"id":3219,"parameterSlots":3,"returnSlots":0},"@setRescueWalletAddress_5613":{"entryPoint":9094,"id":5613,"parameterSlots":1,"returnSlots":0},"@setWithdrawWalletAddress_5589":{"entryPoint":2519,"id":5589,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1470":{"entryPoint":10613,"id":1470,"parameterSlots":1,"returnSlots":1},"@supportsInterface_220":{"entryPoint":9725,"id":220,"parameterSlots":1,"returnSlots":1},"@supportsInterface_55":{"entryPoint":2082,"id":55,"parameterSlots":1,"returnSlots":1},"@swapExactInputs_5793":{"entryPoint":2835,"id":5793,"parameterSlots":2,"returnSlots":0},"@toHexString_1386":{"entryPoint":11816,"id":1386,"parameterSlots":2,"returnSlots":1},"@toHexString_1406":{"entryPoint":11771,"id":1406,"parameterSlots":1,"returnSlots":1},"@tokenAddress_5272":{"entryPoint":8562,"id":5272,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_3847":{"entryPoint":12928,"id":3847,"parameterSlots":4,"returnSlots":1},"@version_5565":{"entryPoint":8501,"id":5565,"parameterSlots":0,"returnSlots":1},"@withdrawWalletAddress_5276":{"entryPoint":8963,"id":5276,"parameterSlots":0,"returnSlots":0},"@withdraw_5825":{"entryPoint":9349,"id":5825,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":14925,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$3_calldata_ptr":{"entryPoint":14436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14273,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":16666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":14056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":13481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":13660,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":14991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":16428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_addresst_address":{"entryPoint":14470,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14359,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":16687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":14077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":14209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":15313,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":13502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":15037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":14164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":16449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_calldata_ptr":{"entryPoint":13746,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":18922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":17039,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack":{"entryPoint":18959,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":14122,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr":{"entryPoint":16971,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":17564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":19299,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15435,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e_to_t_string_memory_ptr_fromStack":{"entryPoint":18535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":20469,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942_to_t_string_memory_ptr_fromStack":{"entryPoint":18751,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3_to_t_string_memory_ptr_fromStack":{"entryPoint":17661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290_to_t_string_memory_ptr_fromStack":{"entryPoint":18643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7_to_t_string_memory_ptr_fromStack":{"entryPoint":15854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c_to_t_string_memory_ptr_fromStack":{"entryPoint":18319,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85_to_t_string_memory_ptr_fromStack":{"entryPoint":18427,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f_to_t_string_memory_ptr_fromStack":{"entryPoint":15661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":20714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e_to_t_string_memory_ptr_fromStack":{"entryPoint":18103,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":17995,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6_to_t_string_memory_ptr_fromStack":{"entryPoint":16361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16167,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944_to_t_string_memory_ptr_fromStack":{"entryPoint":16773,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b_to_t_string_memory_ptr_fromStack":{"entryPoint":15962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839_to_t_string_memory_ptr_fromStack":{"entryPoint":19528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":20916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd_to_t_string_memory_ptr_fromStack":{"entryPoint":18211,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115_to_t_string_memory_ptr_fromStack":{"entryPoint":16535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":19846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16070,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":20202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":19700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20030,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":19420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ExactInputParams_$5150_calldata_ptr_to_t_struct$_ExactInputParams_$5150_memory_ptr_fromStack":{"entryPoint":17077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13214,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15472,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16105,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20065,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":19054,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":17728,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":17579,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":19595,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed":{"entryPoint":15542,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17462,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":16602,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":14137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":19314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15889,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18354,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18138,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18030,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16808,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ExactInputParams_$5150_calldata_ptr__to_t_struct$_ExactInputParams_$5150_memory_ptr__fromStack_reversed":{"entryPoint":17237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":15125,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_struct$_ExactInputParams_$5150_calldata_ptr":{"entryPoint":15773,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_struct$_SwapParams_$6069_calldata_ptr":{"entryPoint":15733,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":14834,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":13394,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":14861,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$3_calldata_ptr":{"entryPoint":18912,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13188,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$3_calldata_ptr":{"entryPoint":18890,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13160,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20781,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15152,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$3_calldata_ptr":{"entryPoint":18946,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13253,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack":{"entryPoint":18901,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13171,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":16954,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20792,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15163,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15424,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_address":{"entryPoint":17016,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_bytes_calldata_ptr":{"entryPoint":16855,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_access_t_uint256":{"entryPoint":17054,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20335,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20269,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20536,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13874,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13547,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14023,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":13414,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":17510,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":19242,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13842,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":19252,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":17530,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":19265,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14910,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":15180,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":20387,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":14785,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":17520,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":17844,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17797,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":20588,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":15377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14738,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":17284,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2":{"entryPoint":16840,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":13650,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13645,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":15728,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20":{"entryPoint":16845,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13655,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14716,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13409,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4":{"entryPoint":16850,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13404,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14721,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":17271,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e":{"entryPoint":18494,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":20428,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942":{"entryPoint":18710,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3":{"entryPoint":17620,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290":{"entryPoint":18602,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7":{"entryPoint":15813,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c":{"entryPoint":18278,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85":{"entryPoint":18386,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f":{"entryPoint":15620,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":20635,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e":{"entryPoint":18062,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":17916,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6":{"entryPoint":16320,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0":{"entryPoint":16126,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944":{"entryPoint":16732,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b":{"entryPoint":15921,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839":{"entryPoint":19487,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":20875,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd":{"entryPoint":18170,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115":{"entryPoint":16494,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":19767,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa":{"entryPoint":16029,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":19913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":20123,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":19659,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9":{"entryPoint":16223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":19989,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":19341,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":17318,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_t_address":{"entryPoint":13934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16643,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":14033,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":13458,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13601,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:62995:25","statements":[{"body":{"nodeType":"YulBlock","src":"81:40:25","statements":[{"nodeType":"YulAssignment","src":"92:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"108:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"102:5:25"},"nodeType":"YulFunctionCall","src":"102:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"92:6:25"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"64:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"74:6:25","type":""}],"src":"7:114:25"},{"body":{"nodeType":"YulBlock","src":"238:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"255:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"260:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"248:6:25"},"nodeType":"YulFunctionCall","src":"248:19:25"},"nodeType":"YulExpressionStatement","src":"248:19:25"},{"nodeType":"YulAssignment","src":"276:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"295:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"291:3:25"},"nodeType":"YulFunctionCall","src":"291:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"276:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"210:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"215:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"226:11:25","type":""}],"src":"127:184:25"},{"body":{"nodeType":"YulBlock","src":"389:60:25","statements":[{"nodeType":"YulAssignment","src":"399:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"407:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"399:4:25"}]},{"nodeType":"YulAssignment","src":"420:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"432:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"437:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:25"},"nodeType":"YulFunctionCall","src":"428:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"420:4:25"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"376:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"384:4:25","type":""}],"src":"317:132:25"},{"body":{"nodeType":"YulBlock","src":"500:32:25","statements":[{"nodeType":"YulAssignment","src":"510:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"521:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"510:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"482:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"492:7:25","type":""}],"src":"455:77:25"},{"body":{"nodeType":"YulBlock","src":"593:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"610:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"633:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"615:17:25"},"nodeType":"YulFunctionCall","src":"615:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:25"},"nodeType":"YulFunctionCall","src":"603:37:25"},"nodeType":"YulExpressionStatement","src":"603:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"581:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"588:3:25","type":""}],"src":"538:108:25"},{"body":{"nodeType":"YulBlock","src":"732:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"776:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"784:3:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"742:33:25"},"nodeType":"YulFunctionCall","src":"742:46:25"},"nodeType":"YulExpressionStatement","src":"742:46:25"},{"nodeType":"YulAssignment","src":"797:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"815:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"820:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"811:3:25"},"nodeType":"YulFunctionCall","src":"811:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"797:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"705:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"713:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"721:10:25","type":""}],"src":"652:179:25"},{"body":{"nodeType":"YulBlock","src":"912:38:25","statements":[{"nodeType":"YulAssignment","src":"922:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"934:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:25"},"nodeType":"YulFunctionCall","src":"930:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"922:4:25"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"899:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"907:4:25","type":""}],"src":"837:113:25"},{"body":{"nodeType":"YulBlock","src":"1110:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1120:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1182:5:25"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1134:47:25"},"nodeType":"YulFunctionCall","src":"1134:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1124:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1197:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1278:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1283:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1204:73:25"},"nodeType":"YulFunctionCall","src":"1204:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1197:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"1299:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1314:49:25"},"nodeType":"YulFunctionCall","src":"1314:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1303:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1379:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1393:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1383:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1469:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1483:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1510:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1504:5:25"},"nodeType":"YulFunctionCall","src":"1504:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1487:13:25","type":""}]},{"nodeType":"YulAssignment","src":"1530:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"1581:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"1596:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"1537:43:25"},"nodeType":"YulFunctionCall","src":"1537:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1530:3:25"}]},{"nodeType":"YulAssignment","src":"1613:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1676:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1623:52:25"},"nodeType":"YulFunctionCall","src":"1623:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1613:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1431:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1434:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1428:2:25"},"nodeType":"YulFunctionCall","src":"1428:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1442:18:25","statements":[{"nodeType":"YulAssignment","src":"1444:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1453:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1456:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1449:3:25"},"nodeType":"YulFunctionCall","src":"1449:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1444:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1413:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1415:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1424:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1419:1:25","type":""}]}]},"src":"1409:284:25"},{"nodeType":"YulAssignment","src":"1702:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"1709:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1702:3:25"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1089:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1096:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1105:3:25","type":""}],"src":"986:732:25"},{"body":{"nodeType":"YulBlock","src":"1872:225:25","statements":[{"nodeType":"YulAssignment","src":"1882:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1894:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1905:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1890:3:25"},"nodeType":"YulFunctionCall","src":"1890:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1882:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1929:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1925:3:25"},"nodeType":"YulFunctionCall","src":"1925:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1948:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1954:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1944:3:25"},"nodeType":"YulFunctionCall","src":"1944:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1918:6:25"},"nodeType":"YulFunctionCall","src":"1918:47:25"},"nodeType":"YulExpressionStatement","src":"1918:47:25"},{"nodeType":"YulAssignment","src":"1974:116:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2076:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2085:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1982:93:25"},"nodeType":"YulFunctionCall","src":"1982:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1974:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1844:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1856:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1867:4:25","type":""}],"src":"1724:373:25"},{"body":{"nodeType":"YulBlock","src":"2143:35:25","statements":[{"nodeType":"YulAssignment","src":"2153:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2169:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2163:5:25"},"nodeType":"YulFunctionCall","src":"2163:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2153:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2136:6:25","type":""}],"src":"2103:75:25"},{"body":{"nodeType":"YulBlock","src":"2273:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2293:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2283:6:25"},"nodeType":"YulFunctionCall","src":"2283:12:25"},"nodeType":"YulExpressionStatement","src":"2283:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2184:117:25"},{"body":{"nodeType":"YulBlock","src":"2396:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2413:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2416:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2406:6:25"},"nodeType":"YulFunctionCall","src":"2406:12:25"},"nodeType":"YulExpressionStatement","src":"2406:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2307:117:25"},{"body":{"nodeType":"YulBlock","src":"2474:105:25","statements":[{"nodeType":"YulAssignment","src":"2484:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2499:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2506:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2495:3:25"},"nodeType":"YulFunctionCall","src":"2495:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2484:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2456:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2466:7:25","type":""}],"src":"2430:149:25"},{"body":{"nodeType":"YulBlock","src":"2627:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"2683:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2692:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2695:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2685:6:25"},"nodeType":"YulFunctionCall","src":"2685:12:25"},"nodeType":"YulExpressionStatement","src":"2685:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2674:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2657:16:25"},"nodeType":"YulFunctionCall","src":"2657:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2647:2:25"},"nodeType":"YulFunctionCall","src":"2647:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2640:6:25"},"nodeType":"YulFunctionCall","src":"2640:42:25"},"nodeType":"YulIf","src":"2637:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2620:5:25","type":""}],"src":"2585:120:25"},{"body":{"nodeType":"YulBlock","src":"2762:86:25","statements":[{"nodeType":"YulAssignment","src":"2772:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2794:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2781:12:25"},"nodeType":"YulFunctionCall","src":"2781:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2772:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2836:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2810:25:25"},"nodeType":"YulFunctionCall","src":"2810:32:25"},"nodeType":"YulExpressionStatement","src":"2810:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2740:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2748:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2756:5:25","type":""}],"src":"2711:137:25"},{"body":{"nodeType":"YulBlock","src":"2919:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"2965:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2967:77:25"},"nodeType":"YulFunctionCall","src":"2967:79:25"},"nodeType":"YulExpressionStatement","src":"2967:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2940:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2949:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2936:3:25"},"nodeType":"YulFunctionCall","src":"2936:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2961:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2932:3:25"},"nodeType":"YulFunctionCall","src":"2932:32:25"},"nodeType":"YulIf","src":"2929:119:25"},{"nodeType":"YulBlock","src":"3058:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3102:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3136:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3147:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3132:3:25"},"nodeType":"YulFunctionCall","src":"3132:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3112:19:25"},"nodeType":"YulFunctionCall","src":"3112:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3102:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2889:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2900:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2912:6:25","type":""}],"src":"2854:327:25"},{"body":{"nodeType":"YulBlock","src":"3229:48:25","statements":[{"nodeType":"YulAssignment","src":"3239:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3257:6:25"},"nodeType":"YulFunctionCall","src":"3257:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3250:6:25"},"nodeType":"YulFunctionCall","src":"3250:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3239:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3211:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3221:7:25","type":""}],"src":"3187:90:25"},{"body":{"nodeType":"YulBlock","src":"3342:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3359:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3379:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3364:14:25"},"nodeType":"YulFunctionCall","src":"3364:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3352:6:25"},"nodeType":"YulFunctionCall","src":"3352:34:25"},"nodeType":"YulExpressionStatement","src":"3352:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3330:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3337:3:25","type":""}],"src":"3283:109:25"},{"body":{"nodeType":"YulBlock","src":"3490:118:25","statements":[{"nodeType":"YulAssignment","src":"3500:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3523:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:25"},"nodeType":"YulFunctionCall","src":"3508:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3500:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3574:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3598:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:25"},"nodeType":"YulFunctionCall","src":"3583:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3536:37:25"},"nodeType":"YulFunctionCall","src":"3536:65:25"},"nodeType":"YulExpressionStatement","src":"3536:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3462:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3474:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3485:4:25","type":""}],"src":"3398:210:25"},{"body":{"nodeType":"YulBlock","src":"3657:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3714:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3723:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3726:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3716:6:25"},"nodeType":"YulFunctionCall","src":"3716:12:25"},"nodeType":"YulExpressionStatement","src":"3716:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3680:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3687:17:25"},"nodeType":"YulFunctionCall","src":"3687:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3677:2:25"},"nodeType":"YulFunctionCall","src":"3677:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3670:6:25"},"nodeType":"YulFunctionCall","src":"3670:43:25"},"nodeType":"YulIf","src":"3667:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3650:5:25","type":""}],"src":"3614:122:25"},{"body":{"nodeType":"YulBlock","src":"3794:87:25","statements":[{"nodeType":"YulAssignment","src":"3804:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3826:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3813:12:25"},"nodeType":"YulFunctionCall","src":"3813:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3804:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3869:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3842:26:25"},"nodeType":"YulFunctionCall","src":"3842:33:25"},"nodeType":"YulExpressionStatement","src":"3842:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3772:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3780:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3788:5:25","type":""}],"src":"3742:139:25"},{"body":{"nodeType":"YulBlock","src":"3976:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3993:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3996:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3986:6:25"},"nodeType":"YulFunctionCall","src":"3986:12:25"},"nodeType":"YulExpressionStatement","src":"3986:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3887:117:25"},{"body":{"nodeType":"YulBlock","src":"4099:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4116:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4119:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4109:6:25"},"nodeType":"YulFunctionCall","src":"4109:12:25"},"nodeType":"YulExpressionStatement","src":"4109:12:25"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"4010:117:25"},{"body":{"nodeType":"YulBlock","src":"4222:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4239:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4242:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4232:6:25"},"nodeType":"YulFunctionCall","src":"4232:12:25"},"nodeType":"YulExpressionStatement","src":"4232:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4133:117:25"},{"body":{"nodeType":"YulBlock","src":"4345:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"4394:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4396:77:25"},"nodeType":"YulFunctionCall","src":"4396:79:25"},"nodeType":"YulExpressionStatement","src":"4396:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4373:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4381:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4369:3:25"},"nodeType":"YulFunctionCall","src":"4369:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"4388:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4365:3:25"},"nodeType":"YulFunctionCall","src":"4365:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4358:6:25"},"nodeType":"YulFunctionCall","src":"4358:35:25"},"nodeType":"YulIf","src":"4355:122:25"},{"nodeType":"YulAssignment","src":"4486:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4509:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4496:12:25"},"nodeType":"YulFunctionCall","src":"4496:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4486:6:25"}]},{"body":{"nodeType":"YulBlock","src":"4559:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"4561:77:25"},"nodeType":"YulFunctionCall","src":"4561:79:25"},"nodeType":"YulExpressionStatement","src":"4561:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4531:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4539:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4528:2:25"},"nodeType":"YulFunctionCall","src":"4528:30:25"},"nodeType":"YulIf","src":"4525:117:25"},{"nodeType":"YulAssignment","src":"4651:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4667:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4675:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4663:3:25"},"nodeType":"YulFunctionCall","src":"4663:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4651:8:25"}]},{"body":{"nodeType":"YulBlock","src":"4734:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4736:77:25"},"nodeType":"YulFunctionCall","src":"4736:79:25"},"nodeType":"YulExpressionStatement","src":"4736:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4699:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4713:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4721:4:25","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4709:3:25"},"nodeType":"YulFunctionCall","src":"4709:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4695:3:25"},"nodeType":"YulFunctionCall","src":"4695:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"4729:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4692:2:25"},"nodeType":"YulFunctionCall","src":"4692:41:25"},"nodeType":"YulIf","src":"4689:128:25"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4312:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4320:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"4328:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4338:6:25","type":""}],"src":"4270:553:25"},{"body":{"nodeType":"YulBlock","src":"4932:571:25","statements":[{"body":{"nodeType":"YulBlock","src":"4978:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4980:77:25"},"nodeType":"YulFunctionCall","src":"4980:79:25"},"nodeType":"YulExpressionStatement","src":"4980:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4953:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4962:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4949:3:25"},"nodeType":"YulFunctionCall","src":"4949:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4974:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4945:3:25"},"nodeType":"YulFunctionCall","src":"4945:32:25"},"nodeType":"YulIf","src":"4942:119:25"},{"nodeType":"YulBlock","src":"5071:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5086:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5100:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5090:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5115:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5161:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5146:3:25"},"nodeType":"YulFunctionCall","src":"5146:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5170:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5125:20:25"},"nodeType":"YulFunctionCall","src":"5125:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5115:6:25"}]}]},{"nodeType":"YulBlock","src":"5198:298:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5213:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5244:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5255:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:25"},"nodeType":"YulFunctionCall","src":"5240:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5227:12:25"},"nodeType":"YulFunctionCall","src":"5227:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5217:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5306:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5308:77:25"},"nodeType":"YulFunctionCall","src":"5308:79:25"},"nodeType":"YulExpressionStatement","src":"5308:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5278:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5286:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5275:2:25"},"nodeType":"YulFunctionCall","src":"5275:30:25"},"nodeType":"YulIf","src":"5272:117:25"},{"nodeType":"YulAssignment","src":"5403:83:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5458:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5469:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5454:3:25"},"nodeType":"YulFunctionCall","src":"5454:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5478:7:25"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"5421:32:25"},"nodeType":"YulFunctionCall","src":"5421:65:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5403:6:25"},{"name":"value2","nodeType":"YulIdentifier","src":"5411:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4886:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4897:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4909:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4917:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4925:6:25","type":""}],"src":"4829:674:25"},{"body":{"nodeType":"YulBlock","src":"5554:81:25","statements":[{"nodeType":"YulAssignment","src":"5564:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5579:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5586:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5575:3:25"},"nodeType":"YulFunctionCall","src":"5575:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5564:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5536:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5546:7:25","type":""}],"src":"5509:126:25"},{"body":{"nodeType":"YulBlock","src":"5686:51:25","statements":[{"nodeType":"YulAssignment","src":"5696:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5725:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5707:17:25"},"nodeType":"YulFunctionCall","src":"5707:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5696:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5668:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5678:7:25","type":""}],"src":"5641:96:25"},{"body":{"nodeType":"YulBlock","src":"5808:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5825:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5848:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5830:17:25"},"nodeType":"YulFunctionCall","src":"5830:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5818:6:25"},"nodeType":"YulFunctionCall","src":"5818:37:25"},"nodeType":"YulExpressionStatement","src":"5818:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5796:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5803:3:25","type":""}],"src":"5743:118:25"},{"body":{"nodeType":"YulBlock","src":"5965:124:25","statements":[{"nodeType":"YulAssignment","src":"5975:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5987:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5998:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5983:3:25"},"nodeType":"YulFunctionCall","src":"5983:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5975:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6055:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6079:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:25"},"nodeType":"YulFunctionCall","src":"6064:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6011:43:25"},"nodeType":"YulFunctionCall","src":"6011:71:25"},"nodeType":"YulExpressionStatement","src":"6011:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5937:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5949:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5960:4:25","type":""}],"src":"5867:222:25"},{"body":{"nodeType":"YulBlock","src":"6138:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"6195:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6204:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6197:6:25"},"nodeType":"YulFunctionCall","src":"6197:12:25"},"nodeType":"YulExpressionStatement","src":"6197:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6161:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6186:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6168:17:25"},"nodeType":"YulFunctionCall","src":"6168:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6158:2:25"},"nodeType":"YulFunctionCall","src":"6158:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6151:6:25"},"nodeType":"YulFunctionCall","src":"6151:43:25"},"nodeType":"YulIf","src":"6148:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6131:5:25","type":""}],"src":"6095:122:25"},{"body":{"nodeType":"YulBlock","src":"6275:87:25","statements":[{"nodeType":"YulAssignment","src":"6285:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6307:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6294:12:25"},"nodeType":"YulFunctionCall","src":"6294:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6285:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6350:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6323:26:25"},"nodeType":"YulFunctionCall","src":"6323:33:25"},"nodeType":"YulExpressionStatement","src":"6323:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6253:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6261:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6269:5:25","type":""}],"src":"6223:139:25"},{"body":{"nodeType":"YulBlock","src":"6434:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"6480:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6482:77:25"},"nodeType":"YulFunctionCall","src":"6482:79:25"},"nodeType":"YulExpressionStatement","src":"6482:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6455:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6464:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6451:3:25"},"nodeType":"YulFunctionCall","src":"6451:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6476:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6447:3:25"},"nodeType":"YulFunctionCall","src":"6447:32:25"},"nodeType":"YulIf","src":"6444:119:25"},{"nodeType":"YulBlock","src":"6573:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6588:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6602:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6592:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:25"},"nodeType":"YulFunctionCall","src":"6648:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:25"},"nodeType":"YulFunctionCall","src":"6627:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6617:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6404:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6415:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6427:6:25","type":""}],"src":"6368:329:25"},{"body":{"nodeType":"YulBlock","src":"6748:32:25","statements":[{"nodeType":"YulAssignment","src":"6758:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"6769:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6758:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6730:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6740:7:25","type":""}],"src":"6703:77:25"},{"body":{"nodeType":"YulBlock","src":"6829:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"6886:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6895:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6898:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6888:6:25"},"nodeType":"YulFunctionCall","src":"6888:12:25"},"nodeType":"YulExpressionStatement","src":"6888:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6852:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6877:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6859:17:25"},"nodeType":"YulFunctionCall","src":"6859:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6849:2:25"},"nodeType":"YulFunctionCall","src":"6849:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6842:6:25"},"nodeType":"YulFunctionCall","src":"6842:43:25"},"nodeType":"YulIf","src":"6839:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6822:5:25","type":""}],"src":"6786:122:25"},{"body":{"nodeType":"YulBlock","src":"6966:87:25","statements":[{"nodeType":"YulAssignment","src":"6976:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6998:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6985:12:25"},"nodeType":"YulFunctionCall","src":"6985:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6976:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7041:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7014:26:25"},"nodeType":"YulFunctionCall","src":"7014:33:25"},"nodeType":"YulExpressionStatement","src":"7014:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6944:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6952:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6960:5:25","type":""}],"src":"6914:139:25"},{"body":{"nodeType":"YulBlock","src":"7125:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"7171:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7173:77:25"},"nodeType":"YulFunctionCall","src":"7173:79:25"},"nodeType":"YulExpressionStatement","src":"7173:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7146:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7155:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7142:3:25"},"nodeType":"YulFunctionCall","src":"7142:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7167:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7138:3:25"},"nodeType":"YulFunctionCall","src":"7138:32:25"},"nodeType":"YulIf","src":"7135:119:25"},{"nodeType":"YulBlock","src":"7264:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7293:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7283:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7308:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7343:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7354:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7339:3:25"},"nodeType":"YulFunctionCall","src":"7339:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7363:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7318:20:25"},"nodeType":"YulFunctionCall","src":"7318:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7308:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7095:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7106:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7118:6:25","type":""}],"src":"7059:329:25"},{"body":{"nodeType":"YulBlock","src":"7459:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7476:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7499:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7481:17:25"},"nodeType":"YulFunctionCall","src":"7481:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7469:6:25"},"nodeType":"YulFunctionCall","src":"7469:37:25"},"nodeType":"YulExpressionStatement","src":"7469:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7447:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7454:3:25","type":""}],"src":"7394:118:25"},{"body":{"nodeType":"YulBlock","src":"7616:124:25","statements":[{"nodeType":"YulAssignment","src":"7626:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7638:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7634:3:25"},"nodeType":"YulFunctionCall","src":"7634:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7626:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7706:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7730:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7715:3:25"},"nodeType":"YulFunctionCall","src":"7715:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7662:43:25"},"nodeType":"YulFunctionCall","src":"7662:71:25"},"nodeType":"YulExpressionStatement","src":"7662:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7588:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7600:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7611:4:25","type":""}],"src":"7518:222:25"},{"body":{"nodeType":"YulBlock","src":"7812:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"7858:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7860:77:25"},"nodeType":"YulFunctionCall","src":"7860:79:25"},"nodeType":"YulExpressionStatement","src":"7860:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7833:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7842:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7829:3:25"},"nodeType":"YulFunctionCall","src":"7829:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7854:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7825:3:25"},"nodeType":"YulFunctionCall","src":"7825:32:25"},"nodeType":"YulIf","src":"7822:119:25"},{"nodeType":"YulBlock","src":"7951:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7966:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7980:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7970:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7995:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8030:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8041:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8026:3:25"},"nodeType":"YulFunctionCall","src":"8026:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8050:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8005:20:25"},"nodeType":"YulFunctionCall","src":"8005:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7995:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7782:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7793:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7805:6:25","type":""}],"src":"7746:329:25"},{"body":{"nodeType":"YulBlock","src":"8164:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"8210:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8212:77:25"},"nodeType":"YulFunctionCall","src":"8212:79:25"},"nodeType":"YulExpressionStatement","src":"8212:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8185:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8194:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8181:3:25"},"nodeType":"YulFunctionCall","src":"8181:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8206:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8177:3:25"},"nodeType":"YulFunctionCall","src":"8177:32:25"},"nodeType":"YulIf","src":"8174:119:25"},{"nodeType":"YulBlock","src":"8303:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8318:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8332:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8322:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8347:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8382:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8393:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8378:3:25"},"nodeType":"YulFunctionCall","src":"8378:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8402:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8357:20:25"},"nodeType":"YulFunctionCall","src":"8357:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8347:6:25"}]}]},{"nodeType":"YulBlock","src":"8430:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8445:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8459:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8449:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8475:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8510:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8521:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8506:3:25"},"nodeType":"YulFunctionCall","src":"8506:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8530:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8485:20:25"},"nodeType":"YulFunctionCall","src":"8485:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8475:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8126:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8137:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8149:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8157:6:25","type":""}],"src":"8081:474:25"},{"body":{"nodeType":"YulBlock","src":"8727:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"8776:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8778:77:25"},"nodeType":"YulFunctionCall","src":"8778:79:25"},"nodeType":"YulExpressionStatement","src":"8778:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8755:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8763:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8751:3:25"},"nodeType":"YulFunctionCall","src":"8751:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8770:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8747:3:25"},"nodeType":"YulFunctionCall","src":"8747:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8740:6:25"},"nodeType":"YulFunctionCall","src":"8740:35:25"},"nodeType":"YulIf","src":"8737:122:25"},{"nodeType":"YulAssignment","src":"8868:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8891:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8878:12:25"},"nodeType":"YulFunctionCall","src":"8878:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8868:6:25"}]},{"body":{"nodeType":"YulBlock","src":"8941:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8943:77:25"},"nodeType":"YulFunctionCall","src":"8943:79:25"},"nodeType":"YulExpressionStatement","src":"8943:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8913:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8921:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8910:2:25"},"nodeType":"YulFunctionCall","src":"8910:30:25"},"nodeType":"YulIf","src":"8907:117:25"},{"nodeType":"YulAssignment","src":"9033:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9049:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9057:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9045:3:25"},"nodeType":"YulFunctionCall","src":"9045:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9033:8:25"}]},{"body":{"nodeType":"YulBlock","src":"9116:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9118:77:25"},"nodeType":"YulFunctionCall","src":"9118:79:25"},"nodeType":"YulExpressionStatement","src":"9118:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9081:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9095:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9103:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9091:3:25"},"nodeType":"YulFunctionCall","src":"9091:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9077:3:25"},"nodeType":"YulFunctionCall","src":"9077:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"9111:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9074:2:25"},"nodeType":"YulFunctionCall","src":"9074:41:25"},"nodeType":"YulIf","src":"9071:128:25"}]},"name":"abi_decode_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8694:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8702:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8710:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8720:6:25","type":""}],"src":"8607:598:25"},{"body":{"nodeType":"YulBlock","src":"9342:488:25","statements":[{"body":{"nodeType":"YulBlock","src":"9388:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9390:77:25"},"nodeType":"YulFunctionCall","src":"9390:79:25"},"nodeType":"YulExpressionStatement","src":"9390:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9363:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9372:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9359:3:25"},"nodeType":"YulFunctionCall","src":"9359:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9384:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9355:3:25"},"nodeType":"YulFunctionCall","src":"9355:32:25"},"nodeType":"YulIf","src":"9352:119:25"},{"nodeType":"YulBlock","src":"9481:342:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9496:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9527:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9538:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9523:3:25"},"nodeType":"YulFunctionCall","src":"9523:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9510:12:25"},"nodeType":"YulFunctionCall","src":"9510:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9500:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9588:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9590:77:25"},"nodeType":"YulFunctionCall","src":"9590:79:25"},"nodeType":"YulExpressionStatement","src":"9590:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9560:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9568:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9557:2:25"},"nodeType":"YulFunctionCall","src":"9557:30:25"},"nodeType":"YulIf","src":"9554:117:25"},{"nodeType":"YulAssignment","src":"9685:128:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9796:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9781:3:25"},"nodeType":"YulFunctionCall","src":"9781:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9805:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"9703:77:25"},"nodeType":"YulFunctionCall","src":"9703:110:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9685:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"9693:6:25"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9304:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9315:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9327:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9335:6:25","type":""}],"src":"9211:619:25"},{"body":{"nodeType":"YulBlock","src":"9934:169:25","statements":[{"nodeType":"YulAssignment","src":"9944:18:25","value":{"name":"offset","nodeType":"YulIdentifier","src":"9956:6:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9944:8:25"}]},{"body":{"nodeType":"YulBlock","src":"10014:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"10016:77:25"},"nodeType":"YulFunctionCall","src":"10016:79:25"},"nodeType":"YulExpressionStatement","src":"10016:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9981:8:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9995:4:25","type":"","value":"0x03"},{"kind":"number","nodeType":"YulLiteral","src":"10001:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9991:3:25"},"nodeType":"YulFunctionCall","src":"9991:15:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9977:3:25"},"nodeType":"YulFunctionCall","src":"9977:30:25"},{"name":"end","nodeType":"YulIdentifier","src":"10009:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9974:2:25"},"nodeType":"YulFunctionCall","src":"9974:39:25"},"nodeType":"YulIf","src":"9971:126:25"}]},"name":"abi_decode_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9909:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"9917:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"9925:8:25","type":""}],"src":"9854:249:25"},{"body":{"nodeType":"YulBlock","src":"10371:1577:25","statements":[{"body":{"nodeType":"YulBlock","src":"10418:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10420:77:25"},"nodeType":"YulFunctionCall","src":"10420:79:25"},"nodeType":"YulExpressionStatement","src":"10420:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10392:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10401:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10388:3:25"},"nodeType":"YulFunctionCall","src":"10388:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10413:3:25","type":"","value":"416"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10384:3:25"},"nodeType":"YulFunctionCall","src":"10384:33:25"},"nodeType":"YulIf","src":"10381:120:25"},{"nodeType":"YulBlock","src":"10511:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10526:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10540:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10530:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10555:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10590:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10601:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10586:3:25"},"nodeType":"YulFunctionCall","src":"10586:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10610:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10565:20:25"},"nodeType":"YulFunctionCall","src":"10565:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10555:6:25"}]}]},{"nodeType":"YulBlock","src":"10638:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10653:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10667:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10657:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10683:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10718:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10729:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10714:3:25"},"nodeType":"YulFunctionCall","src":"10714:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10738:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10693:20:25"},"nodeType":"YulFunctionCall","src":"10693:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10683:6:25"}]}]},{"nodeType":"YulBlock","src":"10766:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10781:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10795:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10785:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10811:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10846:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10857:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10842:3:25"},"nodeType":"YulFunctionCall","src":"10842:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10866:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10821:20:25"},"nodeType":"YulFunctionCall","src":"10821:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10811:6:25"}]}]},{"nodeType":"YulBlock","src":"10894:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10909:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10923:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10913:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10939:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10974:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10985:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10970:3:25"},"nodeType":"YulFunctionCall","src":"10970:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10994:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10949:20:25"},"nodeType":"YulFunctionCall","src":"10949:53:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10939:6:25"}]}]},{"nodeType":"YulBlock","src":"11022:144:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11037:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11051:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11041:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11068:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11128:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11139:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11124:3:25"},"nodeType":"YulFunctionCall","src":"11124:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11148:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"11078:45:25"},"nodeType":"YulFunctionCall","src":"11078:78:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11068:6:25"}]}]},{"nodeType":"YulBlock","src":"11176:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11191:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11205:3:25","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11195:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11222:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11257:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11268:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11253:3:25"},"nodeType":"YulFunctionCall","src":"11253:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11277:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11232:20:25"},"nodeType":"YulFunctionCall","src":"11232:53:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11222:6:25"}]}]},{"nodeType":"YulBlock","src":"11305:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11320:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11334:3:25","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11324:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11351:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11386:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11397:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:25"},"nodeType":"YulFunctionCall","src":"11382:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11406:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11361:20:25"},"nodeType":"YulFunctionCall","src":"11361:53:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11351:6:25"}]}]},{"nodeType":"YulBlock","src":"11434:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11449:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11463:3:25","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11453:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11480:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11515:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11526:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11511:3:25"},"nodeType":"YulFunctionCall","src":"11511:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11535:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11490:20:25"},"nodeType":"YulFunctionCall","src":"11490:53:25"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"11480:6:25"}]}]},{"nodeType":"YulBlock","src":"11563:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11578:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11592:3:25","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11582:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11609:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11644:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11655:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11640:3:25"},"nodeType":"YulFunctionCall","src":"11640:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11664:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11619:20:25"},"nodeType":"YulFunctionCall","src":"11619:53:25"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"11609:6:25"}]}]},{"nodeType":"YulBlock","src":"11692:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11707:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11721:3:25","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11711:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11738:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11773:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11784:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11769:3:25"},"nodeType":"YulFunctionCall","src":"11769:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11793:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11748:20:25"},"nodeType":"YulFunctionCall","src":"11748:53:25"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"11738:6:25"}]}]},{"nodeType":"YulBlock","src":"11821:120:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11836:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11850:3:25","type":"","value":"384"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11840:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11867:64:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11903:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11914:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11899:3:25"},"nodeType":"YulFunctionCall","src":"11899:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11923:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11878:20:25"},"nodeType":"YulFunctionCall","src":"11878:53:25"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"11867:7:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10260:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10271:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10283:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10291:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10299:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10307:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10315:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10323:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10331:6:25","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10339:6:25","type":""},{"name":"value8","nodeType":"YulTypedName","src":"10347:6:25","type":""},{"name":"value9","nodeType":"YulTypedName","src":"10355:6:25","type":""},{"name":"value10","nodeType":"YulTypedName","src":"10363:7:25","type":""}],"src":"10109:1839:25"},{"body":{"nodeType":"YulBlock","src":"12043:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12060:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12063:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12053:6:25"},"nodeType":"YulFunctionCall","src":"12053:12:25"},"nodeType":"YulExpressionStatement","src":"12053:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"11954:117:25"},{"body":{"nodeType":"YulBlock","src":"12125:54:25","statements":[{"nodeType":"YulAssignment","src":"12135:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12153:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"12160:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12149:3:25"},"nodeType":"YulFunctionCall","src":"12149:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12169:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12165:3:25"},"nodeType":"YulFunctionCall","src":"12165:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12145:3:25"},"nodeType":"YulFunctionCall","src":"12145:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12135:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12108:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12118:6:25","type":""}],"src":"12077:102:25"},{"body":{"nodeType":"YulBlock","src":"12213:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12230:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12233:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12223:6:25"},"nodeType":"YulFunctionCall","src":"12223:88:25"},"nodeType":"YulExpressionStatement","src":"12223:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12327:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12330:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12320:6:25"},"nodeType":"YulFunctionCall","src":"12320:15:25"},"nodeType":"YulExpressionStatement","src":"12320:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12351:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12354:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12344:6:25"},"nodeType":"YulFunctionCall","src":"12344:15:25"},"nodeType":"YulExpressionStatement","src":"12344:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12185:180:25"},{"body":{"nodeType":"YulBlock","src":"12414:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12424:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12446:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12476:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12454:21:25"},"nodeType":"YulFunctionCall","src":"12454:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12442:3:25"},"nodeType":"YulFunctionCall","src":"12442:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"12428:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12593:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12595:16:25"},"nodeType":"YulFunctionCall","src":"12595:18:25"},"nodeType":"YulExpressionStatement","src":"12595:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12536:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"12548:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12533:2:25"},"nodeType":"YulFunctionCall","src":"12533:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12572:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"12584:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12569:2:25"},"nodeType":"YulFunctionCall","src":"12569:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12530:2:25"},"nodeType":"YulFunctionCall","src":"12530:62:25"},"nodeType":"YulIf","src":"12527:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12631:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12635:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12624:6:25"},"nodeType":"YulFunctionCall","src":"12624:22:25"},"nodeType":"YulExpressionStatement","src":"12624:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12400:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"12408:4:25","type":""}],"src":"12371:281:25"},{"body":{"nodeType":"YulBlock","src":"12699:88:25","statements":[{"nodeType":"YulAssignment","src":"12709:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"12719:18:25"},"nodeType":"YulFunctionCall","src":"12719:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12709:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12768:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"12776:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"12748:19:25"},"nodeType":"YulFunctionCall","src":"12748:33:25"},"nodeType":"YulExpressionStatement","src":"12748:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"12683:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12692:6:25","type":""}],"src":"12658:129:25"},{"body":{"nodeType":"YulBlock","src":"12860:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"12965:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12967:16:25"},"nodeType":"YulFunctionCall","src":"12967:18:25"},"nodeType":"YulExpressionStatement","src":"12967:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12937:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12945:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12934:2:25"},"nodeType":"YulFunctionCall","src":"12934:30:25"},"nodeType":"YulIf","src":"12931:56:25"},{"nodeType":"YulAssignment","src":"12997:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13027:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13005:21:25"},"nodeType":"YulFunctionCall","src":"13005:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12997:4:25"}]},{"nodeType":"YulAssignment","src":"13071:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13083:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"13089:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13079:3:25"},"nodeType":"YulFunctionCall","src":"13079:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13071:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12844:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12855:4:25","type":""}],"src":"12793:308:25"},{"body":{"nodeType":"YulBlock","src":"13171:82:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13194:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"13199:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13204:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13181:12:25"},"nodeType":"YulFunctionCall","src":"13181:30:25"},"nodeType":"YulExpressionStatement","src":"13181:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13231:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13236:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13227:3:25"},"nodeType":"YulFunctionCall","src":"13227:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"13245:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13220:6:25"},"nodeType":"YulFunctionCall","src":"13220:27:25"},"nodeType":"YulExpressionStatement","src":"13220:27:25"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13153:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13158:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"13163:6:25","type":""}],"src":"13107:146:25"},{"body":{"nodeType":"YulBlock","src":"13343:341:25","statements":[{"nodeType":"YulAssignment","src":"13353:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13420:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13378:41:25"},"nodeType":"YulFunctionCall","src":"13378:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13362:15:25"},"nodeType":"YulFunctionCall","src":"13362:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13353:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13444:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"13451:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13437:6:25"},"nodeType":"YulFunctionCall","src":"13437:21:25"},"nodeType":"YulExpressionStatement","src":"13437:21:25"},{"nodeType":"YulVariableDeclaration","src":"13467:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13482:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13489:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13478:3:25"},"nodeType":"YulFunctionCall","src":"13478:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13471:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13532:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13534:77:25"},"nodeType":"YulFunctionCall","src":"13534:79:25"},"nodeType":"YulExpressionStatement","src":"13534:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13513:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13518:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13509:3:25"},"nodeType":"YulFunctionCall","src":"13509:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"13527:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13506:2:25"},"nodeType":"YulFunctionCall","src":"13506:25:25"},"nodeType":"YulIf","src":"13503:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13661:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"13666:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13671:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13624:36:25"},"nodeType":"YulFunctionCall","src":"13624:54:25"},"nodeType":"YulExpressionStatement","src":"13624:54:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13316:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"13321:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"13329:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13337:5:25","type":""}],"src":"13259:425:25"},{"body":{"nodeType":"YulBlock","src":"13766:278:25","statements":[{"body":{"nodeType":"YulBlock","src":"13815:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13817:77:25"},"nodeType":"YulFunctionCall","src":"13817:79:25"},"nodeType":"YulExpressionStatement","src":"13817:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13794:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13802:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:25"},"nodeType":"YulFunctionCall","src":"13790:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"13809:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13786:3:25"},"nodeType":"YulFunctionCall","src":"13786:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13779:6:25"},"nodeType":"YulFunctionCall","src":"13779:35:25"},"nodeType":"YulIf","src":"13776:122:25"},{"nodeType":"YulVariableDeclaration","src":"13907:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13934:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13921:12:25"},"nodeType":"YulFunctionCall","src":"13921:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13911:6:25","type":""}]},{"nodeType":"YulAssignment","src":"13950:88:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14011:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14019:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14007:3:25"},"nodeType":"YulFunctionCall","src":"14007:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"14026:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"14034:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13959:47:25"},"nodeType":"YulFunctionCall","src":"13959:79:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13950:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13744:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"13752:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13760:5:25","type":""}],"src":"13704:340:25"},{"body":{"nodeType":"YulBlock","src":"14126:433:25","statements":[{"body":{"nodeType":"YulBlock","src":"14172:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14174:77:25"},"nodeType":"YulFunctionCall","src":"14174:79:25"},"nodeType":"YulExpressionStatement","src":"14174:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14147:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14156:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14143:3:25"},"nodeType":"YulFunctionCall","src":"14143:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"14168:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14139:3:25"},"nodeType":"YulFunctionCall","src":"14139:32:25"},"nodeType":"YulIf","src":"14136:119:25"},{"nodeType":"YulBlock","src":"14265:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14280:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14311:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14322:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:25"},"nodeType":"YulFunctionCall","src":"14307:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14294:12:25"},"nodeType":"YulFunctionCall","src":"14294:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14284:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"14372:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14374:77:25"},"nodeType":"YulFunctionCall","src":"14374:79:25"},"nodeType":"YulExpressionStatement","src":"14374:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14344:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14352:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14341:2:25"},"nodeType":"YulFunctionCall","src":"14341:30:25"},"nodeType":"YulIf","src":"14338:117:25"},{"nodeType":"YulAssignment","src":"14469:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14514:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"14525:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14510:3:25"},"nodeType":"YulFunctionCall","src":"14510:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14534:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14479:30:25"},"nodeType":"YulFunctionCall","src":"14479:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14469:6:25"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14096:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14107:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14119:6:25","type":""}],"src":"14050:509:25"},{"body":{"nodeType":"YulBlock","src":"14630:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14647:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14670:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14652:17:25"},"nodeType":"YulFunctionCall","src":"14652:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14640:6:25"},"nodeType":"YulFunctionCall","src":"14640:37:25"},"nodeType":"YulExpressionStatement","src":"14640:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14618:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14625:3:25","type":""}],"src":"14565:118:25"},{"body":{"nodeType":"YulBlock","src":"14787:124:25","statements":[{"nodeType":"YulAssignment","src":"14797:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14809:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14820:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14805:3:25"},"nodeType":"YulFunctionCall","src":"14805:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14797:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14877:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14890:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14901:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14886:3:25"},"nodeType":"YulFunctionCall","src":"14886:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14833:43:25"},"nodeType":"YulFunctionCall","src":"14833:71:25"},"nodeType":"YulExpressionStatement","src":"14833:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14759:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14771:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14782:4:25","type":""}],"src":"14689:222:25"},{"body":{"nodeType":"YulBlock","src":"14976:40:25","statements":[{"nodeType":"YulAssignment","src":"14987:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15003:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14997:5:25"},"nodeType":"YulFunctionCall","src":"14997:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14987:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14959:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14969:6:25","type":""}],"src":"14917:99:25"},{"body":{"nodeType":"YulBlock","src":"15118:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15135:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15140:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15128:6:25"},"nodeType":"YulFunctionCall","src":"15128:19:25"},"nodeType":"YulExpressionStatement","src":"15128:19:25"},{"nodeType":"YulAssignment","src":"15156:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15175:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15180:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15171:3:25"},"nodeType":"YulFunctionCall","src":"15171:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15156:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15090:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"15095:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15106:11:25","type":""}],"src":"15022:169:25"},{"body":{"nodeType":"YulBlock","src":"15259:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15269:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15278:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15273:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"15338:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15363:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"15368:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15359:3:25"},"nodeType":"YulFunctionCall","src":"15359:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15382:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"15387:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15378:3:25"},"nodeType":"YulFunctionCall","src":"15378:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15372:5:25"},"nodeType":"YulFunctionCall","src":"15372:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15352:6:25"},"nodeType":"YulFunctionCall","src":"15352:39:25"},"nodeType":"YulExpressionStatement","src":"15352:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15299:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"15302:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15296:2:25"},"nodeType":"YulFunctionCall","src":"15296:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15310:19:25","statements":[{"nodeType":"YulAssignment","src":"15312:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15321:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"15324:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15317:3:25"},"nodeType":"YulFunctionCall","src":"15317:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15312:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"15292:3:25","statements":[]},"src":"15288:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15421:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15426:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15417:3:25"},"nodeType":"YulFunctionCall","src":"15417:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"15435:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15410:6:25"},"nodeType":"YulFunctionCall","src":"15410:27:25"},"nodeType":"YulExpressionStatement","src":"15410:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"15241:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"15246:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"15251:6:25","type":""}],"src":"15197:246:25"},{"body":{"nodeType":"YulBlock","src":"15541:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15551:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15598:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15565:32:25"},"nodeType":"YulFunctionCall","src":"15565:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15555:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15613:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15679:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15684:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15620:58:25"},"nodeType":"YulFunctionCall","src":"15620:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15613:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15739:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"15746:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15735:3:25"},"nodeType":"YulFunctionCall","src":"15735:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"15753:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15758:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15700:34:25"},"nodeType":"YulFunctionCall","src":"15700:65:25"},"nodeType":"YulExpressionStatement","src":"15700:65:25"},{"nodeType":"YulAssignment","src":"15774:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15785:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15812:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15790:21:25"},"nodeType":"YulFunctionCall","src":"15790:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15781:3:25"},"nodeType":"YulFunctionCall","src":"15781:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15774:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15522:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15529:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15537:3:25","type":""}],"src":"15449:377:25"},{"body":{"nodeType":"YulBlock","src":"15950:195:25","statements":[{"nodeType":"YulAssignment","src":"15960:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15972:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15983:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15968:3:25"},"nodeType":"YulFunctionCall","src":"15968:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15960:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16007:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16018:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16003:3:25"},"nodeType":"YulFunctionCall","src":"16003:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16026:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16032:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16022:3:25"},"nodeType":"YulFunctionCall","src":"16022:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15996:6:25"},"nodeType":"YulFunctionCall","src":"15996:47:25"},"nodeType":"YulExpressionStatement","src":"15996:47:25"},{"nodeType":"YulAssignment","src":"16052:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16124:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"16133:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16060:63:25"},"nodeType":"YulFunctionCall","src":"16060:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16052:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15922:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15934:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15945:4:25","type":""}],"src":"15832:313:25"},{"body":{"nodeType":"YulBlock","src":"16234:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"16280:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16282:77:25"},"nodeType":"YulFunctionCall","src":"16282:79:25"},"nodeType":"YulExpressionStatement","src":"16282:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16255:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16264:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16251:3:25"},"nodeType":"YulFunctionCall","src":"16251:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"16276:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16247:3:25"},"nodeType":"YulFunctionCall","src":"16247:32:25"},"nodeType":"YulIf","src":"16244:119:25"},{"nodeType":"YulBlock","src":"16373:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16388:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16402:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16392:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16417:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16452:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16463:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16448:3:25"},"nodeType":"YulFunctionCall","src":"16448:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16472:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16427:20:25"},"nodeType":"YulFunctionCall","src":"16427:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16417:6:25"}]}]},{"nodeType":"YulBlock","src":"16500:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16515:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16529:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16519:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16545:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16580:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16591:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16576:3:25"},"nodeType":"YulFunctionCall","src":"16576:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16600:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16555:20:25"},"nodeType":"YulFunctionCall","src":"16555:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16545:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16196:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16207:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16219:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16227:6:25","type":""}],"src":"16151:474:25"},{"body":{"nodeType":"YulBlock","src":"16659:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16676:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16679:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16669:6:25"},"nodeType":"YulFunctionCall","src":"16669:88:25"},"nodeType":"YulExpressionStatement","src":"16669:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16773:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16776:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16766:6:25"},"nodeType":"YulFunctionCall","src":"16766:15:25"},"nodeType":"YulExpressionStatement","src":"16766:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16797:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16800:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16790:6:25"},"nodeType":"YulFunctionCall","src":"16790:15:25"},"nodeType":"YulExpressionStatement","src":"16790:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16631:180:25"},{"body":{"nodeType":"YulBlock","src":"16931:34:25","statements":[{"nodeType":"YulAssignment","src":"16941:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"16956:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16941:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16903:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"16908:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16919:11:25","type":""}],"src":"16817:148:25"},{"body":{"nodeType":"YulBlock","src":"17115:210:25","statements":[{"nodeType":"YulAssignment","src":"17125:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17209:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17214:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17132:76:25"},"nodeType":"YulFunctionCall","src":"17132:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17125:3:25"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17268:5:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17275:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17280:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17231:36:25"},"nodeType":"YulFunctionCall","src":"17231:56:25"},"nodeType":"YulExpressionStatement","src":"17231:56:25"},{"nodeType":"YulAssignment","src":"17296:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17307:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17312:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17303:3:25"},"nodeType":"YulFunctionCall","src":"17303:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17296:3:25"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17088:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"17095:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17103:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17111:3:25","type":""}],"src":"16995:330:25"},{"body":{"nodeType":"YulBlock","src":"17477:149:25","statements":[{"nodeType":"YulAssignment","src":"17488:112:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17579:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"17587:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17596:3:25"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17495:83:25"},"nodeType":"YulFunctionCall","src":"17495:105:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:25"}]},{"nodeType":"YulAssignment","src":"17610:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"17617:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17610:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17448:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17454:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17462:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17473:3:25","type":""}],"src":"17331:295:25"},{"body":{"nodeType":"YulBlock","src":"17758:215:25","statements":[{"nodeType":"YulAssignment","src":"17768:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17834:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17839:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17775:58:25"},"nodeType":"YulFunctionCall","src":"17775:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17768:3:25"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17893:5:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17900:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17905:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17856:36:25"},"nodeType":"YulFunctionCall","src":"17856:56:25"},"nodeType":"YulExpressionStatement","src":"17856:56:25"},{"nodeType":"YulAssignment","src":"17921:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17932:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17959:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17937:21:25"},"nodeType":"YulFunctionCall","src":"17937:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17928:3:25"},"nodeType":"YulFunctionCall","src":"17928:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17921:3:25"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17731:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"17738:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17746:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17754:3:25","type":""}],"src":"17656:317:25"},{"body":{"nodeType":"YulBlock","src":"18191:452:25","statements":[{"nodeType":"YulAssignment","src":"18201:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18213:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18224:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18209:3:25"},"nodeType":"YulFunctionCall","src":"18209:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18201:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18282:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18295:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18306:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18291:3:25"},"nodeType":"YulFunctionCall","src":"18291:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18238:43:25"},"nodeType":"YulFunctionCall","src":"18238:71:25"},"nodeType":"YulExpressionStatement","src":"18238:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18330:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18341:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18326:3:25"},"nodeType":"YulFunctionCall","src":"18326:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18350:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"18356:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18346:3:25"},"nodeType":"YulFunctionCall","src":"18346:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18319:6:25"},"nodeType":"YulFunctionCall","src":"18319:48:25"},"nodeType":"YulExpressionStatement","src":"18319:48:25"},{"nodeType":"YulAssignment","src":"18376:96:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18450:6:25"},{"name":"value2","nodeType":"YulIdentifier","src":"18458:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"18467:4:25"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18384:65:25"},"nodeType":"YulFunctionCall","src":"18384:88:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18376:4:25"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18526:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18539:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18550:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:25"},"nodeType":"YulFunctionCall","src":"18535:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18482:43:25"},"nodeType":"YulFunctionCall","src":"18482:72:25"},"nodeType":"YulExpressionStatement","src":"18482:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18608:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18621:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18632:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18617:3:25"},"nodeType":"YulFunctionCall","src":"18617:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18564:43:25"},"nodeType":"YulFunctionCall","src":"18564:72:25"},"nodeType":"YulExpressionStatement","src":"18564:72:25"}]},"name":"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18131:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18143:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18151:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18159:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18167:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18175:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18186:4:25","type":""}],"src":"17979:664:25"},{"body":{"nodeType":"YulBlock","src":"18755:57:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18777:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18785:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18773:3:25"},"nodeType":"YulFunctionCall","src":"18773:14:25"},{"hexValue":"57697468647261773041646472","kind":"string","nodeType":"YulLiteral","src":"18789:15:25","type":"","value":"Withdraw0Addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18766:6:25"},"nodeType":"YulFunctionCall","src":"18766:39:25"},"nodeType":"YulExpressionStatement","src":"18766:39:25"}]},"name":"store_literal_in_memory_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18747:6:25","type":""}],"src":"18649:163:25"},{"body":{"nodeType":"YulBlock","src":"18964:220:25","statements":[{"nodeType":"YulAssignment","src":"18974:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19040:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19045:2:25","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18981:58:25"},"nodeType":"YulFunctionCall","src":"18981:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18974:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19146:3:25"}],"functionName":{"name":"store_literal_in_memory_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f","nodeType":"YulIdentifier","src":"19057:88:25"},"nodeType":"YulFunctionCall","src":"19057:93:25"},"nodeType":"YulExpressionStatement","src":"19057:93:25"},{"nodeType":"YulAssignment","src":"19159:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19170:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19175:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19166:3:25"},"nodeType":"YulFunctionCall","src":"19166:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19159:3:25"}]}]},"name":"abi_encode_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18952:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18960:3:25","type":""}],"src":"18818:366:25"},{"body":{"nodeType":"YulBlock","src":"19361:248:25","statements":[{"nodeType":"YulAssignment","src":"19371:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19383:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19394:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19379:3:25"},"nodeType":"YulFunctionCall","src":"19379:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19371:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19418:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19429:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19414:3:25"},"nodeType":"YulFunctionCall","src":"19414:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19437:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19443:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19433:3:25"},"nodeType":"YulFunctionCall","src":"19433:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19407:6:25"},"nodeType":"YulFunctionCall","src":"19407:47:25"},"nodeType":"YulExpressionStatement","src":"19407:47:25"},{"nodeType":"YulAssignment","src":"19463:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19597:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19471:124:25"},"nodeType":"YulFunctionCall","src":"19471:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19463:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19341:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19356:4:25","type":""}],"src":"19190:419:25"},{"body":{"nodeType":"YulBlock","src":"19704:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19721:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19724:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19714:6:25"},"nodeType":"YulFunctionCall","src":"19714:12:25"},"nodeType":"YulExpressionStatement","src":"19714:12:25"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"19615:117:25"},{"body":{"nodeType":"YulBlock","src":"19827:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19844:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19847:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19837:6:25"},"nodeType":"YulFunctionCall","src":"19837:12:25"},"nodeType":"YulExpressionStatement","src":"19837:12:25"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"19738:117:25"},{"body":{"nodeType":"YulBlock","src":"19950:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19967:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19970:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19960:6:25"},"nodeType":"YulFunctionCall","src":"19960:12:25"},"nodeType":"YulExpressionStatement","src":"19960:12:25"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"19861:117:25"},{"body":{"nodeType":"YulBlock","src":"20085:295:25","statements":[{"nodeType":"YulVariableDeclaration","src":"20095:51:25","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"20134:11:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20121:12:25"},"nodeType":"YulFunctionCall","src":"20121:25:25"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"20099:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"20240:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"20242:77:25"},"nodeType":"YulFunctionCall","src":"20242:79:25"},"nodeType":"YulExpressionStatement","src":"20242:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"20169:18:25"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"20197:12:25"},"nodeType":"YulFunctionCall","src":"20197:14:25"},{"name":"base_ref","nodeType":"YulIdentifier","src":"20213:8:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20193:3:25"},"nodeType":"YulFunctionCall","src":"20193:29:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20228:4:25","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"20234:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20224:3:25"},"nodeType":"YulFunctionCall","src":"20224:12:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20189:3:25"},"nodeType":"YulFunctionCall","src":"20189:48:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20165:3:25"},"nodeType":"YulFunctionCall","src":"20165:73:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20158:6:25"},"nodeType":"YulFunctionCall","src":"20158:81:25"},"nodeType":"YulIf","src":"20155:168:25"},{"nodeType":"YulAssignment","src":"20332:41:25","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"20344:8:25"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"20354:18:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20340:3:25"},"nodeType":"YulFunctionCall","src":"20340:33:25"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"20332:4:25"}]}]},"name":"access_calldata_tail_t_struct$_SwapParams_$6069_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"20054:8:25","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"20064:11:25","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"20080:4:25","type":""}],"src":"19984:396:25"},{"body":{"nodeType":"YulBlock","src":"20493:295:25","statements":[{"nodeType":"YulVariableDeclaration","src":"20503:51:25","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"20542:11:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20529:12:25"},"nodeType":"YulFunctionCall","src":"20529:25:25"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"20507:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"20648:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"20650:77:25"},"nodeType":"YulFunctionCall","src":"20650:79:25"},"nodeType":"YulExpressionStatement","src":"20650:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"20577:18:25"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"20605:12:25"},"nodeType":"YulFunctionCall","src":"20605:14:25"},{"name":"base_ref","nodeType":"YulIdentifier","src":"20621:8:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20601:3:25"},"nodeType":"YulFunctionCall","src":"20601:29:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20636:4:25","type":"","value":"0xa0"},{"kind":"number","nodeType":"YulLiteral","src":"20642:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20632:3:25"},"nodeType":"YulFunctionCall","src":"20632:12:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20597:3:25"},"nodeType":"YulFunctionCall","src":"20597:48:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20573:3:25"},"nodeType":"YulFunctionCall","src":"20573:73:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20566:6:25"},"nodeType":"YulFunctionCall","src":"20566:81:25"},"nodeType":"YulIf","src":"20563:168:25"},{"nodeType":"YulAssignment","src":"20740:41:25","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"20752:8:25"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"20762:18:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20748:3:25"},"nodeType":"YulFunctionCall","src":"20748:33:25"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"20740:4:25"}]}]},"name":"access_calldata_tail_t_struct$_ExactInputParams_$5150_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"20462:8:25","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"20472:11:25","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"20488:4:25","type":""}],"src":"20386:402:25"},{"body":{"nodeType":"YulBlock","src":"20900:57:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20922:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20930:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20918:3:25"},"nodeType":"YulFunctionCall","src":"20918:14:25"},{"hexValue":"45727220726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"20934:15:25","type":"","value":"Err recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20911:6:25"},"nodeType":"YulFunctionCall","src":"20911:39:25"},"nodeType":"YulExpressionStatement","src":"20911:39:25"}]},"name":"store_literal_in_memory_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20892:6:25","type":""}],"src":"20794:163:25"},{"body":{"nodeType":"YulBlock","src":"21109:220:25","statements":[{"nodeType":"YulAssignment","src":"21119:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21185:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21190:2:25","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21126:58:25"},"nodeType":"YulFunctionCall","src":"21126:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21119:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21291:3:25"}],"functionName":{"name":"store_literal_in_memory_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7","nodeType":"YulIdentifier","src":"21202:88:25"},"nodeType":"YulFunctionCall","src":"21202:93:25"},"nodeType":"YulExpressionStatement","src":"21202:93:25"},{"nodeType":"YulAssignment","src":"21304:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21315:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21311:3:25"},"nodeType":"YulFunctionCall","src":"21311:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21304:3:25"}]}]},"name":"abi_encode_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21097:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21105:3:25","type":""}],"src":"20963:366:25"},{"body":{"nodeType":"YulBlock","src":"21506:248:25","statements":[{"nodeType":"YulAssignment","src":"21516:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21528:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21539:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21524:3:25"},"nodeType":"YulFunctionCall","src":"21524:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21516:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21563:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21574:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21559:3:25"},"nodeType":"YulFunctionCall","src":"21559:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21582:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"21588:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21578:3:25"},"nodeType":"YulFunctionCall","src":"21578:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21552:6:25"},"nodeType":"YulFunctionCall","src":"21552:47:25"},"nodeType":"YulExpressionStatement","src":"21552:47:25"},{"nodeType":"YulAssignment","src":"21608:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21742:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21616:124:25"},"nodeType":"YulFunctionCall","src":"21616:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21608:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21486:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21501:4:25","type":""}],"src":"21335:419:25"},{"body":{"nodeType":"YulBlock","src":"21866:53:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21888:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"21896:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21884:3:25"},"nodeType":"YulFunctionCall","src":"21884:14:25"},{"hexValue":"45727220536c697070","kind":"string","nodeType":"YulLiteral","src":"21900:11:25","type":"","value":"Err Slipp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21877:6:25"},"nodeType":"YulFunctionCall","src":"21877:35:25"},"nodeType":"YulExpressionStatement","src":"21877:35:25"}]},"name":"store_literal_in_memory_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21858:6:25","type":""}],"src":"21760:159:25"},{"body":{"nodeType":"YulBlock","src":"22071:219:25","statements":[{"nodeType":"YulAssignment","src":"22081:73:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22147:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22152:1:25","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22088:58:25"},"nodeType":"YulFunctionCall","src":"22088:66:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22081:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22252:3:25"}],"functionName":{"name":"store_literal_in_memory_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b","nodeType":"YulIdentifier","src":"22163:88:25"},"nodeType":"YulFunctionCall","src":"22163:93:25"},"nodeType":"YulExpressionStatement","src":"22163:93:25"},{"nodeType":"YulAssignment","src":"22265:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22276:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22281:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22272:3:25"},"nodeType":"YulFunctionCall","src":"22272:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22265:3:25"}]}]},"name":"abi_encode_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22059:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22067:3:25","type":""}],"src":"21925:365:25"},{"body":{"nodeType":"YulBlock","src":"22467:248:25","statements":[{"nodeType":"YulAssignment","src":"22477:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22489:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22500:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22485:3:25"},"nodeType":"YulFunctionCall","src":"22485:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22477:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22524:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22535:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22520:3:25"},"nodeType":"YulFunctionCall","src":"22520:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22543:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22549:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22539:3:25"},"nodeType":"YulFunctionCall","src":"22539:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22513:6:25"},"nodeType":"YulFunctionCall","src":"22513:47:25"},"nodeType":"YulExpressionStatement","src":"22513:47:25"},{"nodeType":"YulAssignment","src":"22569:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22703:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22577:124:25"},"nodeType":"YulFunctionCall","src":"22577:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22569:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22447:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22462:4:25","type":""}],"src":"22296:419:25"},{"body":{"nodeType":"YulBlock","src":"22827:48:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22849:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"22857:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22845:3:25"},"nodeType":"YulFunctionCall","src":"22845:14:25"},{"hexValue":"55534443","kind":"string","nodeType":"YulLiteral","src":"22861:6:25","type":"","value":"USDC"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22838:6:25"},"nodeType":"YulFunctionCall","src":"22838:30:25"},"nodeType":"YulExpressionStatement","src":"22838:30:25"}]},"name":"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22819:6:25","type":""}],"src":"22721:154:25"},{"body":{"nodeType":"YulBlock","src":"23045:236:25","statements":[{"nodeType":"YulAssignment","src":"23055:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23139:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23144:1:25","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23062:76:25"},"nodeType":"YulFunctionCall","src":"23062:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23055:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23244:3:25"}],"functionName":{"name":"store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","nodeType":"YulIdentifier","src":"23155:88:25"},"nodeType":"YulFunctionCall","src":"23155:93:25"},"nodeType":"YulExpressionStatement","src":"23155:93:25"},{"nodeType":"YulAssignment","src":"23257:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23268:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23273:1:25","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23264:3:25"},"nodeType":"YulFunctionCall","src":"23264:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23257:3:25"}]}]},"name":"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23033:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23041:3:25","type":""}],"src":"22881:400:25"},{"body":{"nodeType":"YulBlock","src":"23476:192:25","statements":[{"nodeType":"YulAssignment","src":"23487:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23638:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23494:142:25"},"nodeType":"YulFunctionCall","src":"23494:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23487:3:25"}]},{"nodeType":"YulAssignment","src":"23652:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"23659:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23652:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23463:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23472:3:25","type":""}],"src":"23287:381:25"},{"body":{"nodeType":"YulBlock","src":"23780:48:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23802:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"23810:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23798:3:25"},"nodeType":"YulFunctionCall","src":"23798:14:25"},{"hexValue":"55534454","kind":"string","nodeType":"YulLiteral","src":"23814:6:25","type":"","value":"USDT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23791:6:25"},"nodeType":"YulFunctionCall","src":"23791:30:25"},"nodeType":"YulExpressionStatement","src":"23791:30:25"}]},"name":"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23772:6:25","type":""}],"src":"23674:154:25"},{"body":{"nodeType":"YulBlock","src":"23998:236:25","statements":[{"nodeType":"YulAssignment","src":"24008:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24092:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24097:1:25","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24015:76:25"},"nodeType":"YulFunctionCall","src":"24015:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24008:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24197:3:25"}],"functionName":{"name":"store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0","nodeType":"YulIdentifier","src":"24108:88:25"},"nodeType":"YulFunctionCall","src":"24108:93:25"},"nodeType":"YulExpressionStatement","src":"24108:93:25"},{"nodeType":"YulAssignment","src":"24210:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24221:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24226:1:25","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24217:3:25"},"nodeType":"YulFunctionCall","src":"24217:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24210:3:25"}]}]},"name":"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23986:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23994:3:25","type":""}],"src":"23834:400:25"},{"body":{"nodeType":"YulBlock","src":"24429:192:25","statements":[{"nodeType":"YulAssignment","src":"24440:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24591:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24447:142:25"},"nodeType":"YulFunctionCall","src":"24447:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24440:3:25"}]},{"nodeType":"YulAssignment","src":"24605:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"24612:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24605:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24416:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24425:3:25","type":""}],"src":"24240:381:25"},{"body":{"nodeType":"YulBlock","src":"24733:48:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24755:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24763:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24751:3:25"},"nodeType":"YulFunctionCall","src":"24751:14:25"},{"hexValue":"5553444d","kind":"string","nodeType":"YulLiteral","src":"24767:6:25","type":"","value":"USDM"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24744:6:25"},"nodeType":"YulFunctionCall","src":"24744:30:25"},"nodeType":"YulExpressionStatement","src":"24744:30:25"}]},"name":"store_literal_in_memory_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24725:6:25","type":""}],"src":"24627:154:25"},{"body":{"nodeType":"YulBlock","src":"24951:236:25","statements":[{"nodeType":"YulAssignment","src":"24961:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25045:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25050:1:25","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24968:76:25"},"nodeType":"YulFunctionCall","src":"24968:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24961:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25150:3:25"}],"functionName":{"name":"store_literal_in_memory_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9","nodeType":"YulIdentifier","src":"25061:88:25"},"nodeType":"YulFunctionCall","src":"25061:93:25"},"nodeType":"YulExpressionStatement","src":"25061:93:25"},{"nodeType":"YulAssignment","src":"25163:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25174:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25179:1:25","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25170:3:25"},"nodeType":"YulFunctionCall","src":"25170:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25163:3:25"}]}]},"name":"abi_encode_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24939:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24947:3:25","type":""}],"src":"24787:400:25"},{"body":{"nodeType":"YulBlock","src":"25382:192:25","statements":[{"nodeType":"YulAssignment","src":"25393:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25544:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25400:142:25"},"nodeType":"YulFunctionCall","src":"25400:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25393:3:25"}]},{"nodeType":"YulAssignment","src":"25558:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"25565:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25558:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25369:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25378:3:25","type":""}],"src":"25193:381:25"},{"body":{"nodeType":"YulBlock","src":"25686:56:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25708:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25716:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25704:3:25"},"nodeType":"YulFunctionCall","src":"25704:14:25"},{"hexValue":"45727220546f6b656e4f7574","kind":"string","nodeType":"YulLiteral","src":"25720:14:25","type":"","value":"Err TokenOut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25697:6:25"},"nodeType":"YulFunctionCall","src":"25697:38:25"},"nodeType":"YulExpressionStatement","src":"25697:38:25"}]},"name":"store_literal_in_memory_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25678:6:25","type":""}],"src":"25580:162:25"},{"body":{"nodeType":"YulBlock","src":"25894:220:25","statements":[{"nodeType":"YulAssignment","src":"25904:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25970:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25975:2:25","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25911:58:25"},"nodeType":"YulFunctionCall","src":"25911:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25904:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26076:3:25"}],"functionName":{"name":"store_literal_in_memory_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6","nodeType":"YulIdentifier","src":"25987:88:25"},"nodeType":"YulFunctionCall","src":"25987:93:25"},"nodeType":"YulExpressionStatement","src":"25987:93:25"},{"nodeType":"YulAssignment","src":"26089:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26100:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"26105:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26096:3:25"},"nodeType":"YulFunctionCall","src":"26096:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26089:3:25"}]}]},"name":"abi_encode_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25882:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25890:3:25","type":""}],"src":"25748:366:25"},{"body":{"nodeType":"YulBlock","src":"26291:248:25","statements":[{"nodeType":"YulAssignment","src":"26301:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26313:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26324:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26309:3:25"},"nodeType":"YulFunctionCall","src":"26309:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26301:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26348:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"26359:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26344:3:25"},"nodeType":"YulFunctionCall","src":"26344:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26367:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"26373:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26363:3:25"},"nodeType":"YulFunctionCall","src":"26363:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26337:6:25"},"nodeType":"YulFunctionCall","src":"26337:47:25"},"nodeType":"YulExpressionStatement","src":"26337:47:25"},{"nodeType":"YulAssignment","src":"26393:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26527:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26401:124:25"},"nodeType":"YulFunctionCall","src":"26401:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26393:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26271:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26286:4:25","type":""}],"src":"26120:419:25"},{"body":{"nodeType":"YulBlock","src":"26608:80:25","statements":[{"nodeType":"YulAssignment","src":"26618:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26633:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26627:5:25"},"nodeType":"YulFunctionCall","src":"26627:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26618:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26676:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"26649:26:25"},"nodeType":"YulFunctionCall","src":"26649:33:25"},"nodeType":"YulExpressionStatement","src":"26649:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"26586:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"26594:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"26602:5:25","type":""}],"src":"26545:143:25"},{"body":{"nodeType":"YulBlock","src":"26771:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"26817:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26819:77:25"},"nodeType":"YulFunctionCall","src":"26819:79:25"},"nodeType":"YulExpressionStatement","src":"26819:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26792:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"26801:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26788:3:25"},"nodeType":"YulFunctionCall","src":"26788:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"26813:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26784:3:25"},"nodeType":"YulFunctionCall","src":"26784:32:25"},"nodeType":"YulIf","src":"26781:119:25"},{"nodeType":"YulBlock","src":"26910:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"26925:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26939:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26929:6:25","type":""}]},{"nodeType":"YulAssignment","src":"26954:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27000:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"27011:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26996:3:25"},"nodeType":"YulFunctionCall","src":"26996:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27020:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"26964:31:25"},"nodeType":"YulFunctionCall","src":"26964:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26954:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26741:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26752:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26764:6:25","type":""}],"src":"26694:351:25"},{"body":{"nodeType":"YulBlock","src":"27157:56:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27179:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"27187:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27175:3:25"},"nodeType":"YulFunctionCall","src":"27175:14:25"},{"hexValue":"45727220416d6f756e74496e","kind":"string","nodeType":"YulLiteral","src":"27191:14:25","type":"","value":"Err AmountIn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27168:6:25"},"nodeType":"YulFunctionCall","src":"27168:38:25"},"nodeType":"YulExpressionStatement","src":"27168:38:25"}]},"name":"store_literal_in_memory_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27149:6:25","type":""}],"src":"27051:162:25"},{"body":{"nodeType":"YulBlock","src":"27365:220:25","statements":[{"nodeType":"YulAssignment","src":"27375:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27441:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"27446:2:25","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27382:58:25"},"nodeType":"YulFunctionCall","src":"27382:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27375:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27547:3:25"}],"functionName":{"name":"store_literal_in_memory_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115","nodeType":"YulIdentifier","src":"27458:88:25"},"nodeType":"YulFunctionCall","src":"27458:93:25"},"nodeType":"YulExpressionStatement","src":"27458:93:25"},{"nodeType":"YulAssignment","src":"27560:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27571:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"27576:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27567:3:25"},"nodeType":"YulFunctionCall","src":"27567:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27560:3:25"}]}]},"name":"abi_encode_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27353:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27361:3:25","type":""}],"src":"27219:366:25"},{"body":{"nodeType":"YulBlock","src":"27762:248:25","statements":[{"nodeType":"YulAssignment","src":"27772:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27784:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27795:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27780:3:25"},"nodeType":"YulFunctionCall","src":"27780:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27772:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27819:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27830:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27815:3:25"},"nodeType":"YulFunctionCall","src":"27815:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27838:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27844:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27834:3:25"},"nodeType":"YulFunctionCall","src":"27834:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27808:6:25"},"nodeType":"YulFunctionCall","src":"27808:47:25"},"nodeType":"YulExpressionStatement","src":"27808:47:25"},{"nodeType":"YulAssignment","src":"27864:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27998:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27872:124:25"},"nodeType":"YulFunctionCall","src":"27872:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27864:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27742:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27757:4:25","type":""}],"src":"27591:419:25"},{"body":{"nodeType":"YulBlock","src":"28142:206:25","statements":[{"nodeType":"YulAssignment","src":"28152:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28164:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28175:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28160:3:25"},"nodeType":"YulFunctionCall","src":"28160:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28152:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28232:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28245:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28256:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28241:3:25"},"nodeType":"YulFunctionCall","src":"28241:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28188:43:25"},"nodeType":"YulFunctionCall","src":"28188:71:25"},"nodeType":"YulExpressionStatement","src":"28188:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28313:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28326:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28337:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28322:3:25"},"nodeType":"YulFunctionCall","src":"28322:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28269:43:25"},"nodeType":"YulFunctionCall","src":"28269:72:25"},"nodeType":"YulExpressionStatement","src":"28269:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28106:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28118:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28126:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28137:4:25","type":""}],"src":"28016:332:25"},{"body":{"nodeType":"YulBlock","src":"28394:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"28448:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28457:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28460:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28450:6:25"},"nodeType":"YulFunctionCall","src":"28450:12:25"},"nodeType":"YulExpressionStatement","src":"28450:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28417:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28439:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"28424:14:25"},"nodeType":"YulFunctionCall","src":"28424:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28414:2:25"},"nodeType":"YulFunctionCall","src":"28414:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28407:6:25"},"nodeType":"YulFunctionCall","src":"28407:40:25"},"nodeType":"YulIf","src":"28404:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28387:5:25","type":""}],"src":"28354:116:25"},{"body":{"nodeType":"YulBlock","src":"28536:77:25","statements":[{"nodeType":"YulAssignment","src":"28546:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28561:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28555:5:25"},"nodeType":"YulFunctionCall","src":"28555:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28546:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28601:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"28577:23:25"},"nodeType":"YulFunctionCall","src":"28577:30:25"},"nodeType":"YulExpressionStatement","src":"28577:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28514:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"28522:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28530:5:25","type":""}],"src":"28476:137:25"},{"body":{"nodeType":"YulBlock","src":"28693:271:25","statements":[{"body":{"nodeType":"YulBlock","src":"28739:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28741:77:25"},"nodeType":"YulFunctionCall","src":"28741:79:25"},"nodeType":"YulExpressionStatement","src":"28741:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28714:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"28723:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28710:3:25"},"nodeType":"YulFunctionCall","src":"28710:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"28735:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28706:3:25"},"nodeType":"YulFunctionCall","src":"28706:32:25"},"nodeType":"YulIf","src":"28703:119:25"},{"nodeType":"YulBlock","src":"28832:125:25","statements":[{"nodeType":"YulVariableDeclaration","src":"28847:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"28861:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28851:6:25","type":""}]},{"nodeType":"YulAssignment","src":"28876:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28919:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"28930:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28915:3:25"},"nodeType":"YulFunctionCall","src":"28915:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28939:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"28886:28:25"},"nodeType":"YulFunctionCall","src":"28886:61:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28876:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28663:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28674:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28686:6:25","type":""}],"src":"28619:345:25"},{"body":{"nodeType":"YulBlock","src":"29076:56:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29098:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29106:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29094:3:25"},"nodeType":"YulFunctionCall","src":"29094:14:25"},{"hexValue":"45727220417070726f76616c","kind":"string","nodeType":"YulLiteral","src":"29110:14:25","type":"","value":"Err Approval"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29087:6:25"},"nodeType":"YulFunctionCall","src":"29087:38:25"},"nodeType":"YulExpressionStatement","src":"29087:38:25"}]},"name":"store_literal_in_memory_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29068:6:25","type":""}],"src":"28970:162:25"},{"body":{"nodeType":"YulBlock","src":"29284:220:25","statements":[{"nodeType":"YulAssignment","src":"29294:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29360:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29365:2:25","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29301:58:25"},"nodeType":"YulFunctionCall","src":"29301:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29294:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29466:3:25"}],"functionName":{"name":"store_literal_in_memory_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944","nodeType":"YulIdentifier","src":"29377:88:25"},"nodeType":"YulFunctionCall","src":"29377:93:25"},"nodeType":"YulExpressionStatement","src":"29377:93:25"},{"nodeType":"YulAssignment","src":"29479:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29490:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29495:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29486:3:25"},"nodeType":"YulFunctionCall","src":"29486:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29479:3:25"}]}]},"name":"abi_encode_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29272:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29280:3:25","type":""}],"src":"29138:366:25"},{"body":{"nodeType":"YulBlock","src":"29681:248:25","statements":[{"nodeType":"YulAssignment","src":"29691:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29703:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29714:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29699:3:25"},"nodeType":"YulFunctionCall","src":"29699:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29691:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29738:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29749:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29734:3:25"},"nodeType":"YulFunctionCall","src":"29734:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29757:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"29763:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29753:3:25"},"nodeType":"YulFunctionCall","src":"29753:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29727:6:25"},"nodeType":"YulFunctionCall","src":"29727:47:25"},"nodeType":"YulExpressionStatement","src":"29727:47:25"},{"nodeType":"YulAssignment","src":"29783:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29917:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29791:124:25"},"nodeType":"YulFunctionCall","src":"29791:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29783:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29661:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29676:4:25","type":""}],"src":"29510:419:25"},{"body":{"nodeType":"YulBlock","src":"30024:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30041:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30044:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30034:6:25"},"nodeType":"YulFunctionCall","src":"30034:12:25"},"nodeType":"YulExpressionStatement","src":"30034:12:25"}]},"name":"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2","nodeType":"YulFunctionDefinition","src":"29935:117:25"},{"body":{"nodeType":"YulBlock","src":"30147:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30164:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30167:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30157:6:25"},"nodeType":"YulFunctionCall","src":"30157:12:25"},"nodeType":"YulExpressionStatement","src":"30157:12:25"}]},"name":"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20","nodeType":"YulFunctionDefinition","src":"30058:117:25"},{"body":{"nodeType":"YulBlock","src":"30270:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30287:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30290:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30280:6:25"},"nodeType":"YulFunctionCall","src":"30280:12:25"},"nodeType":"YulExpressionStatement","src":"30280:12:25"}]},"name":"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4","nodeType":"YulFunctionDefinition","src":"30181:117:25"},{"body":{"nodeType":"YulBlock","src":"30382:633:25","statements":[{"nodeType":"YulVariableDeclaration","src":"30392:43:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30431:3:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30418:12:25"},"nodeType":"YulFunctionCall","src":"30418:17:25"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"30396:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"30529:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4","nodeType":"YulIdentifier","src":"30531:77:25"},"nodeType":"YulFunctionCall","src":"30531:79:25"},"nodeType":"YulExpressionStatement","src":"30531:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"30458:18:25"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"30486:12:25"},"nodeType":"YulFunctionCall","src":"30486:14:25"},{"name":"base_ref","nodeType":"YulIdentifier","src":"30502:8:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30482:3:25"},"nodeType":"YulFunctionCall","src":"30482:29:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30517:4:25","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"30523:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30513:3:25"},"nodeType":"YulFunctionCall","src":"30513:12:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30478:3:25"},"nodeType":"YulFunctionCall","src":"30478:48:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30454:3:25"},"nodeType":"YulFunctionCall","src":"30454:73:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30447:6:25"},"nodeType":"YulFunctionCall","src":"30447:81:25"},"nodeType":"YulIf","src":"30444:168:25"},{"nodeType":"YulAssignment","src":"30621:42:25","value":{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"30634:18:25"},{"name":"base_ref","nodeType":"YulIdentifier","src":"30654:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30630:3:25"},"nodeType":"YulFunctionCall","src":"30630:33:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30621:5:25"}]},{"nodeType":"YulAssignment","src":"30673:29:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30696:5:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30683:12:25"},"nodeType":"YulFunctionCall","src":"30683:19:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30673:6:25"}]},{"nodeType":"YulAssignment","src":"30711:25:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30724:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"30731:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30720:3:25"},"nodeType":"YulFunctionCall","src":"30720:16:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30711:5:25"}]},{"body":{"nodeType":"YulBlock","src":"30779:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2","nodeType":"YulIdentifier","src":"30781:77:25"},"nodeType":"YulFunctionCall","src":"30781:79:25"},"nodeType":"YulExpressionStatement","src":"30781:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30751:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30759:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30748:2:25"},"nodeType":"YulFunctionCall","src":"30748:30:25"},"nodeType":"YulIf","src":"30745:117:25"},{"body":{"nodeType":"YulBlock","src":"30925:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20","nodeType":"YulIdentifier","src":"30927:77:25"},"nodeType":"YulFunctionCall","src":"30927:79:25"},"nodeType":"YulExpressionStatement","src":"30927:79:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30878:5:25"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"30889:12:25"},"nodeType":"YulFunctionCall","src":"30889:14:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"30909:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30917:4:25","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30905:3:25"},"nodeType":"YulFunctionCall","src":"30905:17:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30885:3:25"},"nodeType":"YulFunctionCall","src":"30885:38:25"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"30874:3:25"},"nodeType":"YulFunctionCall","src":"30874:50:25"},"nodeType":"YulIf","src":"30871:137:25"}]},"name":"calldata_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"30350:8:25","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"30360:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"30368:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"30375:6:25","type":""}],"src":"30304:711:25"},{"body":{"nodeType":"YulBlock","src":"31106:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31123:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31128:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31116:6:25"},"nodeType":"YulFunctionCall","src":"31116:19:25"},"nodeType":"YulExpressionStatement","src":"31116:19:25"},{"nodeType":"YulAssignment","src":"31144:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31163:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31168:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31159:3:25"},"nodeType":"YulFunctionCall","src":"31159:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31144:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31078:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"31083:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31094:11:25","type":""}],"src":"31021:158:25"},{"body":{"nodeType":"YulBlock","src":"31297:204:25","statements":[{"nodeType":"YulAssignment","src":"31307:67:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31362:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31367:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"31314:47:25"},"nodeType":"YulFunctionCall","src":"31314:60:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31307:3:25"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31421:5:25"},{"name":"pos","nodeType":"YulIdentifier","src":"31428:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"31433:6:25"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"31384:36:25"},"nodeType":"YulFunctionCall","src":"31384:56:25"},"nodeType":"YulExpressionStatement","src":"31384:56:25"},{"nodeType":"YulAssignment","src":"31449:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31460:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"31487:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"31465:21:25"},"nodeType":"YulFunctionCall","src":"31465:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31456:3:25"},"nodeType":"YulFunctionCall","src":"31456:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31449:3:25"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"31270:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"31277:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31285:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31293:3:25","type":""}],"src":"31207:294:25"},{"body":{"nodeType":"YulBlock","src":"31565:64:25","statements":[{"nodeType":"YulAssignment","src":"31575:48:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31605:3:25"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31614:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31619:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31610:3:25"},"nodeType":"YulFunctionCall","src":"31610:12:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"31584:20:25"},"nodeType":"YulFunctionCall","src":"31584:39:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31575:5:25"}]}]},"name":"calldata_access_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"31542:7:25","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"31551:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31559:5:25","type":""}],"src":"31507:122:25"},{"body":{"nodeType":"YulBlock","src":"31690:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31707:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31730:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"31712:17:25"},"nodeType":"YulFunctionCall","src":"31712:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31700:6:25"},"nodeType":"YulFunctionCall","src":"31700:37:25"},"nodeType":"YulExpressionStatement","src":"31700:37:25"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31678:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31685:3:25","type":""}],"src":"31635:108:25"},{"body":{"nodeType":"YulBlock","src":"31807:64:25","statements":[{"nodeType":"YulAssignment","src":"31817:48:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31847:3:25"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31856:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31861:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31852:3:25"},"nodeType":"YulFunctionCall","src":"31852:12:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"31826:20:25"},"nodeType":"YulFunctionCall","src":"31826:39:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31817:5:25"}]}]},"name":"calldata_access_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"31784:7:25","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"31793:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31801:5:25","type":""}],"src":"31749:122:25"},{"body":{"nodeType":"YulBlock","src":"32103:1203:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32113:26:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32129:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32134:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32125:3:25"},"nodeType":"YulFunctionCall","src":"32125:14:25"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"32117:4:25","type":""}]},{"nodeType":"YulBlock","src":"32149:301:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32184:95:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32255:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32266:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"32273:4:25","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32262:3:25"},"nodeType":"YulFunctionCall","src":"32262:16:25"}],"functionName":{"name":"calldata_access_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"32218:36:25"},"nodeType":"YulFunctionCall","src":"32218:61:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32188:12:25","type":""},{"name":"memberValue1","nodeType":"YulTypedName","src":"32202:12:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32304:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32309:4:25","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32300:3:25"},"nodeType":"YulFunctionCall","src":"32300:14:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32320:4:25"},{"name":"pos","nodeType":"YulIdentifier","src":"32326:3:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32316:3:25"},"nodeType":"YulFunctionCall","src":"32316:14:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32293:6:25"},"nodeType":"YulFunctionCall","src":"32293:38:25"},"nodeType":"YulExpressionStatement","src":"32293:38:25"},{"nodeType":"YulAssignment","src":"32344:95:25","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32406:12:25"},{"name":"memberValue1","nodeType":"YulIdentifier","src":"32420:12:25"},{"name":"tail","nodeType":"YulIdentifier","src":"32434:4:25"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"32352:53:25"},"nodeType":"YulFunctionCall","src":"32352:87:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32344:4:25"}]}]},{"nodeType":"YulBlock","src":"32460:196:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32500:70:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32546:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32557:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"32564:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32553:3:25"},"nodeType":"YulFunctionCall","src":"32553:16:25"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"32520:25:25"},"nodeType":"YulFunctionCall","src":"32520:50:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32504:12:25","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32617:12:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32635:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32640:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32631:3:25"},"nodeType":"YulFunctionCall","src":"32631:14:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"32583:33:25"},"nodeType":"YulFunctionCall","src":"32583:63:25"},"nodeType":"YulExpressionStatement","src":"32583:63:25"}]},{"nodeType":"YulBlock","src":"32666:195:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32705:70:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32751:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32762:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"32769:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32758:3:25"},"nodeType":"YulFunctionCall","src":"32758:16:25"}],"functionName":{"name":"calldata_access_t_uint256","nodeType":"YulIdentifier","src":"32725:25:25"},"nodeType":"YulFunctionCall","src":"32725:50:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32709:12:25","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32822:12:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32840:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32845:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32836:3:25"},"nodeType":"YulFunctionCall","src":"32836:14:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32788:33:25"},"nodeType":"YulFunctionCall","src":"32788:63:25"},"nodeType":"YulExpressionStatement","src":"32788:63:25"}]},{"nodeType":"YulBlock","src":"32871:195:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32910:70:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32956:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32967:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"32974:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32963:3:25"},"nodeType":"YulFunctionCall","src":"32963:16:25"}],"functionName":{"name":"calldata_access_t_uint256","nodeType":"YulIdentifier","src":"32930:25:25"},"nodeType":"YulFunctionCall","src":"32930:50:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32914:12:25","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33027:12:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33045:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"33050:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33041:3:25"},"nodeType":"YulFunctionCall","src":"33041:14:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32993:33:25"},"nodeType":"YulFunctionCall","src":"32993:63:25"},"nodeType":"YulExpressionStatement","src":"32993:63:25"}]},{"nodeType":"YulBlock","src":"33076:203:25","statements":[{"nodeType":"YulVariableDeclaration","src":"33123:70:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33169:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33180:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"33187:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33176:3:25"},"nodeType":"YulFunctionCall","src":"33176:16:25"}],"functionName":{"name":"calldata_access_t_uint256","nodeType":"YulIdentifier","src":"33143:25:25"},"nodeType":"YulFunctionCall","src":"33143:50:25"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"33127:12:25","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33240:12:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33258:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"33263:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33254:3:25"},"nodeType":"YulFunctionCall","src":"33254:14:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33206:33:25"},"nodeType":"YulFunctionCall","src":"33206:63:25"},"nodeType":"YulExpressionStatement","src":"33206:63:25"}]},{"nodeType":"YulAssignment","src":"33289:11:25","value":{"name":"tail","nodeType":"YulIdentifier","src":"33296:4:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33289:3:25"}]}]},"name":"abi_encode_t_struct$_ExactInputParams_$5150_calldata_ptr_to_t_struct$_ExactInputParams_$5150_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32082:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32089:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32098:3:25","type":""}],"src":"31959:1347:25"},{"body":{"nodeType":"YulBlock","src":"33480:245:25","statements":[{"nodeType":"YulAssignment","src":"33490:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33502:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33513:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33498:3:25"},"nodeType":"YulFunctionCall","src":"33498:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33490:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33537:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33548:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33533:3:25"},"nodeType":"YulFunctionCall","src":"33533:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33556:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"33562:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33552:3:25"},"nodeType":"YulFunctionCall","src":"33552:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33526:6:25"},"nodeType":"YulFunctionCall","src":"33526:47:25"},"nodeType":"YulExpressionStatement","src":"33526:47:25"},{"nodeType":"YulAssignment","src":"33582:136:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33704:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"33713:4:25"}],"functionName":{"name":"abi_encode_t_struct$_ExactInputParams_$5150_calldata_ptr_to_t_struct$_ExactInputParams_$5150_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33590:113:25"},"nodeType":"YulFunctionCall","src":"33590:128:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33582:4:25"}]}]},"name":"abi_encode_tuple_t_struct$_ExactInputParams_$5150_calldata_ptr__to_t_struct$_ExactInputParams_$5150_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33452:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33464:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33475:4:25","type":""}],"src":"33312:413:25"},{"body":{"nodeType":"YulBlock","src":"33784:53:25","statements":[{"nodeType":"YulAssignment","src":"33794:36:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33819:3:25","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"33824:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"33815:3:25"},"nodeType":"YulFunctionCall","src":"33815:15:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33794:8:25"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33765:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33775:8:25","type":""}],"src":"33731:106:25"},{"body":{"nodeType":"YulBlock","src":"33882:144:25","statements":[{"body":{"nodeType":"YulBlock","src":"33919:101:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33948:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33951:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33954:1:25","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"33933:14:25"},"nodeType":"YulFunctionCall","src":"33933:23:25"},"nodeType":"YulExpressionStatement","src":"33933:23:25"},{"nodeType":"YulAssignment","src":"33969:41:25","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34007:1:25","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34001:5:25"},"nodeType":"YulFunctionCall","src":"34001:8:25"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"33976:24:25"},"nodeType":"YulFunctionCall","src":"33976:34:25"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"33969:3:25"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"33898:14:25"},"nodeType":"YulFunctionCall","src":"33898:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"33916:1:25","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33895:2:25"},"nodeType":"YulFunctionCall","src":"33895:23:25"},"nodeType":"YulIf","src":"33892:128:25"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"33878:3:25","type":""}],"src":"33843:183:25"},{"body":{"nodeType":"YulBlock","src":"34075:668:25","statements":[{"body":{"nodeType":"YulBlock","src":"34115:9:25","statements":[{"nodeType":"YulLeave","src":"34117:5:25"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"34091:14:25"},"nodeType":"YulFunctionCall","src":"34091:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"34109:4:25","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34088:2:25"},"nodeType":"YulFunctionCall","src":"34088:26:25"},"nodeType":"YulIf","src":"34085:39:25"},{"nodeType":"YulVariableDeclaration","src":"34134:32:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"34146:18:25"},"nodeType":"YulFunctionCall","src":"34146:20:25"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"34138:4:25","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34190:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"34196:1:25","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"34203:14:25"},"nodeType":"YulFunctionCall","src":"34203:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"34221:1:25","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34199:3:25"},"nodeType":"YulFunctionCall","src":"34199:24:25"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"34175:14:25"},"nodeType":"YulFunctionCall","src":"34175:49:25"},"nodeType":"YulExpressionStatement","src":"34175:49:25"},{"nodeType":"YulVariableDeclaration","src":"34234:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34254:4:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34248:5:25"},"nodeType":"YulFunctionCall","src":"34248:11:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34238:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"34385:29:25","statements":[{"nodeType":"YulLeave","src":"34399:5:25"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34290:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"34298:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34287:2:25"},"nodeType":"YulFunctionCall","src":"34287:30:25"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34338:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"34346:4:25","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34334:3:25"},"nodeType":"YulFunctionCall","src":"34334:17:25"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"34353:14:25"},"nodeType":"YulFunctionCall","src":"34353:16:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34331:2:25"},"nodeType":"YulFunctionCall","src":"34331:39:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34271:2:25"},"nodeType":"YulFunctionCall","src":"34271:113:25"},"nodeType":"YulIf","src":"34268:146:25"},{"nodeType":"YulVariableDeclaration","src":"34424:28:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34439:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"34445:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34435:3:25"},"nodeType":"YulFunctionCall","src":"34435:17:25"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"34428:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34461:24:25","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"34481:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34475:5:25"},"nodeType":"YulFunctionCall","src":"34475:10:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34465:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"34528:9:25","statements":[{"nodeType":"YulLeave","src":"34530:5:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34500:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"34508:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34497:2:25"},"nodeType":"YulFunctionCall","src":"34497:30:25"},"nodeType":"YulIf","src":"34494:43:25"},{"nodeType":"YulVariableDeclaration","src":"34547:38:25","value":{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"34566:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"34571:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34562:3:25"},"nodeType":"YulFunctionCall","src":"34562:14:25"},{"name":"length","nodeType":"YulIdentifier","src":"34578:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34558:3:25"},"nodeType":"YulFunctionCall","src":"34558:27:25"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"34551:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"34642:9:25","statements":[{"nodeType":"YulLeave","src":"34644:5:25"}]},"condition":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"34600:3:25"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34609:4:25"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"34619:14:25"},"nodeType":"YulFunctionCall","src":"34619:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"34637:1:25","type":"","value":"4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34615:3:25"},"nodeType":"YulFunctionCall","src":"34615:24:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34605:3:25"},"nodeType":"YulFunctionCall","src":"34605:35:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34597:2:25"},"nodeType":"YulFunctionCall","src":"34597:44:25"},"nodeType":"YulIf","src":"34594:57:25"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34681:4:25"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34691:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34703:4:25","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"34709:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34699:3:25"},"nodeType":"YulFunctionCall","src":"34699:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34687:3:25"},"nodeType":"YulFunctionCall","src":"34687:30:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"34661:19:25"},"nodeType":"YulFunctionCall","src":"34661:57:25"},"nodeType":"YulExpressionStatement","src":"34661:57:25"},{"nodeType":"YulAssignment","src":"34727:10:25","value":{"name":"msg","nodeType":"YulIdentifier","src":"34734:3:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34727:3:25"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34071:3:25","type":""}],"src":"34032:711:25"},{"body":{"nodeType":"YulBlock","src":"34895:277:25","statements":[{"nodeType":"YulAssignment","src":"34905:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34917:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34928:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34913:3:25"},"nodeType":"YulFunctionCall","src":"34913:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34905:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34985:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34998:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35009:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34994:3:25"},"nodeType":"YulFunctionCall","src":"34994:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34941:43:25"},"nodeType":"YulFunctionCall","src":"34941:71:25"},"nodeType":"YulExpressionStatement","src":"34941:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35033:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35044:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35029:3:25"},"nodeType":"YulFunctionCall","src":"35029:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35053:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"35059:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35049:3:25"},"nodeType":"YulFunctionCall","src":"35049:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35022:6:25"},"nodeType":"YulFunctionCall","src":"35022:48:25"},"nodeType":"YulExpressionStatement","src":"35022:48:25"},{"nodeType":"YulAssignment","src":"35079:86:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35151:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"35160:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35087:63:25"},"nodeType":"YulFunctionCall","src":"35087:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35079:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34859:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34871:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34879:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34890:4:25","type":""}],"src":"34749:423:25"},{"body":{"nodeType":"YulBlock","src":"35231:32:25","statements":[{"nodeType":"YulAssignment","src":"35241:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"35252:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"35241:7:25"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35213:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"35223:7:25","type":""}],"src":"35178:85:25"},{"body":{"nodeType":"YulBlock","src":"35301:28:25","statements":[{"nodeType":"YulAssignment","src":"35311:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"35318:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35311:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35287:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35297:3:25","type":""}],"src":"35269:60:25"},{"body":{"nodeType":"YulBlock","src":"35403:90:25","statements":[{"nodeType":"YulAssignment","src":"35413:74:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35479:5:25"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"35453:25:25"},"nodeType":"YulFunctionCall","src":"35453:32:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"35444:8:25"},"nodeType":"YulFunctionCall","src":"35444:42:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35426:17:25"},"nodeType":"YulFunctionCall","src":"35426:61:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"35413:9:25"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35383:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"35393:9:25","type":""}],"src":"35335:158:25"},{"body":{"nodeType":"YulBlock","src":"35572:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35589:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35633:5:25"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"35594:38:25"},"nodeType":"YulFunctionCall","src":"35594:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35582:6:25"},"nodeType":"YulFunctionCall","src":"35582:58:25"},"nodeType":"YulExpressionStatement","src":"35582:58:25"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35560:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35567:3:25","type":""}],"src":"35499:147:25"},{"body":{"nodeType":"YulBlock","src":"35786:214:25","statements":[{"nodeType":"YulAssignment","src":"35796:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35808:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35819:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35804:3:25"},"nodeType":"YulFunctionCall","src":"35804:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35796:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35876:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35889:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35900:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35885:3:25"},"nodeType":"YulFunctionCall","src":"35885:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35832:43:25"},"nodeType":"YulFunctionCall","src":"35832:71:25"},"nodeType":"YulExpressionStatement","src":"35832:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35965:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35978:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35989:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35974:3:25"},"nodeType":"YulFunctionCall","src":"35974:18:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35913:51:25"},"nodeType":"YulFunctionCall","src":"35913:80:25"},"nodeType":"YulExpressionStatement","src":"35913:80:25"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35750:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35762:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35770:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35781:4:25","type":""}],"src":"35652:348:25"},{"body":{"nodeType":"YulBlock","src":"36112:57:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36134:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"36142:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36130:3:25"},"nodeType":"YulFunctionCall","src":"36130:14:25"},{"hexValue":"45727220417070726f76616c30","kind":"string","nodeType":"YulLiteral","src":"36146:15:25","type":"","value":"Err Approval0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36123:6:25"},"nodeType":"YulFunctionCall","src":"36123:39:25"},"nodeType":"YulExpressionStatement","src":"36123:39:25"}]},"name":"store_literal_in_memory_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36104:6:25","type":""}],"src":"36006:163:25"},{"body":{"nodeType":"YulBlock","src":"36321:220:25","statements":[{"nodeType":"YulAssignment","src":"36331:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36397:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36402:2:25","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36338:58:25"},"nodeType":"YulFunctionCall","src":"36338:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36331:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36503:3:25"}],"functionName":{"name":"store_literal_in_memory_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3","nodeType":"YulIdentifier","src":"36414:88:25"},"nodeType":"YulFunctionCall","src":"36414:93:25"},"nodeType":"YulExpressionStatement","src":"36414:93:25"},{"nodeType":"YulAssignment","src":"36516:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36527:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36532:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36523:3:25"},"nodeType":"YulFunctionCall","src":"36523:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36516:3:25"}]}]},"name":"abi_encode_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36309:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36317:3:25","type":""}],"src":"36175:366:25"},{"body":{"nodeType":"YulBlock","src":"36718:248:25","statements":[{"nodeType":"YulAssignment","src":"36728:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36740:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"36751:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36736:3:25"},"nodeType":"YulFunctionCall","src":"36736:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36728:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36775:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"36786:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36771:3:25"},"nodeType":"YulFunctionCall","src":"36771:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36794:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"36800:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36790:3:25"},"nodeType":"YulFunctionCall","src":"36790:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36764:6:25"},"nodeType":"YulFunctionCall","src":"36764:47:25"},"nodeType":"YulExpressionStatement","src":"36764:47:25"},{"nodeType":"YulAssignment","src":"36820:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36954:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36828:124:25"},"nodeType":"YulFunctionCall","src":"36828:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36820:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36698:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36713:4:25","type":""}],"src":"36547:419:25"},{"body":{"nodeType":"YulBlock","src":"37154:371:25","statements":[{"nodeType":"YulAssignment","src":"37164:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37176:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37187:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37172:3:25"},"nodeType":"YulFunctionCall","src":"37172:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37164:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37245:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37258:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37269:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37254:3:25"},"nodeType":"YulFunctionCall","src":"37254:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37201:43:25"},"nodeType":"YulFunctionCall","src":"37201:71:25"},"nodeType":"YulExpressionStatement","src":"37201:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37326:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37339:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37350:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37335:3:25"},"nodeType":"YulFunctionCall","src":"37335:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37282:43:25"},"nodeType":"YulFunctionCall","src":"37282:72:25"},"nodeType":"YulExpressionStatement","src":"37282:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37408:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37421:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37432:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37417:3:25"},"nodeType":"YulFunctionCall","src":"37417:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37364:43:25"},"nodeType":"YulFunctionCall","src":"37364:72:25"},"nodeType":"YulExpressionStatement","src":"37364:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37490:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37503:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37514:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37499:3:25"},"nodeType":"YulFunctionCall","src":"37499:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37446:43:25"},"nodeType":"YulFunctionCall","src":"37446:72:25"},"nodeType":"YulExpressionStatement","src":"37446:72:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37102:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37114:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37122:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37130:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37138:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37149:4:25","type":""}],"src":"36972:553:25"},{"body":{"nodeType":"YulBlock","src":"37559:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37576:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37579:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37569:6:25"},"nodeType":"YulFunctionCall","src":"37569:88:25"},"nodeType":"YulExpressionStatement","src":"37569:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37673:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37676:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37666:6:25"},"nodeType":"YulFunctionCall","src":"37666:15:25"},"nodeType":"YulExpressionStatement","src":"37666:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37697:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37700:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37690:6:25"},"nodeType":"YulFunctionCall","src":"37690:15:25"},"nodeType":"YulExpressionStatement","src":"37690:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"37531:180:25"},{"body":{"nodeType":"YulBlock","src":"37760:190:25","statements":[{"nodeType":"YulAssignment","src":"37770:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37797:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37779:17:25"},"nodeType":"YulFunctionCall","src":"37779:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37770:5:25"}]},{"body":{"nodeType":"YulBlock","src":"37893:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37895:16:25"},"nodeType":"YulFunctionCall","src":"37895:18:25"},"nodeType":"YulExpressionStatement","src":"37895:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37818:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"37825:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37815:2:25"},"nodeType":"YulFunctionCall","src":"37815:77:25"},"nodeType":"YulIf","src":"37812:103:25"},{"nodeType":"YulAssignment","src":"37924:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37935:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"37942:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37931:3:25"},"nodeType":"YulFunctionCall","src":"37931:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37924:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37746:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"37756:3:25","type":""}],"src":"37717:233:25"},{"body":{"nodeType":"YulBlock","src":"38062:127:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38084:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"38092:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38080:3:25"},"nodeType":"YulFunctionCall","src":"38080:14:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"38096:34:25","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38073:6:25"},"nodeType":"YulFunctionCall","src":"38073:58:25"},"nodeType":"YulExpressionStatement","src":"38073:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38152:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"38160:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38148:3:25"},"nodeType":"YulFunctionCall","src":"38148:15:25"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"38165:16:25","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38141:6:25"},"nodeType":"YulFunctionCall","src":"38141:41:25"},"nodeType":"YulExpressionStatement","src":"38141:41:25"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38054:6:25","type":""}],"src":"37956:233:25"},{"body":{"nodeType":"YulBlock","src":"38341:220:25","statements":[{"nodeType":"YulAssignment","src":"38351:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38417:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"38422:2:25","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38358:58:25"},"nodeType":"YulFunctionCall","src":"38358:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38351:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38523:3:25"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"38434:88:25"},"nodeType":"YulFunctionCall","src":"38434:93:25"},"nodeType":"YulExpressionStatement","src":"38434:93:25"},{"nodeType":"YulAssignment","src":"38536:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38547:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"38552:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38543:3:25"},"nodeType":"YulFunctionCall","src":"38543:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38536:3:25"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38329:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38337:3:25","type":""}],"src":"38195:366:25"},{"body":{"nodeType":"YulBlock","src":"38738:248:25","statements":[{"nodeType":"YulAssignment","src":"38748:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38760:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"38771:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38756:3:25"},"nodeType":"YulFunctionCall","src":"38756:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38748:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38795:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"38806:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38791:3:25"},"nodeType":"YulFunctionCall","src":"38791:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38814:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"38820:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38810:3:25"},"nodeType":"YulFunctionCall","src":"38810:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38784:6:25"},"nodeType":"YulFunctionCall","src":"38784:47:25"},"nodeType":"YulExpressionStatement","src":"38784:47:25"},{"nodeType":"YulAssignment","src":"38840:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38974:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38848:124:25"},"nodeType":"YulFunctionCall","src":"38848:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38840:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38718:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38733:4:25","type":""}],"src":"38567:419:25"},{"body":{"nodeType":"YulBlock","src":"39098:53:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39120:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"39128:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39116:3:25"},"nodeType":"YulFunctionCall","src":"39116:14:25"},{"hexValue":"41646d696e41646472","kind":"string","nodeType":"YulLiteral","src":"39132:11:25","type":"","value":"AdminAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39109:6:25"},"nodeType":"YulFunctionCall","src":"39109:35:25"},"nodeType":"YulExpressionStatement","src":"39109:35:25"}]},"name":"store_literal_in_memory_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39090:6:25","type":""}],"src":"38992:159:25"},{"body":{"nodeType":"YulBlock","src":"39303:219:25","statements":[{"nodeType":"YulAssignment","src":"39313:73:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39379:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"39384:1:25","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39320:58:25"},"nodeType":"YulFunctionCall","src":"39320:66:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39313:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39484:3:25"}],"functionName":{"name":"store_literal_in_memory_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e","nodeType":"YulIdentifier","src":"39395:88:25"},"nodeType":"YulFunctionCall","src":"39395:93:25"},"nodeType":"YulExpressionStatement","src":"39395:93:25"},{"nodeType":"YulAssignment","src":"39497:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39508:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"39513:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39504:3:25"},"nodeType":"YulFunctionCall","src":"39504:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39497:3:25"}]}]},"name":"abi_encode_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39291:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39299:3:25","type":""}],"src":"39157:365:25"},{"body":{"nodeType":"YulBlock","src":"39699:248:25","statements":[{"nodeType":"YulAssignment","src":"39709:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39721:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"39732:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39717:3:25"},"nodeType":"YulFunctionCall","src":"39717:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39709:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39756:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"39767:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39752:3:25"},"nodeType":"YulFunctionCall","src":"39752:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39775:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"39781:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39771:3:25"},"nodeType":"YulFunctionCall","src":"39771:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39745:6:25"},"nodeType":"YulFunctionCall","src":"39745:47:25"},"nodeType":"YulExpressionStatement","src":"39745:47:25"},{"nodeType":"YulAssignment","src":"39801:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39935:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39809:124:25"},"nodeType":"YulFunctionCall","src":"39809:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39801:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39679:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39694:4:25","type":""}],"src":"39528:419:25"},{"body":{"nodeType":"YulBlock","src":"40059:54:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40081:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"40089:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40077:3:25"},"nodeType":"YulFunctionCall","src":"40077:14:25"},{"hexValue":"52657363756541646472","kind":"string","nodeType":"YulLiteral","src":"40093:12:25","type":"","value":"RescueAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40070:6:25"},"nodeType":"YulFunctionCall","src":"40070:36:25"},"nodeType":"YulExpressionStatement","src":"40070:36:25"}]},"name":"store_literal_in_memory_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40051:6:25","type":""}],"src":"39953:160:25"},{"body":{"nodeType":"YulBlock","src":"40265:220:25","statements":[{"nodeType":"YulAssignment","src":"40275:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40341:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"40346:2:25","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40282:58:25"},"nodeType":"YulFunctionCall","src":"40282:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40275:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40447:3:25"}],"functionName":{"name":"store_literal_in_memory_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd","nodeType":"YulIdentifier","src":"40358:88:25"},"nodeType":"YulFunctionCall","src":"40358:93:25"},"nodeType":"YulExpressionStatement","src":"40358:93:25"},{"nodeType":"YulAssignment","src":"40460:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40471:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"40476:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40467:3:25"},"nodeType":"YulFunctionCall","src":"40467:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40460:3:25"}]}]},"name":"abi_encode_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40253:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40261:3:25","type":""}],"src":"40119:366:25"},{"body":{"nodeType":"YulBlock","src":"40662:248:25","statements":[{"nodeType":"YulAssignment","src":"40672:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40684:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40695:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40680:3:25"},"nodeType":"YulFunctionCall","src":"40680:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40672:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40719:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40730:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40715:3:25"},"nodeType":"YulFunctionCall","src":"40715:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40738:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"40744:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40734:3:25"},"nodeType":"YulFunctionCall","src":"40734:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40708:6:25"},"nodeType":"YulFunctionCall","src":"40708:47:25"},"nodeType":"YulExpressionStatement","src":"40708:47:25"},{"nodeType":"YulAssignment","src":"40764:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40898:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40772:124:25"},"nodeType":"YulFunctionCall","src":"40772:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40764:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40642:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40657:4:25","type":""}],"src":"40491:419:25"},{"body":{"nodeType":"YulBlock","src":"41022:56:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41044:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"41052:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41040:3:25"},"nodeType":"YulFunctionCall","src":"41040:14:25"},{"hexValue":"576974686472617741646472","kind":"string","nodeType":"YulLiteral","src":"41056:14:25","type":"","value":"WithdrawAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41033:6:25"},"nodeType":"YulFunctionCall","src":"41033:38:25"},"nodeType":"YulExpressionStatement","src":"41033:38:25"}]},"name":"store_literal_in_memory_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41014:6:25","type":""}],"src":"40916:162:25"},{"body":{"nodeType":"YulBlock","src":"41230:220:25","statements":[{"nodeType":"YulAssignment","src":"41240:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41306:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"41311:2:25","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41247:58:25"},"nodeType":"YulFunctionCall","src":"41247:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41240:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41412:3:25"}],"functionName":{"name":"store_literal_in_memory_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c","nodeType":"YulIdentifier","src":"41323:88:25"},"nodeType":"YulFunctionCall","src":"41323:93:25"},"nodeType":"YulExpressionStatement","src":"41323:93:25"},{"nodeType":"YulAssignment","src":"41425:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41436:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"41441:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41432:3:25"},"nodeType":"YulFunctionCall","src":"41432:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41425:3:25"}]}]},"name":"abi_encode_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41218:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41226:3:25","type":""}],"src":"41084:366:25"},{"body":{"nodeType":"YulBlock","src":"41627:248:25","statements":[{"nodeType":"YulAssignment","src":"41637:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41649:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"41660:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41645:3:25"},"nodeType":"YulFunctionCall","src":"41645:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41637:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41684:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"41695:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41680:3:25"},"nodeType":"YulFunctionCall","src":"41680:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41703:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"41709:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41699:3:25"},"nodeType":"YulFunctionCall","src":"41699:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41673:6:25"},"nodeType":"YulFunctionCall","src":"41673:47:25"},"nodeType":"YulExpressionStatement","src":"41673:47:25"},{"nodeType":"YulAssignment","src":"41729:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41863:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41737:124:25"},"nodeType":"YulFunctionCall","src":"41737:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41729:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41607:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41622:4:25","type":""}],"src":"41456:419:25"},{"body":{"nodeType":"YulBlock","src":"41987:62:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42009:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"42017:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42005:3:25"},"nodeType":"YulFunctionCall","src":"42005:14:25"},{"hexValue":"46697273744c656e6465724c697141646472","kind":"string","nodeType":"YulLiteral","src":"42021:20:25","type":"","value":"FirstLenderLiqAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41998:6:25"},"nodeType":"YulFunctionCall","src":"41998:44:25"},"nodeType":"YulExpressionStatement","src":"41998:44:25"}]},"name":"store_literal_in_memory_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41979:6:25","type":""}],"src":"41881:168:25"},{"body":{"nodeType":"YulBlock","src":"42201:220:25","statements":[{"nodeType":"YulAssignment","src":"42211:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42277:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"42282:2:25","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42218:58:25"},"nodeType":"YulFunctionCall","src":"42218:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42211:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42383:3:25"}],"functionName":{"name":"store_literal_in_memory_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85","nodeType":"YulIdentifier","src":"42294:88:25"},"nodeType":"YulFunctionCall","src":"42294:93:25"},"nodeType":"YulExpressionStatement","src":"42294:93:25"},{"nodeType":"YulAssignment","src":"42396:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42407:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"42412:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42403:3:25"},"nodeType":"YulFunctionCall","src":"42403:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42396:3:25"}]}]},"name":"abi_encode_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42189:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42197:3:25","type":""}],"src":"42055:366:25"},{"body":{"nodeType":"YulBlock","src":"42598:248:25","statements":[{"nodeType":"YulAssignment","src":"42608:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42620:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42631:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42616:3:25"},"nodeType":"YulFunctionCall","src":"42616:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42608:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42655:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42666:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42651:3:25"},"nodeType":"YulFunctionCall","src":"42651:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42674:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"42680:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42670:3:25"},"nodeType":"YulFunctionCall","src":"42670:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42644:6:25"},"nodeType":"YulFunctionCall","src":"42644:47:25"},"nodeType":"YulExpressionStatement","src":"42644:47:25"},{"nodeType":"YulAssignment","src":"42700:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42834:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42708:124:25"},"nodeType":"YulFunctionCall","src":"42708:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42700:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42578:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42593:4:25","type":""}],"src":"42427:419:25"},{"body":{"nodeType":"YulBlock","src":"42958:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42980:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"42988:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42976:3:25"},"nodeType":"YulFunctionCall","src":"42976:14:25"},{"hexValue":"5365636f6e644c656e6465724c697141646472","kind":"string","nodeType":"YulLiteral","src":"42992:21:25","type":"","value":"SecondLenderLiqAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42969:6:25"},"nodeType":"YulFunctionCall","src":"42969:45:25"},"nodeType":"YulExpressionStatement","src":"42969:45:25"}]},"name":"store_literal_in_memory_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42950:6:25","type":""}],"src":"42852:169:25"},{"body":{"nodeType":"YulBlock","src":"43173:220:25","statements":[{"nodeType":"YulAssignment","src":"43183:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43249:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"43254:2:25","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43190:58:25"},"nodeType":"YulFunctionCall","src":"43190:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43183:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43355:3:25"}],"functionName":{"name":"store_literal_in_memory_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e","nodeType":"YulIdentifier","src":"43266:88:25"},"nodeType":"YulFunctionCall","src":"43266:93:25"},"nodeType":"YulExpressionStatement","src":"43266:93:25"},{"nodeType":"YulAssignment","src":"43368:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43379:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"43384:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43375:3:25"},"nodeType":"YulFunctionCall","src":"43375:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43368:3:25"}]}]},"name":"abi_encode_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43161:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43169:3:25","type":""}],"src":"43027:366:25"},{"body":{"nodeType":"YulBlock","src":"43570:248:25","statements":[{"nodeType":"YulAssignment","src":"43580:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43592:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"43603:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43588:3:25"},"nodeType":"YulFunctionCall","src":"43588:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43580:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43627:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"43638:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43623:3:25"},"nodeType":"YulFunctionCall","src":"43623:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43646:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"43652:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43642:3:25"},"nodeType":"YulFunctionCall","src":"43642:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43616:6:25"},"nodeType":"YulFunctionCall","src":"43616:47:25"},"nodeType":"YulExpressionStatement","src":"43616:47:25"},{"nodeType":"YulAssignment","src":"43672:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43806:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43680:124:25"},"nodeType":"YulFunctionCall","src":"43680:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43672:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43550:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43565:4:25","type":""}],"src":"43399:419:25"},{"body":{"nodeType":"YulBlock","src":"43930:58:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43952:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"43960:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43948:3:25"},"nodeType":"YulFunctionCall","src":"43948:14:25"},{"hexValue":"53776170526f7574657241646472","kind":"string","nodeType":"YulLiteral","src":"43964:16:25","type":"","value":"SwapRouterAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43941:6:25"},"nodeType":"YulFunctionCall","src":"43941:40:25"},"nodeType":"YulExpressionStatement","src":"43941:40:25"}]},"name":"store_literal_in_memory_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43922:6:25","type":""}],"src":"43824:164:25"},{"body":{"nodeType":"YulBlock","src":"44140:220:25","statements":[{"nodeType":"YulAssignment","src":"44150:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44216:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"44221:2:25","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44157:58:25"},"nodeType":"YulFunctionCall","src":"44157:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44150:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44322:3:25"}],"functionName":{"name":"store_literal_in_memory_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290","nodeType":"YulIdentifier","src":"44233:88:25"},"nodeType":"YulFunctionCall","src":"44233:93:25"},"nodeType":"YulExpressionStatement","src":"44233:93:25"},{"nodeType":"YulAssignment","src":"44335:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44346:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"44351:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44342:3:25"},"nodeType":"YulFunctionCall","src":"44342:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44335:3:25"}]}]},"name":"abi_encode_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44128:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44136:3:25","type":""}],"src":"43994:366:25"},{"body":{"nodeType":"YulBlock","src":"44537:248:25","statements":[{"nodeType":"YulAssignment","src":"44547:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44559:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"44570:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44555:3:25"},"nodeType":"YulFunctionCall","src":"44555:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44547:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44594:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"44605:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44590:3:25"},"nodeType":"YulFunctionCall","src":"44590:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44613:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"44619:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44609:3:25"},"nodeType":"YulFunctionCall","src":"44609:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44583:6:25"},"nodeType":"YulFunctionCall","src":"44583:47:25"},"nodeType":"YulExpressionStatement","src":"44583:47:25"},{"nodeType":"YulAssignment","src":"44639:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44773:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44647:124:25"},"nodeType":"YulFunctionCall","src":"44647:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44639:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44517:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44532:4:25","type":""}],"src":"44366:419:25"},{"body":{"nodeType":"YulBlock","src":"44897:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44919:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"44927:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44915:3:25"},"nodeType":"YulFunctionCall","src":"44915:14:25"},{"hexValue":"5377617070657241646472","kind":"string","nodeType":"YulLiteral","src":"44931:13:25","type":"","value":"SwapperAddr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44908:6:25"},"nodeType":"YulFunctionCall","src":"44908:37:25"},"nodeType":"YulExpressionStatement","src":"44908:37:25"}]},"name":"store_literal_in_memory_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44889:6:25","type":""}],"src":"44791:161:25"},{"body":{"nodeType":"YulBlock","src":"45104:220:25","statements":[{"nodeType":"YulAssignment","src":"45114:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45180:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"45185:2:25","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45121:58:25"},"nodeType":"YulFunctionCall","src":"45121:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45114:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45286:3:25"}],"functionName":{"name":"store_literal_in_memory_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942","nodeType":"YulIdentifier","src":"45197:88:25"},"nodeType":"YulFunctionCall","src":"45197:93:25"},"nodeType":"YulExpressionStatement","src":"45197:93:25"},{"nodeType":"YulAssignment","src":"45299:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45310:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"45315:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45306:3:25"},"nodeType":"YulFunctionCall","src":"45306:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45299:3:25"}]}]},"name":"abi_encode_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45092:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45100:3:25","type":""}],"src":"44958:366:25"},{"body":{"nodeType":"YulBlock","src":"45501:248:25","statements":[{"nodeType":"YulAssignment","src":"45511:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45523:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"45534:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45519:3:25"},"nodeType":"YulFunctionCall","src":"45519:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45511:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45558:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"45569:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45554:3:25"},"nodeType":"YulFunctionCall","src":"45554:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45577:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"45583:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45573:3:25"},"nodeType":"YulFunctionCall","src":"45573:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45547:6:25"},"nodeType":"YulFunctionCall","src":"45547:47:25"},"nodeType":"YulExpressionStatement","src":"45547:47:25"},{"nodeType":"YulAssignment","src":"45603:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45737:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45611:124:25"},"nodeType":"YulFunctionCall","src":"45611:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45603:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45481:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45496:4:25","type":""}],"src":"45330:419:25"},{"body":{"nodeType":"YulBlock","src":"45865:280:25","statements":[{"nodeType":"YulVariableDeclaration","src":"45875:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45922:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"45889:32:25"},"nodeType":"YulFunctionCall","src":"45889:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"45879:6:25","type":""}]},{"nodeType":"YulAssignment","src":"45937:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46021:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"46026:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45944:76:25"},"nodeType":"YulFunctionCall","src":"45944:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45937:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46081:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"46088:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46077:3:25"},"nodeType":"YulFunctionCall","src":"46077:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"46095:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"46100:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"46042:34:25"},"nodeType":"YulFunctionCall","src":"46042:65:25"},"nodeType":"YulExpressionStatement","src":"46042:65:25"},{"nodeType":"YulAssignment","src":"46116:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46127:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"46132:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46123:3:25"},"nodeType":"YulFunctionCall","src":"46123:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46116:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45846:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45853:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45861:3:25","type":""}],"src":"45755:390:25"},{"body":{"nodeType":"YulBlock","src":"46287:139:25","statements":[{"nodeType":"YulAssignment","src":"46298:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46387:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"46396:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46305:81:25"},"nodeType":"YulFunctionCall","src":"46305:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46298:3:25"}]},{"nodeType":"YulAssignment","src":"46410:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"46417:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46410:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46266:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46272:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46283:3:25","type":""}],"src":"46151:275:25"},{"body":{"nodeType":"YulBlock","src":"46506:32:25","statements":[{"nodeType":"YulAssignment","src":"46517:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"46527:4:25","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"46517:6:25"}]}]},"name":"array_length_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46489:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"46499:6:25","type":""}],"src":"46432:106:25"},{"body":{"nodeType":"YulBlock","src":"46653:34:25","statements":[{"nodeType":"YulAssignment","src":"46663:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"46678:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"46663:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46625:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"46630:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"46641:11:25","type":""}],"src":"46544:143:25"},{"body":{"nodeType":"YulBlock","src":"46765:28:25","statements":[{"nodeType":"YulAssignment","src":"46775:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"46783:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"46775:4:25"}]}]},"name":"array_dataslot_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"46752:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"46760:4:25","type":""}],"src":"46693:100:25"},{"body":{"nodeType":"YulBlock","src":"46879:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46923:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"46931:3:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"46889:33:25"},"nodeType":"YulFunctionCall","src":"46889:46:25"},"nodeType":"YulExpressionStatement","src":"46889:46:25"},{"nodeType":"YulAssignment","src":"46944:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46962:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"46967:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46958:3:25"},"nodeType":"YulFunctionCall","src":"46958:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"46944:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"46852:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46860:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"46868:10:25","type":""}],"src":"46799:179:25"},{"body":{"nodeType":"YulBlock","src":"47059:38:25","statements":[{"nodeType":"YulAssignment","src":"47069:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"47081:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"47086:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47077:3:25"},"nodeType":"YulFunctionCall","src":"47077:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"47069:4:25"}]}]},"name":"array_nextElement_t_array$_t_address_$3_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"47046:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"47054:4:25","type":""}],"src":"46984:113:25"},{"body":{"nodeType":"YulBlock","src":"47249:617:25","statements":[{"nodeType":"YulVariableDeclaration","src":"47259:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47321:5:25"}],"functionName":{"name":"array_length_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"47273:47:25"},"nodeType":"YulFunctionCall","src":"47273:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47263:6:25","type":""}]},{"nodeType":"YulAssignment","src":"47336:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47415:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"47420:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47343:71:25"},"nodeType":"YulFunctionCall","src":"47343:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47336:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"47436:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47501:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"47451:49:25"},"nodeType":"YulFunctionCall","src":"47451:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"47440:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47516:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"47530:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"47520:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"47606:253:25","statements":[{"nodeType":"YulVariableDeclaration","src":"47620:63:25","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"47667:7:25"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"47676:6:25"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"47641:25:25"},"nodeType":"YulFunctionCall","src":"47641:42:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"47624:13:25","type":""}]},{"nodeType":"YulAssignment","src":"47696:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"47747:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"47762:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"47703:43:25"},"nodeType":"YulFunctionCall","src":"47703:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47696:3:25"}]},{"nodeType":"YulAssignment","src":"47779:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"47842:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$3_calldata_ptr","nodeType":"YulIdentifier","src":"47789:52:25"},"nodeType":"YulFunctionCall","src":"47789:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"47779:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"47568:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"47571:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47565:2:25"},"nodeType":"YulFunctionCall","src":"47565:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"47579:18:25","statements":[{"nodeType":"YulAssignment","src":"47581:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"47590:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"47593:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47586:3:25"},"nodeType":"YulFunctionCall","src":"47586:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"47581:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"47550:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"47552:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"47561:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"47556:1:25","type":""}]}]},"src":"47546:313:25"}]},"name":"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47236:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47243:3:25","type":""}],"src":"47135:731:25"},{"body":{"nodeType":"YulBlock","src":"48328:1085:25","statements":[{"nodeType":"YulAssignment","src":"48338:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48350:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48361:3:25","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48346:3:25"},"nodeType":"YulFunctionCall","src":"48346:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48338:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"48419:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48432:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48443:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48428:3:25"},"nodeType":"YulFunctionCall","src":"48428:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48375:43:25"},"nodeType":"YulFunctionCall","src":"48375:71:25"},"nodeType":"YulExpressionStatement","src":"48375:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"48500:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48513:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48524:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48509:3:25"},"nodeType":"YulFunctionCall","src":"48509:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48456:43:25"},"nodeType":"YulFunctionCall","src":"48456:72:25"},"nodeType":"YulExpressionStatement","src":"48456:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"48582:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48595:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48606:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48591:3:25"},"nodeType":"YulFunctionCall","src":"48591:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48538:43:25"},"nodeType":"YulFunctionCall","src":"48538:72:25"},"nodeType":"YulExpressionStatement","src":"48538:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"48664:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48677:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48688:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48673:3:25"},"nodeType":"YulFunctionCall","src":"48673:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48620:43:25"},"nodeType":"YulFunctionCall","src":"48620:72:25"},"nodeType":"YulExpressionStatement","src":"48620:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"48746:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48759:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48770:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48755:3:25"},"nodeType":"YulFunctionCall","src":"48755:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48702:43:25"},"nodeType":"YulFunctionCall","src":"48702:73:25"},"nodeType":"YulExpressionStatement","src":"48702:73:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"48877:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48890:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48901:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48886:3:25"},"nodeType":"YulFunctionCall","src":"48886:19:25"}],"functionName":{"name":"abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48785:91:25"},"nodeType":"YulFunctionCall","src":"48785:121:25"},"nodeType":"YulExpressionStatement","src":"48785:121:25"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"48960:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48973:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"48984:3:25","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48969:3:25"},"nodeType":"YulFunctionCall","src":"48969:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48916:43:25"},"nodeType":"YulFunctionCall","src":"48916:73:25"},"nodeType":"YulExpressionStatement","src":"48916:73:25"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"49043:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49056:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"49067:3:25","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49052:3:25"},"nodeType":"YulFunctionCall","src":"49052:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"48999:43:25"},"nodeType":"YulFunctionCall","src":"48999:73:25"},"nodeType":"YulExpressionStatement","src":"48999:73:25"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"49126:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49139:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"49150:3:25","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49135:3:25"},"nodeType":"YulFunctionCall","src":"49135:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"49082:43:25"},"nodeType":"YulFunctionCall","src":"49082:73:25"},"nodeType":"YulExpressionStatement","src":"49082:73:25"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"49209:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49222:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"49233:3:25","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49218:3:25"},"nodeType":"YulFunctionCall","src":"49218:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"49165:43:25"},"nodeType":"YulFunctionCall","src":"49165:73:25"},"nodeType":"YulExpressionStatement","src":"49165:73:25"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"49292:7:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49306:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"49317:3:25","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49302:3:25"},"nodeType":"YulFunctionCall","src":"49302:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"49248:43:25"},"nodeType":"YulFunctionCall","src":"49248:74:25"},"nodeType":"YulExpressionStatement","src":"49248:74:25"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"49376:7:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49390:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"49401:3:25","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49386:3:25"},"nodeType":"YulFunctionCall","src":"49386:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"49332:43:25"},"nodeType":"YulFunctionCall","src":"49332:74:25"},"nodeType":"YulExpressionStatement","src":"49332:74:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48210:9:25","type":""},{"name":"value11","nodeType":"YulTypedName","src":"48222:7:25","type":""},{"name":"value10","nodeType":"YulTypedName","src":"48231:7:25","type":""},{"name":"value9","nodeType":"YulTypedName","src":"48240:6:25","type":""},{"name":"value8","nodeType":"YulTypedName","src":"48248:6:25","type":""},{"name":"value7","nodeType":"YulTypedName","src":"48256:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"48264:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"48272:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"48280:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"48288:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"48296:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"48304:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"48312:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48323:4:25","type":""}],"src":"47872:1541:25"},{"body":{"nodeType":"YulBlock","src":"49472:32:25","statements":[{"nodeType":"YulAssignment","src":"49482:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"49493:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"49482:7:25"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49454:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"49464:7:25","type":""}],"src":"49419:85:25"},{"body":{"nodeType":"YulBlock","src":"49553:43:25","statements":[{"nodeType":"YulAssignment","src":"49563:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49578:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"49585:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"49574:3:25"},"nodeType":"YulFunctionCall","src":"49574:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"49563:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49535:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"49545:7:25","type":""}],"src":"49510:86:25"},{"body":{"nodeType":"YulBlock","src":"49668:88:25","statements":[{"nodeType":"YulAssignment","src":"49678:72:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49742:5:25"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"49716:25:25"},"nodeType":"YulFunctionCall","src":"49716:32:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"49707:8:25"},"nodeType":"YulFunctionCall","src":"49707:42:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"49691:15:25"},"nodeType":"YulFunctionCall","src":"49691:59:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"49678:9:25"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49648:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"49658:9:25","type":""}],"src":"49602:154:25"},{"body":{"nodeType":"YulBlock","src":"49833:72:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49850:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49892:5:25"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"49855:36:25"},"nodeType":"YulFunctionCall","src":"49855:43:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49843:6:25"},"nodeType":"YulFunctionCall","src":"49843:56:25"},"nodeType":"YulExpressionStatement","src":"49843:56:25"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49821:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49828:3:25","type":""}],"src":"49762:143:25"},{"body":{"nodeType":"YulBlock","src":"50015:130:25","statements":[{"nodeType":"YulAssignment","src":"50025:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50037:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"50048:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50033:3:25"},"nodeType":"YulFunctionCall","src":"50033:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50025:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"50111:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50124:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"50135:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50120:3:25"},"nodeType":"YulFunctionCall","src":"50120:17:25"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"50061:49:25"},"nodeType":"YulFunctionCall","src":"50061:77:25"},"nodeType":"YulExpressionStatement","src":"50061:77:25"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49987:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"49999:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50010:4:25","type":""}],"src":"49911:234:25"},{"body":{"nodeType":"YulBlock","src":"50257:128:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50279:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"50287:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50275:3:25"},"nodeType":"YulFunctionCall","src":"50275:14:25"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"50291:34:25","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50268:6:25"},"nodeType":"YulFunctionCall","src":"50268:58:25"},"nodeType":"YulExpressionStatement","src":"50268:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50347:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"50355:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50343:3:25"},"nodeType":"YulFunctionCall","src":"50343:15:25"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"50360:17:25","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50336:6:25"},"nodeType":"YulFunctionCall","src":"50336:42:25"},"nodeType":"YulExpressionStatement","src":"50336:42:25"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50249:6:25","type":""}],"src":"50151:234:25"},{"body":{"nodeType":"YulBlock","src":"50537:220:25","statements":[{"nodeType":"YulAssignment","src":"50547:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50613:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"50618:2:25","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50554:58:25"},"nodeType":"YulFunctionCall","src":"50554:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50547:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50719:3:25"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"50630:88:25"},"nodeType":"YulFunctionCall","src":"50630:93:25"},"nodeType":"YulExpressionStatement","src":"50630:93:25"},{"nodeType":"YulAssignment","src":"50732:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50743:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"50748:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50739:3:25"},"nodeType":"YulFunctionCall","src":"50739:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50732:3:25"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50525:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50533:3:25","type":""}],"src":"50391:366:25"},{"body":{"nodeType":"YulBlock","src":"50934:248:25","statements":[{"nodeType":"YulAssignment","src":"50944:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50956:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"50967:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50952:3:25"},"nodeType":"YulFunctionCall","src":"50952:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50944:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50991:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"51002:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50987:3:25"},"nodeType":"YulFunctionCall","src":"50987:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51010:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"51016:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51006:3:25"},"nodeType":"YulFunctionCall","src":"51006:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50980:6:25"},"nodeType":"YulFunctionCall","src":"50980:47:25"},"nodeType":"YulExpressionStatement","src":"50980:47:25"},{"nodeType":"YulAssignment","src":"51036:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51170:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51044:124:25"},"nodeType":"YulFunctionCall","src":"51044:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51036:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50914:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50929:4:25","type":""}],"src":"50763:419:25"},{"body":{"nodeType":"YulBlock","src":"51294:55:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51316:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"51324:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51312:3:25"},"nodeType":"YulFunctionCall","src":"51312:14:25"},{"hexValue":"5265736375653041646472","kind":"string","nodeType":"YulLiteral","src":"51328:13:25","type":"","value":"Rescue0Addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51305:6:25"},"nodeType":"YulFunctionCall","src":"51305:37:25"},"nodeType":"YulExpressionStatement","src":"51305:37:25"}]},"name":"store_literal_in_memory_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51286:6:25","type":""}],"src":"51188:161:25"},{"body":{"nodeType":"YulBlock","src":"51501:220:25","statements":[{"nodeType":"YulAssignment","src":"51511:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51577:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"51582:2:25","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51518:58:25"},"nodeType":"YulFunctionCall","src":"51518:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51511:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51683:3:25"}],"functionName":{"name":"store_literal_in_memory_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839","nodeType":"YulIdentifier","src":"51594:88:25"},"nodeType":"YulFunctionCall","src":"51594:93:25"},"nodeType":"YulExpressionStatement","src":"51594:93:25"},{"nodeType":"YulAssignment","src":"51696:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51707:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"51712:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51703:3:25"},"nodeType":"YulFunctionCall","src":"51703:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51696:3:25"}]}]},"name":"abi_encode_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51489:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51497:3:25","type":""}],"src":"51355:366:25"},{"body":{"nodeType":"YulBlock","src":"51898:248:25","statements":[{"nodeType":"YulAssignment","src":"51908:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"51931:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51916:3:25"},"nodeType":"YulFunctionCall","src":"51916:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51908:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51955:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"51966:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51951:3:25"},"nodeType":"YulFunctionCall","src":"51951:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51974:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"51980:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51970:3:25"},"nodeType":"YulFunctionCall","src":"51970:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51944:6:25"},"nodeType":"YulFunctionCall","src":"51944:47:25"},"nodeType":"YulExpressionStatement","src":"51944:47:25"},{"nodeType":"YulAssignment","src":"52000:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52134:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52008:124:25"},"nodeType":"YulFunctionCall","src":"52008:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52000:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51878:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51893:4:25","type":""}],"src":"51727:419:25"},{"body":{"nodeType":"YulBlock","src":"52336:369:25","statements":[{"nodeType":"YulAssignment","src":"52346:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52358:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"52369:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52354:3:25"},"nodeType":"YulFunctionCall","src":"52354:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52346:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52426:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52439:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"52450:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52435:3:25"},"nodeType":"YulFunctionCall","src":"52435:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"52382:43:25"},"nodeType":"YulFunctionCall","src":"52382:71:25"},"nodeType":"YulExpressionStatement","src":"52382:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52474:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"52485:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52470:3:25"},"nodeType":"YulFunctionCall","src":"52470:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52494:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"52500:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52490:3:25"},"nodeType":"YulFunctionCall","src":"52490:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52463:6:25"},"nodeType":"YulFunctionCall","src":"52463:48:25"},"nodeType":"YulExpressionStatement","src":"52463:48:25"},{"nodeType":"YulAssignment","src":"52520:96:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"52594:6:25"},{"name":"value2","nodeType":"YulIdentifier","src":"52602:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"52611:4:25"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52528:65:25"},"nodeType":"YulFunctionCall","src":"52528:88:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52520:4:25"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"52670:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52683:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"52694:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52679:3:25"},"nodeType":"YulFunctionCall","src":"52679:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"52626:43:25"},"nodeType":"YulFunctionCall","src":"52626:72:25"},"nodeType":"YulExpressionStatement","src":"52626:72:25"}]},"name":"abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52284:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"52296:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"52304:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52312:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52320:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52331:4:25","type":""}],"src":"52152:553:25"},{"body":{"nodeType":"YulBlock","src":"52817:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52839:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"52847:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52835:3:25"},"nodeType":"YulFunctionCall","src":"52835:14:25"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"52851:33:25","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52828:6:25"},"nodeType":"YulFunctionCall","src":"52828:57:25"},"nodeType":"YulExpressionStatement","src":"52828:57:25"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52809:6:25","type":""}],"src":"52711:181:25"},{"body":{"nodeType":"YulBlock","src":"53044:220:25","statements":[{"nodeType":"YulAssignment","src":"53054:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53120:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"53125:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53061:58:25"},"nodeType":"YulFunctionCall","src":"53061:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53054:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53226:3:25"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"53137:88:25"},"nodeType":"YulFunctionCall","src":"53137:93:25"},"nodeType":"YulExpressionStatement","src":"53137:93:25"},{"nodeType":"YulAssignment","src":"53239:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53250:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"53255:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53246:3:25"},"nodeType":"YulFunctionCall","src":"53246:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53239:3:25"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53032:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53040:3:25","type":""}],"src":"52898:366:25"},{"body":{"nodeType":"YulBlock","src":"53441:248:25","statements":[{"nodeType":"YulAssignment","src":"53451:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53463:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"53474:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53459:3:25"},"nodeType":"YulFunctionCall","src":"53459:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53451:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53498:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"53509:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53494:3:25"},"nodeType":"YulFunctionCall","src":"53494:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53517:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"53523:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53513:3:25"},"nodeType":"YulFunctionCall","src":"53513:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53487:6:25"},"nodeType":"YulFunctionCall","src":"53487:47:25"},"nodeType":"YulExpressionStatement","src":"53487:47:25"},{"nodeType":"YulAssignment","src":"53543:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53677:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53551:124:25"},"nodeType":"YulFunctionCall","src":"53551:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53543:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53421:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53436:4:25","type":""}],"src":"53270:419:25"},{"body":{"nodeType":"YulBlock","src":"53801:124:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53823:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"53831:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53819:3:25"},"nodeType":"YulFunctionCall","src":"53819:14:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"53835:34:25","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53812:6:25"},"nodeType":"YulFunctionCall","src":"53812:58:25"},"nodeType":"YulExpressionStatement","src":"53812:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53891:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"53899:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53887:3:25"},"nodeType":"YulFunctionCall","src":"53887:15:25"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"53904:13:25","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53880:6:25"},"nodeType":"YulFunctionCall","src":"53880:38:25"},"nodeType":"YulExpressionStatement","src":"53880:38:25"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53793:6:25","type":""}],"src":"53695:230:25"},{"body":{"nodeType":"YulBlock","src":"54077:220:25","statements":[{"nodeType":"YulAssignment","src":"54087:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54153:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"54158:2:25","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54094:58:25"},"nodeType":"YulFunctionCall","src":"54094:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54087:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54259:3:25"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"54170:88:25"},"nodeType":"YulFunctionCall","src":"54170:93:25"},"nodeType":"YulExpressionStatement","src":"54170:93:25"},{"nodeType":"YulAssignment","src":"54272:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54283:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"54288:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54279:3:25"},"nodeType":"YulFunctionCall","src":"54279:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54272:3:25"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54065:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54073:3:25","type":""}],"src":"53931:366:25"},{"body":{"nodeType":"YulBlock","src":"54474:248:25","statements":[{"nodeType":"YulAssignment","src":"54484:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54496:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"54507:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54492:3:25"},"nodeType":"YulFunctionCall","src":"54492:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54484:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54531:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"54542:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54527:3:25"},"nodeType":"YulFunctionCall","src":"54527:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54550:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"54556:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54546:3:25"},"nodeType":"YulFunctionCall","src":"54546:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54520:6:25"},"nodeType":"YulFunctionCall","src":"54520:47:25"},"nodeType":"YulExpressionStatement","src":"54520:47:25"},{"nodeType":"YulAssignment","src":"54576:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54710:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54584:124:25"},"nodeType":"YulFunctionCall","src":"54584:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54576:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54454:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54469:4:25","type":""}],"src":"54303:419:25"},{"body":{"nodeType":"YulBlock","src":"54834:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54856:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"54864:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54852:3:25"},"nodeType":"YulFunctionCall","src":"54852:14:25"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"54868:25:25","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54845:6:25"},"nodeType":"YulFunctionCall","src":"54845:49:25"},"nodeType":"YulExpressionStatement","src":"54845:49:25"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54826:6:25","type":""}],"src":"54728:173:25"},{"body":{"nodeType":"YulBlock","src":"55071:238:25","statements":[{"nodeType":"YulAssignment","src":"55081:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55165:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"55170:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"55088:76:25"},"nodeType":"YulFunctionCall","src":"55088:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55081:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55271:3:25"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"55182:88:25"},"nodeType":"YulFunctionCall","src":"55182:93:25"},"nodeType":"YulExpressionStatement","src":"55182:93:25"},{"nodeType":"YulAssignment","src":"55284:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55295:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"55300:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55291:3:25"},"nodeType":"YulFunctionCall","src":"55291:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55284:3:25"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55059:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55067:3:25","type":""}],"src":"54907:402:25"},{"body":{"nodeType":"YulBlock","src":"55421:61:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55443:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"55451:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55439:3:25"},"nodeType":"YulFunctionCall","src":"55439:14:25"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"55455:19:25","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55432:6:25"},"nodeType":"YulFunctionCall","src":"55432:43:25"},"nodeType":"YulExpressionStatement","src":"55432:43:25"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55413:6:25","type":""}],"src":"55315:167:25"},{"body":{"nodeType":"YulBlock","src":"55652:238:25","statements":[{"nodeType":"YulAssignment","src":"55662:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55746:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"55751:2:25","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"55669:76:25"},"nodeType":"YulFunctionCall","src":"55669:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55662:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55852:3:25"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"55763:88:25"},"nodeType":"YulFunctionCall","src":"55763:93:25"},"nodeType":"YulExpressionStatement","src":"55763:93:25"},{"nodeType":"YulAssignment","src":"55865:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55876:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"55881:2:25","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55872:3:25"},"nodeType":"YulFunctionCall","src":"55872:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55865:3:25"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55640:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55648:3:25","type":""}],"src":"55488:402:25"},{"body":{"nodeType":"YulBlock","src":"56282:581:25","statements":[{"nodeType":"YulAssignment","src":"56293:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56444:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"56300:142:25"},"nodeType":"YulFunctionCall","src":"56300:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56293:3:25"}]},{"nodeType":"YulAssignment","src":"56458:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56547:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"56556:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"56465:81:25"},"nodeType":"YulFunctionCall","src":"56465:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56458:3:25"}]},{"nodeType":"YulAssignment","src":"56570:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56721:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"56577:142:25"},"nodeType":"YulFunctionCall","src":"56577:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56570:3:25"}]},{"nodeType":"YulAssignment","src":"56735:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"56824:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"56833:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"56742:81:25"},"nodeType":"YulFunctionCall","src":"56742:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56735:3:25"}]},{"nodeType":"YulAssignment","src":"56847:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"56854:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56847:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56253:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56259:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56267:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56278:3:25","type":""}],"src":"55896:967:25"},{"body":{"nodeType":"YulBlock","src":"56975:123:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56997:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"57005:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56993:3:25"},"nodeType":"YulFunctionCall","src":"56993:14:25"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"57009:34:25","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56986:6:25"},"nodeType":"YulFunctionCall","src":"56986:58:25"},"nodeType":"YulExpressionStatement","src":"56986:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57065:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"57073:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57061:3:25"},"nodeType":"YulFunctionCall","src":"57061:15:25"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"57078:12:25","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57054:6:25"},"nodeType":"YulFunctionCall","src":"57054:37:25"},"nodeType":"YulExpressionStatement","src":"57054:37:25"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56967:6:25","type":""}],"src":"56869:229:25"},{"body":{"nodeType":"YulBlock","src":"57250:220:25","statements":[{"nodeType":"YulAssignment","src":"57260:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57326:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"57331:2:25","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57267:58:25"},"nodeType":"YulFunctionCall","src":"57267:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57260:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57432:3:25"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"57343:88:25"},"nodeType":"YulFunctionCall","src":"57343:93:25"},"nodeType":"YulExpressionStatement","src":"57343:93:25"},{"nodeType":"YulAssignment","src":"57445:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57456:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"57461:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57452:3:25"},"nodeType":"YulFunctionCall","src":"57452:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57445:3:25"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57238:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"57246:3:25","type":""}],"src":"57104:366:25"},{"body":{"nodeType":"YulBlock","src":"57647:248:25","statements":[{"nodeType":"YulAssignment","src":"57657:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57669:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"57680:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57665:3:25"},"nodeType":"YulFunctionCall","src":"57665:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57657:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57704:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"57715:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57700:3:25"},"nodeType":"YulFunctionCall","src":"57700:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57723:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"57729:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57719:3:25"},"nodeType":"YulFunctionCall","src":"57719:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57693:6:25"},"nodeType":"YulFunctionCall","src":"57693:47:25"},"nodeType":"YulExpressionStatement","src":"57693:47:25"},{"nodeType":"YulAssignment","src":"57749:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57883:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57757:124:25"},"nodeType":"YulFunctionCall","src":"57757:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57749:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57627:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57642:4:25","type":""}],"src":"57476:419:25"},{"body":{"nodeType":"YulBlock","src":"57949:362:25","statements":[{"nodeType":"YulAssignment","src":"57959:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"57982:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"57964:17:25"},"nodeType":"YulFunctionCall","src":"57964:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"57959:1:25"}]},{"nodeType":"YulAssignment","src":"57993:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"58016:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"57998:17:25"},"nodeType":"YulFunctionCall","src":"57998:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"57993:1:25"}]},{"nodeType":"YulVariableDeclaration","src":"58027:28:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58050:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"58053:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"58046:3:25"},"nodeType":"YulFunctionCall","src":"58046:9:25"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"58031:11:25","type":""}]},{"nodeType":"YulAssignment","src":"58064:41:25","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"58093:11:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58075:17:25"},"nodeType":"YulFunctionCall","src":"58075:30:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"58064:7:25"}]},{"body":{"nodeType":"YulBlock","src":"58282:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"58284:16:25"},"nodeType":"YulFunctionCall","src":"58284:18:25"},"nodeType":"YulExpressionStatement","src":"58284:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58215:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"58208:6:25"},"nodeType":"YulFunctionCall","src":"58208:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"58238:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"58245:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"58254:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"58241:3:25"},"nodeType":"YulFunctionCall","src":"58241:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"58235:2:25"},"nodeType":"YulFunctionCall","src":"58235:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"58188:2:25"},"nodeType":"YulFunctionCall","src":"58188:83:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"58168:6:25"},"nodeType":"YulFunctionCall","src":"58168:113:25"},"nodeType":"YulIf","src":"58165:139:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"57932:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"57935:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"57941:7:25","type":""}],"src":"57901:410:25"},{"body":{"nodeType":"YulBlock","src":"58361:147:25","statements":[{"nodeType":"YulAssignment","src":"58371:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58394:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58376:17:25"},"nodeType":"YulFunctionCall","src":"58376:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"58371:1:25"}]},{"nodeType":"YulAssignment","src":"58405:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"58428:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58410:17:25"},"nodeType":"YulFunctionCall","src":"58410:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"58405:1:25"}]},{"nodeType":"YulAssignment","src":"58439:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58450:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"58453:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58446:3:25"},"nodeType":"YulFunctionCall","src":"58446:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"58439:3:25"}]},{"body":{"nodeType":"YulBlock","src":"58479:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"58481:16:25"},"nodeType":"YulFunctionCall","src":"58481:18:25"},"nodeType":"YulExpressionStatement","src":"58481:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58471:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"58474:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"58468:2:25"},"nodeType":"YulFunctionCall","src":"58468:10:25"},"nodeType":"YulIf","src":"58465:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"58348:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"58351:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"58357:3:25","type":""}],"src":"58317:191:25"},{"body":{"nodeType":"YulBlock","src":"58557:128:25","statements":[{"nodeType":"YulAssignment","src":"58567:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58594:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58576:17:25"},"nodeType":"YulFunctionCall","src":"58576:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"58567:5:25"}]},{"body":{"nodeType":"YulBlock","src":"58628:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"58630:16:25"},"nodeType":"YulFunctionCall","src":"58630:18:25"},"nodeType":"YulExpressionStatement","src":"58630:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58615:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"58622:4:25","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"58612:2:25"},"nodeType":"YulFunctionCall","src":"58612:15:25"},"nodeType":"YulIf","src":"58609:41:25"},{"nodeType":"YulAssignment","src":"58659:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58670:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"58677:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58666:3:25"},"nodeType":"YulFunctionCall","src":"58666:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"58659:3:25"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"58543:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"58553:3:25","type":""}],"src":"58514:171:25"},{"body":{"nodeType":"YulBlock","src":"58797:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"58819:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"58827:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58815:3:25"},"nodeType":"YulFunctionCall","src":"58815:14:25"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"58831:34:25","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58808:6:25"},"nodeType":"YulFunctionCall","src":"58808:58:25"},"nodeType":"YulExpressionStatement","src":"58808:58:25"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"58789:6:25","type":""}],"src":"58691:182:25"},{"body":{"nodeType":"YulBlock","src":"59025:220:25","statements":[{"nodeType":"YulAssignment","src":"59035:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59101:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"59106:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59042:58:25"},"nodeType":"YulFunctionCall","src":"59042:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"59035:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59207:3:25"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"59118:88:25"},"nodeType":"YulFunctionCall","src":"59118:93:25"},"nodeType":"YulExpressionStatement","src":"59118:93:25"},{"nodeType":"YulAssignment","src":"59220:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59231:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"59236:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59227:3:25"},"nodeType":"YulFunctionCall","src":"59227:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"59220:3:25"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"59013:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"59021:3:25","type":""}],"src":"58879:366:25"},{"body":{"nodeType":"YulBlock","src":"59422:248:25","statements":[{"nodeType":"YulAssignment","src":"59432:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59444:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"59455:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59440:3:25"},"nodeType":"YulFunctionCall","src":"59440:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59432:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59479:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"59490:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59475:3:25"},"nodeType":"YulFunctionCall","src":"59475:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59498:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"59504:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59494:3:25"},"nodeType":"YulFunctionCall","src":"59494:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59468:6:25"},"nodeType":"YulFunctionCall","src":"59468:47:25"},"nodeType":"YulExpressionStatement","src":"59468:47:25"},{"nodeType":"YulAssignment","src":"59524:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59658:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59532:124:25"},"nodeType":"YulFunctionCall","src":"59532:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59524:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59402:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59417:4:25","type":""}],"src":"59251:419:25"},{"body":{"nodeType":"YulBlock","src":"59721:149:25","statements":[{"nodeType":"YulAssignment","src":"59731:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59754:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59736:17:25"},"nodeType":"YulFunctionCall","src":"59736:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"59731:1:25"}]},{"nodeType":"YulAssignment","src":"59765:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"59788:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59770:17:25"},"nodeType":"YulFunctionCall","src":"59770:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"59765:1:25"}]},{"nodeType":"YulAssignment","src":"59799:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59811:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"59814:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59807:3:25"},"nodeType":"YulFunctionCall","src":"59807:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"59799:4:25"}]},{"body":{"nodeType":"YulBlock","src":"59841:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"59843:16:25"},"nodeType":"YulFunctionCall","src":"59843:18:25"},"nodeType":"YulExpressionStatement","src":"59843:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"59832:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"59838:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"59829:2:25"},"nodeType":"YulFunctionCall","src":"59829:11:25"},"nodeType":"YulIf","src":"59826:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"59707:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"59710:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"59716:4:25","type":""}],"src":"59676:194:25"},{"body":{"nodeType":"YulBlock","src":"59904:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"59921:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"59924:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59914:6:25"},"nodeType":"YulFunctionCall","src":"59914:88:25"},"nodeType":"YulExpressionStatement","src":"59914:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60018:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"60021:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60011:6:25"},"nodeType":"YulFunctionCall","src":"60011:15:25"},"nodeType":"YulExpressionStatement","src":"60011:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"60042:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"60045:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"60035:6:25"},"nodeType":"YulFunctionCall","src":"60035:15:25"},"nodeType":"YulExpressionStatement","src":"60035:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"59876:180:25"},{"body":{"nodeType":"YulBlock","src":"60168:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60190:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"60198:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60186:3:25"},"nodeType":"YulFunctionCall","src":"60186:14:25"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"60202:34:25","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60179:6:25"},"nodeType":"YulFunctionCall","src":"60179:58:25"},"nodeType":"YulExpressionStatement","src":"60179:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60258:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"60266:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60254:3:25"},"nodeType":"YulFunctionCall","src":"60254:15:25"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"60271:8:25","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60247:6:25"},"nodeType":"YulFunctionCall","src":"60247:33:25"},"nodeType":"YulExpressionStatement","src":"60247:33:25"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"60160:6:25","type":""}],"src":"60062:225:25"},{"body":{"nodeType":"YulBlock","src":"60439:220:25","statements":[{"nodeType":"YulAssignment","src":"60449:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60515:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"60520:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60456:58:25"},"nodeType":"YulFunctionCall","src":"60456:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60449:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60621:3:25"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"60532:88:25"},"nodeType":"YulFunctionCall","src":"60532:93:25"},"nodeType":"YulExpressionStatement","src":"60532:93:25"},{"nodeType":"YulAssignment","src":"60634:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60645:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"60650:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60641:3:25"},"nodeType":"YulFunctionCall","src":"60641:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60634:3:25"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60427:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60435:3:25","type":""}],"src":"60293:366:25"},{"body":{"nodeType":"YulBlock","src":"60836:248:25","statements":[{"nodeType":"YulAssignment","src":"60846:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60858:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"60869:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60854:3:25"},"nodeType":"YulFunctionCall","src":"60854:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60846:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60893:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"60904:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60889:3:25"},"nodeType":"YulFunctionCall","src":"60889:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60912:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"60918:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60908:3:25"},"nodeType":"YulFunctionCall","src":"60908:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60882:6:25"},"nodeType":"YulFunctionCall","src":"60882:47:25"},"nodeType":"YulExpressionStatement","src":"60882:47:25"},{"nodeType":"YulAssignment","src":"60938:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61072:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60946:124:25"},"nodeType":"YulFunctionCall","src":"60946:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60938:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60816:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60831:4:25","type":""}],"src":"60665:419:25"},{"body":{"nodeType":"YulBlock","src":"61148:40:25","statements":[{"nodeType":"YulAssignment","src":"61159:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61175:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"61169:5:25"},"nodeType":"YulFunctionCall","src":"61169:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"61159:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"61131:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"61141:6:25","type":""}],"src":"61090:98:25"},{"body":{"nodeType":"YulBlock","src":"61307:34:25","statements":[{"nodeType":"YulAssignment","src":"61317:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"61332:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"61317:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61279:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"61284:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"61295:11:25","type":""}],"src":"61194:147:25"},{"body":{"nodeType":"YulBlock","src":"61455:278:25","statements":[{"nodeType":"YulVariableDeclaration","src":"61465:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61511:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"61479:31:25"},"nodeType":"YulFunctionCall","src":"61479:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"61469:6:25","type":""}]},{"nodeType":"YulAssignment","src":"61526:95:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61609:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"61614:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"61533:75:25"},"nodeType":"YulFunctionCall","src":"61533:88:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61526:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"61669:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"61676:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61665:3:25"},"nodeType":"YulFunctionCall","src":"61665:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"61683:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"61688:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"61630:34:25"},"nodeType":"YulFunctionCall","src":"61630:65:25"},"nodeType":"YulExpressionStatement","src":"61630:65:25"},{"nodeType":"YulAssignment","src":"61704:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61715:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"61720:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61711:3:25"},"nodeType":"YulFunctionCall","src":"61711:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61704:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"61436:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"61443:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61451:3:25","type":""}],"src":"61347:386:25"},{"body":{"nodeType":"YulBlock","src":"61873:137:25","statements":[{"nodeType":"YulAssignment","src":"61884:100:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"61971:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"61980:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"61891:79:25"},"nodeType":"YulFunctionCall","src":"61891:93:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61884:3:25"}]},{"nodeType":"YulAssignment","src":"61994:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"62001:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61994:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61852:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"61858:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61869:3:25","type":""}],"src":"61739:271:25"},{"body":{"nodeType":"YulBlock","src":"62122:73:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62144:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"62152:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62140:3:25"},"nodeType":"YulFunctionCall","src":"62140:14:25"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"62156:31:25","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62133:6:25"},"nodeType":"YulFunctionCall","src":"62133:55:25"},"nodeType":"YulExpressionStatement","src":"62133:55:25"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"62114:6:25","type":""}],"src":"62016:179:25"},{"body":{"nodeType":"YulBlock","src":"62347:220:25","statements":[{"nodeType":"YulAssignment","src":"62357:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62423:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"62428:2:25","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62364:58:25"},"nodeType":"YulFunctionCall","src":"62364:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62357:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62529:3:25"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"62440:88:25"},"nodeType":"YulFunctionCall","src":"62440:93:25"},"nodeType":"YulExpressionStatement","src":"62440:93:25"},{"nodeType":"YulAssignment","src":"62542:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62553:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"62558:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62549:3:25"},"nodeType":"YulFunctionCall","src":"62549:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62542:3:25"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"62335:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62343:3:25","type":""}],"src":"62201:366:25"},{"body":{"nodeType":"YulBlock","src":"62744:248:25","statements":[{"nodeType":"YulAssignment","src":"62754:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62766:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"62777:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62762:3:25"},"nodeType":"YulFunctionCall","src":"62762:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62754:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62801:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"62812:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62797:3:25"},"nodeType":"YulFunctionCall","src":"62797:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62820:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"62826:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"62816:3:25"},"nodeType":"YulFunctionCall","src":"62816:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62790:6:25"},"nodeType":"YulFunctionCall","src":"62790:47:25"},"nodeType":"YulExpressionStatement","src":"62790:47:25"},{"nodeType":"YulAssignment","src":"62846:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62980:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62854:124:25"},"nodeType":"YulFunctionCall","src":"62854:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62846:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"62724:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"62739:4:25","type":""}],"src":"62573:419:25"}]},"contents":"{\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct IColateralContract.SwapParams[]\n    function abi_decode_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_SwapParams_$6069_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // address[3]\n    function abi_decode_t_array$_t_address_$3_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x03, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_array$_t_address_$3_calldata_ptrt_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 416) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_array$_t_address_$3_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value7 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 320\n\n            value8 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 352\n\n            value9 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 384\n\n            value10 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw0Addr\")\n\n    }\n\n    function abi_encode_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52ca7b61321e22215fea83ede9a97a94f3e5230e53cc9cd2bc3ba8d2bf89b90f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_SwapParams_$6069_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x60, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function access_calldata_tail_t_struct$_ExactInputParams_$5150_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xa0, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function store_literal_in_memory_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43d54457c41aa6242e2d6888548951b02473565bf8cc1c213febfcd151535ed7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err Slipp\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd8eecfaa37572a32b1f40edd7021c8ed5409be8ccb4e2f3cfe26d19c41a5c4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDC\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDM\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_ef7cd62bbeac6ba17b355515fe5043c2416c5387315e3b19387ada4ea7e157d9_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err TokenOut\")\n\n    }\n\n    function abi_encode_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_800a103a92dd03eadb45cde4898f825e8dbff266039e6fc90e96e3666a0c82e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err AmountIn\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5ef4a62d7c3d49db4d6a6048952be457c579c4243a7ce03df53099fce111115_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err Approval\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa15e465674affd47babff9f5686559adb7061160940c5c1b9e47eafa8104944_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() {\n        revert(0, 0)\n    }\n\n    function revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() {\n        revert(0, 0)\n    }\n\n    function revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() {\n        revert(0, 0)\n    }\n\n    function calldata_access_t_bytes_calldata_ptr(base_ref, ptr) -> value, length {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_db64ea6d4a12deece376118739de8d9f517a2db5b58ea2ca332ea908c04c71d4() }\n        value := add(rel_offset_of_tail, base_ref)\n\n        length := calldataload(value)\n        value := add(value, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert_error_0803104b3ab68501accf02de57372b8e5e6e1582158b771d3f89279dc6822fe2() }\n        if sgt(value, sub(calldatasize(), mul(length, 0x01))) { revert_error_3894daff73bdbb8963c284e167b207f7abade3c031c50828ea230a16bdbc0f20() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function calldata_access_t_uint256(baseRef, ptr) -> value {\n        value := abi_decode_t_uint256(ptr, add(ptr, 32))\n    }\n\n    // struct ISwapRouter.ExactInputParams -> struct ISwapRouter.ExactInputParams\n    function abi_encode_t_struct$_ExactInputParams_$5150_calldata_ptr_to_t_struct$_ExactInputParams_$5150_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // path\n\n            let memberValue0, memberValue1 := calldata_access_t_bytes_calldata_ptr(value, add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr(memberValue0, memberValue1, tail)\n\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := calldata_access_t_address(value, add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := calldata_access_t_uint256(value, add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputParams_$5150_calldata_ptr__to_t_struct$_ExactInputParams_$5150_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ExactInputParams_$5150_calldata_ptr_to_t_struct$_ExactInputParams_$5150_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Err Approval0\")\n\n    }\n\n    function abi_encode_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16018f4dd383917a6152b2412442f9667f64d9f48391f99d01084f51018ecfc3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"AdminAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_744c6003e3a810ceabaf15df76ea8ec1a662117295a721627c3fdce7df11cf5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"RescueAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d17db1bca851afadd525dd75c89b1330665b096ba391556e2f3f0b98dda757cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c(memPtr) {\n\n        mstore(add(memPtr, 0), \"WithdrawAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4510cc73d30fd13f108c5c6afe5ec5c6174420a2ba7746b853c43084558c009c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85(memPtr) {\n\n        mstore(add(memPtr, 0), \"FirstLenderLiqAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a7b700fa8a254ea8041f487d301ffdcd60efdcbbd71317a3b985b55b7061f85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e(memPtr) {\n\n        mstore(add(memPtr, 0), \"SecondLenderLiqAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_041419481ddbd3b5cb822890ac6d5f8cb6e5478099ccdbf2b89208233878553e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290(memPtr) {\n\n        mstore(add(memPtr, 0), \"SwapRouterAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41f84ba8ed4abadda4664d530359c868a439e108490f16ae91374bf7fdd64290_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942(memPtr) {\n\n        mstore(add(memPtr, 0), \"SwapperAddr\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b24a4666609a549ed4dbb52c64ffc7738609041a82eccf9930116e9e5a64942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_array$_t_address_$3_calldata_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_$3_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$3_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[3] -> address[3]\n    function abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$3_calldata_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$3_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$3_calldata_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_calldata_ptr_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_array$_t_address_$3_memory_ptr_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 448)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_array$_t_address_$3_calldata_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 256))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 288))\n\n        abi_encode_t_address_to_t_address_fromStack(value8,  add(headStart, 320))\n\n        abi_encode_t_address_to_t_address_fromStack(value9,  add(headStart, 352))\n\n        abi_encode_t_address_to_t_address_fromStack(value10,  add(headStart, 384))\n\n        abi_encode_t_address_to_t_address_fromStack(value11,  add(headStart, 416))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839(memPtr) {\n\n        mstore(add(memPtr, 0), \"Rescue0Addr\")\n\n    }\n\n    function abi_encode_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be451c9a5cd66a72bc8c949761cccf7dc4cff67bf23b49d25321bc2126d6b839_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063713725441161010f578063c54e44eb116100a2578063dc048cf211610071578063dc048cf2146105bc578063df668eca146105d8578063e5df800a146105f6578063e63ab1e914610614576101ef565b8063c54e44eb14610536578063ca15c87314610554578063d00411c914610584578063d547741f146105a0576101ef565b806391d14854116100de57806391d14854146104ac578063a217fddf146104dc578063a9da3cf2146104fa578063b14ec10114610518576101ef565b8063713725441461042257806383d333191461044057806389a302711461045e5780639010d07c1461047c576101ef565b80632ffe99421161018757806336568abe1161015657806336568abe1461039a5780634dede3de146103b657806354fd4d50146103d45780636e30199f146103f2576101ef565b80632ffe99421461031457806332cc815d14610330578063334347b71461034e57806335ee5f871461036a576101ef565b8063212f6039116101c3578063212f60391461027c578063248a9ca31461029857806325acc985146102c85780632f2ff15d146102f8576101ef565b8062113e08146101f457806301ffc9a7146102125780630828c4041461024257806315ac73581461025e575b600080fd5b6101fc610632565b6040516102099190613430565b60405180910390f35b61022c600480360381019061022791906134be565b610822565b6040516102399190613506565b60405180910390f35b61025c600480360381019061025791906135b2565b61089c565b005b6102666109b1565b6040516102739190613653565b60405180910390f35b6102966004803603810190610291919061369a565b6109d7565b005b6102b260048036038101906102ad91906136fd565b610ab5565b6040516102bf9190613739565b60405180910390f35b6102e260048036038101906102dd9190613754565b610ad5565b6040516102ef9190613739565b60405180910390f35b610312600480360381019061030d9190613781565b610af2565b005b61032e60048036038101906103299190613817565b610b13565b005b61033861139b565b6040516103459190613739565b60405180910390f35b61036860048036038101906103639190613886565b6113bf565b005b610384600480360381019061037f9190613abd565b611fb3565b6040516103919190613b15565b60405180910390f35b6103b460048036038101906103af9190613781565b612079565b005b6103be6120fc565b6040516103cb9190613baf565b60405180910390f35b6103dc612135565b6040516103e99190613baf565b60405180910390f35b61040c60048036038101906104079190613abd565b612172565b6040516104199190613653565b60405180910390f35b61042a6121bb565b6040516104379190613739565b60405180910390f35b6104486121df565b6040516104559190613b15565b60405180910390f35b6104666121f0565b6040516104739190613baf565b60405180910390f35b61049660048036038101906104919190613bd1565b612229565b6040516104a39190613653565b60405180910390f35b6104c660048036038101906104c19190613781565b612258565b6040516104d39190613506565b60405180910390f35b6104e46122c3565b6040516104f19190613739565b60405180910390f35b6105026122ca565b60405161050f9190613baf565b60405180910390f35b610520612303565b60405161052d9190613653565b60405180910390f35b61053e612329565b60405161054b9190613baf565b60405180910390f35b61056e600480360381019061056991906136fd565b612362565b60405161057b9190613b15565b60405180910390f35b61059e6004803603810190610599919061369a565b612386565b005b6105ba60048036038101906105b59190613781565b612464565b005b6105d660048036038101906105d191906135b2565b612485565b005b6105e0612591565b6040516105ed9190613739565b60405180910390f35b6105fe6125b5565b60405161060b9190613739565b60405180910390f35b61061c6125d9565b6040516106299190613739565b60405180910390f35b60606000600567ffffffffffffffff81111561065157610650613992565b5b60405190808252806020026020018201604052801561067f5781602001602082028036833780820191505090505b509050478160008151811061069757610696613c11565b5b6020026020010181815250506106e16040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250611fb3565b816001815181106106f5576106f4613c11565b5b60200260200101818152505061073f6040518060400160405280600481526020017f5553445400000000000000000000000000000000000000000000000000000000815250611fb3565b8160028151811061075357610752613c11565b5b60200260200101818152505061079d6040518060400160405280600481526020017f5553444d00000000000000000000000000000000000000000000000000000000815250611fb3565b816003815181106107b1576107b0613c11565b5b6020026020010181815250506107fb6040518060400160405280600481526020017f5742544300000000000000000000000000000000000000000000000000000000815250611fb3565b8160048151811061080f5761080e613c11565b5b6020026020010181815250508091505090565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108955750610894826125fd565b5b9050919050565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f236727076108c681612677565b6108ce61268b565b61093b60fd84846040516108e3929190613c70565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866126da565b7f22cb89e6358014bb27f5658e2b820189f8f4c9e3f7165ecf266edc53be12d9fa610964612760565b84848760fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161099b959493929190613cb6565b60405180910390a16109ab612768565b50505050565b60fe60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2610a0181612677565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6790613d50565b60405180910390fd5b8160ff60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600060656000838152602001908152602001600020600101549050919050565b6000610aeb8260fb61277290919063ffffffff16565b9050919050565b610afb82610ab5565b610b0481612677565b610b0e8383612789565b505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc6610b3d81612677565b60005b838390508110156113955736848483818110610b5f57610b5e613c11565b5b9050602002810190610b719190613d75565b90503073ffffffffffffffffffffffffffffffffffffffff16818060000190610b9a9190613d9d565b6020016020810190610bac919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf990613e11565b60405180910390fd5b6000818060000190610c149190613d9d565b6080013511610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90613e7d565b60405180910390fd5b60fd604051610c6690613ee9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610cbe919061369a565b73ffffffffffffffffffffffffffffffffffffffff161480610d59575060fd604051610ce990613f4a565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610d41919061369a565b73ffffffffffffffffffffffffffffffffffffffff16145b80610ddd575060fd604051610d6d90613fab565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16816040016020810190610dc5919061369a565b73ffffffffffffffffffffffffffffffffffffffff16145b610e1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e139061400c565b60405180910390fd5b6000816020016020810190610e31919061369a565b90506000828060000190610e459190613d9d565b60600135118015610ee257508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e8a9190613653565b602060405180830381865afa158015610ea7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecb9190614041565b828060000190610edb9190613d9d565b6060013511155b610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f18906140ba565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848060000190610f719190613d9d565b606001356040518363ffffffff1660e01b8152600401610f929291906140da565b6020604051808303816000875af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd5919061412f565b611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100b906141a8565b60405180910390fd5b61010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d598380600001906110639190613d9d565b6040518263ffffffff1660e01b815260040161107f9190614355565b6020604051808303816000875af19250505080156110bb57506040513d601f19601f820116820180604052508101906110b89190614041565b60015b611229576110c7614384565b806308c379a00361121857506110db6143a6565b806110e6575061121a565b7f48dbf1f65dc9fb918dcf47a87d0d7dbfe9cd78bcfaea409049ee36785201cb9183602001602081019061111a919061369a565b82604051611129929190614436565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b81526004016111909291906144ab565b6020604051808303816000875af11580156111af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d3919061412f565b611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120990614520565b60405180910390fd5b50611224565b505b3d6000803e3d6000fd5b611380565b7ffa2dda1cc1b86e41239702756b13effbc1a092b5c57e3ad320fbe4f3b13fe23583602001602081019061125d919061369a565b846040016020810190611270919061369a565b8580600001906112809190613d9d565b60600135846040516112959493929190614540565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff1663095ea7b361010060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b81526004016112fc9291906144ab565b6020604051808303816000875af115801561131b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133f919061412f565b61137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137590614520565b60405180910390fd5b505b5050808061138d906145b4565b915050610b40565b50505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a681565b60008060019054906101000a900460ff161590508080156113f05750600160008054906101000a900460ff1660ff16105b8061141d57506113ff306127bd565b15801561141c5750600160008054906101000a900460ff1660ff16145b5b61145c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114539061466e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611499576001600060016101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff16886000600381106114c5576114c4613c11565b5b6020020160208101906114d8919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614158061154e5750600073ffffffffffffffffffffffffffffffffffffffff168860016003811061152257611521613c11565b5b602002016020810190611535919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614155b806115ac5750600073ffffffffffffffffffffffffffffffffffffffff16886002600381106115805761157f613c11565b5b602002016020810190611593919061369a565b73ffffffffffffffffffffffffffffffffffffffff1614155b6115eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e2906146da565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160361165a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165190614746565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036116c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c0906147b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f9061481e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179e9061488a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180d906148f6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187c90614962565b60405180910390fd5b61188d6127e0565b611895612831565b8b60fd6040518060400160405280600481526020017f55534443000000000000000000000000000000000000000000000000000000008152506040516118db91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a60fd6040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525060405161196d91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508960fd6040518060400160405280600481526020017f5553444d000000000000000000000000000000000000000000000000000000008152506040516119ff91906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860fd6040518060400160405280600481526020017f5742544300000000000000000000000000000000000000000000000000000000815250604051611a9191906149b3565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560ff60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660fe60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508261010060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd57ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e260fb61288a90919063ffffffff16565b50611c0a7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a660fb61288a90919063ffffffff16565b50611c3f7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270760fb61288a90919063ffffffff16565b50611c747fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc660fb61288a90919063ffffffff16565b50611cc57ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600060038110611cad57611cac613c11565b5b602002016020810190611cc0919061369a565b612789565b611d157ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600160038110611cfd57611cfc613c11565b5b602002016020810190611d10919061369a565b612789565b611d657ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e289600260038110611d4d57611d4c613c11565b5b602002016020810190611d60919061369a565b612789565b611d8f7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a686612789565b611db97ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a685612789565b611de37fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270786612789565b611e0d7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270785612789565b611e377fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc683612789565b611e617ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e2806128a1565b611e8b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a6806128a1565b611eb57fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f23672707806128a1565b611eff7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc67ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e26128a1565b7fb01aaefdfa9c6d0ab739180ad32400c96c77b263f5e065d3af1002f36219cfeb338d8d8d8d8d8d8d8d8d8d8d604051611f449c9b9a99989796959493929190614a6e565b60405180910390a18015611fa55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051611f9c9190614b72565b60405180910390a15b505050505050505050505050565b60008060fd83604051611fc691906149b3565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016120309190613653565b602060405180830381865afa15801561204d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120719190614041565b915050919050565b612081612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146120ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e590614bff565b60405180910390fd5b6120f882826128fd565b5050565b6040518060400160405280600481526020017f574254430000000000000000000000000000000000000000000000000000000081525081565b60606040518060400160405280600581526020017f312e312e30000000000000000000000000000000000000000000000000000000815250905090565b60fd818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fbffb4faf8a508f503a2ca036effd0bc1f82615d3ebfddb934edf718f2367270781565b60006121eb60fb612931565b905090565b6040518060400160405280600481526020017f555344430000000000000000000000000000000000000000000000000000000081525081565b6000612250826097600086815260200190815260200160002061294690919063ffffffff16565b905092915050565b60006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6040518060400160405280600481526020017f5553444d0000000000000000000000000000000000000000000000000000000081525081565b60ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081565b600061237f60976000848152602001908152602001600020612960565b9050919050565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e26123b081612677565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361241f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241690614c6b565b60405180910390fd5b8160fe60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61246d82610ab5565b61247681612677565b61248083836128fd565b505050565b7ffd37f88a14d7ed985885a1af8f2ad5b64dd7eb00ab89168649791632bb9bb4a66124af81612677565b6124b761268b565b61252460fd84846040516124cc929190613c70565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866126da565b7f901c03da5d88eb3d62ab4617e7b7d17d86db16356823a7971127d5181a842fef60ff60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684848760405161257b9493929190614c8b565b60405180910390a161258b612768565b50505050565b7fd2761b102bda9831f4af400cc824b8cecb9cc5c1c85c51acb1479db9735fbfc681565b7ffaad79a708d82d095486f5a83b18341f12a8f717d3011ab929d43135c1af73e281565b7f539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c81565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612670575061266f82612975565b5b9050919050565b61268881612683612760565b6129df565b50565b600260c954036126d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126c790614d17565b60405180910390fd5b600260c981905550565b61275b8363a9059cbb60e01b84846040516024016126f99291906140da565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a64565b505050565b600033905090565b600160c981905550565b60006127818360000183612b2c565b905092915050565b6127938282612b57565b6127b88160976000858152602001908152602001600020612c3890919063ffffffff16565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661282f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161282690614da9565b60405180910390fd5b565b600060019054906101000a900460ff16612880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287790614da9565b60405180910390fd5b600160c981905550565b60006128998360000183612c68565b905092915050565b60006128ac83610ab5565b90508160656000858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b6129078282612cd8565b61292c8160976000858152602001908152602001600020612dba90919063ffffffff16565b505050565b600061293f82600001612dea565b9050919050565b60006129558360000183612b2c565b60001c905092915050565b600061296e82600001612dea565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6129e98282612258565b612a60576129f681612dfb565b612a048360001c6020612e28565b604051602001612a15929190614e61565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a579190613baf565b60405180910390fd5b5050565b6000612ac6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166130649092919063ffffffff16565b9050600081511480612ae8575080806020019051810190612ae7919061412f565b5b612b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b1e90614f0d565b60405180910390fd5b505050565b6000826000018281548110612b4457612b43613c11565b5b9060005260206000200154905092915050565b612b618282612258565b612c345760016065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612bd9612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000612c60836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612c68565b905092915050565b6000612c74838361307c565b612ccd578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612cd2565b600090505b92915050565b612ce28282612258565b15612db65760006065600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612d5b612760565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000612de2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61309f565b905092915050565b600081600001805490509050919050565b6060612e218273ffffffffffffffffffffffffffffffffffffffff16601460ff16612e28565b9050919050565b606060006002836002612e3b9190614f2d565b612e459190614f6f565b67ffffffffffffffff811115612e5e57612e5d613992565b5b6040519080825280601f01601f191660200182016040528015612e905781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612ec857612ec7613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612f2c57612f2b613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612f6c9190614f2d565b612f769190614f6f565b90505b6001811115613016577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612fb857612fb7613c11565b5b1a60f81b828281518110612fcf57612fce613c11565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061300f90614fa3565b9050612f79565b506000841461305a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305190615018565b60405180910390fd5b8091505092915050565b606061307384846000856131b3565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146131a75760006001826130d19190615038565b90506000600186600001805490506130e99190615038565b905081811461315857600086600001828154811061310a57613109613c11565b5b906000526020600020015490508087600001848154811061312e5761312d613c11565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061316c5761316b61506c565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506131ad565b60009150505b92915050565b6060824710156131f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131ef9061510d565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516132219190615174565b60006040518083038185875af1925050503d806000811461325e576040519150601f19603f3d011682016040523d82523d6000602084013e613263565b606091505b509150915061327487838387613280565b92505050949350505050565b606083156132e25760008351036132da5761329a856132f5565b6132d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132d0906151d7565b60405180910390fd5b5b8290506132ed565b6132ec8383613318565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561332b5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161335f9190613baf565b60405180910390fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6133a781613394565b82525050565b60006133b9838361339e565b60208301905092915050565b6000602082019050919050565b60006133dd82613368565b6133e78185613373565b93506133f283613384565b8060005b8381101561342357815161340a88826133ad565b9750613415836133c5565b9250506001810190506133f6565b5085935050505092915050565b6000602082019050818103600083015261344a81846133d2565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61349b81613466565b81146134a657600080fd5b50565b6000813590506134b881613492565b92915050565b6000602082840312156134d4576134d361345c565b5b60006134e2848285016134a9565b91505092915050565b60008115159050919050565b613500816134eb565b82525050565b600060208201905061351b60008301846134f7565b92915050565b61352a81613394565b811461353557600080fd5b50565b60008135905061354781613521565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126135725761357161354d565b5b8235905067ffffffffffffffff81111561358f5761358e613552565b5b6020830191508360018202830111156135ab576135aa613557565b5b9250929050565b6000806000604084860312156135cb576135ca61345c565b5b60006135d986828701613538565b935050602084013567ffffffffffffffff8111156135fa576135f9613461565b5b6136068682870161355c565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061363d82613612565b9050919050565b61364d81613632565b82525050565b60006020820190506136686000830184613644565b92915050565b61367781613632565b811461368257600080fd5b50565b6000813590506136948161366e565b92915050565b6000602082840312156136b0576136af61345c565b5b60006136be84828501613685565b91505092915050565b6000819050919050565b6136da816136c7565b81146136e557600080fd5b50565b6000813590506136f7816136d1565b92915050565b6000602082840312156137135761371261345c565b5b6000613721848285016136e8565b91505092915050565b613733816136c7565b82525050565b600060208201905061374e600083018461372a565b92915050565b60006020828403121561376a5761376961345c565b5b600061377884828501613538565b91505092915050565b600080604083850312156137985761379761345c565b5b60006137a6858286016136e8565b92505060206137b785828601613685565b9150509250929050565b60008083601f8401126137d7576137d661354d565b5b8235905067ffffffffffffffff8111156137f4576137f3613552565b5b6020830191508360208202830111156138105761380f613557565b5b9250929050565b6000806020838503121561382e5761382d61345c565b5b600083013567ffffffffffffffff81111561384c5761384b613461565b5b613858858286016137c1565b92509250509250929050565b6000819050826020600302820111156138805761387f613557565b5b92915050565b60008060008060008060008060008060006101a08c8e0312156138ac576138ab61345c565b5b60006138ba8e828f01613685565b9b505060206138cb8e828f01613685565b9a505060406138dc8e828f01613685565b99505060606138ed8e828f01613685565b98505060806138fe8e828f01613864565b97505060e061390f8e828f01613685565b9650506101006139218e828f01613685565b9550506101206139338e828f01613685565b9450506101406139458e828f01613685565b9350506101606139578e828f01613685565b9250506101806139698e828f01613685565b9150509295989b509295989b9093969950565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139ca82613981565b810181811067ffffffffffffffff821117156139e9576139e8613992565b5b80604052505050565b60006139fc613452565b9050613a0882826139c1565b919050565b600067ffffffffffffffff821115613a2857613a27613992565b5b613a3182613981565b9050602081019050919050565b82818337600083830152505050565b6000613a60613a5b84613a0d565b6139f2565b905082815260208101848484011115613a7c57613a7b61397c565b5b613a87848285613a3e565b509392505050565b600082601f830112613aa457613aa361354d565b5b8135613ab4848260208601613a4d565b91505092915050565b600060208284031215613ad357613ad261345c565b5b600082013567ffffffffffffffff811115613af157613af0613461565b5b613afd84828501613a8f565b91505092915050565b613b0f81613394565b82525050565b6000602082019050613b2a6000830184613b06565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613b6a578082015181840152602081019050613b4f565b60008484015250505050565b6000613b8182613b30565b613b8b8185613b3b565b9350613b9b818560208601613b4c565b613ba481613981565b840191505092915050565b60006020820190508181036000830152613bc98184613b76565b905092915050565b60008060408385031215613be857613be761345c565b5b6000613bf6858286016136e8565b9250506020613c0785828601613538565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b6000613c578385613c40565b9350613c64838584613a3e565b82840190509392505050565b6000613c7d828486613c4b565b91508190509392505050565b6000613c958385613b3b565b9350613ca2838584613a3e565b613cab83613981565b840190509392505050565b6000608082019050613ccb6000830188613644565b8181036020830152613cde818688613c89565b9050613ced6040830185613b06565b613cfa6060830184613644565b9695505050505050565b7f5769746864726177304164647200000000000000000000000000000000000000600082015250565b6000613d3a600d83613b3b565b9150613d4582613d04565b602082019050919050565b60006020820190508181036000830152613d6981613d2d565b9050919050565b600080fd5b600082356001606003833603038112613d9157613d90613d70565b5b80830191505092915050565b60008235600160a003833603038112613db957613db8613d70565b5b80830191505092915050565b7f45727220726563697069656e7400000000000000000000000000000000000000600082015250565b6000613dfb600d83613b3b565b9150613e0682613dc5565b602082019050919050565b60006020820190508181036000830152613e2a81613dee565b9050919050565b7f45727220536c6970700000000000000000000000000000000000000000000000600082015250565b6000613e67600983613b3b565b9150613e7282613e31565b602082019050919050565b60006020820190508181036000830152613e9681613e5a565b9050919050565b7f5553444300000000000000000000000000000000000000000000000000000000600082015250565b6000613ed3600483613c40565b9150613ede82613e9d565b600482019050919050565b6000613ef482613ec6565b9150819050919050565b7f5553445400000000000000000000000000000000000000000000000000000000600082015250565b6000613f34600483613c40565b9150613f3f82613efe565b600482019050919050565b6000613f5582613f27565b9150819050919050565b7f5553444d00000000000000000000000000000000000000000000000000000000600082015250565b6000613f95600483613c40565b9150613fa082613f5f565b600482019050919050565b6000613fb682613f88565b9150819050919050565b7f45727220546f6b656e4f75740000000000000000000000000000000000000000600082015250565b6000613ff6600c83613b3b565b915061400182613fc0565b602082019050919050565b6000602082019050818103600083015261402581613fe9565b9050919050565b60008151905061403b81613521565b92915050565b6000602082840312156140575761405661345c565b5b60006140658482850161402c565b91505092915050565b7f45727220416d6f756e74496e0000000000000000000000000000000000000000600082015250565b60006140a4600c83613b3b565b91506140af8261406e565b602082019050919050565b600060208201905081810360008301526140d381614097565b9050919050565b60006040820190506140ef6000830185613644565b6140fc6020830184613b06565b9392505050565b61410c816134eb565b811461411757600080fd5b50565b60008151905061412981614103565b92915050565b6000602082840312156141455761414461345c565b5b60006141538482850161411a565b91505092915050565b7f45727220417070726f76616c0000000000000000000000000000000000000000600082015250565b6000614192600c83613b3b565b915061419d8261415c565b602082019050919050565b600060208201905081810360008301526141c181614185565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126141f4576141f36141d2565b5b83810192508235915060208301925067ffffffffffffffff82111561421c5761421b6141c8565b5b600182023603831315614232576142316141cd565b5b509250929050565b600082825260208201905092915050565b6000614257838561423a565b9350614264838584613a3e565b61426d83613981565b840190509392505050565b60006142876020840184613685565b905092915050565b61429881613632565b82525050565b60006142ad6020840184613538565b905092915050565b600060a083016142c860008401846141d7565b85830360008701526142db83828461424b565b925050506142ec6020840184614278565b6142f9602086018261428f565b50614307604084018461429e565b614314604086018261339e565b50614322606084018461429e565b61432f606086018261339e565b5061433d608084018461429e565b61434a608086018261339e565b508091505092915050565b6000602082019050818103600083015261436f81846142b5565b905092915050565b60008160e01c9050919050565b600060033d11156143a35760046000803e6143a0600051614377565b90505b90565b600060443d10614433576143b8613452565b60043d036004823e80513d602482011167ffffffffffffffff821117156143e0575050614433565b808201805167ffffffffffffffff8111156143fe5750505050614433565b80602083010160043d03850181111561441b575050505050614433565b61442a826020018501866139c1565b82955050505050505b90565b600060408201905061444b6000830185613644565b818103602083015261445d8184613b76565b90509392505050565b6000819050919050565b6000819050919050565b600061449561449061448b84614466565b614470565b613394565b9050919050565b6144a58161447a565b82525050565b60006040820190506144c06000830185613644565b6144cd602083018461449c565b9392505050565b7f45727220417070726f76616c3000000000000000000000000000000000000000600082015250565b600061450a600d83613b3b565b9150614515826144d4565b602082019050919050565b60006020820190508181036000830152614539816144fd565b9050919050565b60006080820190506145556000830187613644565b6145626020830186613644565b61456f6040830185613b06565b61457c6060830184613b06565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006145bf82613394565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036145f1576145f0614585565b5b600182019050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000614658602e83613b3b565b9150614663826145fc565b604082019050919050565b600060208201905081810360008301526146878161464b565b9050919050565b7f41646d696e416464720000000000000000000000000000000000000000000000600082015250565b60006146c4600983613b3b565b91506146cf8261468e565b602082019050919050565b600060208201905081810360008301526146f3816146b7565b9050919050565b7f5265736375654164647200000000000000000000000000000000000000000000600082015250565b6000614730600a83613b3b565b915061473b826146fa565b602082019050919050565b6000602082019050818103600083015261475f81614723565b9050919050565b7f5769746864726177416464720000000000000000000000000000000000000000600082015250565b600061479c600c83613b3b565b91506147a782614766565b602082019050919050565b600060208201905081810360008301526147cb8161478f565b9050919050565b7f46697273744c656e6465724c6971416464720000000000000000000000000000600082015250565b6000614808601283613b3b565b9150614813826147d2565b602082019050919050565b60006020820190508181036000830152614837816147fb565b9050919050565b7f5365636f6e644c656e6465724c69714164647200000000000000000000000000600082015250565b6000614874601383613b3b565b915061487f8261483e565b602082019050919050565b600060208201905081810360008301526148a381614867565b9050919050565b7f53776170526f7574657241646472000000000000000000000000000000000000600082015250565b60006148e0600e83613b3b565b91506148eb826148aa565b602082019050919050565b6000602082019050818103600083015261490f816148d3565b9050919050565b7f5377617070657241646472000000000000000000000000000000000000000000600082015250565b600061494c600b83613b3b565b915061495782614916565b602082019050919050565b6000602082019050818103600083015261497b8161493f565b9050919050565b600061498d82613b30565b6149978185613c40565b93506149a7818560208601613b4c565b80840191505092915050565b60006149bf8284614982565b915081905092915050565b600060039050919050565b600081905092915050565b6000819050919050565b60006149f6838361428f565b60208301905092915050565b6000602082019050919050565b614a18816149ca565b614a2281846149d5565b9250614a2d826149e0565b8060005b83811015614a6657614a438284614278565b614a4d87826149ea565b9650614a5883614a02565b925050600181019050614a31565b505050505050565b60006101c082019050614a84600083018f613644565b614a91602083018e613644565b614a9e604083018d613644565b614aab606083018c613644565b614ab8608083018b613644565b614ac560a083018a614a0f565b614ad3610100830189613644565b614ae1610120830188613644565b614aef610140830187613644565b614afd610160830186613644565b614b0b610180830185613644565b614b196101a0830184613644565b9d9c50505050505050505050505050565b6000819050919050565b600060ff82169050919050565b6000614b5c614b57614b5284614b2a565b614470565b614b34565b9050919050565b614b6c81614b41565b82525050565b6000602082019050614b876000830184614b63565b92915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000614be9602f83613b3b565b9150614bf482614b8d565b604082019050919050565b60006020820190508181036000830152614c1881614bdc565b9050919050565b7f5265736375653041646472000000000000000000000000000000000000000000600082015250565b6000614c55600b83613b3b565b9150614c6082614c1f565b602082019050919050565b60006020820190508181036000830152614c8481614c48565b9050919050565b6000606082019050614ca06000830187613644565b8181036020830152614cb3818587613c89565b9050614cc26040830184613b06565b95945050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000614d01601f83613b3b565b9150614d0c82614ccb565b602082019050919050565b60006020820190508181036000830152614d3081614cf4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000614d93602b83613b3b565b9150614d9e82614d37565b604082019050919050565b60006020820190508181036000830152614dc281614d86565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000614dff601783613c40565b9150614e0a82614dc9565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000614e4b601183613c40565b9150614e5682614e15565b601182019050919050565b6000614e6c82614df2565b9150614e788285614982565b9150614e8382614e3e565b9150614e8f8284614982565b91508190509392505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000614ef7602a83613b3b565b9150614f0282614e9b565b604082019050919050565b60006020820190508181036000830152614f2681614eea565b9050919050565b6000614f3882613394565b9150614f4383613394565b9250828202614f5181613394565b91508282048414831517614f6857614f67614585565b5b5092915050565b6000614f7a82613394565b9150614f8583613394565b9250828201905080821115614f9d57614f9c614585565b5b92915050565b6000614fae82613394565b915060008203614fc157614fc0614585565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000615002602083613b3b565b915061500d82614fcc565b602082019050919050565b6000602082019050818103600083015261503181614ff5565b9050919050565b600061504382613394565b915061504e83613394565b925082820390508181111561506657615065614585565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006150f7602683613b3b565b91506151028261509b565b604082019050919050565b60006020820190508181036000830152615126816150ea565b9050919050565b600081519050919050565b600081905092915050565b600061514e8261512d565b6151588185615138565b9350615168818560208601613b4c565b80840191505092915050565b60006151808284615143565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006151c1601d83613b3b565b91506151cc8261518b565b602082019050919050565b600060208201905081810360008301526151f0816151b4565b905091905056fea26469706673582212205dfb7b2b48ea003057b5d2e7b38e7ebda5a84422067610a49ebca50c2ea236f764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71372544 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC54E44EB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDC048CF2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDC048CF2 EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xDF668ECA EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xE5DF800A EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x614 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xD00411C9 EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A0 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA9DA3CF2 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xB14EC101 EQ PUSH2 0x518 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x71372544 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x83D33319 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x47C JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2FFE9942 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x4DEDE3DE EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x6E30199F EQ PUSH2 0x3F2 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x2FFE9942 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x32CC815D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x334347B7 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x35EE5F87 EQ PUSH2 0x36A JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH4 0x212F6039 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x212F6039 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x25ACC985 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F8 JUMPI PUSH2 0x1EF JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x828C404 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x15AC7358 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x34BE JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3754 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x3817 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x338 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x3886 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x20FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x3BD1 JUMP JUMPDEST PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x3506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53E PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x3B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x3781 JUMP JUMPDEST PUSH2 0x2464 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x35B2 JUMP JUMPDEST PUSH2 0x2485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E0 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH2 0x25B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x3739 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP SELFBALANCE DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6E1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6F5 JUMPI PUSH2 0x6F4 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x73F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x79D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x7B1 JUMPI PUSH2 0x7B0 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x7FB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1FB3 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x895 JUMPI POP PUSH2 0x894 DUP3 PUSH2 0x25FD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH2 0x8C6 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x8CE PUSH2 0x268B JUMP JUMPDEST PUSH2 0x93B PUSH1 0xFD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C70 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x26DA JUMP JUMPDEST PUSH32 0x22CB89E6358014BB27F5658E2B820189F8F4C9E3F7165ECF266EDC53BE12D9FA PUSH2 0x964 PUSH2 0x2760 JUMP JUMPDEST DUP5 DUP5 DUP8 PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x99B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9AB PUSH2 0x2768 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0xA01 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP1 PUSH2 0x3D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH1 0xFB PUSH2 0x2772 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFB DUP3 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0xB0E DUP4 DUP4 PUSH2 0x2789 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH2 0xB3D DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1395 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xB5F JUMPI PUSH2 0xB5E PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x3D75 JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF9 SWAP1 PUSH2 0x3E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x80 ADD CALLDATALOAD GT PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x3E7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP1 PUSH2 0x3EE9 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD59 JUMPI POP PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP1 PUSH2 0x3F4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD41 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xDDD JUMPI POP PUSH1 0xFD PUSH1 0x40 MLOAD PUSH2 0xD6D SWAP1 PUSH2 0x3FAB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE13 SWAP1 PUSH2 0x400C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT DUP1 ISZERO PUSH2 0xEE2 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xEDB SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD GT ISZERO JUMPDEST PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x40BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP3 SWAP2 SWAP1 PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x1014 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100B SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC04B8D59 DUP4 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1063 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x4355 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10BB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B8 SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1229 JUMPI PUSH2 0x10C7 PUSH2 0x4384 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1218 JUMPI POP PUSH2 0x10DB PUSH2 0x43A6 JUMP JUMPDEST DUP1 PUSH2 0x10E6 JUMPI POP PUSH2 0x121A JUMP JUMPDEST PUSH32 0x48DBF1F65DC9FB918DCF47A87D0D7DBFE9CD78BCFAEA409049EE36785201CB91 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x1129 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1190 SWAP3 SWAP2 SWAP1 PUSH2 0x44AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x1212 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1209 SWAP1 PUSH2 0x4520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1224 JUMP JUMPDEST POP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1380 JUMP JUMPDEST PUSH32 0xFA2DDA1CC1B86E41239702756B13EFFBC1A092B5C57E3AD320FBE4F3B13FE235 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP5 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST DUP6 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x3D9D JUMP JUMPDEST PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH2 0x100 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FC SWAP3 SWAP2 SWAP1 PUSH2 0x44AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST PUSH2 0x137E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP1 PUSH2 0x4520 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x138D SWAP1 PUSH2 0x45B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB40 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x13F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x141D JUMPI POP PUSH2 0x13FF ADDRESS PUSH2 0x27BD JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x141C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x145C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1453 SWAP1 PUSH2 0x466E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1499 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x14C5 JUMPI PUSH2 0x14C4 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x154E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 PUSH2 0x15AC JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E2 SWAP1 PUSH2 0x46DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP1 PUSH2 0x4746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP1 PUSH2 0x47B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172F SWAP1 PUSH2 0x481E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179E SWAP1 PUSH2 0x488A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1816 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180D SWAP1 PUSH2 0x48F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187C SWAP1 PUSH2 0x4962 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x188D PUSH2 0x27E0 JUMP JUMPDEST PUSH2 0x1895 PUSH2 0x2831 JUMP JUMPDEST DUP12 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP11 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x196D SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xFF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xFE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH2 0x100 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1BD5 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C0A PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C3F PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1C74 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH1 0xFB PUSH2 0x288A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1CC5 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D15 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D65 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP10 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D60 SWAP2 SWAP1 PUSH2 0x369A JUMP JUMPDEST PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1D8F PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1DB9 PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1DE3 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0D PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E37 PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP4 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E61 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1E8B PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1EB5 PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP1 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x1EFF PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x28A1 JUMP JUMPDEST PUSH32 0xB01AAEFDFA9C6D0AB739180AD32400C96C77B263F5E065D3AF1002F36219CFEB CALLER DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1F44 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 ISZERO PUSH2 0x1FA5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F9C SWAP2 SWAP1 PUSH2 0x4B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFD DUP4 PUSH1 0x40 MLOAD PUSH2 0x1FC6 SWAP2 SWAP1 PUSH2 0x49B3 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2030 SWAP2 SWAP1 PUSH2 0x3653 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x204D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2071 SWAP2 SWAP1 PUSH2 0x4041 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E5 SWAP1 PUSH2 0x4BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F8 DUP3 DUP3 PUSH2 0x28FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5742544300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E312E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFD DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xBFFB4FAF8A508F503A2CA036EFFD0BC1F82615D3EBFDDB934EDF718F23672707 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EB PUSH1 0xFB PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2250 DUP3 PUSH1 0x97 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2946 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x237F PUSH1 0x97 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 PUSH2 0x23B0 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x241F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2416 SWAP1 PUSH2 0x4C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x246D DUP3 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x2476 DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x2480 DUP4 DUP4 PUSH2 0x28FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xFD37F88A14D7ED985885A1AF8F2AD5B64DD7EB00AB89168649791632BB9BB4A6 PUSH2 0x24AF DUP2 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x24B7 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x2524 PUSH1 0xFD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24CC SWAP3 SWAP2 SWAP1 PUSH2 0x3C70 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x26DA JUMP JUMPDEST PUSH32 0x901C03DA5D88EB3D62AB4617E7B7D17D86DB16356823A7971127D5181A842FEF PUSH1 0xFF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x257B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x258B PUSH2 0x2768 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xD2761B102BDA9831F4AF400CC824B8CECB9CC5C1C85C51ACB1479DB9735FBFC6 DUP2 JUMP JUMPDEST PUSH32 0xFAAD79A708D82D095486F5A83B18341F12A8F717D3011AB929D43135C1AF73E2 DUP2 JUMP JUMPDEST PUSH32 0x539440820030C4994DB4E31B6B800DEAFD503688728F932ADDFE7A410515C14C DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2670 JUMPI POP PUSH2 0x266F DUP3 PUSH2 0x2975 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2688 DUP2 PUSH2 0x2683 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x29DF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC9 SLOAD SUB PUSH2 0x26D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C7 SWAP1 PUSH2 0x4D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x275B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x26F9 SWAP3 SWAP2 SWAP1 PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A64 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2781 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B2C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2793 DUP3 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2C38 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x282F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2826 SWAP1 PUSH2 0x4DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2880 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2877 SWAP1 PUSH2 0x4DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC9 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28AC DUP4 PUSH2 0xAB5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP5 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x2907 DUP3 DUP3 PUSH2 0x2CD8 JUMP JUMPDEST PUSH2 0x292C DUP2 PUSH1 0x97 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2DBA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293F DUP3 PUSH1 0x0 ADD PUSH2 0x2DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2955 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH1 0x0 ADD PUSH2 0x2DEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E9 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2A60 JUMPI PUSH2 0x29F6 DUP2 PUSH2 0x2DFB JUMP JUMPDEST PUSH2 0x2A04 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x2E28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A15 SWAP3 SWAP2 SWAP1 PUSH2 0x4E61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A57 SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3064 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2AE8 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2AE7 SWAP2 SWAP1 PUSH2 0x412F JUMP JUMPDEST JUMPDEST PUSH2 0x2B27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1E SWAP1 PUSH2 0x4F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B61 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x2C34 JUMPI PUSH1 0x1 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2BD9 PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C60 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP4 DUP4 PUSH2 0x307C JUMP JUMPDEST PUSH2 0x2CCD JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CE2 DUP3 DUP3 PUSH2 0x2258 JUMP JUMPDEST ISZERO PUSH2 0x2DB6 JUMPI PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2D5B PUSH2 0x2760 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x309F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E21 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2E3B SWAP2 SWAP1 PUSH2 0x4F2D JUMP JUMPDEST PUSH2 0x2E45 SWAP2 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5E JUMPI PUSH2 0x2E5D PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E90 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2EC8 JUMPI PUSH2 0x2EC7 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2F2C JUMPI PUSH2 0x2F2B PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x2F6C SWAP2 SWAP1 PUSH2 0x4F2D JUMP JUMPDEST PUSH2 0x2F76 SWAP2 SWAP1 PUSH2 0x4F6F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3016 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2FB8 JUMPI PUSH2 0x2FB7 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2FCF JUMPI PUSH2 0x2FCE PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x300F SWAP1 PUSH2 0x4FA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F79 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x305A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3051 SWAP1 PUSH2 0x5018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3073 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x31B3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x31A7 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x30D1 SWAP2 SWAP1 PUSH2 0x5038 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x30E9 SWAP2 SWAP1 PUSH2 0x5038 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x3158 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x310A JUMPI PUSH2 0x3109 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x312E JUMPI PUSH2 0x312D PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x316C JUMPI PUSH2 0x316B PUSH2 0x506C JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x31F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31EF SWAP1 PUSH2 0x510D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3221 SWAP2 SWAP1 PUSH2 0x5174 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x325E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3263 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3274 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3280 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x32E2 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x32DA JUMPI PUSH2 0x329A DUP6 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x32D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D0 SWAP1 PUSH2 0x51D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x32EC DUP4 DUP4 PUSH2 0x3318 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x332B JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x335F SWAP2 SWAP1 PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A7 DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33B9 DUP4 DUP4 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33DD DUP3 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x33E7 DUP2 DUP6 PUSH2 0x3373 JUMP JUMPDEST SWAP4 POP PUSH2 0x33F2 DUP4 PUSH2 0x3384 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3423 JUMPI DUP2 MLOAD PUSH2 0x340A DUP9 DUP3 PUSH2 0x33AD JUMP JUMPDEST SWAP8 POP PUSH2 0x3415 DUP4 PUSH2 0x33C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x344A DUP2 DUP5 PUSH2 0x33D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349B DUP2 PUSH2 0x3466 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B8 DUP2 PUSH2 0x3492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D4 JUMPI PUSH2 0x34D3 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34E2 DUP5 DUP3 DUP6 ADD PUSH2 0x34A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3500 DUP2 PUSH2 0x34EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x352A DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP2 EQ PUSH2 0x3535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3547 DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3572 JUMPI PUSH2 0x3571 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x358F JUMPI PUSH2 0x358E PUSH2 0x3552 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x35AB JUMPI PUSH2 0x35AA PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35CB JUMPI PUSH2 0x35CA PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D9 DUP7 DUP3 DUP8 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35FA JUMPI PUSH2 0x35F9 PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3606 DUP7 DUP3 DUP8 ADD PUSH2 0x355C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363D DUP3 PUSH2 0x3612 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364D DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3677 DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP2 EQ PUSH2 0x3682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3694 DUP2 PUSH2 0x366E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36B0 JUMPI PUSH2 0x36AF PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36BE DUP5 DUP3 DUP6 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36DA DUP2 PUSH2 0x36C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36F7 DUP2 PUSH2 0x36D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3713 JUMPI PUSH2 0x3712 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3721 DUP5 DUP3 DUP6 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3733 DUP2 PUSH2 0x36C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x374E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x372A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376A JUMPI PUSH2 0x3769 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3778 DUP5 DUP3 DUP6 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3798 JUMPI PUSH2 0x3797 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37A6 DUP6 DUP3 DUP7 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x37B7 DUP6 DUP3 DUP7 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x37D7 JUMPI PUSH2 0x37D6 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F4 JUMPI PUSH2 0x37F3 PUSH2 0x3552 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3810 JUMPI PUSH2 0x380F PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x382E JUMPI PUSH2 0x382D PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x384C JUMPI PUSH2 0x384B PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3858 DUP6 DUP3 DUP7 ADD PUSH2 0x37C1 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x3 MUL DUP3 ADD GT ISZERO PUSH2 0x3880 JUMPI PUSH2 0x387F PUSH2 0x3557 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x38AC JUMPI PUSH2 0x38AB PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BA DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x38CB DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x38DC DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x38ED DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x38FE DUP15 DUP3 DUP16 ADD PUSH2 0x3864 JUMP JUMPDEST SWAP8 POP POP PUSH1 0xE0 PUSH2 0x390F DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x100 PUSH2 0x3921 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x120 PUSH2 0x3933 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x140 PUSH2 0x3945 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x160 PUSH2 0x3957 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x180 PUSH2 0x3969 DUP15 DUP3 DUP16 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x39CA DUP3 PUSH2 0x3981 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x39E9 JUMPI PUSH2 0x39E8 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39FC PUSH2 0x3452 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A08 DUP3 DUP3 PUSH2 0x39C1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A28 JUMPI PUSH2 0x3A27 PUSH2 0x3992 JUMP JUMPDEST JUMPDEST PUSH2 0x3A31 DUP3 PUSH2 0x3981 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A60 PUSH2 0x3A5B DUP5 PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x39F2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A7C JUMPI PUSH2 0x3A7B PUSH2 0x397C JUMP JUMPDEST JUMPDEST PUSH2 0x3A87 DUP5 DUP3 DUP6 PUSH2 0x3A3E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AA4 JUMPI PUSH2 0x3AA3 PUSH2 0x354D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AB4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AD3 JUMPI PUSH2 0x3AD2 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AF1 JUMPI PUSH2 0x3AF0 PUSH2 0x3461 JUMP JUMPDEST JUMPDEST PUSH2 0x3AFD DUP5 DUP3 DUP6 ADD PUSH2 0x3A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0F DUP2 PUSH2 0x3394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B2A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B4F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B81 DUP3 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x3B8B DUP2 DUP6 PUSH2 0x3B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x3B9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST PUSH2 0x3BA4 DUP2 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BC9 DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3BE8 JUMPI PUSH2 0x3BE7 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BF6 DUP6 DUP3 DUP7 ADD PUSH2 0x36E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3C07 DUP6 DUP3 DUP7 ADD PUSH2 0x3538 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C57 DUP4 DUP6 PUSH2 0x3C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C64 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7D DUP3 DUP5 DUP7 PUSH2 0x3C4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C95 DUP4 DUP6 PUSH2 0x3B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x3CA2 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST PUSH2 0x3CAB DUP4 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CCB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3CDE DUP2 DUP7 DUP9 PUSH2 0x3C89 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3B06 JUMP JUMPDEST PUSH2 0x3CFA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177304164647200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3A PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D45 DUP3 PUSH2 0x3D04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D69 DUP2 PUSH2 0x3D2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x60 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3D91 JUMPI PUSH2 0x3D90 PUSH2 0x3D70 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x3DB9 JUMPI PUSH2 0x3DB8 PUSH2 0x3D70 JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220726563697069656E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DFB PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E06 DUP3 PUSH2 0x3DC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E2A DUP2 PUSH2 0x3DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727220536C6970700000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E67 PUSH1 0x9 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x3E72 DUP3 PUSH2 0x3E31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E96 DUP2 PUSH2 0x3E5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED3 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDE DUP3 PUSH2 0x3E9D JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EF4 DUP3 PUSH2 0x3EC6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F34 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F3F DUP3 PUSH2 0x3EFE JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F55 DUP3 PUSH2 0x3F27 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5553444D00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 PUSH1 0x4 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP3 PUSH2 0x3F5F JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB6 DUP3 PUSH2 0x3F88 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727220546F6B656E4F75740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF6 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4001 DUP3 PUSH2 0x3FC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4025 DUP2 PUSH2 0x3FE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x403B DUP2 PUSH2 0x3521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4057 JUMPI PUSH2 0x4056 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4065 DUP5 DUP3 DUP6 ADD PUSH2 0x402C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220416D6F756E74496E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A4 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x40AF DUP3 PUSH2 0x406E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40D3 DUP2 PUSH2 0x4097 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x40FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x410C DUP2 PUSH2 0x34EB JUMP JUMPDEST DUP2 EQ PUSH2 0x4117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4129 DUP2 PUSH2 0x4103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4145 JUMPI PUSH2 0x4144 PUSH2 0x345C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4153 DUP5 DUP3 DUP6 ADD PUSH2 0x411A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45727220417070726F76616C0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4192 PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x419D DUP3 PUSH2 0x415C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41C1 DUP2 PUSH2 0x4185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x41F4 JUMPI PUSH2 0x41F3 PUSH2 0x41D2 JUMP JUMPDEST JUMPDEST DUP4 DUP2 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x421C JUMPI PUSH2 0x421B PUSH2 0x41C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x4232 JUMPI PUSH2 0x4231 PUSH2 0x41CD JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4257 DUP4 DUP6 PUSH2 0x423A JUMP JUMPDEST SWAP4 POP PUSH2 0x4264 DUP4 DUP6 DUP5 PUSH2 0x3A3E JUMP JUMPDEST PUSH2 0x426D DUP4 PUSH2 0x3981 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4287 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3685 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4298 DUP2 PUSH2 0x3632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3538 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH2 0x42C8 PUSH1 0x0 DUP5 ADD DUP5 PUSH2 0x41D7 JUMP JUMPDEST DUP6 DUP4 SUB PUSH1 0x0 DUP8 ADD MSTORE PUSH2 0x42DB DUP4 DUP3 DUP5 PUSH2 0x424B JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x42EC PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4278 JUMP JUMPDEST PUSH2 0x42F9 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x428F JUMP JUMPDEST POP PUSH2 0x4307 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x4314 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP PUSH2 0x4322 PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x432F PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP PUSH2 0x433D PUSH1 0x80 DUP5 ADD DUP5 PUSH2 0x429E JUMP JUMPDEST PUSH2 0x434A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x339E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x436F DUP2 DUP5 PUSH2 0x42B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x43A3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x43A0 PUSH1 0x0 MLOAD PUSH2 0x4377 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x4433 JUMPI PUSH2 0x43B8 PUSH2 0x3452 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43E0 JUMPI POP POP PUSH2 0x4433 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43FE JUMPI POP POP POP POP PUSH2 0x4433 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x441B JUMPI POP POP POP POP POP PUSH2 0x4433 JUMP JUMPDEST PUSH2 0x442A DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x39C1 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x444B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x445D DUP2 DUP5 PUSH2 0x3B76 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4495 PUSH2 0x4490 PUSH2 0x448B DUP5 PUSH2 0x4466 JUMP JUMPDEST PUSH2 0x4470 JUMP JUMPDEST PUSH2 0x3394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x44A5 DUP2 PUSH2 0x447A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x44CD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x449C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45727220417070726F76616C3000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450A PUSH1 0xD DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4515 DUP3 PUSH2 0x44D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4539 DUP2 PUSH2 0x44FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4555 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4562 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x456F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3B06 JUMP JUMPDEST PUSH2 0x457C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x45BF DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x45F1 JUMPI PUSH2 0x45F0 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4658 PUSH1 0x2E DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4663 DUP3 PUSH2 0x45FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4687 DUP2 PUSH2 0x464B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646D696E416464720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C4 PUSH1 0x9 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x46CF DUP3 PUSH2 0x468E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46F3 DUP2 PUSH2 0x46B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265736375654164647200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4730 PUSH1 0xA DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x473B DUP3 PUSH2 0x46FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x475F DUP2 PUSH2 0x4723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177416464720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479C PUSH1 0xC DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x47A7 DUP3 PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47CB DUP2 PUSH2 0x478F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46697273744C656E6465724C6971416464720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4808 PUSH1 0x12 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4813 DUP3 PUSH2 0x47D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4837 DUP2 PUSH2 0x47FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365636F6E644C656E6465724C69714164647200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4874 PUSH1 0x13 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x487F DUP3 PUSH2 0x483E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48A3 DUP2 PUSH2 0x4867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53776170526F7574657241646472000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E0 PUSH1 0xE DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x48EB DUP3 PUSH2 0x48AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x490F DUP2 PUSH2 0x48D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5377617070657241646472000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494C PUSH1 0xB DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4957 DUP3 PUSH2 0x4916 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x497B DUP2 PUSH2 0x493F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x498D DUP3 PUSH2 0x3B30 JUMP JUMPDEST PUSH2 0x4997 DUP2 DUP6 PUSH2 0x3C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x49A7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BF DUP3 DUP5 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49F6 DUP4 DUP4 PUSH2 0x428F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A18 DUP2 PUSH2 0x49CA JUMP JUMPDEST PUSH2 0x4A22 DUP2 DUP5 PUSH2 0x49D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x4A2D DUP3 PUSH2 0x49E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A66 JUMPI PUSH2 0x4A43 DUP3 DUP5 PUSH2 0x4278 JUMP JUMPDEST PUSH2 0x4A4D DUP8 DUP3 PUSH2 0x49EA JUMP JUMPDEST SWAP7 POP PUSH2 0x4A58 DUP4 PUSH2 0x4A02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A31 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x4A84 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4A91 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4A9E PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AAB PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AB8 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AC5 PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x4A0F JUMP JUMPDEST PUSH2 0x4AD3 PUSH2 0x100 DUP4 ADD DUP10 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AE1 PUSH2 0x120 DUP4 ADD DUP9 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AEF PUSH2 0x140 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4AFD PUSH2 0x160 DUP4 ADD DUP7 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4B0B PUSH2 0x180 DUP4 ADD DUP6 PUSH2 0x3644 JUMP JUMPDEST PUSH2 0x4B19 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x3644 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5C PUSH2 0x4B57 PUSH2 0x4B52 DUP5 PUSH2 0x4B2A JUMP JUMPDEST PUSH2 0x4470 JUMP JUMPDEST PUSH2 0x4B34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6C DUP2 PUSH2 0x4B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BE9 PUSH1 0x2F DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4BF4 DUP3 PUSH2 0x4B8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C18 DUP2 PUSH2 0x4BDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265736375653041646472000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C55 PUSH1 0xB DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4C60 DUP3 PUSH2 0x4C1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C84 DUP2 PUSH2 0x4C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4CA0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3644 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4CB3 DUP2 DUP6 DUP8 PUSH2 0x3C89 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3B06 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D01 PUSH1 0x1F DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0C DUP3 PUSH2 0x4CCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D30 DUP2 PUSH2 0x4CF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D93 PUSH1 0x2B DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4D9E DUP3 PUSH2 0x4D37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DC2 DUP2 PUSH2 0x4D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DFF PUSH1 0x17 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E0A DUP3 PUSH2 0x4DC9 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E4B PUSH1 0x11 DUP4 PUSH2 0x3C40 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E56 DUP3 PUSH2 0x4E15 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E6C DUP3 PUSH2 0x4DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E78 DUP3 DUP6 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E83 DUP3 PUSH2 0x4E3E JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8F DUP3 DUP5 PUSH2 0x4982 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EF7 PUSH1 0x2A DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x4F02 DUP3 PUSH2 0x4E9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F26 DUP2 PUSH2 0x4EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F38 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F43 DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4F51 DUP2 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4F68 JUMPI PUSH2 0x4F67 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7A DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F85 DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4F9D JUMPI PUSH2 0x4F9C PUSH2 0x4585 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAE DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x4FC1 JUMPI PUSH2 0x4FC0 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5002 PUSH1 0x20 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x500D DUP3 PUSH2 0x4FCC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5031 DUP2 PUSH2 0x4FF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5043 DUP3 PUSH2 0x3394 JUMP JUMPDEST SWAP2 POP PUSH2 0x504E DUP4 PUSH2 0x3394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5066 JUMPI PUSH2 0x5065 PUSH2 0x4585 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F7 PUSH1 0x26 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x5102 DUP3 PUSH2 0x509B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5126 DUP2 PUSH2 0x50EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x514E DUP3 PUSH2 0x512D JUMP JUMPDEST PUSH2 0x5158 DUP2 DUP6 PUSH2 0x5138 JUMP JUMPDEST SWAP4 POP PUSH2 0x5168 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3B4C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5180 DUP3 DUP5 PUSH2 0x5143 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C1 PUSH1 0x1D DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x51CC DUP3 PUSH2 0x518B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51F0 DUP2 PUSH2 0x51B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xFB PUSH28 0x2B48EA003057B5D2E7B38E7EBDA5A84422067610A49EBCA50C2EA236 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"526:8034:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6911:340;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;962:223:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7257:385:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1517:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4311:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4834:129:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8433:124:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5259:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4809:1461:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;799:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1692:2500;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6666:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6368:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1394:36:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4212:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1464:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7786:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1271:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1770:151:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3329:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2450:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1353:36:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1556;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2089:140:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4566:237:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5684:147:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6276:384:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1047:59;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;703:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;969:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6911:340;6966:16;6991:25;7033:1;7019:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6991:44;;7056:21;7042:8;7051:1;7042:11;;;;;;;;:::i;:::-;;;;;;;:35;;;;;7098:15;7108:4;;;;;;;;;;;;;;;;;7098:9;:15::i;:::-;7084:8;7093:1;7084:11;;;;;;;;:::i;:::-;;;;;;;:29;;;;;7134:15;7144:4;;;;;;;;;;;;;;;;;7134:9;:15::i;:::-;7120:8;7129:1;7120:11;;;;;;;;:::i;:::-;;;;;;;:29;;;;;7170:15;7180:4;;;;;;;;;;;;;;;;;7170:9;:15::i;:::-;7156:8;7165:1;7156:11;;;;;;;;:::i;:::-;;;;;;;:29;;;;;7206:15;7216:4;;;;;;;;;;;;;;;;;7206:9;:15::i;:::-;7192:8;7201:1;7192:11;;;;;;;;:::i;:::-;;;;;;;:29;;;;;7237:8;7230:15;;;6911:340;:::o;962:223:0:-;1047:4;1085:53;1070:68;;;:11;:68;;;;:108;;;;1142:36;1166:11;1142:23;:36::i;:::-;1070:108;1063:115;;962:223;;;:::o;7257:385:23:-;927:20;2928:16:1;2939:4;2928:10;:16::i;:::-;2505:21:5::1;:19;:21::i;:::-;7472:88:23::2;7502:12;7515;;7502:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7531:19;;;;;;;;;;;7552:7;7472:22;:88::i;:::-;7572:64;7579:12;:10;:12::i;:::-;7593;;7607:7;7616:19;;;;;;;;;;;7572:64;;;;;;;;;;:::i;:::-;;;;;;;;2547:20:5::1;:18;:20::i;:::-;7257:385:23::0;;;;:::o;1517:34::-;;;;;;;;;;;;;:::o;4311:249::-;744:22;2928:16:1;2939:4;2928:10;:16::i;:::-;4479:3:23::1;4445:38;;:22;:38;;::::0;4437:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4532:22;4508:21;;:46;;;;;;;;;;;;;;;;;;4311:249:::0;;:::o;4834:129:1:-;4908:7;4934:6;:12;4941:4;4934:12;;;;;;;;;;;:22;;;4927:29;;4834:129;;;:::o;8433:124:23:-;8509:7;8532:19;8545:5;8532:9;:12;;:19;;;;:::i;:::-;8525:26;;8433:124;;;:::o;5259:145:1:-;5342:18;5355:4;5342:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;4809:1461:23:-;1086:20;2928:16:1;2939:4;2928:10;:16::i;:::-;4932:9:23::1;4927:1338;4951:11;;:18;;4947:1;:22;4927:1338;;;4985:30;5018:11;;5030:1;5018:14;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4985:47;;5118:4;5079:44;;:10;:17;;;;;;;;:::i;:::-;:27;;;;;;;;;;:::i;:::-;:44;;;5071:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5195:1;5158:10;:17;;;;;;;;:::i;:::-;:34;;;:38;5150:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5260:12;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5237:43;;:10;:19;;;;;;;;;;:::i;:::-;:43;;;:90;;;;5307:12;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5284:43;;:10;:19;;;;;;;;;;:::i;:::-;:43;;;5237:90;:137;;;;5354:12;:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5331:43;;:10;:19;;;;;;;;;;:::i;:::-;:43;;;5237:137;5219:189;;;;;;;;;;;;:::i;:::-;;;;;;;;;5458:12;5488:10;:18;;;;;;;;;;:::i;:::-;5458:50;;5564:1;5535:10;:17;;;;;;;;:::i;:::-;:26;;;:30;:105;;;;;5610:5;:15;;;5634:4;5610:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5580:10;:17;;;;;;;;:::i;:::-;:26;;;:60;;5535:105;5517:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;5691:5;:13;;;5713:10;;;;;;;;;;;5726;:17;;;;;;;;:::i;:::-;:26;;;5691:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5683:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;5829:10;;;;;;;;;;;:21;;;5851:10;:17;;;;;;;;:::i;:::-;5829:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5825:433;;;;:::i;:::-;;;::::0;::::1;;;;;:::i;:::-;;;;;;;;6135:39;6145:10;:18;;;;;;;;;;:::i;:::-;6165:8;6135:39;;;;;;;:::i;:::-;;;;;;;;6193:5;:13;;;6215:10;;;;;;;;;;;6228:1;6193:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6185:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6083:175;5825:433;;;;;;;::::0;::::1;;;;;;;;5914:84;5919:10;:18;;;;;;;;;;:::i;:::-;5939:10;:19;;;;;;;;;;:::i;:::-;5960:10;:17;;;;;;;;:::i;:::-;:26;;;5988:9;5914:84;;;;;;;;;:::i;:::-;;;;;;;;6017:5;:13;;;6039:10;;;;;;;;;;;6052:1;6017:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6009:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5870:212;5825:433;4976:1289;;4971:3;;;;;:::i;:::-;;;;4927:1338;;;;4809:1461:::0;;;:::o;799:65::-;841:23;799:65;:::o;1692:2500::-;3279:19:4;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;2140:1:23::1;2115:27;;:10;2126:1;2115:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;;:58;;;;2171:1;2146:27;;:10;2157:1;2146:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;;2115:58;:89;;;;2202:1;2177:27;;:10;2188:1;2177:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:27;;;;2115:89;2099:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;2278:1;2246:34;;:20;:34;;::::0;2238:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2344:1;2310:36;;:22;:36;;::::0;2302:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2405:1;2378:29;;:15;:29;;::::0;2370:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2473:1;2445:30;;:16;:30;;::::0;2437:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2544:1;2514:32;;:18;:32;;::::0;2506:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2600:1;2580:22;;:8;:22;;::::0;2572:46:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2627:32;:30;:32::i;:::-;2666:34;:32;:34::i;:::-;2728:17;2707:12;2720:4;;;;;;;;;;;;;;;;::::0;2707:18:::1;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2773:17;2752:12;2765:4;;;;;;;;;;;;;;;;::::0;2752:18:::1;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2818:17;2797:12;2810:4;;;;;;;;;;;;;;;;::::0;2797:18:::1;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2863:17;2842:12;2855:4;;;;;;;;;;;;;;;;::::0;2842:18:::1;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2913:22;2889:21;;:46;;;;;;;;;;;;;;;;;;2964:20;2942:19;;:42;;;;;;;;;;;;;;;;;;3018:18;2993:10;;:44;;;;;;;;;;;;;;;;;;3103:29;744:22;3103:9;:13;;:29;;;;:::i;:::-;;3139:30;841:23;3139:9;:13;;:30;;;;:::i;:::-;;3176:27;927:20;3176:9;:13;;:27;;;;:::i;:::-;;3210;1086:20;3210:9;:13;;:27;;;;:::i;:::-;;3246:41;744:22;3273:10;3284:1;3273:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3246:10;:41::i;:::-;3294;744:22;3321:10;3332:1;3321:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3294:10;:41::i;:::-;3342;744:22;3369:10;3380:1;3369:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3342:10;:41::i;:::-;3390:44;841:23;3418:15;3390:10;:44::i;:::-;3441:45;841:23;3469:16;3441:10;:45::i;:::-;3493:41;927:20;3518:15;3493:10;:41::i;:::-;3541:42;927:20;3566:16;3541:10;:42::i;:::-;3590:34;1086:20;3615:8;3590:10;:34::i;:::-;3633:45;744:22;::::0;3633:13:::1;:45::i;:::-;3685:47;841:23;::::0;3685:13:::1;:47::i;:::-;3739:41;927:20;::::0;3739:13:::1;:41::i;:::-;3787:43;1086:20;744:22;3787:13;:43::i;:::-;3874:312;3893:10;3912:17;3938;3964;3990;4016:10;4035:20;4064:22;4095:15;4119:16;4144:18;4171:8;3874:312;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3651:14:4::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;1692:2500:23;;;;;;;;;;;:::o;6666:239::-;6743:7;6806:12;6828;6841;6828:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6806:49;;6869:5;:15;;;6893:4;6869:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6862:37;;;6666:239;;;:::o;6368:214:1:-;6474:12;:10;:12::i;:::-;6463:23;;:7;:23;;;6455:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;1394:36:23:-;;;;;;;;;;;;;;;;;;;:::o;4212:93::-;4263:13;4285:14;;;;;;;;;;;;;;;;;;;4212:93;:::o;1464:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;888:59::-;927:20;888:59;:::o;7786:111::-;7850:7;7873:18;:9;:16;:18::i;:::-;7866:25;;7786:111;:::o;1271:36::-;;;;;;;;;;;;;;;;;;;:::o;1770:151:0:-;1860:7;1886:28;1908:5;1886:12;:18;1899:4;1886:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1879:35;;1770:151;;;;:::o;3329:145:1:-;3415:4;3438:6;:12;3445:4;3438:12;;;;;;;;;;;:20;;:29;3459:7;3438:29;;;;;;;;;;;;;;;;;;;;;;;;;3431:36;;3329:145;;;;:::o;2450:49::-;2495:4;2450:49;;;:::o;1353:36:23:-;;;;;;;;;;;;;;;;;;;:::o;1556:::-;;;;;;;;;;;;;:::o;1312:::-;;;;;;;;;;;;;;;;;;;:::o;2089:140:0:-;2169:7;2195:27;:12;:18;2208:4;2195:18;;;;;;;;;;;:25;:27::i;:::-;2188:34;;2089:140;;;:::o;4566:237:23:-;744:22;2928:16:1;2939:4;2928:10;:16::i;:::-;4728:3:23::1;4696:36;;:20;:36;;::::0;4688:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4777:20;4755:19;;:42;;;;;;;;;;;;;;;;;;4566:237:::0;;:::o;5684:147:1:-;5768:18;5781:4;5768:12;:18::i;:::-;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;:::-;5684:147:::0;;;:::o;6276:384:23:-;841:23;2928:16:1;2939:4;2928:10;:16::i;:::-;2505:21:5::1;:19;:21::i;:::-;6498:90:23::2;6528:12;6541;;6528:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6557:21;;;;;;;;;;;6580:7;6498:22;:90::i;:::-;6600:54;6609:21;;;;;;;;;;;6632:12;;6646:7;6600:54;;;;;;;;;:::i;:::-;;;;;;;;2547:20:5::1;:18;:20::i;:::-;6276:384:23::0;;;;:::o;1047:59::-;1086:20;1047:59;:::o;703:63::-;744:22;703:63;:::o;969:57::-;1007:19;969:57;:::o;3029:213:1:-;3114:4;3152:43;3137:58;;;:11;:58;;;;:98;;;;3199:36;3223:11;3199:23;:36::i;:::-;3137:98;3130:105;;3029:213;;;:::o;3768:103::-;3834:30;3845:4;3851:12;:10;:12::i;:::-;3834:10;:30::i;:::-;3768:103;:::o;2580:287:5:-;1830:1;2712:7;;:19;2704:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1830:1;2842:7;:18;;;;2580:287::o;941:175:16:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;850:96:7:-;903:7;929:10;922:17;;850:96;:::o;2873:209:5:-;1787:1;3053:7;:22;;;;2873:209::o;7107:129:13:-;7181:7;7207:22;7211:3;:10;;7223:5;7207:3;:22::i;:::-;7200:29;;7107:129;;;;:::o;2317:166:0:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445;2468:7;2445:12;:18;2458:4;2445:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2317:166;;:::o;1423:320:6:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2222:75:1:-;5374:13:4;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2222:75:1:o;1985:109:5:-;5374:13:4;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1787:1:5::1;2065:7;:22;;;;1985:109::o:0;5930:123:13:-;6000:4;6023:23;6028:3;:10;;6040:5;6023:4;:23::i;:::-;6016:30;;5930:123;;;;:::o;7502:247:1:-;7585:25;7613:18;7626:4;7613:12;:18::i;:::-;7585:46;;7666:9;7641:6;:12;7648:4;7641:12;;;;;;;;;;;:22;;:34;;;;7732:9;7713:17;7707:4;7690:52;;;;;;;;;;7575:174;7502:247;;:::o;2572:171:0:-;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:34;2728:7;2702:12;:18;2715:4;2702:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2572:171;;:::o;6650:115:13:-;6713:7;6739:19;6747:3;:10;;6739:7;:19::i;:::-;6732:26;;6650:115;;;:::o;9574:156::-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;9117:115::-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;1060:166:9:-;1145:4;1183:36;1168:51;;;:11;:51;;;;1161:58;;1060:166;;;:::o;4152:501:1:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4564:13;;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4278:358;;;;;;;;;;;:::i;:::-;;;;;;;;4235:412;4152:501;;:::o;5196:642:16:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4923:118:13:-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;7917:233:1:-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8070:4;8038:6;:12;8045:4;8038:12;;;;;;;;;;;:20;;:29;8059:7;8038:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;8120:12;:10;:12::i;:::-;8093:40;;8111:7;8093:40;;8105:4;8093:40;;;;;;;;;;7995:149;7917:233;;:::o;8316:150:13:-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;2225:404::-;2288:4;2309:21;2319:3;2324:5;2309:9;:21::i;:::-;2304:319;;2346:3;:11;;2363:5;2346:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:3;:11;;:18;;;;2504:3;:12;;:19;2517:5;2504:19;;;;;;;;;;;:40;;;;2565:4;2558:11;;;;2304:319;2607:5;2600:12;;2225:404;;;;;:::o;8321:234:1:-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:6;:12;8449:4;8442:12;;;;;;;;;;;:20;;:29;8463:7;8442:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8525:12;:10;:12::i;:::-;8498:40;;8516:7;8498:40;;8510:4;8498:40;;;;;;;;;;8400:149;8321:234;;:::o;8634:156:13:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;4474:107::-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;2473:149:8:-;2531:13;2563:52;2591:4;2575:22;;376:2;2563:52;;:11;:52::i;:::-;2556:59;;2473:149;;;:::o;1884:437::-;1959:13;1984:19;2029:1;2020:6;2016:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2096:9;2121:1;2112:6;2108:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2179:3;2171:5;:11;2162:21;;;;;;;:::i;:::-;;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2207:1;2197:11;;;;;2131:3;;;;:::i;:::-;;;2091:128;;;;2245:1;2236:5;:10;2228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2307:6;2293:21;;;1884:437;;;;:::o;4108:223:17:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;4266:127:13:-;4339:4;4385:1;4362:3;:12;;:19;4375:5;4362:19;;;;;;;;;;;;:24;;4355:31;;4266:127;;;;:::o;2797:1388::-;2863:4;2979:18;3000:3;:12;;:19;3013:5;3000:19;;;;;;;;;;;;2979:40;;3048:1;3034:10;:15;3030:1149;;3403:21;3440:1;3427:10;:14;;;;:::i;:::-;3403:38;;3455:17;3496:1;3475:3;:11;;:18;;;;:22;;;;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3842:10;3816:3;:12;;:23;3829:9;3816:23;;;;;;;;;;;:36;;;;3544:366;3512:398;3988:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;2797:1388;;;;;:::o;5165:446:17:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:114:25;74:6;108:5;102:12;92:22;;7:114;;;:::o;127:184::-;226:11;260:6;255:3;248:19;300:4;295:3;291:14;276:29;;127:184;;;;:::o;317:132::-;384:4;407:3;399:11;;437:4;432:3;428:14;420:22;;317:132;;;:::o;455:77::-;492:7;521:5;510:16;;455:77;;;:::o;538:108::-;615:24;633:5;615:24;:::i;:::-;610:3;603:37;538:108;;:::o;652:179::-;721:10;742:46;784:3;776:6;742:46;:::i;:::-;820:4;815:3;811:14;797:28;;652:179;;;;:::o;837:113::-;907:4;939;934:3;930:14;922:22;;837:113;;;:::o;986:732::-;1105:3;1134:54;1182:5;1134:54;:::i;:::-;1204:86;1283:6;1278:3;1204:86;:::i;:::-;1197:93;;1314:56;1364:5;1314:56;:::i;:::-;1393:7;1424:1;1409:284;1434:6;1431:1;1428:13;1409:284;;;1510:6;1504:13;1537:63;1596:3;1581:13;1537:63;:::i;:::-;1530:70;;1623:60;1676:6;1623:60;:::i;:::-;1613:70;;1469:224;1456:1;1453;1449:9;1444:14;;1409:284;;;1413:14;1709:3;1702:10;;1110:608;;;986:732;;;;:::o;1724:373::-;1867:4;1905:2;1894:9;1890:18;1882:26;;1954:9;1948:4;1944:20;1940:1;1929:9;1925:17;1918:47;1982:108;2085:4;2076:6;1982:108;:::i;:::-;1974:116;;1724:373;;;;:::o;2103:75::-;2136:6;2169:2;2163:9;2153:19;;2103:75;:::o;2184:117::-;2293:1;2290;2283:12;2307:117;2416:1;2413;2406:12;2430:149;2466:7;2506:66;2499:5;2495:78;2484:89;;2430:149;;;:::o;2585:120::-;2657:23;2674:5;2657:23;:::i;:::-;2650:5;2647:34;2637:62;;2695:1;2692;2685:12;2637:62;2585:120;:::o;2711:137::-;2756:5;2794:6;2781:20;2772:29;;2810:32;2836:5;2810:32;:::i;:::-;2711:137;;;;:::o;2854:327::-;2912:6;2961:2;2949:9;2940:7;2936:23;2932:32;2929:119;;;2967:79;;:::i;:::-;2929:119;3087:1;3112:52;3156:7;3147:6;3136:9;3132:22;3112:52;:::i;:::-;3102:62;;3058:116;2854:327;;;;:::o;3187:90::-;3221:7;3264:5;3257:13;3250:21;3239:32;;3187:90;;;:::o;3283:109::-;3364:21;3379:5;3364:21;:::i;:::-;3359:3;3352:34;3283:109;;:::o;3398:210::-;3485:4;3523:2;3512:9;3508:18;3500:26;;3536:65;3598:1;3587:9;3583:17;3574:6;3536:65;:::i;:::-;3398:210;;;;:::o;3614:122::-;3687:24;3705:5;3687:24;:::i;:::-;3680:5;3677:35;3667:63;;3726:1;3723;3716:12;3667:63;3614:122;:::o;3742:139::-;3788:5;3826:6;3813:20;3804:29;;3842:33;3869:5;3842:33;:::i;:::-;3742:139;;;;:::o;3887:117::-;3996:1;3993;3986:12;4010:117;4119:1;4116;4109:12;4133:117;4242:1;4239;4232:12;4270:553;4328:8;4338:6;4388:3;4381:4;4373:6;4369:17;4365:27;4355:122;;4396:79;;:::i;:::-;4355:122;4509:6;4496:20;4486:30;;4539:18;4531:6;4528:30;4525:117;;;4561:79;;:::i;:::-;4525:117;4675:4;4667:6;4663:17;4651:29;;4729:3;4721:4;4713:6;4709:17;4699:8;4695:32;4692:41;4689:128;;;4736:79;;:::i;:::-;4689:128;4270:553;;;;;:::o;4829:674::-;4909:6;4917;4925;4974:2;4962:9;4953:7;4949:23;4945:32;4942:119;;;4980:79;;:::i;:::-;4942:119;5100:1;5125:53;5170:7;5161:6;5150:9;5146:22;5125:53;:::i;:::-;5115:63;;5071:117;5255:2;5244:9;5240:18;5227:32;5286:18;5278:6;5275:30;5272:117;;;5308:79;;:::i;:::-;5272:117;5421:65;5478:7;5469:6;5458:9;5454:22;5421:65;:::i;:::-;5403:83;;;;5198:298;4829:674;;;;;:::o;5509:126::-;5546:7;5586:42;5579:5;5575:54;5564:65;;5509:126;;;:::o;5641:96::-;5678:7;5707:24;5725:5;5707:24;:::i;:::-;5696:35;;5641:96;;;:::o;5743:118::-;5830:24;5848:5;5830:24;:::i;:::-;5825:3;5818:37;5743:118;;:::o;5867:222::-;5960:4;5998:2;5987:9;5983:18;5975:26;;6011:71;6079:1;6068:9;6064:17;6055:6;6011:71;:::i;:::-;5867:222;;;;:::o;6095:122::-;6168:24;6186:5;6168:24;:::i;:::-;6161:5;6158:35;6148:63;;6207:1;6204;6197:12;6148:63;6095:122;:::o;6223:139::-;6269:5;6307:6;6294:20;6285:29;;6323:33;6350:5;6323:33;:::i;:::-;6223:139;;;;:::o;6368:329::-;6427:6;6476:2;6464:9;6455:7;6451:23;6447:32;6444:119;;;6482:79;;:::i;:::-;6444:119;6602:1;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6573:117;6368:329;;;;:::o;6703:77::-;6740:7;6769:5;6758:16;;6703:77;;;:::o;6786:122::-;6859:24;6877:5;6859:24;:::i;:::-;6852:5;6849:35;6839:63;;6898:1;6895;6888:12;6839:63;6786:122;:::o;6914:139::-;6960:5;6998:6;6985:20;6976:29;;7014:33;7041:5;7014:33;:::i;:::-;6914:139;;;;:::o;7059:329::-;7118:6;7167:2;7155:9;7146:7;7142:23;7138:32;7135:119;;;7173:79;;:::i;:::-;7135:119;7293:1;7318:53;7363:7;7354:6;7343:9;7339:22;7318:53;:::i;:::-;7308:63;;7264:117;7059:329;;;;:::o;7394:118::-;7481:24;7499:5;7481:24;:::i;:::-;7476:3;7469:37;7394:118;;:::o;7518:222::-;7611:4;7649:2;7638:9;7634:18;7626:26;;7662:71;7730:1;7719:9;7715:17;7706:6;7662:71;:::i;:::-;7518:222;;;;:::o;7746:329::-;7805:6;7854:2;7842:9;7833:7;7829:23;7825:32;7822:119;;;7860:79;;:::i;:::-;7822:119;7980:1;8005:53;8050:7;8041:6;8030:9;8026:22;8005:53;:::i;:::-;7995:63;;7951:117;7746:329;;;;:::o;8081:474::-;8149:6;8157;8206:2;8194:9;8185:7;8181:23;8177:32;8174:119;;;8212:79;;:::i;:::-;8174:119;8332:1;8357:53;8402:7;8393:6;8382:9;8378:22;8357:53;:::i;:::-;8347:63;;8303:117;8459:2;8485:53;8530:7;8521:6;8510:9;8506:22;8485:53;:::i;:::-;8475:63;;8430:118;8081:474;;;;;:::o;8607:598::-;8710:8;8720:6;8770:3;8763:4;8755:6;8751:17;8747:27;8737:122;;8778:79;;:::i;:::-;8737:122;8891:6;8878:20;8868:30;;8921:18;8913:6;8910:30;8907:117;;;8943:79;;:::i;:::-;8907:117;9057:4;9049:6;9045:17;9033:29;;9111:3;9103:4;9095:6;9091:17;9081:8;9077:32;9074:41;9071:128;;;9118:79;;:::i;:::-;9071:128;8607:598;;;;;:::o;9211:619::-;9327:6;9335;9384:2;9372:9;9363:7;9359:23;9355:32;9352:119;;;9390:79;;:::i;:::-;9352:119;9538:1;9527:9;9523:17;9510:31;9568:18;9560:6;9557:30;9554:117;;;9590:79;;:::i;:::-;9554:117;9703:110;9805:7;9796:6;9785:9;9781:22;9703:110;:::i;:::-;9685:128;;;;9481:342;9211:619;;;;;:::o;9854:249::-;9925:8;9956:6;9944:18;;10009:3;10001:4;9995;9991:15;9981:8;9977:30;9974:39;9971:126;;;10016:79;;:::i;:::-;9971:126;9854:249;;;;:::o;10109:1839::-;10283:6;10291;10299;10307;10315;10323;10331;10339;10347;10355;10363:7;10413:3;10401:9;10392:7;10388:23;10384:33;10381:120;;;10420:79;;:::i;:::-;10381:120;10540:1;10565:53;10610:7;10601:6;10590:9;10586:22;10565:53;:::i;:::-;10555:63;;10511:117;10667:2;10693:53;10738:7;10729:6;10718:9;10714:22;10693:53;:::i;:::-;10683:63;;10638:118;10795:2;10821:53;10866:7;10857:6;10846:9;10842:22;10821:53;:::i;:::-;10811:63;;10766:118;10923:2;10949:53;10994:7;10985:6;10974:9;10970:22;10949:53;:::i;:::-;10939:63;;10894:118;11051:3;11078:78;11148:7;11139:6;11128:9;11124:22;11078:78;:::i;:::-;11068:88;;11022:144;11205:3;11232:53;11277:7;11268:6;11257:9;11253:22;11232:53;:::i;:::-;11222:63;;11176:119;11334:3;11361:53;11406:7;11397:6;11386:9;11382:22;11361:53;:::i;:::-;11351:63;;11305:119;11463:3;11490:53;11535:7;11526:6;11515:9;11511:22;11490:53;:::i;:::-;11480:63;;11434:119;11592:3;11619:53;11664:7;11655:6;11644:9;11640:22;11619:53;:::i;:::-;11609:63;;11563:119;11721:3;11748:53;11793:7;11784:6;11773:9;11769:22;11748:53;:::i;:::-;11738:63;;11692:119;11850:3;11878:53;11923:7;11914:6;11903:9;11899:22;11878:53;:::i;:::-;11867:64;;11821:120;10109:1839;;;;;;;;;;;;;;:::o;11954:117::-;12063:1;12060;12053:12;12077:102;12118:6;12169:2;12165:7;12160:2;12153:5;12149:14;12145:28;12135:38;;12077:102;;;:::o;12185:180::-;12233:77;12230:1;12223:88;12330:4;12327:1;12320:15;12354:4;12351:1;12344:15;12371:281;12454:27;12476:4;12454:27;:::i;:::-;12446:6;12442:40;12584:6;12572:10;12569:22;12548:18;12536:10;12533:34;12530:62;12527:88;;;12595:18;;:::i;:::-;12527:88;12635:10;12631:2;12624:22;12414:238;12371:281;;:::o;12658:129::-;12692:6;12719:20;;:::i;:::-;12709:30;;12748:33;12776:4;12768:6;12748:33;:::i;:::-;12658:129;;;:::o;12793:308::-;12855:4;12945:18;12937:6;12934:30;12931:56;;;12967:18;;:::i;:::-;12931:56;13005:29;13027:6;13005:29;:::i;:::-;12997:37;;13089:4;13083;13079:15;13071:23;;12793:308;;;:::o;13107:146::-;13204:6;13199:3;13194;13181:30;13245:1;13236:6;13231:3;13227:16;13220:27;13107:146;;;:::o;13259:425::-;13337:5;13362:66;13378:49;13420:6;13378:49;:::i;:::-;13362:66;:::i;:::-;13353:75;;13451:6;13444:5;13437:21;13489:4;13482:5;13478:16;13527:3;13518:6;13513:3;13509:16;13506:25;13503:112;;;13534:79;;:::i;:::-;13503:112;13624:54;13671:6;13666:3;13661;13624:54;:::i;:::-;13343:341;13259:425;;;;;:::o;13704:340::-;13760:5;13809:3;13802:4;13794:6;13790:17;13786:27;13776:122;;13817:79;;:::i;:::-;13776:122;13934:6;13921:20;13959:79;14034:3;14026:6;14019:4;14011:6;14007:17;13959:79;:::i;:::-;13950:88;;13766:278;13704:340;;;;:::o;14050:509::-;14119:6;14168:2;14156:9;14147:7;14143:23;14139:32;14136:119;;;14174:79;;:::i;:::-;14136:119;14322:1;14311:9;14307:17;14294:31;14352:18;14344:6;14341:30;14338:117;;;14374:79;;:::i;:::-;14338:117;14479:63;14534:7;14525:6;14514:9;14510:22;14479:63;:::i;:::-;14469:73;;14265:287;14050:509;;;;:::o;14565:118::-;14652:24;14670:5;14652:24;:::i;:::-;14647:3;14640:37;14565:118;;:::o;14689:222::-;14782:4;14820:2;14809:9;14805:18;14797:26;;14833:71;14901:1;14890:9;14886:17;14877:6;14833:71;:::i;:::-;14689:222;;;;:::o;14917:99::-;14969:6;15003:5;14997:12;14987:22;;14917:99;;;:::o;15022:169::-;15106:11;15140:6;15135:3;15128:19;15180:4;15175:3;15171:14;15156:29;;15022:169;;;;:::o;15197:246::-;15278:1;15288:113;15302:6;15299:1;15296:13;15288:113;;;15387:1;15382:3;15378:11;15372:18;15368:1;15363:3;15359:11;15352:39;15324:2;15321:1;15317:10;15312:15;;15288:113;;;15435:1;15426:6;15421:3;15417:16;15410:27;15259:184;15197:246;;;:::o;15449:377::-;15537:3;15565:39;15598:5;15565:39;:::i;:::-;15620:71;15684:6;15679:3;15620:71;:::i;:::-;15613:78;;15700:65;15758:6;15753:3;15746:4;15739:5;15735:16;15700:65;:::i;:::-;15790:29;15812:6;15790:29;:::i;:::-;15785:3;15781:39;15774:46;;15541:285;15449:377;;;;:::o;15832:313::-;15945:4;15983:2;15972:9;15968:18;15960:26;;16032:9;16026:4;16022:20;16018:1;16007:9;16003:17;15996:47;16060:78;16133:4;16124:6;16060:78;:::i;:::-;16052:86;;15832:313;;;;:::o;16151:474::-;16219:6;16227;16276:2;16264:9;16255:7;16251:23;16247:32;16244:119;;;16282:79;;:::i;:::-;16244:119;16402:1;16427:53;16472:7;16463:6;16452:9;16448:22;16427:53;:::i;:::-;16417:63;;16373:117;16529:2;16555:53;16600:7;16591:6;16580:9;16576:22;16555:53;:::i;:::-;16545:63;;16500:118;16151:474;;;;;:::o;16631:180::-;16679:77;16676:1;16669:88;16776:4;16773:1;16766:15;16800:4;16797:1;16790:15;16817:148;16919:11;16956:3;16941:18;;16817:148;;;;:::o;16995:330::-;17111:3;17132:89;17214:6;17209:3;17132:89;:::i;:::-;17125:96;;17231:56;17280:6;17275:3;17268:5;17231:56;:::i;:::-;17312:6;17307:3;17303:16;17296:23;;16995:330;;;;;:::o;17331:295::-;17473:3;17495:105;17596:3;17587:6;17579;17495:105;:::i;:::-;17488:112;;17617:3;17610:10;;17331:295;;;;;:::o;17656:317::-;17754:3;17775:71;17839:6;17834:3;17775:71;:::i;:::-;17768:78;;17856:56;17905:6;17900:3;17893:5;17856:56;:::i;:::-;17937:29;17959:6;17937:29;:::i;:::-;17932:3;17928:39;17921:46;;17656:317;;;;;:::o;17979:664::-;18186:4;18224:3;18213:9;18209:19;18201:27;;18238:71;18306:1;18295:9;18291:17;18282:6;18238:71;:::i;:::-;18356:9;18350:4;18346:20;18341:2;18330:9;18326:18;18319:48;18384:88;18467:4;18458:6;18450;18384:88;:::i;:::-;18376:96;;18482:72;18550:2;18539:9;18535:18;18526:6;18482:72;:::i;:::-;18564;18632:2;18621:9;18617:18;18608:6;18564:72;:::i;:::-;17979:664;;;;;;;;:::o;18649:163::-;18789:15;18785:1;18777:6;18773:14;18766:39;18649:163;:::o;18818:366::-;18960:3;18981:67;19045:2;19040:3;18981:67;:::i;:::-;18974:74;;19057:93;19146:3;19057:93;:::i;:::-;19175:2;19170:3;19166:12;19159:19;;18818:366;;;:::o;19190:419::-;19356:4;19394:2;19383:9;19379:18;19371:26;;19443:9;19437:4;19433:20;19429:1;19418:9;19414:17;19407:47;19471:131;19597:4;19471:131;:::i;:::-;19463:139;;19190:419;;;:::o;19615:117::-;19724:1;19721;19714:12;19984:396;20080:4;20134:11;20121:25;20234:1;20228:4;20224:12;20213:8;20197:14;20193:29;20189:48;20169:18;20165:73;20155:168;;20242:79;;:::i;:::-;20155:168;20354:18;20344:8;20340:33;20332:41;;20085:295;19984:396;;;;:::o;20386:402::-;20488:4;20542:11;20529:25;20642:1;20636:4;20632:12;20621:8;20605:14;20601:29;20597:48;20577:18;20573:73;20563:168;;20650:79;;:::i;:::-;20563:168;20762:18;20752:8;20748:33;20740:41;;20493:295;20386:402;;;;:::o;20794:163::-;20934:15;20930:1;20922:6;20918:14;20911:39;20794:163;:::o;20963:366::-;21105:3;21126:67;21190:2;21185:3;21126:67;:::i;:::-;21119:74;;21202:93;21291:3;21202:93;:::i;:::-;21320:2;21315:3;21311:12;21304:19;;20963:366;;;:::o;21335:419::-;21501:4;21539:2;21528:9;21524:18;21516:26;;21588:9;21582:4;21578:20;21574:1;21563:9;21559:17;21552:47;21616:131;21742:4;21616:131;:::i;:::-;21608:139;;21335:419;;;:::o;21760:159::-;21900:11;21896:1;21888:6;21884:14;21877:35;21760:159;:::o;21925:365::-;22067:3;22088:66;22152:1;22147:3;22088:66;:::i;:::-;22081:73;;22163:93;22252:3;22163:93;:::i;:::-;22281:2;22276:3;22272:12;22265:19;;21925:365;;;:::o;22296:419::-;22462:4;22500:2;22489:9;22485:18;22477:26;;22549:9;22543:4;22539:20;22535:1;22524:9;22520:17;22513:47;22577:131;22703:4;22577:131;:::i;:::-;22569:139;;22296:419;;;:::o;22721:154::-;22861:6;22857:1;22849:6;22845:14;22838:30;22721:154;:::o;22881:400::-;23041:3;23062:84;23144:1;23139:3;23062:84;:::i;:::-;23055:91;;23155:93;23244:3;23155:93;:::i;:::-;23273:1;23268:3;23264:11;23257:18;;22881:400;;;:::o;23287:381::-;23472:3;23494:148;23638:3;23494:148;:::i;:::-;23487:155;;23659:3;23652:10;;23287:381;;;:::o;23674:154::-;23814:6;23810:1;23802:6;23798:14;23791:30;23674:154;:::o;23834:400::-;23994:3;24015:84;24097:1;24092:3;24015:84;:::i;:::-;24008:91;;24108:93;24197:3;24108:93;:::i;:::-;24226:1;24221:3;24217:11;24210:18;;23834:400;;;:::o;24240:381::-;24425:3;24447:148;24591:3;24447:148;:::i;:::-;24440:155;;24612:3;24605:10;;24240:381;;;:::o;24627:154::-;24767:6;24763:1;24755:6;24751:14;24744:30;24627:154;:::o;24787:400::-;24947:3;24968:84;25050:1;25045:3;24968:84;:::i;:::-;24961:91;;25061:93;25150:3;25061:93;:::i;:::-;25179:1;25174:3;25170:11;25163:18;;24787:400;;;:::o;25193:381::-;25378:3;25400:148;25544:3;25400:148;:::i;:::-;25393:155;;25565:3;25558:10;;25193:381;;;:::o;25580:162::-;25720:14;25716:1;25708:6;25704:14;25697:38;25580:162;:::o;25748:366::-;25890:3;25911:67;25975:2;25970:3;25911:67;:::i;:::-;25904:74;;25987:93;26076:3;25987:93;:::i;:::-;26105:2;26100:3;26096:12;26089:19;;25748:366;;;:::o;26120:419::-;26286:4;26324:2;26313:9;26309:18;26301:26;;26373:9;26367:4;26363:20;26359:1;26348:9;26344:17;26337:47;26401:131;26527:4;26401:131;:::i;:::-;26393:139;;26120:419;;;:::o;26545:143::-;26602:5;26633:6;26627:13;26618:22;;26649:33;26676:5;26649:33;:::i;:::-;26545:143;;;;:::o;26694:351::-;26764:6;26813:2;26801:9;26792:7;26788:23;26784:32;26781:119;;;26819:79;;:::i;:::-;26781:119;26939:1;26964:64;27020:7;27011:6;27000:9;26996:22;26964:64;:::i;:::-;26954:74;;26910:128;26694:351;;;;:::o;27051:162::-;27191:14;27187:1;27179:6;27175:14;27168:38;27051:162;:::o;27219:366::-;27361:3;27382:67;27446:2;27441:3;27382:67;:::i;:::-;27375:74;;27458:93;27547:3;27458:93;:::i;:::-;27576:2;27571:3;27567:12;27560:19;;27219:366;;;:::o;27591:419::-;27757:4;27795:2;27784:9;27780:18;27772:26;;27844:9;27838:4;27834:20;27830:1;27819:9;27815:17;27808:47;27872:131;27998:4;27872:131;:::i;:::-;27864:139;;27591:419;;;:::o;28016:332::-;28137:4;28175:2;28164:9;28160:18;28152:26;;28188:71;28256:1;28245:9;28241:17;28232:6;28188:71;:::i;:::-;28269:72;28337:2;28326:9;28322:18;28313:6;28269:72;:::i;:::-;28016:332;;;;;:::o;28354:116::-;28424:21;28439:5;28424:21;:::i;:::-;28417:5;28414:32;28404:60;;28460:1;28457;28450:12;28404:60;28354:116;:::o;28476:137::-;28530:5;28561:6;28555:13;28546:22;;28577:30;28601:5;28577:30;:::i;:::-;28476:137;;;;:::o;28619:345::-;28686:6;28735:2;28723:9;28714:7;28710:23;28706:32;28703:119;;;28741:79;;:::i;:::-;28703:119;28861:1;28886:61;28939:7;28930:6;28919:9;28915:22;28886:61;:::i;:::-;28876:71;;28832:125;28619:345;;;;:::o;28970:162::-;29110:14;29106:1;29098:6;29094:14;29087:38;28970:162;:::o;29138:366::-;29280:3;29301:67;29365:2;29360:3;29301:67;:::i;:::-;29294:74;;29377:93;29466:3;29377:93;:::i;:::-;29495:2;29490:3;29486:12;29479:19;;29138:366;;;:::o;29510:419::-;29676:4;29714:2;29703:9;29699:18;29691:26;;29763:9;29757:4;29753:20;29749:1;29738:9;29734:17;29727:47;29791:131;29917:4;29791:131;:::i;:::-;29783:139;;29510:419;;;:::o;29935:117::-;30044:1;30041;30034:12;30058:117;30167:1;30164;30157:12;30181:117;30290:1;30287;30280:12;30304:711;30368:5;30375:6;30431:3;30418:17;30523:1;30517:4;30513:12;30502:8;30486:14;30482:29;30478:48;30458:18;30454:73;30444:168;;30531:79;;:::i;:::-;30444:168;30654:8;30634:18;30630:33;30621:42;;30696:5;30683:19;30673:29;;30731:4;30724:5;30720:16;30711:25;;30759:18;30751:6;30748:30;30745:117;;;30781:79;;:::i;:::-;30745:117;30917:4;30909:6;30905:17;30889:14;30885:38;30878:5;30874:50;30871:137;;;30927:79;;:::i;:::-;30871:137;30382:633;30304:711;;;;;:::o;31021:158::-;31094:11;31128:6;31123:3;31116:19;31168:4;31163:3;31159:14;31144:29;;31021:158;;;;:::o;31207:294::-;31293:3;31314:60;31367:6;31362:3;31314:60;:::i;:::-;31307:67;;31384:56;31433:6;31428:3;31421:5;31384:56;:::i;:::-;31465:29;31487:6;31465:29;:::i;:::-;31460:3;31456:39;31449:46;;31207:294;;;;;:::o;31507:122::-;31559:5;31584:39;31619:2;31614:3;31610:12;31605:3;31584:39;:::i;:::-;31575:48;;31507:122;;;;:::o;31635:108::-;31712:24;31730:5;31712:24;:::i;:::-;31707:3;31700:37;31635:108;;:::o;31749:122::-;31801:5;31826:39;31861:2;31856:3;31852:12;31847:3;31826:39;:::i;:::-;31817:48;;31749:122;;;;:::o;31959:1347::-;32098:3;32134:4;32129:3;32125:14;32218:61;32273:4;32266:5;32262:16;32255:5;32218:61;:::i;:::-;32326:3;32320:4;32316:14;32309:4;32304:3;32300:14;32293:38;32352:87;32434:4;32420:12;32406;32352:87;:::i;:::-;32344:95;;32149:301;;32520:50;32564:4;32557:5;32553:16;32546:5;32520:50;:::i;:::-;32583:63;32640:4;32635:3;32631:14;32617:12;32583:63;:::i;:::-;32460:196;32725:50;32769:4;32762:5;32758:16;32751:5;32725:50;:::i;:::-;32788:63;32845:4;32840:3;32836:14;32822:12;32788:63;:::i;:::-;32666:195;32930:50;32974:4;32967:5;32963:16;32956:5;32930:50;:::i;:::-;32993:63;33050:4;33045:3;33041:14;33027:12;32993:63;:::i;:::-;32871:195;33143:50;33187:4;33180:5;33176:16;33169:5;33143:50;:::i;:::-;33206:63;33263:4;33258:3;33254:14;33240:12;33206:63;:::i;:::-;33076:203;33296:4;33289:11;;32103:1203;31959:1347;;;;:::o;33312:413::-;33475:4;33513:2;33502:9;33498:18;33490:26;;33562:9;33556:4;33552:20;33548:1;33537:9;33533:17;33526:47;33590:128;33713:4;33704:6;33590:128;:::i;:::-;33582:136;;33312:413;;;;:::o;33731:106::-;33775:8;33824:5;33819:3;33815:15;33794:36;;33731:106;;;:::o;33843:183::-;33878:3;33916:1;33898:16;33895:23;33892:128;;;33954:1;33951;33948;33933:23;33976:34;34007:1;34001:8;33976:34;:::i;:::-;33969:41;;33892:128;33843:183;:::o;34032:711::-;34071:3;34109:4;34091:16;34088:26;34117:5;34085:39;34146:20;;:::i;:::-;34221:1;34203:16;34199:24;34196:1;34190:4;34175:49;34254:4;34248:11;34353:16;34346:4;34338:6;34334:17;34331:39;34298:18;34290:6;34287:30;34271:113;34268:146;;;34399:5;;;;34268:146;34445:6;34439:4;34435:17;34481:3;34475:10;34508:18;34500:6;34497:30;34494:43;;;34530:5;;;;;;34494:43;34578:6;34571:4;34566:3;34562:14;34558:27;34637:1;34619:16;34615:24;34609:4;34605:35;34600:3;34597:44;34594:57;;;34644:5;;;;;;;34594:57;34661;34709:6;34703:4;34699:17;34691:6;34687:30;34681:4;34661:57;:::i;:::-;34734:3;34727:10;;34075:668;;;;;34032:711;;:::o;34749:423::-;34890:4;34928:2;34917:9;34913:18;34905:26;;34941:71;35009:1;34998:9;34994:17;34985:6;34941:71;:::i;:::-;35059:9;35053:4;35049:20;35044:2;35033:9;35029:18;35022:48;35087:78;35160:4;35151:6;35087:78;:::i;:::-;35079:86;;34749:423;;;;;:::o;35178:85::-;35223:7;35252:5;35241:16;;35178:85;;;:::o;35269:60::-;35297:3;35318:5;35311:12;;35269:60;;;:::o;35335:158::-;35393:9;35426:61;35444:42;35453:32;35479:5;35453:32;:::i;:::-;35444:42;:::i;:::-;35426:61;:::i;:::-;35413:74;;35335:158;;;:::o;35499:147::-;35594:45;35633:5;35594:45;:::i;:::-;35589:3;35582:58;35499:147;;:::o;35652:348::-;35781:4;35819:2;35808:9;35804:18;35796:26;;35832:71;35900:1;35889:9;35885:17;35876:6;35832:71;:::i;:::-;35913:80;35989:2;35978:9;35974:18;35965:6;35913:80;:::i;:::-;35652:348;;;;;:::o;36006:163::-;36146:15;36142:1;36134:6;36130:14;36123:39;36006:163;:::o;36175:366::-;36317:3;36338:67;36402:2;36397:3;36338:67;:::i;:::-;36331:74;;36414:93;36503:3;36414:93;:::i;:::-;36532:2;36527:3;36523:12;36516:19;;36175:366;;;:::o;36547:419::-;36713:4;36751:2;36740:9;36736:18;36728:26;;36800:9;36794:4;36790:20;36786:1;36775:9;36771:17;36764:47;36828:131;36954:4;36828:131;:::i;:::-;36820:139;;36547:419;;;:::o;36972:553::-;37149:4;37187:3;37176:9;37172:19;37164:27;;37201:71;37269:1;37258:9;37254:17;37245:6;37201:71;:::i;:::-;37282:72;37350:2;37339:9;37335:18;37326:6;37282:72;:::i;:::-;37364;37432:2;37421:9;37417:18;37408:6;37364:72;:::i;:::-;37446;37514:2;37503:9;37499:18;37490:6;37446:72;:::i;:::-;36972:553;;;;;;;:::o;37531:180::-;37579:77;37576:1;37569:88;37676:4;37673:1;37666:15;37700:4;37697:1;37690:15;37717:233;37756:3;37779:24;37797:5;37779:24;:::i;:::-;37770:33;;37825:66;37818:5;37815:77;37812:103;;37895:18;;:::i;:::-;37812:103;37942:1;37935:5;37931:13;37924:20;;37717:233;;;:::o;37956:::-;38096:34;38092:1;38084:6;38080:14;38073:58;38165:16;38160:2;38152:6;38148:15;38141:41;37956:233;:::o;38195:366::-;38337:3;38358:67;38422:2;38417:3;38358:67;:::i;:::-;38351:74;;38434:93;38523:3;38434:93;:::i;:::-;38552:2;38547:3;38543:12;38536:19;;38195:366;;;:::o;38567:419::-;38733:4;38771:2;38760:9;38756:18;38748:26;;38820:9;38814:4;38810:20;38806:1;38795:9;38791:17;38784:47;38848:131;38974:4;38848:131;:::i;:::-;38840:139;;38567:419;;;:::o;38992:159::-;39132:11;39128:1;39120:6;39116:14;39109:35;38992:159;:::o;39157:365::-;39299:3;39320:66;39384:1;39379:3;39320:66;:::i;:::-;39313:73;;39395:93;39484:3;39395:93;:::i;:::-;39513:2;39508:3;39504:12;39497:19;;39157:365;;;:::o;39528:419::-;39694:4;39732:2;39721:9;39717:18;39709:26;;39781:9;39775:4;39771:20;39767:1;39756:9;39752:17;39745:47;39809:131;39935:4;39809:131;:::i;:::-;39801:139;;39528:419;;;:::o;39953:160::-;40093:12;40089:1;40081:6;40077:14;40070:36;39953:160;:::o;40119:366::-;40261:3;40282:67;40346:2;40341:3;40282:67;:::i;:::-;40275:74;;40358:93;40447:3;40358:93;:::i;:::-;40476:2;40471:3;40467:12;40460:19;;40119:366;;;:::o;40491:419::-;40657:4;40695:2;40684:9;40680:18;40672:26;;40744:9;40738:4;40734:20;40730:1;40719:9;40715:17;40708:47;40772:131;40898:4;40772:131;:::i;:::-;40764:139;;40491:419;;;:::o;40916:162::-;41056:14;41052:1;41044:6;41040:14;41033:38;40916:162;:::o;41084:366::-;41226:3;41247:67;41311:2;41306:3;41247:67;:::i;:::-;41240:74;;41323:93;41412:3;41323:93;:::i;:::-;41441:2;41436:3;41432:12;41425:19;;41084:366;;;:::o;41456:419::-;41622:4;41660:2;41649:9;41645:18;41637:26;;41709:9;41703:4;41699:20;41695:1;41684:9;41680:17;41673:47;41737:131;41863:4;41737:131;:::i;:::-;41729:139;;41456:419;;;:::o;41881:168::-;42021:20;42017:1;42009:6;42005:14;41998:44;41881:168;:::o;42055:366::-;42197:3;42218:67;42282:2;42277:3;42218:67;:::i;:::-;42211:74;;42294:93;42383:3;42294:93;:::i;:::-;42412:2;42407:3;42403:12;42396:19;;42055:366;;;:::o;42427:419::-;42593:4;42631:2;42620:9;42616:18;42608:26;;42680:9;42674:4;42670:20;42666:1;42655:9;42651:17;42644:47;42708:131;42834:4;42708:131;:::i;:::-;42700:139;;42427:419;;;:::o;42852:169::-;42992:21;42988:1;42980:6;42976:14;42969:45;42852:169;:::o;43027:366::-;43169:3;43190:67;43254:2;43249:3;43190:67;:::i;:::-;43183:74;;43266:93;43355:3;43266:93;:::i;:::-;43384:2;43379:3;43375:12;43368:19;;43027:366;;;:::o;43399:419::-;43565:4;43603:2;43592:9;43588:18;43580:26;;43652:9;43646:4;43642:20;43638:1;43627:9;43623:17;43616:47;43680:131;43806:4;43680:131;:::i;:::-;43672:139;;43399:419;;;:::o;43824:164::-;43964:16;43960:1;43952:6;43948:14;43941:40;43824:164;:::o;43994:366::-;44136:3;44157:67;44221:2;44216:3;44157:67;:::i;:::-;44150:74;;44233:93;44322:3;44233:93;:::i;:::-;44351:2;44346:3;44342:12;44335:19;;43994:366;;;:::o;44366:419::-;44532:4;44570:2;44559:9;44555:18;44547:26;;44619:9;44613:4;44609:20;44605:1;44594:9;44590:17;44583:47;44647:131;44773:4;44647:131;:::i;:::-;44639:139;;44366:419;;;:::o;44791:161::-;44931:13;44927:1;44919:6;44915:14;44908:37;44791:161;:::o;44958:366::-;45100:3;45121:67;45185:2;45180:3;45121:67;:::i;:::-;45114:74;;45197:93;45286:3;45197:93;:::i;:::-;45315:2;45310:3;45306:12;45299:19;;44958:366;;;:::o;45330:419::-;45496:4;45534:2;45523:9;45519:18;45511:26;;45583:9;45577:4;45573:20;45569:1;45558:9;45554:17;45547:47;45611:131;45737:4;45611:131;:::i;:::-;45603:139;;45330:419;;;:::o;45755:390::-;45861:3;45889:39;45922:5;45889:39;:::i;:::-;45944:89;46026:6;46021:3;45944:89;:::i;:::-;45937:96;;46042:65;46100:6;46095:3;46088:4;46081:5;46077:16;46042:65;:::i;:::-;46132:6;46127:3;46123:16;46116:23;;45865:280;45755:390;;;;:::o;46151:275::-;46283:3;46305:95;46396:3;46387:6;46305:95;:::i;:::-;46298:102;;46417:3;46410:10;;46151:275;;;;:::o;46432:106::-;46499:6;46527:4;46517:14;;46432:106;;;:::o;46544:143::-;46641:11;46678:3;46663:18;;46544:143;;;;:::o;46693:100::-;46760:4;46783:3;46775:11;;46693:100;;;:::o;46799:179::-;46868:10;46889:46;46931:3;46923:6;46889:46;:::i;:::-;46967:4;46962:3;46958:14;46944:28;;46799:179;;;;:::o;46984:113::-;47054:4;47086;47081:3;47077:14;47069:22;;46984:113;;;:::o;47135:731::-;47273:54;47321:5;47273:54;:::i;:::-;47343:84;47420:6;47415:3;47343:84;:::i;:::-;47336:91;;47451:56;47501:5;47451:56;:::i;:::-;47530:7;47561:1;47546:313;47571:6;47568:1;47565:13;47546:313;;;47641:42;47676:6;47667:7;47641:42;:::i;:::-;47703:63;47762:3;47747:13;47703:63;:::i;:::-;47696:70;;47789:60;47842:6;47789:60;:::i;:::-;47779:70;;47606:253;47593:1;47590;47586:9;47581:14;;47546:313;;;47550:14;47249:617;;;47135:731;;:::o;47872:1541::-;48323:4;48361:3;48350:9;48346:19;48338:27;;48375:71;48443:1;48432:9;48428:17;48419:6;48375:71;:::i;:::-;48456:72;48524:2;48513:9;48509:18;48500:6;48456:72;:::i;:::-;48538;48606:2;48595:9;48591:18;48582:6;48538:72;:::i;:::-;48620;48688:2;48677:9;48673:18;48664:6;48620:72;:::i;:::-;48702:73;48770:3;48759:9;48755:19;48746:6;48702:73;:::i;:::-;48785:121;48901:3;48890:9;48886:19;48877:6;48785:121;:::i;:::-;48916:73;48984:3;48973:9;48969:19;48960:6;48916:73;:::i;:::-;48999;49067:3;49056:9;49052:19;49043:6;48999:73;:::i;:::-;49082;49150:3;49139:9;49135:19;49126:6;49082:73;:::i;:::-;49165;49233:3;49222:9;49218:19;49209:6;49165:73;:::i;:::-;49248:74;49317:3;49306:9;49302:19;49292:7;49248:74;:::i;:::-;49332;49401:3;49390:9;49386:19;49376:7;49332:74;:::i;:::-;47872:1541;;;;;;;;;;;;;;;:::o;49419:85::-;49464:7;49493:5;49482:16;;49419:85;;;:::o;49510:86::-;49545:7;49585:4;49578:5;49574:16;49563:27;;49510:86;;;:::o;49602:154::-;49658:9;49691:59;49707:42;49716:32;49742:5;49716:32;:::i;:::-;49707:42;:::i;:::-;49691:59;:::i;:::-;49678:72;;49602:154;;;:::o;49762:143::-;49855:43;49892:5;49855:43;:::i;:::-;49850:3;49843:56;49762:143;;:::o;49911:234::-;50010:4;50048:2;50037:9;50033:18;50025:26;;50061:77;50135:1;50124:9;50120:17;50111:6;50061:77;:::i;:::-;49911:234;;;;:::o;50151:::-;50291:34;50287:1;50279:6;50275:14;50268:58;50360:17;50355:2;50347:6;50343:15;50336:42;50151:234;:::o;50391:366::-;50533:3;50554:67;50618:2;50613:3;50554:67;:::i;:::-;50547:74;;50630:93;50719:3;50630:93;:::i;:::-;50748:2;50743:3;50739:12;50732:19;;50391:366;;;:::o;50763:419::-;50929:4;50967:2;50956:9;50952:18;50944:26;;51016:9;51010:4;51006:20;51002:1;50991:9;50987:17;50980:47;51044:131;51170:4;51044:131;:::i;:::-;51036:139;;50763:419;;;:::o;51188:161::-;51328:13;51324:1;51316:6;51312:14;51305:37;51188:161;:::o;51355:366::-;51497:3;51518:67;51582:2;51577:3;51518:67;:::i;:::-;51511:74;;51594:93;51683:3;51594:93;:::i;:::-;51712:2;51707:3;51703:12;51696:19;;51355:366;;;:::o;51727:419::-;51893:4;51931:2;51920:9;51916:18;51908:26;;51980:9;51974:4;51970:20;51966:1;51955:9;51951:17;51944:47;52008:131;52134:4;52008:131;:::i;:::-;52000:139;;51727:419;;;:::o;52152:553::-;52331:4;52369:2;52358:9;52354:18;52346:26;;52382:71;52450:1;52439:9;52435:17;52426:6;52382:71;:::i;:::-;52500:9;52494:4;52490:20;52485:2;52474:9;52470:18;52463:48;52528:88;52611:4;52602:6;52594;52528:88;:::i;:::-;52520:96;;52626:72;52694:2;52683:9;52679:18;52670:6;52626:72;:::i;:::-;52152:553;;;;;;;:::o;52711:181::-;52851:33;52847:1;52839:6;52835:14;52828:57;52711:181;:::o;52898:366::-;53040:3;53061:67;53125:2;53120:3;53061:67;:::i;:::-;53054:74;;53137:93;53226:3;53137:93;:::i;:::-;53255:2;53250:3;53246:12;53239:19;;52898:366;;;:::o;53270:419::-;53436:4;53474:2;53463:9;53459:18;53451:26;;53523:9;53517:4;53513:20;53509:1;53498:9;53494:17;53487:47;53551:131;53677:4;53551:131;:::i;:::-;53543:139;;53270:419;;;:::o;53695:230::-;53835:34;53831:1;53823:6;53819:14;53812:58;53904:13;53899:2;53891:6;53887:15;53880:38;53695:230;:::o;53931:366::-;54073:3;54094:67;54158:2;54153:3;54094:67;:::i;:::-;54087:74;;54170:93;54259:3;54170:93;:::i;:::-;54288:2;54283:3;54279:12;54272:19;;53931:366;;;:::o;54303:419::-;54469:4;54507:2;54496:9;54492:18;54484:26;;54556:9;54550:4;54546:20;54542:1;54531:9;54527:17;54520:47;54584:131;54710:4;54584:131;:::i;:::-;54576:139;;54303:419;;;:::o;54728:173::-;54868:25;54864:1;54856:6;54852:14;54845:49;54728:173;:::o;54907:402::-;55067:3;55088:85;55170:2;55165:3;55088:85;:::i;:::-;55081:92;;55182:93;55271:3;55182:93;:::i;:::-;55300:2;55295:3;55291:12;55284:19;;54907:402;;;:::o;55315:167::-;55455:19;55451:1;55443:6;55439:14;55432:43;55315:167;:::o;55488:402::-;55648:3;55669:85;55751:2;55746:3;55669:85;:::i;:::-;55662:92;;55763:93;55852:3;55763:93;:::i;:::-;55881:2;55876:3;55872:12;55865:19;;55488:402;;;:::o;55896:967::-;56278:3;56300:148;56444:3;56300:148;:::i;:::-;56293:155;;56465:95;56556:3;56547:6;56465:95;:::i;:::-;56458:102;;56577:148;56721:3;56577:148;:::i;:::-;56570:155;;56742:95;56833:3;56824:6;56742:95;:::i;:::-;56735:102;;56854:3;56847:10;;55896:967;;;;;:::o;56869:229::-;57009:34;57005:1;56997:6;56993:14;56986:58;57078:12;57073:2;57065:6;57061:15;57054:37;56869:229;:::o;57104:366::-;57246:3;57267:67;57331:2;57326:3;57267:67;:::i;:::-;57260:74;;57343:93;57432:3;57343:93;:::i;:::-;57461:2;57456:3;57452:12;57445:19;;57104:366;;;:::o;57476:419::-;57642:4;57680:2;57669:9;57665:18;57657:26;;57729:9;57723:4;57719:20;57715:1;57704:9;57700:17;57693:47;57757:131;57883:4;57757:131;:::i;:::-;57749:139;;57476:419;;;:::o;57901:410::-;57941:7;57964:20;57982:1;57964:20;:::i;:::-;57959:25;;57998:20;58016:1;57998:20;:::i;:::-;57993:25;;58053:1;58050;58046:9;58075:30;58093:11;58075:30;:::i;:::-;58064:41;;58254:1;58245:7;58241:15;58238:1;58235:22;58215:1;58208:9;58188:83;58165:139;;58284:18;;:::i;:::-;58165:139;57949:362;57901:410;;;;:::o;58317:191::-;58357:3;58376:20;58394:1;58376:20;:::i;:::-;58371:25;;58410:20;58428:1;58410:20;:::i;:::-;58405:25;;58453:1;58450;58446:9;58439:16;;58474:3;58471:1;58468:10;58465:36;;;58481:18;;:::i;:::-;58465:36;58317:191;;;;:::o;58514:171::-;58553:3;58576:24;58594:5;58576:24;:::i;:::-;58567:33;;58622:4;58615:5;58612:15;58609:41;;58630:18;;:::i;:::-;58609:41;58677:1;58670:5;58666:13;58659:20;;58514:171;;;:::o;58691:182::-;58831:34;58827:1;58819:6;58815:14;58808:58;58691:182;:::o;58879:366::-;59021:3;59042:67;59106:2;59101:3;59042:67;:::i;:::-;59035:74;;59118:93;59207:3;59118:93;:::i;:::-;59236:2;59231:3;59227:12;59220:19;;58879:366;;;:::o;59251:419::-;59417:4;59455:2;59444:9;59440:18;59432:26;;59504:9;59498:4;59494:20;59490:1;59479:9;59475:17;59468:47;59532:131;59658:4;59532:131;:::i;:::-;59524:139;;59251:419;;;:::o;59676:194::-;59716:4;59736:20;59754:1;59736:20;:::i;:::-;59731:25;;59770:20;59788:1;59770:20;:::i;:::-;59765:25;;59814:1;59811;59807:9;59799:17;;59838:1;59832:4;59829:11;59826:37;;;59843:18;;:::i;:::-;59826:37;59676:194;;;;:::o;59876:180::-;59924:77;59921:1;59914:88;60021:4;60018:1;60011:15;60045:4;60042:1;60035:15;60062:225;60202:34;60198:1;60190:6;60186:14;60179:58;60271:8;60266:2;60258:6;60254:15;60247:33;60062:225;:::o;60293:366::-;60435:3;60456:67;60520:2;60515:3;60456:67;:::i;:::-;60449:74;;60532:93;60621:3;60532:93;:::i;:::-;60650:2;60645:3;60641:12;60634:19;;60293:366;;;:::o;60665:419::-;60831:4;60869:2;60858:9;60854:18;60846:26;;60918:9;60912:4;60908:20;60904:1;60893:9;60889:17;60882:47;60946:131;61072:4;60946:131;:::i;:::-;60938:139;;60665:419;;;:::o;61090:98::-;61141:6;61175:5;61169:12;61159:22;;61090:98;;;:::o;61194:147::-;61295:11;61332:3;61317:18;;61194:147;;;;:::o;61347:386::-;61451:3;61479:38;61511:5;61479:38;:::i;:::-;61533:88;61614:6;61609:3;61533:88;:::i;:::-;61526:95;;61630:65;61688:6;61683:3;61676:4;61669:5;61665:16;61630:65;:::i;:::-;61720:6;61715:3;61711:16;61704:23;;61455:278;61347:386;;;;:::o;61739:271::-;61869:3;61891:93;61980:3;61971:6;61891:93;:::i;:::-;61884:100;;62001:3;61994:10;;61739:271;;;;:::o;62016:179::-;62156:31;62152:1;62144:6;62140:14;62133:55;62016:179;:::o;62201:366::-;62343:3;62364:67;62428:2;62423:3;62364:67;:::i;:::-;62357:74;;62440:93;62529:3;62440:93;:::i;:::-;62558:2;62553:3;62549:12;62542:19;;62201:366;;;:::o;62573:419::-;62739:4;62777:2;62766:9;62762:18;62754:26;;62826:9;62820:4;62816:20;62812:1;62801:9;62797:17;62790:47;62854:131;62980:4;62854:131;:::i;:::-;62846:139;;62573:419;;;:::o"},"methodIdentifiers":{"ACONCAGUA_ROLE()":"e5df800a","DEFAULT_ADMIN_ROLE()":"a217fddf","LENDER_LIQ_ROLE()":"32cc815d","PAUSER_ROLE()":"e63ab1e9","RESCUER_ROLE()":"71372544","SWAPPER_ROLE()":"df668eca","USDC()":"89a30271","USDM()":"a9da3cf2","USDT()":"c54e44eb","WBTC()":"4dede3de","balanceOf(string)":"35ee5f87","getBalances()":"00113e08","getRoleAdmin(bytes32)":"248a9ca3","getRoleByIndex(uint256)":"25acc985","getRoleCount()":"83d33319","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,address,address[3],address,address,address,address,address,address)":"334347b7","renounceRole(bytes32,address)":"36568abe","rescue(uint256,string)":"0828c404","rescueWalletAddress()":"15ac7358","revokeRole(bytes32,address)":"d547741f","setRescueWalletAddress(address)":"d00411c9","setWithdrawWalletAddress(address)":"212f6039","supportsInterface(bytes4)":"01ffc9a7","swapExactInputs(((bytes,address,uint256,uint256,uint256),address,address)[])":"2ffe9942","tokenAddress(string)":"6e30199f","version()":"54fd4d50","withdraw(uint256,string)":"dc048cf2","withdrawWalletAddress()":"b14ec101"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdcTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdtTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdmTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wbtcTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"admins\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rescueWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"firstlenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"secondLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapRouterAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Rescue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"SwapError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWithdrawalLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalLimit\",\"type\":\"uint256\"}],\"name\":\"WithdrawalLimitChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACONCAGUA_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDER_LIQ_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESCUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAPPER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDM\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdmTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wbtcTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"_aconcagua\",\"type\":\"address[3]\"},{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_firstLenderLiq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_secondLenderLiq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"}],\"name\":\"setRescueWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"internalType\":\"struct IColateralContract.SwapParams[]\",\"name\":\"swapsParams\",\"type\":\"tuple[]\"}],\"name\":\"swapExactInputs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleByIndex(uint256)\":{\"details\":\"Returns one of the `roles`. `index` must be a value between 0 and {getRoleCount}, non-inclusive. Role are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleByIndex} and {getRoleCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleCount()\":{\"details\":\"Returns the number `roles`. Can be used together with {getRoleByIndex} to enumerate all bearers of a role.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ColateralContract.sol\":\"ColateralContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/ColateralContract.sol\":{\"keccak256\":\"0x0992f8ee9b02e7f6be8eb36b767e903e6ef24218505edacd40283f481b29c794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f59a8be58c9d340675a5952b753b3fd834dbd8ba173b1cd39e88c270497986fb\",\"dweb:/ipfs/QmdDh187NEjsNrLVjA4w2ik1bsLuMvoLWQQZka1tFbzcFt\"]},\"contracts/IColateralContract.sol\":{\"keccak256\":\"0x57e52012ff0808da292934b97e0f69b9affa1d1ac8e552cd15de4ac075e81881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a57acc11a9febde9aadf1450101219f4ab1814ef82cb0c86480ee9f2e870ab\",\"dweb:/ipfs/QmaAcqtLs18SQgv9ofr1sHgND1S5fQE83asFT9enMm6jZ5\"]}},\"version\":1}"}},"contracts/IColateralContract.sol":{"IColateralContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"usdcTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"usdtTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"usdmTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"wbtcTokenAddress","type":"address"},{"indexed":false,"internalType":"address[3]","name":"admins","type":"address[3]"},{"indexed":false,"internalType":"address","name":"rescueWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawWalletAddress","type":"address"},{"indexed":false,"internalType":"address","name":"firstlenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"secondLenderLiq","type":"address"},{"indexed":false,"internalType":"address","name":"swapRouterAddress","type":"address"},{"indexed":false,"internalType":"address","name":"swapper","type":"address"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"Rescue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":false,"internalType":"string","name":"msg","type":"string"}],"name":"SwapError","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"address","name":"oldTokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"newTokenAddress","type":"address"}],"name":"TokenAddressChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"token","type":"string"},{"indexed":false,"internalType":"uint256","name":"oldWithdrawalLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newWithdrawalLimit","type":"uint256"}],"name":"WithdrawalLimitChange","type":"event"},{"inputs":[{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleByIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRoleCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"rescue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rescueWalletAddress","type":"address"}],"name":"setRescueWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawWalletAddress","type":"address"}],"name":"setWithdrawWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"}],"internalType":"struct IColateralContract.SwapParams[]","name":"swapsParams","type":"tuple[]"}],"name":"swapExactInputs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(string)":"35ee5f87","getBalances()":"00113e08","getRoleByIndex(uint256)":"25acc985","getRoleCount()":"83d33319","rescue(uint256,string)":"0828c404","setRescueWalletAddress(address)":"d00411c9","setWithdrawWalletAddress(address)":"212f6039","swapExactInputs(((bytes,address,uint256,uint256,uint256),address,address)[])":"2ffe9942","version()":"54fd4d50","withdraw(uint256,string)":"dc048cf2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdcTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdtTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdmTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wbtcTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"admins\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rescueWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"firstlenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"secondLenderLiq\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapRouterAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Rescue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"SwapError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"token\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWithdrawalLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawalLimit\",\"type\":\"uint256\"}],\"name\":\"WithdrawalLimitChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"rescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rescueWalletAddress\",\"type\":\"address\"}],\"name\":\"setRescueWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawWalletAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"internalType\":\"struct IColateralContract.SwapParams[]\",\"name\":\"swapsParams\",\"type\":\"tuple[]\"}],\"name\":\"swapExactInputs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IColateralContract.sol\":\"IColateralContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/IColateralContract.sol\":{\"keccak256\":\"0x57e52012ff0808da292934b97e0f69b9affa1d1ac8e552cd15de4ac075e81881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a57acc11a9febde9aadf1450101219f4ab1814ef82cb0c86480ee9f2e870ab\",\"dweb:/ipfs/QmaAcqtLs18SQgv9ofr1sHgND1S5fQE83asFT9enMm6jZ5\"]}},\"version\":1}"}}}}}